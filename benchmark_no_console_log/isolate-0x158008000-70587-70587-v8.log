v8-version,9,2,230,21,-node.20,0
shared-library,/opt/homebrew/Cellar/node/16.8.0/bin/node,0x100c1e600,0x1016e20cc,12681216
shared-library,/opt/homebrew/Cellar/libuv/1.42.0/lib/libuv.1.dylib,0x1030c956c,0x1030dfde8,4346118144
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlidec.1.0.9.dylib,0x10309862c,0x10309e4e8,4345905152
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlienc.1.0.9.dylib,0x103194b58,0x1031c67b8,4346937344
shared-library,/opt/homebrew/Cellar/c-ares/1.17.2/lib/libcares.2.4.3.dylib,0x1030fe3b0,0x10310b360,4346331136
shared-library,/opt/homebrew/Cellar/nghttp2/1.44.0/lib/libnghttp2.14.dylib,0x103153fb4,0x1031644b4,4346675200
shared-library,/opt/homebrew/Cellar/openssl@1.1/1.1.1m/lib/libcrypto.1.1.dylib,0x10343e000,0x10356ff68,4349739008
shared-library,/opt/homebrew/Cellar/openssl@1.1/1.1.1m/lib/libssl.1.1.dylib,0x1032a36c8,0x1032e0f20,4348051456
shared-library,/opt/homebrew/Cellar/icu4c/69.1/lib/libicui18n.69.1.dylib,0x103909a98,0x103a62c34,4354752512
shared-library,/opt/homebrew/Cellar/icu4c/69.1/lib/libicuuc.69.1.dylib,0x103bb4600,0x103c7cf14,4357554176
shared-library,/opt/homebrew/Cellar/icu4c/69.1/lib/libicudata.69.1.dylib,0x1058edd30,0x1058edd30,4388208640
shared-library,/usr/lib/libz.1.dylib,0x1ae146790,0x1ae151c60,591740928
shared-library,/usr/lib/libSystem.B.dylib,0x1ae1f7548,0x1ae1f7b3c,591740928
shared-library,/usr/lib/system/libcache.dylib,0x1ae1f16f4,0x1ae1f4390,591740928
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1ae1aecdc,0x1ae1b9b34,591740928
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1ae1d79e8,0x1ae1da868,591740928
shared-library,/usr/lib/system/libcopyfile.dylib,0x1ae1cea14,0x1ae1d5050,591740928
shared-library,/usr/lib/system/libcorecrypto.dylib,0x1a34fb140,0x1a355720c,591740928
shared-library,/usr/lib/system/libdispatch.dylib,0x1a35a03fc,0x1a35dd228,591740928
shared-library,/usr/lib/system/libdyld.dylib,0x1a3767ba0,0x1a37730ac,591740928
shared-library,/usr/lib/system/libkeymgr.dylib,0x1ae1e6764,0x1ae1e6e50,591740928
shared-library,/usr/lib/system/libmacho.dylib,0x1ae19159c,0x1ae1959cc,591740928
shared-library,/usr/lib/system/libquarantine.dylib,0x1ad89cdcc,0x1ad89ebd0,591740928
shared-library,/usr/lib/system/libremovefile.dylib,0x1ae1e4604,0x1ae1e5c60,591740928
shared-library,/usr/lib/system/libsystem_asl.dylib,0x1a88ea5d4,0x1a88ff000,591740928
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x1a34a5498,0x1a34a5c68,591740928
shared-library,/usr/lib/system/libsystem_c.dylib,0x1a36267d0,0x1a369eb20,591740928
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1ae1db8bc,0x1ae1df958,591740928
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x1accfa560,0x1accfd6f0,591740928
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x1abf806ec,0x1abf982e8,591740928
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1adefba28,0x1adeff290,591740928
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x1a5e8d578,0x1a5e94240,591740928
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1ae1e88d8,0x1ae1ee150,591740928
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1a3622d60,0x1a3624ad0,591740928
shared-library,/usr/lib/system/libsystem_info.dylib,0x1a377d168,0x1a37a33f0,591740928
shared-library,/usr/lib/system/libsystem_m.dylib,0x1ae158880,0x1ae1808b0,591740928
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x1a3575240,0x1a35994a0,591740928
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x1a887b0f4,0x1a888dbe0,591740928
shared-library,/usr/lib/system/libsystem_notify.dylib,0x1a62e007c,0x1a62ecb60,591740928
shared-library,/usr/lib/system/libsystem_product_info_filter.dylib,0x1b43c4000,0x1b43c4000,591740928
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x1accfea00,0x1acd02160,591740928
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1ae1e0be0,0x1ae1e234c,591740928
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1a37255a0,0x1a3753244,591740928
shared-library,/usr/lib/system/libsystem_platform.dylib,0x1a37754c0,0x1a377b314,591740928
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x1a375b0a4,0x1a3765a40,591740928
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1aa020734,0x1aa0262ac,591740928
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1a34e216c,0x1a34f7240,591740928
shared-library,/usr/lib/system/libunwind.dylib,0x1ae1bfdcc,0x1ae1c5410,591740928
shared-library,/usr/lib/system/libxpc.dylib,0x1a34a7394,0x1a34d66e8,591740928
shared-library,/usr/lib/libc++abi.dylib,0x1a370ed7c,0x1a3720d80,591740928
shared-library,/usr/lib/libobjc.A.dylib,0x1a35e7be0,0x1a3612ed4,591740928
shared-library,/usr/lib/liboah.dylib,0x1ae1c7dc8,0x1ae1cce58,591740928
shared-library,/usr/lib/libc++.1.dylib,0x1a36a7a90,0x1a36ff768,591740928
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlicommon.1.0.9.dylib,0x103225094,0x1032254b0,4347543552
shared-library,/usr/lib/libresolv.9.dylib,0x1b0f3d270,0x1b0f527c0,591740928
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1a37aa180,0x1a398a23c,591740928
shared-library,/usr/lib/libfakelink.dylib,0x1ae1f954c,0x1ae1fbba0,591740928
shared-library,/usr/lib/libicucore.A.dylib,0x1a5be2690,0x1a5e25f90,591740928
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1ae1fcbdc,0x1ae1fce50,591740928
profiler,begin,1000
tick,0x1a3725990,416,0,0x0,6
new,CodeRange,0x107484000,0
new,MemoryChunk,0x109ef900000,262144
new,MemoryChunk,0x10d76ec00000,262144
new,MemoryChunk,0x2653cca80000,262144
new,MemoryChunk,0x259a80ec0000,262144
new,MemoryChunk,0x281746a40000,262144
heap-capacity,1031072
heap-available,4346132288
new,MemoryChunk,0x1910fc7c0000,262144
new,MemoryChunk,0x2c34cec40000,262144
new,MemoryChunk,0x30d75b80000,262144
new,MemoryChunk,0xe898a5c0000,262144
new,MemoryChunk,0x38fe55840000,262144
new,MemoryChunk,0x6a337a00000,262144
new,MemoryChunk,0x23e292d00000,262144
new,MemoryChunk,0x1074c0000,262144
tick,0x1011d3b90,1666,0,0x0,6
new,MemoryChunk,0x342331e40000,262144
code-creation,Builtin,2,2708,0x1013a1f80,1344,RecordWrite
code-creation,Builtin,2,2708,0x1013a24e0,364,EphemeronKeyBarrier
code-creation,Builtin,2,2708,0x1013a2660,80,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,2708,0x1013a26c0,436,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,2708,0x1013a2880,512,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,2708,0x1013a2aa0,552,CallFunction_ReceiverIsAny
code-creation,Builtin,2,2708,0x1013a2ce0,228,CallBoundFunction
code-creation,Builtin,2,2708,0x1013a2de0,128,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,2708,0x1013a2e80,128,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,2708,0x1013a2f20,128,Call_ReceiverIsAny
code-creation,Builtin,2,2708,0x1013a2fc0,920,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,2750,0x1013a3360,916,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,2750,0x1013a3700,1068,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,2750,0x1013a3b40,1064,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,2750,0x1013a3f80,1068,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,2750,0x1013a43c0,1064,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,2750,0x1013a4800,892,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,2750,0x1013a4b80,892,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,2750,0x1013a4f00,892,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,2750,0x1013a5280,768,CallProxy
code-creation,Builtin,2,2750,0x1013a55a0,164,CallVarargs
code-creation,Builtin,2,2750,0x1013a5660,1172,CallWithSpread
code-creation,Builtin,2,2791,0x1013a5b00,2024,CallWithSpread_Baseline
code-creation,Builtin,2,2791,0x1013a6300,2080,CallWithSpread_WithFeedback
code-creation,Builtin,2,2791,0x1013a6b40,1188,CallWithArrayLike
code-creation,Builtin,2,2791,0x1013a7000,2064,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,2791,0x1013a7820,188,CallForwardVarargs
code-creation,Builtin,2,2791,0x1013a78e0,188,CallFunctionForwardVarargs
code-creation,Builtin,2,2791,0x1013a79a0,152,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,2791,0x1013a7a40,236,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,2791,0x1013a7b40,324,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,2833,0x1013a7ca0,24,ConstructFunction
code-creation,Builtin,2,2833,0x1013a7cc0,232,ConstructBoundFunction
code-creation,Builtin,2,2833,0x1013a7dc0,44,ConstructedNonConstructable
code-creation,Builtin,2,2833,0x1013a7e00,88,Construct
code-creation,Builtin,2,2833,0x1013a7e60,164,ConstructVarargs
code-creation,Builtin,2,2833,0x1013a7f20,1200,ConstructWithSpread
code-creation,Builtin,2,2833,0x1013a83e0,2016,ConstructWithSpread_Baseline
code-creation,Builtin,2,2833,0x1013a8be0,1996,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,2833,0x1013a93c0,1316,ConstructWithArrayLike
code-creation,Builtin,2,2833,0x1013a9900,2112,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,2833,0x1013aa160,240,ConstructForwardVarargs
code-creation,Builtin,2,2833,0x1013aa260,240,ConstructFunctionForwardVarargs
code-creation,Builtin,2,2875,0x1013aa360,796,Construct_Baseline
code-creation,Builtin,2,2875,0x1013aa680,800,Construct_WithFeedback
code-creation,Builtin,2,2875,0x1013aa9c0,588,JSConstructStubGeneric
code-creation,Builtin,2,2875,0x1013aac20,500,JSBuiltinsConstructStub
code-creation,Builtin,2,2875,0x1013aae20,688,FastNewObject
code-creation,Builtin,2,2875,0x1013ab0e0,324,FastNewClosure
code-creation,Builtin,2,2875,0x1013ab240,752,ConstructProxy
code-creation,Builtin,2,2875,0x1013ab540,264,JSEntry
code-creation,Builtin,2,2875,0x1013ab660,264,JSConstructEntry
code-creation,Builtin,2,2875,0x1013ab780,264,JSRunMicrotasksEntry
code-creation,Builtin,2,2875,0x1013ab8a0,184,JSEntryTrampoline
code-creation,Builtin,2,2875,0x1013ab960,184,JSConstructEntryTrampoline
code-creation,Builtin,2,2916,0x1013aba20,420,ResumeGeneratorTrampoline
code-creation,Builtin,2,2916,0x1013abbe0,1204,StringCodePointAt
code-creation,Builtin,2,2916,0x1013ac0a0,1708,StringFromCodePointAt
code-creation,Builtin,2,2916,0x1013ac760,576,StringEqual
code-creation,Builtin,2,2916,0x1013ac9c0,320,StringGreaterThan
code-creation,Builtin,2,2916,0x1013acb20,320,StringGreaterThanOrEqual
code-creation,Builtin,2,2916,0x1013acc80,320,StringLessThan
code-creation,Builtin,2,2916,0x1013acde0,320,StringLessThanOrEqual
code-creation,Builtin,2,2916,0x1013acf40,2728,StringSubstring
code-creation,Builtin,2,2916,0x1013ada00,120,OrderedHashTableHealIndex
code-creation,Builtin,2,2958,0x1013ada80,1496,InterpreterEntryTrampoline
code-creation,Builtin,2,2958,0x1013ae060,128,InterpreterPushArgsThenCall
code-creation,Builtin,2,2958,0x1013ae100,136,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,2958,0x1013ae1a0,140,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,2958,0x1013ae240,136,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,2958,0x1013ae2e0,136,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,2958,0x1013ae380,148,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,2958,0x1013ae420,92,InterpreterEnterAtBytecode
code-creation,Builtin,2,2958,0x1013ae480,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,2958,0x1013ae560,80,InterpreterOnStackReplacement
code-creation,Builtin,2,3000,0x1013ae5c0,772,BaselineOutOfLinePrologue
code-creation,Builtin,2,3000,0x1013ae8e0,76,BaselineOnStackReplacement
code-creation,Builtin,2,3000,0x1013ae940,108,BaselineLeaveFrame
code-creation,Builtin,2,3000,0x1013ae9c0,208,BaselineEnterAtBytecode
code-creation,Builtin,2,3000,0x1013aeaa0,212,BaselineEnterAtNextBytecode
code-creation,Builtin,2,3000,0x1013aeb80,204,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,3000,0x1013aec60,1216,CompileLazy
code-creation,Builtin,2,3000,0x1013af140,100,CompileLazyDeoptimizedCode
code-creation,Builtin,2,3000,0x1013af1c0,328,InstantiateAsmJs
code-creation,Builtin,2,3000,0x1013af320,44,NotifyDeoptimized
code-creation,Builtin,2,3000,0x1013af360,828,DeoptimizationEntry_Eager
code-creation,Builtin,2,3041,0x1013af6a0,828,DeoptimizationEntry_Soft
code-creation,Builtin,2,3041,0x1013af9e0,828,DeoptimizationEntry_Bailout
code-creation,Builtin,2,3041,0x1013afd20,828,DeoptimizationEntry_Lazy
code-creation,Builtin,2,3041,0x1013b0060,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,3041,0x1013b00c0,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,3041,0x1013b0120,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,3041,0x1013b0180,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,3041,0x1013b0200,396,CallApiCallback
code-creation,Builtin,2,3041,0x1013b03a0,372,CallApiGetter
code-creation,Builtin,2,3041,0x1013b0520,8,HandleApiCall
code-creation,Builtin,2,3083,0x1013b0540,8,HandleApiCallAsFunction
code-creation,Builtin,2,3083,0x1013b0560,8,HandleApiCallAsConstructor
code-creation,Builtin,2,3083,0x1013b0580,56,AllocateInYoungGeneration
code-creation,Builtin,2,3083,0x1013b05c0,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,3083,0x1013b0600,56,AllocateInOldGeneration
code-creation,Builtin,2,3083,0x1013b0640,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,3083,0x1013b0680,436,CopyFastSmiOrObjectElements
code-creation,Builtin,2,3083,0x1013b0840,548,GrowFastDoubleElements
code-creation,Builtin,2,3083,0x1013b0a80,440,GrowFastSmiOrObjectElements
code-creation,Builtin,2,3083,0x1013b0c40,448,DebugBreakTrampoline
code-creation,Builtin,2,3083,0x1013b0e20,228,ToNumber
code-creation,Builtin,2,3125,0x1013b0f20,336,ToNumber_Baseline
code-creation,Builtin,2,3125,0x1013b1080,400,ToNumeric_Baseline
code-creation,Builtin,2,3125,0x1013b1220,152,PlainPrimitiveToNumber
code-creation,Builtin,2,3125,0x1013b12c0,268,ToNumberConvertBigInt
code-creation,Builtin,2,3125,0x1013b13e0,148,Typeof
code-creation,Builtin,2,3125,0x1013b1480,140,BigIntToI64
code-creation,Builtin,2,3125,0x1013b1520,8,BigIntToI32Pair
code-creation,Builtin,2,3125,0x1013b1540,256,I64ToBigInt
code-creation,Builtin,2,3125,0x1013b1660,8,I32PairToBigInt
code-creation,Builtin,2,3125,0x1013b1680,136,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,3166,0x1013b1720,260,TailCallOptimizedCodeSlot
code-creation,Builtin,2,3166,0x1013b1840,3248,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,3166,0x1013b2500,14988,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,3166,0x1013b5fa0,332,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,3166,0x1013b6100,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,3166,0x1013b6160,16,LoadIC_StringLength
code-creation,Builtin,2,3166,0x1013b6180,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,3166,0x1013b61a0,3116,LoadIC_NoFeedback
code-creation,Builtin,2,3166,0x1013b6de0,44,StoreGlobalIC_Slow
code-creation,Builtin,2,3166,0x1013b6e20,5960,StoreIC_NoFeedback
code-creation,Builtin,2,3166,0x1013b8580,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,3208,0x1013b8660,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,3208,0x1013b86c0,312,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,3208,0x1013b8800,312,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,3208,0x1013b8940,312,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,3208,0x1013b8a80,312,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,3208,0x1013b8bc0,5636,StoreFastElementIC_Standard
code-creation,Builtin,2,3208,0x1013ba1e0,11024,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,3208,0x1013bcd00,5636,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,3208,0x1013be320,5908,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,3208,0x1013bfa40,8924,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,3250,0x1013c1d20,22304,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,3250,0x1013c7460,8924,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,3250,0x1013c9740,12088,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,3250,0x1013cc680,772,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,3250,0x1013cc9a0,200,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,3250,0x1013cca80,68,HasIndexedInterceptorIC
code-creation,Builtin,2,3250,0x1013ccae0,128,DynamicCheckMapsTrampoline
code-creation,Builtin,2,3250,0x1013ccb80,356,DynamicCheckMaps
code-creation,Builtin,2,3291,0x1013ccd00,164,EnqueueMicrotask
code-creation,Builtin,2,3291,0x1013ccdc0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,3291,0x1013ccde0,3560,RunMicrotasks
code-creation,Builtin,2,3291,0x1013cdbe0,2252,HasProperty
code-creation,Builtin,2,3291,0x1013ce4c0,1092,DeleteProperty
code-creation,Builtin,2,3291,0x1013ce920,2204,CopyDataProperties
code-creation,Builtin,2,3291,0x1013cf1c0,8312,SetDataProperties
code-creation,Builtin,2,3291,0x1013d1240,32,Abort
code-creation,Builtin,2,3291,0x1013d1280,32,AbortCSAAssert
code-creation,Builtin,2,3291,0x1013d12c0,8,EmptyFunction
code-creation,Builtin,2,3291,0x1013d12e0,8,Illegal
code-creation,Builtin,2,3333,0x1013d1300,8,StrictPoisonPillThrower
code-creation,Builtin,2,3333,0x1013d1320,8,UnsupportedThrower
code-creation,Builtin,2,3333,0x1013d1340,84,ReturnReceiver
code-creation,Builtin,2,3333,0x1013d13a0,36,ArrayConstructor
code-creation,Builtin,2,3333,0x1013d13e0,464,ArrayConstructorImpl
code-creation,Builtin,2,3333,0x1013d15c0,236,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,3333,0x1013d16c0,236,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,3333,0x1013d17c0,196,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,3333,0x1013d18a0,196,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,3333,0x1013d1980,196,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d1a60,196,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d1b40,200,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d1c20,200,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d1d00,500,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,3375,0x1013d1f00,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,3375,0x1013d2100,420,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d22c0,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d2460,420,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,3375,0x1013d2620,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,3416,0x1013d27c0,424,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,3416,0x1013d2980,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,3416,0x1013d2b20,68,ArrayNArgumentsConstructor
code-creation,Builtin,2,3416,0x1013d2b80,8,ArrayConcat
code-creation,Builtin,2,3416,0x1013d2ba0,8,ArrayPrototypeFill
code-creation,Builtin,2,3416,0x1013d2bc0,1020,ArrayIncludesSmiOrObject
code-creation,Builtin,2,3416,0x1013d2fc0,172,ArrayIncludesPackedDoubles
code-creation,Builtin,2,3416,0x1013d3080,252,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,3416,0x1013d3180,600,ArrayIncludes
code-creation,Builtin,2,3416,0x1013d33e0,920,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,3458,0x1013d3780,128,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,3458,0x1013d3820,128,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,3458,0x1013d38c0,600,ArrayIndexOf
code-creation,Builtin,2,3458,0x1013d3b20,8,ArrayPop
code-creation,Builtin,2,3458,0x1013d3b40,636,ArrayPrototypePop
code-creation,Builtin,2,3458,0x1013d3dc0,8,ArrayPush
code-creation,Builtin,2,3458,0x1013d3de0,2476,ArrayPrototypePush
code-creation,Builtin,2,3458,0x1013d47a0,8,ArrayShift
code-creation,Builtin,2,3458,0x1013d47c0,8,ArrayUnshift
code-creation,Builtin,2,3458,0x1013d47e0,924,CloneFastJSArray
code-creation,Builtin,2,3458,0x1013d4b80,2112,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,3500,0x1013d53e0,936,ExtractFastJSArray
code-creation,Builtin,2,3500,0x1013d57a0,268,ArrayPrototypeEntries
code-creation,Builtin,2,3500,0x1013d58c0,264,ArrayPrototypeKeys
code-creation,Builtin,2,3500,0x1013d59e0,268,ArrayPrototypeValues
code-creation,Builtin,2,3500,0x1013d5b00,3788,ArrayIteratorPrototypeNext
code-creation,Builtin,2,3500,0x1013d69e0,3676,FlattenIntoArray
code-creation,Builtin,2,3500,0x1013d7840,3660,FlatMapIntoArray
code-creation,Builtin,2,3500,0x1013d86a0,412,ArrayPrototypeFlat
code-creation,Builtin,2,3500,0x1013d8840,468,ArrayPrototypeFlatMap
code-creation,Builtin,2,3500,0x1013d8a20,8,ArrayBufferConstructor
code-creation,Builtin,2,3541,0x1013d8a40,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,3541,0x1013d8a60,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,3541,0x1013d8a80,744,AsyncFunctionEnter
code-creation,Builtin,2,3541,0x1013d8d80,132,AsyncFunctionReject
code-creation,Builtin,2,3541,0x1013d8e20,124,AsyncFunctionResolve
code-creation,Builtin,2,3541,0x1013d8ea0,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,3541,0x1013d8ec0,2376,AsyncFunctionAwaitCaught
code-creation,Builtin,2,3541,0x1013d9820,2376,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,3541,0x1013da180,212,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,3541,0x1013da260,212,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,3541,0x1013da340,8,BigIntConstructor
code-creation,Builtin,2,3583,0x1013da360,8,BigIntAsUintN
code-creation,Builtin,2,3583,0x1013da380,8,BigIntAsIntN
code-creation,Builtin,2,3583,0x1013da3a0,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,3583,0x1013da3c0,8,BigIntPrototypeToString
code-creation,Builtin,2,3583,0x1013da3e0,8,BigIntPrototypeValueOf
code-creation,Builtin,2,3583,0x1013da400,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,3583,0x1013da420,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,3583,0x1013da440,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,3583,0x1013da460,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,3583,0x1013da480,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,3583,0x1013da4a0,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,3625,0x1013da4c0,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,3625,0x1013da4e0,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,3625,0x1013da500,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,3625,0x1013da520,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,3625,0x1013da540,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,3625,0x1013da560,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,3625,0x1013da580,8,CallSitePrototypeGetThis
code-creation,Builtin,2,3625,0x1013da5a0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,3625,0x1013da5c0,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,3625,0x1013da5e0,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,3625,0x1013da600,8,CallSitePrototypeIsEval
code-creation,Builtin,2,3666,0x1013da620,8,CallSitePrototypeIsNative
code-creation,Builtin,2,3666,0x1013da640,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,3666,0x1013da660,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,3666,0x1013da680,8,CallSitePrototypeToString
code-creation,Builtin,2,3666,0x1013da6a0,8,ConsoleDebug
code-creation,Builtin,2,3666,0x1013da6c0,8,ConsoleError
code-creation,Builtin,2,3666,0x1013da6e0,8,ConsoleInfo
code-creation,Builtin,2,3666,0x1013da700,8,ConsoleLog
code-creation,Builtin,2,3666,0x1013da720,8,ConsoleWarn
code-creation,Builtin,2,3666,0x1013da740,8,ConsoleDir
code-creation,Builtin,2,3666,0x1013da760,8,ConsoleDirXml
code-creation,Builtin,2,3666,0x1013da780,8,ConsoleTable
code-creation,Builtin,2,3708,0x1013da7a0,8,ConsoleTrace
code-creation,Builtin,2,3708,0x1013da7c0,8,ConsoleGroup
code-creation,Builtin,2,3708,0x1013da7e0,8,ConsoleGroupCollapsed
code-creation,Builtin,2,3708,0x1013da800,8,ConsoleGroupEnd
code-creation,Builtin,2,3708,0x1013da820,8,ConsoleClear
code-creation,Builtin,2,3708,0x1013da840,8,ConsoleCount
code-creation,Builtin,2,3708,0x1013da860,8,ConsoleCountReset
code-creation,Builtin,2,3708,0x1013da880,8,ConsoleAssert
code-creation,Builtin,2,3708,0x1013da8a0,8,ConsoleProfile
code-creation,Builtin,2,3708,0x1013da8c0,8,ConsoleProfileEnd
code-creation,Builtin,2,3708,0x1013da8e0,8,ConsoleTime
code-creation,Builtin,2,3750,0x1013da900,8,ConsoleTimeLog
code-creation,Builtin,2,3750,0x1013da920,8,ConsoleTimeEnd
code-creation,Builtin,2,3750,0x1013da940,8,ConsoleTimeStamp
code-creation,Builtin,2,3750,0x1013da960,8,ConsoleContext
code-creation,Builtin,2,3750,0x1013da980,8,DataViewConstructor
code-creation,Builtin,2,3750,0x1013da9a0,8,DateConstructor
code-creation,Builtin,2,3750,0x1013da9c0,212,DatePrototypeGetDate
code-creation,Builtin,2,3750,0x1013daaa0,212,DatePrototypeGetDay
code-creation,Builtin,2,3750,0x1013dab80,212,DatePrototypeGetFullYear
code-creation,Builtin,2,3750,0x1013dac60,212,DatePrototypeGetHours
code-creation,Builtin,2,3750,0x1013dad40,184,DatePrototypeGetMilliseconds
code-creation,Builtin,2,3791,0x1013dae00,212,DatePrototypeGetMinutes
code-creation,Builtin,2,3791,0x1013daee0,212,DatePrototypeGetMonth
code-creation,Builtin,2,3791,0x1013dafc0,212,DatePrototypeGetSeconds
code-creation,Builtin,2,3791,0x1013db0a0,148,DatePrototypeGetTime
code-creation,Builtin,2,3791,0x1013db140,184,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,3791,0x1013db200,184,DatePrototypeGetUTCDate
code-creation,Builtin,2,3791,0x1013db2c0,184,DatePrototypeGetUTCDay
code-creation,Builtin,2,3791,0x1013db380,184,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,3791,0x1013db440,184,DatePrototypeGetUTCHours
code-creation,Builtin,2,3791,0x1013db500,184,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,3791,0x1013db5c0,184,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,3791,0x1013db680,184,DatePrototypeGetUTCMonth
code-creation,Builtin,2,3833,0x1013db740,184,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,3833,0x1013db800,148,DatePrototypeValueOf
code-creation,Builtin,2,3833,0x1013db8a0,384,DatePrototypeToPrimitive
code-creation,Builtin,2,3833,0x1013dba40,8,DatePrototypeGetYear
code-creation,Builtin,2,3833,0x1013dba60,8,DatePrototypeSetYear
code-creation,Builtin,2,3833,0x1013dba80,8,DateNow
code-creation,Builtin,2,3833,0x1013dbaa0,8,DateParse
code-creation,Builtin,2,3833,0x1013dbac0,8,DatePrototypeSetDate
code-creation,Builtin,2,3833,0x1013dbae0,8,DatePrototypeSetFullYear
code-creation,Builtin,2,3833,0x1013dbb00,8,DatePrototypeSetHours
code-creation,Builtin,2,3833,0x1013dbb20,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,3875,0x1013dbb40,8,DatePrototypeSetMinutes
code-creation,Builtin,2,3875,0x1013dbb60,8,DatePrototypeSetMonth
code-creation,Builtin,2,3875,0x1013dbb80,8,DatePrototypeSetSeconds
code-creation,Builtin,2,3875,0x1013dbba0,8,DatePrototypeSetTime
code-creation,Builtin,2,3875,0x1013dbbc0,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,3875,0x1013dbbe0,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,3875,0x1013dbc00,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,3875,0x1013dbc20,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,3875,0x1013dbc40,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,3875,0x1013dbc60,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,3875,0x1013dbc80,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,3916,0x1013dbca0,8,DatePrototypeToDateString
code-creation,Builtin,2,3916,0x1013dbcc0,8,DatePrototypeToISOString
code-creation,Builtin,2,3916,0x1013dbce0,8,DatePrototypeToUTCString
code-creation,Builtin,2,3916,0x1013dbd00,8,DatePrototypeToString
code-creation,Builtin,2,3916,0x1013dbd20,8,DatePrototypeToTimeString
code-creation,Builtin,2,3916,0x1013dbd40,8,DatePrototypeToJson
code-creation,Builtin,2,3916,0x1013dbd60,8,DateUTC
code-creation,Builtin,2,3916,0x1013dbd80,8,ErrorConstructor
code-creation,Builtin,2,3916,0x1013dbda0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,3916,0x1013dbdc0,8,ErrorPrototypeToString
code-creation,Builtin,2,3916,0x1013dbde0,8,FunctionConstructor
code-creation,Builtin,2,3958,0x1013dbe00,80,FunctionPrototypeApply
code-creation,Builtin,2,3958,0x1013dbe60,8,FunctionPrototypeBind
code-creation,Builtin,2,3958,0x1013dbe80,144,FunctionPrototypeCall
code-creation,Builtin,2,3958,0x1013dbf20,8,FunctionPrototypeToString
code-creation,Builtin,2,3958,0x1013dbf40,224,CreateIterResultObject
code-creation,Builtin,2,3958,0x1013dc040,912,CreateGeneratorObject
code-creation,Builtin,2,3958,0x1013dc3e0,8,GeneratorFunctionConstructor
code-creation,Builtin,2,3958,0x1013dc400,444,GeneratorPrototypeNext
code-creation,Builtin,2,3958,0x1013dc5c0,444,GeneratorPrototypeReturn
code-creation,Builtin,2,3958,0x1013dc780,456,GeneratorPrototypeThrow
code-creation,Builtin,2,4000,0x1013dc960,8,AsyncFunctionConstructor
code-creation,Builtin,2,4000,0x1013dc980,424,SuspendGeneratorBaseline
code-creation,Builtin,2,4000,0x1013dcb40,108,ResumeGeneratorBaseline
code-creation,Builtin,2,4000,0x1013dcbc0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,4000,0x1013dcc00,8,GlobalDecodeURI
code-creation,Builtin,2,4000,0x1013dcc20,8,GlobalDecodeURIComponent
code-creation,Builtin,2,4000,0x1013dcc40,8,GlobalEncodeURI
code-creation,Builtin,2,4000,0x1013dcc60,8,GlobalEncodeURIComponent
code-creation,Builtin,2,4000,0x1013dcc80,8,GlobalEscape
code-creation,Builtin,2,4000,0x1013dcca0,8,GlobalUnescape
code-creation,Builtin,2,4000,0x1013dccc0,8,GlobalEval
code-creation,Builtin,2,4041,0x1013dcce0,164,GlobalIsFinite
code-creation,Builtin,2,4041,0x1013dcda0,160,GlobalIsNaN
code-creation,Builtin,2,4041,0x1013dce60,8,JsonParse
code-creation,Builtin,2,4041,0x1013dce80,8,JsonStringify
code-creation,Builtin,2,4041,0x1013dcea0,3628,LoadIC
code-creation,Builtin,2,4041,0x1013ddce0,3284,LoadIC_Megamorphic
code-creation,Builtin,2,4041,0x1013de9c0,3544,LoadIC_Noninlined
code-creation,Builtin,2,4041,0x1013df7a0,48,LoadICTrampoline
code-creation,Builtin,2,4041,0x1013df7e0,28,LoadICBaseline
code-creation,Builtin,2,4041,0x1013df800,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,4041,0x1013df840,6648,LoadSuperIC
code-creation,Builtin,2,4041,0x1013e1240,28,LoadSuperICBaseline
code-creation,Builtin,2,4083,0x1013e1260,7280,KeyedLoadIC
code-creation,Builtin,2,4083,0x1013e2ee0,11844,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,4083,0x1013e5d40,48,KeyedLoadICTrampoline
code-creation,Builtin,2,4083,0x1013e5d80,28,KeyedLoadICBaseline
code-creation,Builtin,2,4083,0x1013e5da0,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,4083,0x1013e5de0,4844,StoreGlobalIC
code-creation,Builtin,2,4083,0x1013e70e0,48,StoreGlobalICTrampoline
code-creation,Builtin,2,4083,0x1013e7120,28,StoreGlobalICBaseline
code-creation,Builtin,2,4083,0x1013e7140,5064,StoreIC
code-creation,Builtin,2,4083,0x1013e8520,48,StoreICTrampoline
code-creation,Builtin,2,4083,0x1013e8560,28,StoreICBaseline
code-creation,Builtin,2,4083,0x1013e8580,5492,KeyedStoreIC
code-creation,Builtin,2,4125,0x1013e9b00,48,KeyedStoreICTrampoline
code-creation,Builtin,2,4125,0x1013e9b40,28,KeyedStoreICBaseline
code-creation,Builtin,2,4125,0x1013e9b60,456,StoreInArrayLiteralIC
code-creation,Builtin,2,4125,0x1013e9d40,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,4125,0x1013e9d60,172,LookupContextBaseline
code-creation,Builtin,2,4125,0x1013e9e20,172,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,4125,0x1013e9ee0,2596,LoadGlobalIC
code-creation,Builtin,2,4125,0x1013ea920,2580,LoadGlobalICInsideTypeof
code-creation,Builtin,2,4125,0x1013eb340,48,LoadGlobalICTrampoline
code-creation,Builtin,2,4125,0x1013eb380,28,LoadGlobalICBaseline
code-creation,Builtin,2,4166,0x1013eb3a0,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,4166,0x1013eb3e0,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,4166,0x1013eb400,164,LookupGlobalICBaseline
code-creation,Builtin,2,4166,0x1013eb4c0,164,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,4166,0x1013eb580,2000,CloneObjectIC
tick,0x1a36d87dc,4166,0,0x0,6
tick,0x1a3728788,4166,0,0x0,6
code-creation,Builtin,2,4208,0x1013ebd60,28,CloneObjectICBaseline
code-creation,Builtin,2,4208,0x1013ebd80,2228,CloneObjectIC_Slow
code-creation,Builtin,2,4208,0x1013ec640,2484,KeyedHasIC
code-creation,Builtin,2,4208,0x1013ed000,28,KeyedHasICBaseline
code-creation,Builtin,2,4208,0x1013ed020,2244,KeyedHasIC_Megamorphic
code-creation,Builtin,2,4208,0x1013ed900,1412,IterableToList
code-creation,Builtin,2,4208,0x1013edea0,1228,IterableToFixedArray
code-creation,Builtin,2,4208,0x1013ee380,860,IterableToListWithSymbolLookup
code-creation,Builtin,2,4208,0x1013ee6e0,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,4250,0x1013ee740,148,IterableToListMayPreserveHoles
code-creation,Builtin,2,4250,0x1013ee7e0,1036,IterableToFixedArrayForWasm
code-creation,Builtin,2,4250,0x1013eec00,1684,StringListFromIterable
code-creation,Builtin,2,4250,0x1013ef2a0,1208,FindOrderedHashMapEntry
code-creation,Builtin,2,4250,0x1013ef760,4304,MapConstructor
code-creation,Builtin,2,4250,0x1013f0840,2008,MapPrototypeSet
code-creation,Builtin,2,4250,0x1013f1020,1520,MapPrototypeDelete
code-creation,Builtin,2,4250,0x1013f1620,240,MapPrototypeGet
code-creation,Builtin,2,4250,0x1013f1720,196,MapPrototypeHas
code-creation,Builtin,2,4250,0x1013f1800,8,MapPrototypeClear
code-creation,Builtin,2,4250,0x1013f1820,300,MapPrototypeEntries
code-creation,Builtin,2,4250,0x1013f1960,164,MapPrototypeGetSize
code-creation,Builtin,2,4291,0x1013f1a20,540,MapPrototypeForEach
code-creation,Builtin,2,4291,0x1013f1c40,300,MapPrototypeKeys
code-creation,Builtin,2,4291,0x1013f1d80,300,MapPrototypeValues
code-creation,Builtin,2,4291,0x1013f1ec0,888,MapIteratorPrototypeNext
code-creation,Builtin,2,4291,0x1013f2240,1160,MapIteratorToList
code-creation,Builtin,2,4291,0x1013f26e0,8,NumberPrototypeToExponential
code-creation,Builtin,2,4291,0x1013f2700,8,NumberPrototypeToFixed
code-creation,Builtin,2,4291,0x1013f2720,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,4291,0x1013f2740,8,NumberPrototypeToPrecision
code-creation,Builtin,2,4291,0x1013f2760,332,SameValue
code-creation,Builtin,2,4291,0x1013f28c0,192,SameValueNumbersOnly
code-creation,Builtin,2,4291,0x1013f29a0,788,Add_Baseline
code-creation,Builtin,2,4291,0x1013f2cc0,848,Subtract_Baseline
code-creation,Builtin,2,4333,0x1013f3020,824,Multiply_Baseline
code-creation,Builtin,2,4333,0x1013f3360,832,Divide_Baseline
code-creation,Builtin,2,4333,0x1013f36c0,692,Modulus_Baseline
code-creation,Builtin,2,4333,0x1013f3980,96,Exponentiate_Baseline
code-creation,Builtin,2,4333,0x1013f3a00,612,BitwiseAnd_Baseline
code-creation,Builtin,2,4333,0x1013f3c80,608,BitwiseOr_Baseline
code-creation,Builtin,2,4333,0x1013f3f00,612,BitwiseXor_Baseline
code-creation,Builtin,2,4333,0x1013f4180,612,ShiftLeft_Baseline
code-creation,Builtin,2,4333,0x1013f4400,612,ShiftRight_Baseline
code-creation,Builtin,2,4333,0x1013f4680,720,ShiftRightLogical_Baseline
code-creation,Builtin,2,4333,0x1013f4960,700,Add_WithFeedback
code-creation,Builtin,2,4333,0x1013f4c20,784,Subtract_WithFeedback
code-creation,Builtin,2,4375,0x1013f4f40,776,Multiply_WithFeedback
code-creation,Builtin,2,4375,0x1013f5260,784,Divide_WithFeedback
code-creation,Builtin,2,4375,0x1013f5580,644,Modulus_WithFeedback
code-creation,Builtin,2,4375,0x1013f5820,68,Exponentiate_WithFeedback
code-creation,Builtin,2,4375,0x1013f5880,580,BitwiseAnd_WithFeedback
code-creation,Builtin,2,4375,0x1013f5ae0,580,BitwiseOr_WithFeedback
code-creation,Builtin,2,4375,0x1013f5d40,580,BitwiseXor_WithFeedback
code-creation,Builtin,2,4375,0x1013f5fa0,580,ShiftLeft_WithFeedback
code-creation,Builtin,2,4375,0x1013f6200,580,ShiftRight_WithFeedback
code-creation,Builtin,2,4375,0x1013f6460,684,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,4375,0x1013f6720,1716,Equal_Baseline
code-creation,Builtin,2,4375,0x1013f6de0,804,StrictEqual_Baseline
code-creation,Builtin,2,4416,0x1013f7120,1240,LessThan_Baseline
code-creation,Builtin,2,4416,0x1013f7600,1240,GreaterThan_Baseline
code-creation,Builtin,2,4416,0x1013f7ae0,1240,LessThanOrEqual_Baseline
code-creation,Builtin,2,4416,0x1013f7fc0,1240,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,4416,0x1013f84a0,1736,Equal_WithFeedback
code-creation,Builtin,2,4416,0x1013f8b80,824,StrictEqual_WithFeedback
code-creation,Builtin,2,4416,0x1013f8ec0,1216,LessThan_WithFeedback
code-creation,Builtin,2,4416,0x1013f93a0,1216,GreaterThan_WithFeedback
code-creation,Builtin,2,4416,0x1013f9880,1216,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,4416,0x1013f9d60,1216,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,4416,0x1013fa240,284,BitwiseNot_Baseline
code-creation,Builtin,2,4458,0x1013fa360,460,Decrement_Baseline
code-creation,Builtin,2,4458,0x1013fa540,460,Increment_Baseline
code-creation,Builtin,2,4458,0x1013fa720,468,Negate_Baseline
code-creation,Builtin,2,4458,0x1013fa900,264,BitwiseNot_WithFeedback
code-creation,Builtin,2,4458,0x1013faa20,440,Decrement_WithFeedback
code-creation,Builtin,2,4458,0x1013fabe0,440,Increment_WithFeedback
code-creation,Builtin,2,4458,0x1013fada0,448,Negate_WithFeedback
code-creation,Builtin,2,4458,0x1013faf80,284,ObjectAssign
code-creation,Builtin,2,4458,0x1013fb0a0,848,ObjectCreate
code-creation,Builtin,2,4458,0x1013fb400,8,ObjectDefineGetter
code-creation,Builtin,2,4458,0x1013fb420,8,ObjectDefineProperties
code-creation,Builtin,2,4458,0x1013fb440,8,ObjectDefineProperty
code-creation,Builtin,2,4458,0x1013fb460,8,ObjectDefineSetter
code-creation,Builtin,2,4500,0x1013fb480,1540,ObjectEntries
code-creation,Builtin,2,4500,0x1013fbaa0,8,ObjectFreeze
code-creation,Builtin,2,4500,0x1013fbac0,5716,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,4500,0x1013fd120,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,4500,0x1013fd140,628,ObjectGetOwnPropertyNames
code-creation,Builtin,2,4500,0x1013fd3c0,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,4500,0x1013fd3e0,400,ObjectIs
code-creation,Builtin,2,4500,0x1013fd580,8,ObjectIsFrozen
code-creation,Builtin,2,4500,0x1013fd5a0,8,ObjectIsSealed
code-creation,Builtin,2,4500,0x1013fd5c0,568,ObjectKeys
code-creation,Builtin,2,4500,0x1013fd800,8,ObjectLookupGetter
code-creation,Builtin,2,4500,0x1013fd820,8,ObjectLookupSetter
code-creation,Builtin,2,4541,0x1013fd840,1824,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,4541,0x1013fdf80,272,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,4541,0x1013fe0a0,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,4541,0x1013fe0c0,8,ObjectPrototypeGetProto
code-creation,Builtin,2,4541,0x1013fe0e0,8,ObjectPrototypeSetProto
code-creation,Builtin,2,4541,0x1013fe100,8,ObjectSeal
code-creation,Builtin,2,4541,0x1013fe120,1100,ObjectToString
code-creation,Builtin,2,4541,0x1013fe580,1272,ObjectValues
code-creation,Builtin,2,4541,0x1013fea80,412,OrdinaryHasInstance
code-creation,Builtin,2,4541,0x1013fec20,428,InstanceOf
code-creation,Builtin,2,4541,0x1013fede0,688,InstanceOf_WithFeedback
code-creation,Builtin,2,4541,0x1013ff0a0,704,InstanceOf_Baseline
code-creation,Builtin,2,4583,0x1013ff380,300,ForInEnumerate
code-creation,Builtin,2,4583,0x1013ff4c0,144,ForInPrepare
code-creation,Builtin,2,4583,0x1013ff560,2236,ForInFilter
code-creation,Builtin,2,4583,0x1013ffe20,68,ReflectApply
code-creation,Builtin,2,4583,0x1013ffe80,72,ReflectConstruct
code-creation,Builtin,2,4583,0x1013ffee0,8,ReflectDefineProperty
code-creation,Builtin,2,4583,0x1013fff00,8,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,4583,0x1013fff20,8,ReflectOwnKeys
code-creation,Builtin,2,4583,0x1013fff40,8,ReflectSet
code-creation,Builtin,2,4583,0x1013fff60,8,RegExpCapture1Getter
code-creation,Builtin,2,4583,0x1013fff80,8,RegExpCapture2Getter
code-creation,Builtin,2,4583,0x1013fffa0,8,RegExpCapture3Getter
code-creation,Builtin,2,4583,0x1013fffc0,8,RegExpCapture4Getter
code-creation,Builtin,2,4625,0x1013fffe0,8,RegExpCapture5Getter
code-creation,Builtin,2,4625,0x101400000,8,RegExpCapture6Getter
code-creation,Builtin,2,4625,0x101400020,8,RegExpCapture7Getter
code-creation,Builtin,2,4625,0x101400040,8,RegExpCapture8Getter
code-creation,Builtin,2,4625,0x101400060,8,RegExpCapture9Getter
code-creation,Builtin,2,4625,0x101400080,2320,RegExpConstructor
code-creation,Builtin,2,4625,0x1014009a0,8,RegExpInputGetter
code-creation,Builtin,2,4625,0x1014009c0,8,RegExpInputSetter
code-creation,Builtin,2,4625,0x1014009e0,8,RegExpLastMatchGetter
code-creation,Builtin,2,4625,0x101400a00,8,RegExpLastParenGetter
code-creation,Builtin,2,4625,0x101400a20,8,RegExpLeftContextGetter
code-creation,Builtin,2,4666,0x101400a40,1020,RegExpPrototypeCompile
code-creation,Builtin,2,4666,0x101400e40,8,RegExpPrototypeToString
code-creation,Builtin,2,4666,0x101400e60,8,RegExpRightContextGetter
code-creation,Builtin,2,4666,0x101400e80,288,RegExpExecAtom
code-creation,Builtin,2,4666,0x101400fc0,1064,RegExpExecInternal
code-creation,Builtin,2,4666,0x101401400,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,4666,0x101401420,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,4666,0x101401440,8,ResizableArrayBufferPrototypeResize
code-creation,Builtin,2,4666,0x101401460,8,GrowableSharedArrayBufferPrototypeGrow
code-creation,Builtin,2,4666,0x101401480,8,GrowableSharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,4666,0x1014014a0,2744,SetConstructor
code-creation,Builtin,2,4666,0x101401f60,1280,SetPrototypeHas
code-creation,Builtin,2,4708,0x101402480,1748,SetPrototypeAdd
code-creation,Builtin,2,4708,0x101402b60,1472,SetPrototypeDelete
code-creation,Builtin,2,4708,0x101403140,8,SetPrototypeClear
code-creation,Builtin,2,4708,0x101403160,300,SetPrototypeEntries
code-creation,Builtin,2,4708,0x1014032a0,164,SetPrototypeGetSize
code-creation,Builtin,2,4708,0x101403360,504,SetPrototypeForEach
code-creation,Builtin,2,4708,0x101403560,300,SetPrototypeValues
code-creation,Builtin,2,4708,0x1014036a0,820,SetIteratorPrototypeNext
code-creation,Builtin,2,4708,0x1014039e0,1096,SetOrSetIteratorToList
code-creation,Builtin,2,4708,0x101403e40,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,4708,0x101403e60,1232,AtomicsLoad
code-creation,Builtin,2,4708,0x101404340,984,AtomicsStore
code-creation,Builtin,2,4708,0x101404720,1668,AtomicsExchange
code-creation,Builtin,2,4750,0x101404dc0,2060,AtomicsCompareExchange
code-creation,Builtin,2,4750,0x1014055e0,1700,AtomicsAdd
code-creation,Builtin,2,4750,0x101405ca0,1700,AtomicsSub
code-creation,Builtin,2,4750,0x101406360,1700,AtomicsAnd
code-creation,Builtin,2,4750,0x101406a20,1700,AtomicsOr
code-creation,Builtin,2,4750,0x1014070e0,1700,AtomicsXor
code-creation,Builtin,2,4750,0x1014077a0,8,AtomicsNotify
code-creation,Builtin,2,4750,0x1014077c0,8,AtomicsIsLockFree
code-creation,Builtin,2,4750,0x1014077e0,8,AtomicsWait
code-creation,Builtin,2,4750,0x101407800,8,AtomicsWaitAsync
code-creation,Builtin,2,4750,0x101407820,8,StringFromCodePoint
code-creation,Builtin,2,4750,0x101407840,1424,StringFromCharCode
code-creation,Builtin,2,4750,0x101407de0,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,4791,0x101407e00,4380,StringPrototypeMatchAll
code-creation,Builtin,2,4791,0x101408f20,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,4791,0x101408f40,1304,StringPrototypeReplace
code-creation,Builtin,2,4791,0x101409460,2740,StringPrototypeSplit
code-creation,Builtin,2,4791,0x101409f20,8,StringRaw
code-creation,Builtin,2,4791,0x101409f40,8,SymbolConstructor
code-creation,Builtin,2,4791,0x101409f60,8,SymbolFor
code-creation,Builtin,2,4791,0x101409f80,8,SymbolKeyFor
code-creation,Builtin,2,4791,0x101409fa0,96,TypedArrayBaseConstructor
code-creation,Builtin,2,4791,0x10140a020,320,TypedArrayConstructor
code-creation,Builtin,2,4791,0x10140a180,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,4791,0x10140a1a0,840,TypedArrayPrototypeByteLength
code-creation,Builtin,2,4833,0x10140a500,280,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,4833,0x10140a620,668,TypedArrayPrototypeLength
code-creation,Builtin,2,4833,0x10140a8c0,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,4833,0x10140a8e0,8,TypedArrayPrototypeFill
code-creation,Builtin,2,4833,0x10140a900,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,4833,0x10140a920,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,4833,0x10140a940,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,4833,0x10140a960,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,4833,0x10140a980,324,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,4833,0x10140aae0,9616,TypedArrayPrototypeMap
code-creation,Builtin,2,4833,0x10140d080,4,GenericJSToWasmWrapper
code-creation,Builtin,2,4875,0x10140d0a0,124,WasmCompileLazy
code-creation,Builtin,2,4875,0x10140d120,260,WasmDebugBreak
code-creation,Builtin,2,4875,0x10140d240,4,WasmOnStackReplace
code-creation,Builtin,2,4875,0x10140d260,156,WasmFloat32ToNumber
code-creation,Builtin,2,4875,0x10140d300,160,WasmFloat64ToNumber
code-creation,Builtin,2,4875,0x10140d3c0,8,WasmI32AtomicWait32
code-creation,Builtin,2,4875,0x10140d3e0,8,WasmI64AtomicWait32
code-creation,Builtin,2,4875,0x10140d400,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,4875,0x10140d420,4452,WeakMapConstructor
code-creation,Builtin,2,4875,0x10140e5a0,208,WeakMapLookupHashIndex
code-creation,Builtin,2,4875,0x10140e680,248,WeakMapGet
code-creation,Builtin,2,4875,0x10140e780,208,WeakMapPrototypeHas
code-creation,Builtin,2,4916,0x10140e860,232,WeakMapPrototypeSet
code-creation,Builtin,2,4916,0x10140e960,180,WeakMapPrototypeDelete
code-creation,Builtin,2,4916,0x10140ea20,2924,WeakSetConstructor
code-creation,Builtin,2,4916,0x10140f5a0,208,WeakSetPrototypeHas
code-creation,Builtin,2,4916,0x10140f680,232,WeakSetPrototypeAdd
code-creation,Builtin,2,4916,0x10140f780,180,WeakSetPrototypeDelete
code-creation,Builtin,2,4916,0x10140f840,420,WeakCollectionDelete
code-creation,Builtin,2,4916,0x10140fa00,788,WeakCollectionSet
code-creation,Builtin,2,4916,0x10140fd20,332,AsyncGeneratorResolve
code-creation,Builtin,2,4916,0x10140fe80,128,AsyncGeneratorReject
code-creation,Builtin,2,4916,0x10140ff20,2328,AsyncGeneratorYield
code-creation,Builtin,2,4916,0x101410840,2408,AsyncGeneratorReturn
code-creation,Builtin,2,4958,0x1014111c0,308,AsyncGeneratorResumeNext
code-creation,Builtin,2,4958,0x101411300,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,4958,0x101411320,1040,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,4958,0x101411740,1036,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,4958,0x101411b60,1036,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,4958,0x101411f80,2304,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,4958,0x1014128a0,2304,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,4958,0x1014131c0,128,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,4958,0x101413260,132,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,4958,0x101413300,128,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,4958,0x1014133a0,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,4958,0x101413440,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,5000,0x1014134c0,132,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,5000,0x101413560,1628,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,5000,0x101413bc0,1744,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,5000,0x1014142a0,1772,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,5000,0x1014149a0,132,AsyncIteratorValueUnwrap
code-creation,Builtin,2,5000,0x101414a40,308,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5000,0x101414b80,308,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5000,0x101414cc0,288,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,5000,0x101414e00,404,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5000,0x101414fa0,404,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5041,0x101415140,308,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5041,0x101415280,308,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5041,0x1014153c0,288,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,5041,0x101415500,404,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5041,0x1014156a0,404,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5041,0x101415840,16,DirectCEntry
code-creation,Builtin,2,5041,0x101415860,1188,StringAdd_CheckNone
code-creation,Builtin,2,5041,0x101415d20,2700,SubString
code-creation,Builtin,2,5041,0x1014167c0,12,StackCheck
code-creation,Builtin,2,5083,0x1014167e0,80,DoubleToI
code-creation,Builtin,2,5083,0x101416840,2396,GetProperty
code-creation,Builtin,2,5083,0x1014171a0,2576,GetPropertyWithReceiver
code-creation,Builtin,2,5083,0x101417bc0,15020,SetProperty
code-creation,Builtin,2,5083,0x10141b680,13044,SetPropertyInLiteral
code-creation,Builtin,2,5083,0x10141e980,4,MemCopyUint8Uint8
code-creation,Builtin,2,5083,0x10141e9a0,4,MemMove
code-creation,Builtin,2,5083,0x10141e9c0,8,IsTraceCategoryEnabled
code-creation,Builtin,2,5083,0x10141e9e0,8,Trace
code-creation,Builtin,2,5083,0x10141ea00,8,FinalizationRegistryUnregister
code-creation,Builtin,2,5083,0x10141ea20,448,AsyncModuleEvaluate
code-creation,Builtin,2,5083,0x10141ec00,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,5083,0x10141ec20,8,CallAsyncModuleRejected
code-creation,Builtin,2,5125,0x10141ec40,308,AggregateErrorConstructor
code-creation,Builtin,2,5125,0x10141ed80,828,ArrayPrototypeAt
code-creation,Builtin,2,5125,0x10141f0c0,4988,ArrayPrototypeCopyWithin
code-creation,Builtin,2,5125,0x101420440,244,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,5125,0x101420540,584,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,5125,0x1014207a0,3032,ArrayEveryLoopContinuation
code-creation,Builtin,2,5125,0x101421380,1488,ArrayEvery
code-creation,Builtin,2,5125,0x101421960,300,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,5125,0x101421aa0,900,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,5125,0x101421e40,3208,ArrayFilterLoopContinuation
code-creation,Builtin,2,5125,0x101422ae0,4348,ArrayFilter
code-creation,Builtin,2,5166,0x101423be0,236,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,5166,0x101423ce0,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,5166,0x101423d20,356,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,5166,0x101423ea0,544,ArrayFindLoopContinuation
code-creation,Builtin,2,5166,0x1014240e0,1488,ArrayPrototypeFind
code-creation,Builtin,2,5166,0x1014246c0,236,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,5166,0x1014247c0,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,5166,0x101424800,356,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,5166,0x101424980,536,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,5166,0x101424ba0,1484,ArrayPrototypeFindIndex
code-creation,Builtin,2,5166,0x101425180,244,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,5208,0x101425280,244,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,5208,0x101425380,2888,ArrayForEachLoopContinuation
code-creation,Builtin,2,5208,0x101425ee0,1336,ArrayForEach
code-creation,Builtin,2,5208,0x101426420,3940,ArrayFrom
code-creation,Builtin,2,5208,0x1014273a0,196,ArrayIsArray
code-creation,Builtin,2,5208,0x101427480,396,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,5208,0x101427620,64,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,5208,0x101427680,168,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,5208,0x101427740,372,ConvertToLocaleString
code-creation,Builtin,2,5208,0x1014278c0,868,JoinStackPush
code-creation,Builtin,2,5208,0x101427c40,328,JoinStackPop
code-creation,Builtin,2,5208,0x101427da0,6544,ArrayPrototypeJoin
code-creation,Builtin,2,5250,0x101429740,5328,ArrayPrototypeToLocaleString
code-creation,Builtin,2,5250,0x10142ac20,280,ArrayPrototypeToString
code-creation,Builtin,2,5250,0x10142ad40,5820,TypedArrayPrototypeJoin
code-creation,Builtin,2,5250,0x10142c400,4596,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,5250,0x10142d600,3488,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,5250,0x10142e3c0,264,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,5250,0x10142e4e0,264,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,5250,0x10142e600,504,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,5250,0x10142e800,2876,ArrayMapLoopContinuation
code-creation,Builtin,2,5250,0x10142f340,3876,ArrayMap
code-creation,Builtin,2,5250,0x101430280,980,ArrayOf
code-creation,Builtin,2,5291,0x101430660,428,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,5291,0x101430820,236,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,5291,0x101430920,236,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,5291,0x101430a20,2848,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,5291,0x101431560,1888,ArrayReduceRight
code-creation,Builtin,2,5291,0x101431ce0,212,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,5291,0x101431dc0,236,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,5291,0x101431ec0,236,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,5291,0x101431fc0,2984,ArrayReduceLoopContinuation
code-creation,Builtin,2,5291,0x101432b80,1600,ArrayReduce
code-creation,Builtin,2,5291,0x1014331e0,3100,ArrayPrototypeReverse
code-creation,Builtin,2,5291,0x101433e00,3328,ArrayPrototypeShift
code-creation,Builtin,2,5333,0x101434b20,4920,ArrayPrototypeSlice
code-creation,Builtin,2,5333,0x101435e60,244,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,5333,0x101435f60,572,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,5333,0x1014361a0,2976,ArraySomeLoopContinuation
code-creation,Builtin,2,5333,0x101436d60,1484,ArraySome
code-creation,Builtin,2,5333,0x101437340,12772,ArrayPrototypeSplice
code-creation,Builtin,2,5333,0x10143a540,3000,ArrayPrototypeUnshift
code-creation,Builtin,2,5333,0x10143b100,368,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,5333,0x10143b280,368,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,5333,0x10143b400,368,ResizableArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,5333,0x10143b580,368,ResizableArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,5375,0x10143b700,368,GrowableSharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,5375,0x10143b880,132,ArrayBufferIsView
code-creation,Builtin,2,5375,0x10143b920,224,ToInteger
code-creation,Builtin,2,5375,0x10143ba20,4068,FastCreateDataProperty
code-creation,Builtin,2,5375,0x10143ca20,484,CheckNumberInRange
code-creation,Builtin,2,5375,0x10143cc20,664,CheckSameObject
code-creation,Builtin,2,5375,0x10143cec0,948,BooleanConstructor
code-creation,Builtin,2,5375,0x10143d280,188,BooleanPrototypeToString
code-creation,Builtin,2,5375,0x10143d340,184,BooleanPrototypeValueOf
code-creation,Builtin,2,5375,0x10143d400,1048,BigIntAddNoThrow
code-creation,Builtin,2,5375,0x10143d820,1144,BigIntAdd
code-creation,Builtin,2,5375,0x10143dca0,1048,BigIntSubtractNoThrow
code-creation,Builtin,2,5416,0x10143e0c0,1144,BigIntSubtract
code-creation,Builtin,2,5416,0x10143e540,332,BigIntUnaryMinus
code-creation,Builtin,2,5416,0x10143e6a0,1420,ToString
code-creation,Builtin,2,5416,0x10143ec40,180,StringPrototypeToString
code-creation,Builtin,2,5416,0x10143ed00,180,StringPrototypeValueOf
code-creation,Builtin,2,5416,0x10143edc0,2464,StringToList
code-creation,Builtin,2,5416,0x10143f780,1068,StringPrototypeCharAt
code-creation,Builtin,2,5416,0x10143fbc0,732,StringPrototypeCharCodeAt
code-creation,Builtin,2,5416,0x10143fea0,1284,StringPrototypeCodePointAt
code-creation,Builtin,2,5416,0x1014403c0,432,StringPrototypeConcat
code-creation,Builtin,2,5416,0x101440580,1024,StringConstructor
code-creation,Builtin,2,5416,0x1014409a0,1504,StringAddConvertLeft
code-creation,Builtin,2,5458,0x101440fa0,1524,StringAddConvertRight
code-creation,Builtin,2,5458,0x1014415a0,932,StringCharAt
code-creation,Builtin,2,5458,0x101441960,20,FastNewClosureBaseline
code-creation,Builtin,2,5458,0x101441980,228,FastNewFunctionContextEval
code-creation,Builtin,2,5458,0x101441a80,228,FastNewFunctionContextFunction
code-creation,Builtin,2,5458,0x101441b80,304,CreateRegExpLiteral
code-creation,Builtin,2,5458,0x101441cc0,1040,CreateShallowArrayLiteral
code-creation,Builtin,2,5458,0x1014420e0,552,CreateEmptyArrayLiteral
code-creation,Builtin,2,5458,0x101442320,1676,CreateShallowObjectLiteral
code-creation,Builtin,2,5458,0x1014429c0,444,ObjectConstructor
code-creation,Builtin,2,5500,0x101442b80,200,CreateEmptyLiteralObject
code-creation,Builtin,2,5500,0x101442c60,620,NumberConstructor
code-creation,Builtin,2,5500,0x101442ee0,96,GenericLazyDeoptContinuation
code-creation,Builtin,2,5500,0x101442f60,92,StringToNumber
code-creation,Builtin,2,5500,0x101442fc0,248,NonNumberToNumber
code-creation,Builtin,2,5500,0x1014430c0,296,NonNumberToNumeric
code-creation,Builtin,2,5500,0x101443200,60,ToNumeric
code-creation,Builtin,2,5500,0x101443240,1460,NumberToString
code-creation,Builtin,2,5500,0x101443800,128,ToBoolean
code-creation,Builtin,2,5500,0x1014438a0,128,ToBooleanForBaselineJump
code-creation,Builtin,2,5541,0x101443940,568,ToLength
code-creation,Builtin,2,5541,0x101443b80,1356,ToName
code-creation,Builtin,2,5541,0x1014440e0,796,ToObject
code-creation,Builtin,2,5541,0x101444400,276,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,5541,0x101444520,276,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,5541,0x101444640,276,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,5541,0x101444760,412,OrdinaryToPrimitive_Number
code-creation,Builtin,2,5541,0x101444900,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,5541,0x101444aa0,272,FastConsoleAssert
code-creation,Builtin,2,5541,0x101444bc0,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,5541,0x101444c80,344,DataViewPrototypeGetByteLength
code-creation,Builtin,2,5583,0x101444de0,344,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,5583,0x101444f40,528,DataViewPrototypeGetUint8
code-creation,Builtin,2,5583,0x101445160,528,DataViewPrototypeGetInt8
code-creation,Builtin,2,5583,0x101445380,616,DataViewPrototypeGetUint16
code-creation,Builtin,2,5583,0x101445600,616,DataViewPrototypeGetInt16
code-creation,Builtin,2,5583,0x101445880,764,DataViewPrototypeGetUint32
code-creation,Builtin,2,5583,0x101445b80,648,DataViewPrototypeGetInt32
code-creation,Builtin,2,5583,0x101445e20,788,DataViewPrototypeGetFloat32
code-creation,Builtin,2,5583,0x101446140,848,DataViewPrototypeGetFloat64
code-creation,Builtin,2,5583,0x1014464a0,928,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,5583,0x101446860,956,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,5625,0x101446c20,856,DataViewPrototypeSetUint8
code-creation,Builtin,2,5625,0x101446f80,856,DataViewPrototypeSetInt8
code-creation,Builtin,2,5625,0x1014472e0,976,DataViewPrototypeSetUint16
code-creation,Builtin,2,5625,0x1014476c0,976,DataViewPrototypeSetInt16
code-creation,Builtin,2,5625,0x101447aa0,1008,DataViewPrototypeSetUint32
code-creation,Builtin,2,5625,0x101447ea0,1008,DataViewPrototypeSetInt32
code-creation,Builtin,2,5625,0x1014482a0,1012,DataViewPrototypeSetFloat32
code-creation,Builtin,2,5625,0x1014486a0,1072,DataViewPrototypeSetFloat64
code-creation,Builtin,2,5625,0x101448ae0,928,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,5625,0x101448ea0,928,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,5625,0x101449260,860,FinalizationRegistryConstructor
code-creation,Builtin,2,5666,0x1014495c0,1168,FinalizationRegistryRegister
code-creation,Builtin,2,5666,0x101449a60,676,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,5666,0x101449d20,356,FunctionPrototypeHasInstance
code-creation,Builtin,2,5666,0x101449ea0,900,FastFunctionPrototypeBind
code-creation,Builtin,2,5666,0x10144a240,100,IncBlockCounter
code-creation,Builtin,2,5666,0x10144a2c0,332,GetTemplateObject
code-creation,Builtin,2,5666,0x10144a420,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,5666,0x10144a440,132,ForInNext
code-creation,Builtin,2,5666,0x10144a4e0,180,GetImportMetaObjectBaseline
code-creation,Builtin,2,5666,0x10144a5a0,128,GetIteratorWithFeedback
code-creation,Builtin,2,5666,0x10144a640,124,GetIteratorBaseline
code-creation,Builtin,2,5708,0x10144a6c0,284,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,5708,0x10144a7e0,1156,CallIteratorWithFeedback
code-creation,Builtin,2,5708,0x10144ac80,296,MathAbs
code-creation,Builtin,2,5708,0x10144adc0,260,MathCeil
code-creation,Builtin,2,5708,0x10144aee0,260,MathFloor
code-creation,Builtin,2,5708,0x10144b000,284,MathRound
code-creation,Builtin,2,5708,0x10144b120,260,MathTrunc
code-creation,Builtin,2,5708,0x10144b240,360,MathPow
code-creation,Builtin,2,5708,0x10144b3c0,392,MathMax
code-creation,Builtin,2,5708,0x10144b560,392,MathMin
code-creation,Builtin,2,5708,0x10144b700,296,MathAcos
code-creation,Builtin,2,5750,0x10144b840,296,MathAcosh
code-creation,Builtin,2,5750,0x10144b980,296,MathAsin
code-creation,Builtin,2,5750,0x10144bac0,296,MathAsinh
code-creation,Builtin,2,5750,0x10144bc00,296,MathAtan
code-creation,Builtin,2,5750,0x10144bd40,372,MathAtan2
code-creation,Builtin,2,5750,0x10144bec0,296,MathAtanh
code-creation,Builtin,2,5750,0x10144c000,296,MathCbrt
code-creation,Builtin,2,5750,0x10144c140,160,MathClz32
code-creation,Builtin,2,5750,0x10144c200,296,MathCos
code-creation,Builtin,2,5791,0x10144c340,296,MathCosh
code-creation,Builtin,2,5791,0x10144c480,296,MathExp
code-creation,Builtin,2,5791,0x10144c5c0,296,MathExpm1
code-creation,Builtin,2,5791,0x10144c700,268,MathFround
code-creation,Builtin,2,5791,0x10144c820,232,MathImul
code-creation,Builtin,2,5791,0x10144c920,296,MathLog
code-creation,Builtin,2,5791,0x10144ca60,296,MathLog1p
code-creation,Builtin,2,5791,0x10144cba0,296,MathLog10
code-creation,Builtin,2,5791,0x10144cce0,296,MathLog2
code-creation,Builtin,2,5791,0x10144ce20,296,MathSin
code-creation,Builtin,2,5791,0x10144cf60,184,MathSign
code-creation,Builtin,2,5791,0x10144d020,296,MathSinh
code-creation,Builtin,2,5791,0x10144d160,264,MathSqrt
code-creation,Builtin,2,5833,0x10144d280,296,MathTan
code-creation,Builtin,2,5833,0x10144d3c0,296,MathTanh
code-creation,Builtin,2,5833,0x10144d500,1048,MathHypot
code-creation,Builtin,2,5833,0x10144d920,332,MathRandom
code-creation,Builtin,2,5833,0x10144da80,2972,NumberPrototypeToString
code-creation,Builtin,2,5833,0x10144e620,176,NumberIsFinite
code-creation,Builtin,2,5833,0x10144e6e0,160,NumberIsInteger
code-creation,Builtin,2,5833,0x10144e7a0,156,NumberIsNaN
code-creation,Builtin,2,5833,0x10144e840,188,NumberIsSafeInteger
code-creation,Builtin,2,5833,0x10144e900,188,NumberPrototypeValueOf
code-creation,Builtin,2,5833,0x10144e9c0,224,NumberParseFloat
code-creation,Builtin,2,5833,0x10144eac0,192,ParseInt
code-creation,Builtin,2,5875,0x10144eba0,112,NumberParseInt
code-creation,Builtin,2,5875,0x10144ec20,780,Add
code-creation,Builtin,2,5875,0x10144ef40,408,Subtract
code-creation,Builtin,2,5875,0x10144f0e0,564,Multiply
code-creation,Builtin,2,5875,0x10144f320,480,Divide
code-creation,Builtin,2,5875,0x10144f520,532,Modulus
code-creation,Builtin,2,5875,0x10144f740,496,Exponentiate
code-creation,Builtin,2,5875,0x10144f940,316,Negate
code-creation,Builtin,2,5875,0x10144fa80,124,BitwiseNot
code-creation,Builtin,2,5875,0x10144fb00,124,Decrement
code-creation,Builtin,2,5875,0x10144fb80,124,Increment
code-creation,Builtin,2,5875,0x10144fc00,372,ShiftLeft
code-creation,Builtin,2,5916,0x10144fd80,372,ShiftRight
code-creation,Builtin,2,5916,0x10144ff00,464,ShiftRightLogical
code-creation,Builtin,2,5916,0x1014500e0,372,BitwiseAnd
code-creation,Builtin,2,5916,0x101450260,372,BitwiseOr
code-creation,Builtin,2,5916,0x1014503e0,372,BitwiseXor
code-creation,Builtin,2,5916,0x101450560,876,LessThan
code-creation,Builtin,2,5916,0x1014508e0,876,LessThanOrEqual
code-creation,Builtin,2,5916,0x101450c60,876,GreaterThan
code-creation,Builtin,2,5916,0x101450fe0,876,GreaterThanOrEqual
code-creation,Builtin,2,5916,0x101451360,940,Equal
code-creation,Builtin,2,5916,0x101451720,368,StrictEqual
code-creation,Builtin,2,5916,0x1014518a0,3252,ObjectFromEntries
code-creation,Builtin,2,5916,0x101452560,840,CreateObjectWithoutProperties
code-creation,Builtin,2,5958,0x1014528c0,180,ObjectIsExtensible
code-creation,Builtin,2,5958,0x101452980,184,ObjectPreventExtensions
code-creation,Builtin,2,5958,0x101452a40,188,ObjectGetPrototypeOf
code-creation,Builtin,2,5958,0x101452b00,316,ObjectSetPrototypeOf
code-creation,Builtin,2,5958,0x101452c40,96,ObjectPrototypeToString
code-creation,Builtin,2,5958,0x101452cc0,120,ObjectPrototypeValueOf
code-creation,Builtin,2,5958,0x101452d40,200,ObjectPrototypeToLocaleString
code-creation,Builtin,2,5958,0x101452e20,908,FulfillPromise
code-creation,Builtin,2,5958,0x1014531c0,1048,RejectPromise
code-creation,Builtin,2,6000,0x1014535e0,2512,NewPromiseCapability
code-creation,Builtin,2,6000,0x101453fc0,208,PromiseCapabilityDefaultReject
code-creation,Builtin,2,6000,0x1014540a0,192,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,6000,0x101454180,1424,PerformPromiseThen
code-creation,Builtin,2,6000,0x101454720,688,PromiseReject
code-creation,Builtin,2,6000,0x1014549e0,352,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,6000,0x101454b60,144,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,6000,0x101454c00,4584,PromiseAll
code-creation,Builtin,2,6000,0x101455e00,4952,PromiseAllSettled
code-creation,Builtin,2,6000,0x101457160,1204,PromiseAllResolveElementClosure
code-creation,Builtin,2,6000,0x101457620,1492,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,6041,0x101457c00,1500,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,6041,0x1014581e0,1276,PromiseAnyRejectElementClosure
code-creation,Builtin,2,6041,0x1014586e0,2424,PromiseAny
code-creation,Builtin,2,6041,0x101459060,3044,PromiseConstructor
code-creation,Builtin,2,6041,0x101459c60,384,PromisePrototypeCatch
code-creation,Builtin,2,6041,0x101459e00,112,PromiseValueThunkFinally
code-creation,Builtin,2,6041,0x101459e80,108,PromiseThrowerFinally
code-creation,Builtin,2,6041,0x101459f00,1016,PromiseCatchFinally
code-creation,Builtin,2,6041,0x10145a300,1016,PromiseThenFinally
code-creation,Builtin,2,6041,0x10145a700,1788,PromisePrototypeFinally
code-creation,Builtin,2,6041,0x10145ae00,1408,PromiseRace
code-creation,Builtin,2,6041,0x10145b3a0,312,PromiseFulfillReactionJob
code-creation,Builtin,2,6083,0x10145b4e0,420,PromiseRejectReactionJob
code-creation,Builtin,2,6083,0x10145b6a0,176,PromiseResolveTrampoline
code-creation,Builtin,2,6083,0x10145b760,712,PromiseResolve
code-creation,Builtin,2,6083,0x10145ba40,812,ResolvePromise
code-creation,Builtin,2,6083,0x10145bd80,2320,PromisePrototypeThen
code-creation,Builtin,2,6083,0x10145c6a0,1268,PromiseResolveThenableJob
code-creation,Builtin,2,6083,0x10145cba0,448,ProxyConstructor
code-creation,Builtin,2,6083,0x10145cd80,1752,ProxyDeleteProperty
code-creation,Builtin,2,6083,0x10145d460,2068,ProxyGetProperty
code-creation,Builtin,2,6083,0x10145dc80,1044,ProxyGetPrototypeOf
code-creation,Builtin,2,6083,0x10145e0a0,1700,ProxyHasProperty
code-creation,Builtin,2,6125,0x10145e760,800,ProxyIsExtensible
code-creation,Builtin,2,6125,0x10145eaa0,820,ProxyPreventExtensions
code-creation,Builtin,2,6125,0x10145ede0,1148,ProxyRevocable
code-creation,Builtin,2,6125,0x10145f260,148,ProxyRevoke
code-creation,Builtin,2,6125,0x10145f300,2184,ProxySetProperty
code-creation,Builtin,2,6125,0x10145fba0,1260,ProxySetPrototypeOf
code-creation,Builtin,2,6125,0x1014600a0,232,ReflectIsExtensible
code-creation,Builtin,2,6125,0x1014601a0,236,ReflectPreventExtensions
code-creation,Builtin,2,6125,0x1014602a0,212,ReflectGetPrototypeOf
code-creation,Builtin,2,6125,0x101460380,300,ReflectSetPrototypeOf
code-creation,Builtin,2,6125,0x1014604c0,312,ReflectGet
code-creation,Builtin,2,6166,0x101460600,180,ReflectDeleteProperty
code-creation,Builtin,2,6166,0x1014606c0,168,ReflectHas
code-creation,Builtin,2,6166,0x101460780,5100,RegExpPrototypeExecSlow
code-creation,Builtin,2,6166,0x101461b80,5116,RegExpPrototypeExec
code-creation,Builtin,2,6166,0x101462f80,2420,RegExpPrototypeMatchAll
code-creation,Builtin,2,6166,0x101463900,9168,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,6166,0x101465ce0,8728,RegExpMatchFast
code-creation,Builtin,2,6166,0x101467f00,3520,RegExpPrototypeMatch
code-creation,Builtin,2,6166,0x101468ce0,6372,RegExpReplace
code-creation,Builtin,2,6166,0x10146a5e0,548,RegExpPrototypeReplace
code-creation,Builtin,2,6208,0x10146a820,1452,RegExpSearchFast
code-creation,Builtin,2,6208,0x10146ade0,1584,RegExpPrototypeSearch
code-creation,Builtin,2,6208,0x10146b420,216,RegExpPrototypeSourceGetter
code-creation,Builtin,2,6208,0x10146b500,5700,RegExpSplit
code-creation,Builtin,2,6208,0x10146cb60,508,RegExpPrototypeSplit
code-creation,Builtin,2,6208,0x10146cd60,2268,RegExpPrototypeTest
code-creation,Builtin,2,6208,0x10146d640,1376,RegExpPrototypeTestFast
code-creation,Builtin,2,6208,0x10146dbc0,240,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,6208,0x10146dcc0,248,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,6250,0x10146ddc0,248,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,6250,0x10146dec0,248,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,6250,0x10146dfc0,248,RegExpPrototypeLinearGetter
code-creation,Builtin,2,6250,0x10146e0c0,248,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,6250,0x10146e1c0,276,RegExpPrototypeStickyGetter
code-creation,Builtin,2,6250,0x10146e2e0,276,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,6250,0x10146e400,2456,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,6250,0x10146eda0,1460,StringPrototypeAt
code-creation,Builtin,2,6250,0x10146f360,3272,StringPrototypeEndsWith
code-creation,Builtin,2,6250,0x101470040,472,CreateHTML
code-creation,Builtin,2,6250,0x101470220,180,StringPrototypeAnchor
code-creation,Builtin,2,6291,0x1014702e0,156,StringPrototypeBig
code-creation,Builtin,2,6291,0x101470380,156,StringPrototypeBlink
code-creation,Builtin,2,6291,0x101470420,156,StringPrototypeBold
code-creation,Builtin,2,6291,0x1014704c0,188,StringPrototypeFontcolor
code-creation,Builtin,2,6291,0x101470580,188,StringPrototypeFontsize
code-creation,Builtin,2,6291,0x101470640,156,StringPrototypeFixed
code-creation,Builtin,2,6291,0x1014706e0,156,StringPrototypeItalics
code-creation,Builtin,2,6291,0x101470780,188,StringPrototypeLink
code-creation,Builtin,2,6291,0x101470840,156,StringPrototypeSmall
code-creation,Builtin,2,6291,0x1014708e0,156,StringPrototypeStrike
code-creation,Builtin,2,6291,0x101470980,156,StringPrototypeSub
code-creation,Builtin,2,6291,0x101470a20,156,StringPrototypeSup
code-creation,Builtin,2,6333,0x101470ac0,1004,StringPrototypeIncludes
code-creation,Builtin,2,6333,0x101470ec0,576,StringPrototypeIndexOf
code-creation,Builtin,2,6333,0x101471120,360,StringPrototypeIterator
code-creation,Builtin,2,6333,0x1014712a0,2060,StringIteratorPrototypeNext
code-creation,Builtin,2,6333,0x101471ac0,1376,StringPrototypeMatch
code-creation,Builtin,2,6333,0x101472040,1376,StringPrototypeSearch
code-creation,Builtin,2,6333,0x1014725c0,836,StringPrototypePadStart
code-creation,Builtin,2,6333,0x101472920,840,StringPrototypePadEnd
code-creation,Builtin,2,6333,0x101472c80,132,StringRepeat
code-creation,Builtin,2,6333,0x101472d20,408,StringPrototypeRepeat
code-creation,Builtin,2,6333,0x101472ec0,10776,StringPrototypeReplaceAll
code-creation,Builtin,2,6375,0x1014758e0,3264,StringPrototypeSlice
code-creation,Builtin,2,6375,0x1014765c0,3308,StringPrototypeStartsWith
code-creation,Builtin,2,6375,0x1014772c0,3248,StringPrototypeSubstr
code-creation,Builtin,2,6375,0x101477f80,3220,StringPrototypeSubstring
code-creation,Builtin,2,6375,0x101478c20,7232,StringPrototypeTrim
code-creation,Builtin,2,6375,0x10147a880,6588,StringPrototypeTrimStart
code-creation,Builtin,2,6375,0x10147c240,6152,StringPrototypeTrimEnd
code-creation,Builtin,2,6375,0x10147da60,188,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,6375,0x10147db20,196,SymbolPrototypeToPrimitive
code-creation,Builtin,2,6375,0x10147dc00,208,SymbolPrototypeToString
code-creation,Builtin,2,6375,0x10147dce0,184,SymbolPrototypeValueOf
code-creation,Builtin,2,6416,0x10147dda0,752,TypedArrayPrototypeAt
code-creation,Builtin,2,6416,0x10147e0a0,8904,CreateTypedArray
code-creation,Builtin,2,6416,0x101480380,952,TypedArrayPrototypeEvery
code-creation,Builtin,2,6416,0x101480740,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,6416,0x1014808c0,3456,TypedArrayPrototypeFilter
code-creation,Builtin,2,6416,0x101481660,940,TypedArrayPrototypeFind
code-creation,Builtin,2,6416,0x101481a20,940,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,6416,0x101481de0,808,TypedArrayPrototypeForEach
code-creation,Builtin,2,6416,0x101482120,2080,TypedArrayFrom
code-creation,Builtin,2,6416,0x101482960,368,TypedArrayPrototypeKeys
code-creation,Builtin,2,6416,0x101482ae0,904,TypedArrayOf
code-creation,Builtin,2,6458,0x101482e80,904,TypedArrayPrototypeReduce
code-creation,Builtin,2,6458,0x101483220,884,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,6458,0x1014835a0,2200,TypedArrayPrototypeSet
code-creation,Builtin,2,6458,0x101483e40,2656,TypedArrayPrototypeSlice
code-creation,Builtin,2,6458,0x1014848c0,940,TypedArrayPrototypeSome
code-creation,Builtin,2,6458,0x101484c80,1168,TypedArrayMergeSort
code-creation,Builtin,2,6458,0x101485120,1528,TypedArrayPrototypeSort
code-creation,Builtin,2,6458,0x101485720,2524,TypedArrayPrototypeSubArray
code-creation,Builtin,2,6458,0x101486100,372,TypedArrayPrototypeValues
code-creation,Builtin,2,6458,0x101486280,976,WeakRefConstructor
code-creation,Builtin,2,6500,0x101486660,216,WeakRefDeref
code-creation,Builtin,2,6500,0x101486740,776,NewSloppyArgumentsElements
code-creation,Builtin,2,6500,0x101486a60,356,NewStrictArgumentsElements
code-creation,Builtin,2,6500,0x101486be0,388,NewRestArgumentsElements
code-creation,Builtin,2,6500,0x101486d80,1660,FastNewSloppyArguments
code-creation,Builtin,2,6500,0x101487400,580,FastNewStrictArguments
code-creation,Builtin,2,6500,0x101487660,620,FastNewRestArguments
code-creation,Builtin,2,6500,0x1014878e0,660,StringSlowFlatten
code-creation,Builtin,2,6500,0x101487b80,2084,StringIndexOf
code-creation,Builtin,2,6500,0x1014883c0,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,6500,0x1014883e0,16,TestHelperPlus1
code-creation,Builtin,2,6500,0x101488400,16,TestHelperPlus2
code-creation,Builtin,2,6541,0x101488420,116,NewSmiBox
code-creation,Builtin,2,6541,0x1014884a0,20,ReturnTwoValues
code-creation,Builtin,2,6541,0x1014884c0,44,Load_FastSmiElements_0
code-creation,Builtin,2,6541,0x101488500,44,Load_FastObjectElements_0
code-creation,Builtin,2,6541,0x101488540,168,Load_FastDoubleElements_0
code-creation,Builtin,2,6541,0x101488600,48,Store_FastSmiElements_0
code-creation,Builtin,2,6541,0x101488640,132,Store_FastObjectElements_0
code-creation,Builtin,2,6541,0x1014886e0,56,Store_FastDoubleElements_0
code-creation,Builtin,2,6541,0x101488720,52,Delete_FastSmiElements_0
code-creation,Builtin,2,6541,0x101488760,52,Delete_FastObjectElements_0
code-creation,Builtin,2,6583,0x1014887a0,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,6583,0x1014887e0,284,SortCompareDefault
code-creation,Builtin,2,6583,0x101488900,128,SortCompareUserFn
code-creation,Builtin,2,6583,0x1014889a0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,6583,0x1014889c0,372,Copy
code-creation,Builtin,2,6583,0x101488b40,5848,MergeAt
code-creation,Builtin,2,6583,0x10148a220,848,GallopLeft
code-creation,Builtin,2,6583,0x10148a580,884,GallopRight
code-creation,Builtin,2,6583,0x10148a900,3940,ArrayTimSort
code-creation,Builtin,2,6583,0x10148b880,1916,ArrayPrototypeSort
code-creation,Builtin,2,6583,0x10148c000,112,WasmInt32ToHeapNumber
code-creation,Builtin,2,6583,0x10148c080,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,6625,0x10148c0e0,96,WasmTaggedToFloat64
code-creation,Builtin,2,6625,0x10148c160,96,WasmMemoryGrow
code-creation,Builtin,2,6625,0x10148c1e0,112,WasmTableInit
code-creation,Builtin,2,6625,0x10148c260,112,WasmTableCopy
code-creation,Builtin,2,6625,0x10148c2e0,96,WasmTableFill
code-creation,Builtin,2,6625,0x10148c360,76,WasmTableGrow
code-creation,Builtin,2,6625,0x10148c3c0,184,WasmTableGet
code-creation,Builtin,2,6625,0x10148c480,284,WasmTableSet
code-creation,Builtin,2,6625,0x10148c5a0,108,WasmRefFunc
code-creation,Builtin,2,6625,0x10148c620,180,WasmAllocateFixedArray
code-creation,Builtin,2,6625,0x10148c6e0,40,WasmThrow
code-creation,Builtin,2,6625,0x10148c720,56,WasmRethrow
code-creation,Builtin,2,6625,0x10148c760,44,WasmTriggerTierUp
code-creation,Builtin,2,6666,0x10148c7a0,28,WasmStackGuard
code-creation,Builtin,2,6666,0x10148c7c0,28,WasmStackOverflow
code-creation,Builtin,2,6666,0x10148c7e0,40,WasmTraceMemory
code-creation,Builtin,2,6666,0x10148c820,28,WasmTraceEnter
code-creation,Builtin,2,6666,0x10148c840,40,WasmTraceExit
code-creation,Builtin,2,6666,0x10148c880,364,WasmAllocateJSArray
code-creation,Builtin,2,6666,0x10148ca00,128,WasmAllocatePair
code-creation,Builtin,2,6666,0x10148caa0,44,WasmAllocateRtt
code-creation,Builtin,2,6666,0x10148cae0,136,WasmAllocateStructWithRtt
code-creation,Builtin,2,6708,0x10148cb80,172,WasmAllocateArrayWithRtt
code-creation,Builtin,2,6708,0x10148cc40,272,WasmAllocateObjectWrapper
code-creation,Builtin,2,6708,0x10148cd60,84,WasmSubtypeCheck
code-creation,Builtin,2,6708,0x10148cdc0,12,WasmInt32ToNumber
code-creation,Builtin,2,6708,0x10148cde0,128,WasmUint32ToNumber
code-creation,Builtin,2,6708,0x10148ce80,132,UintPtr53ToNumber
code-creation,Builtin,2,6708,0x10148cf20,120,WasmAtomicNotify
code-creation,Builtin,2,6708,0x10148cfa0,136,WasmI32AtomicWait64
code-creation,Builtin,2,6708,0x10148d040,136,WasmI64AtomicWait64
code-creation,Builtin,2,6750,0x10148d0e0,600,WasmGetOwnProperty
code-creation,Builtin,2,6750,0x10148d340,40,WasmTrap
code-creation,Builtin,2,6750,0x10148d380,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,6750,0x10148d3a0,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,6750,0x10148d3c0,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,6750,0x10148d3e0,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,6750,0x10148d400,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,6750,0x10148d420,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,6750,0x10148d440,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,6750,0x10148d460,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,6791,0x10148d480,12,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,6791,0x10148d4a0,12,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,6791,0x10148d4c0,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,6791,0x10148d4e0,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,6791,0x10148d500,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,6791,0x10148d520,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,6791,0x10148d540,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,6791,0x10148d560,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,6791,0x10148d620,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,6791,0x10148d640,128,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,6791,0x10148d6e0,124,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,6833,0x10148d760,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,6833,0x10148d780,240,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,6833,0x10148d880,272,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,6833,0x10148d9a0,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,6833,0x10148d9c0,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,6833,0x10148d9e0,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,6833,0x10148da00,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,6833,0x10148da20,144,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,6833,0x10148dac0,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,6833,0x10148dae0,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,6875,0x10148db20,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,6875,0x10148db60,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,6875,0x10148dba0,2364,Load_GenericElementsAccessor_0
code-creation,Builtin,2,6875,0x10148e4e0,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,6875,0x10148e520,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,6875,0x10148e560,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,6875,0x10148e580,168,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,6875,0x10148e640,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,6875,0x10148e700,128,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,6875,0x10148e7a0,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,6916,0x10148e7e0,184,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,6916,0x10148e8a0,124,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,6916,0x10148e920,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,6916,0x10148e960,180,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,6916,0x10148ea20,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,6916,0x10148ea40,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,6916,0x10148ea80,264,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,6916,0x10148eba0,240,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,6958,0x10148eca0,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,6958,0x10148ed00,228,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,6958,0x10148ee00,272,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,6958,0x10148ef20,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,6958,0x10148ef80,228,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,6958,0x10148f080,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,6958,0x10148f0a0,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,6958,0x10148f0e0,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,6958,0x10148f1a0,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,6958,0x10148f1c0,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,7000,0x10148f200,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,7000,0x10148f2c0,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,7000,0x10148f2e0,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,7000,0x10148f320,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,7000,0x10148f3e0,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,7000,0x10148f400,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,7000,0x10148f440,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,7000,0x10148f500,144,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,7000,0x10148f5a0,168,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,7000,0x10148f660,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,7041,0x10148f720,8,CollatorConstructor
code-creation,Builtin,2,7041,0x10148f740,8,CollatorInternalCompare
code-creation,Builtin,2,7041,0x10148f760,8,CollatorPrototypeCompare
code-creation,Builtin,2,7041,0x10148f780,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,7041,0x10148f7a0,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,7041,0x10148f7c0,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,7041,0x10148f7e0,8,DatePrototypeToLocaleString
code-creation,Builtin,2,7041,0x10148f800,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,7041,0x10148f820,8,DateTimeFormatConstructor
code-creation,Builtin,2,7041,0x10148f840,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,7041,0x10148f860,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,7083,0x10148f880,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,7083,0x10148f8a0,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,7083,0x10148f8c0,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,7083,0x10148f8e0,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,7083,0x10148f900,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,7083,0x10148f920,8,DisplayNamesConstructor
code-creation,Builtin,2,7083,0x10148f940,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,7083,0x10148f960,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,7083,0x10148f980,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,7083,0x10148f9a0,8,IntlGetCanonicalLocales
code-creation,Builtin,2,7125,0x10148f9c0,8,ListFormatConstructor
code-creation,Builtin,2,7125,0x10148f9e0,248,ListFormatPrototypeFormat
code-creation,Builtin,2,7125,0x10148fae0,248,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,7125,0x10148fbe0,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,7125,0x10148fc00,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,7125,0x10148fc20,8,LocaleConstructor
code-creation,Builtin,2,7125,0x10148fc40,8,LocalePrototypeBaseName
code-creation,Builtin,2,7125,0x10148fc60,8,LocalePrototypeCalendar
code-creation,Builtin,2,7125,0x10148fc80,8,LocalePrototypeCalendars
code-creation,Builtin,2,7125,0x10148fca0,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,7166,0x10148fcc0,8,LocalePrototypeCollation
code-creation,Builtin,2,7166,0x10148fce0,8,LocalePrototypeCollations
code-creation,Builtin,2,7166,0x10148fd00,8,LocalePrototypeHourCycle
code-creation,Builtin,2,7166,0x10148fd20,8,LocalePrototypeHourCycles
code-creation,Builtin,2,7166,0x10148fd40,8,LocalePrototypeLanguage
code-creation,Builtin,2,7166,0x10148fd60,8,LocalePrototypeMaximize
code-creation,Builtin,2,7166,0x10148fd80,8,LocalePrototypeMinimize
code-creation,Builtin,2,7166,0x10148fda0,8,LocalePrototypeNumeric
code-creation,Builtin,2,7166,0x10148fdc0,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,7166,0x10148fde0,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,7166,0x10148fe00,8,LocalePrototypeRegion
code-creation,Builtin,2,7208,0x10148fe20,8,LocalePrototypeScript
code-creation,Builtin,2,7208,0x10148fe40,8,LocalePrototypeTextInfo
code-creation,Builtin,2,7208,0x10148fe60,8,LocalePrototypeTimeZones
code-creation,Builtin,2,7208,0x10148fe80,8,LocalePrototypeToString
code-creation,Builtin,2,7208,0x10148fea0,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,7208,0x10148fec0,8,NumberFormatConstructor
code-creation,Builtin,2,7208,0x10148fee0,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,7208,0x10148ff00,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,7208,0x10148ff20,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,7208,0x10148ff40,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,7208,0x10148ff60,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,7250,0x10148ff80,8,PluralRulesConstructor
code-creation,Builtin,2,7250,0x10148ffa0,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,7250,0x10148ffc0,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,7250,0x10148ffe0,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,7250,0x101490000,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,7250,0x101490020,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,7250,0x101490040,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,7250,0x101490060,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,7250,0x101490080,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,7250,0x1014900a0,8,SegmenterConstructor
code-creation,Builtin,2,7250,0x1014900c0,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,7291,0x1014900e0,8,SegmenterPrototypeSegment
code-creation,Builtin,2,7291,0x101490100,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,7291,0x101490120,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,7291,0x101490140,8,SegmentsPrototypeContaining
code-creation,Builtin,2,7291,0x101490160,8,SegmentsPrototypeIterator
code-creation,Builtin,2,7291,0x101490180,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,7291,0x1014901a0,8,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,7291,0x1014901c0,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,7291,0x1014901e0,224,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,7291,0x1014902e0,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,7333,0x101490300,720,StringToLowerCaseIntl
code-creation,Builtin,2,7333,0x1014905e0,8,V8BreakIteratorConstructor
code-creation,Builtin,2,7333,0x101490600,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,7333,0x101490620,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,7333,0x101490640,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,7333,0x101490660,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,7333,0x101490680,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,7333,0x1014906a0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,7333,0x1014906c0,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,7333,0x1014906e0,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,7375,0x101490700,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,7375,0x101490720,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,7375,0x101490740,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,7375,0x101490760,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,7375,0x101490780,28,Wide
code-creation,BytecodeHandler,0,7375,0x1014907a0,28,ExtraWide
code-creation,BytecodeHandler,0,7375,0x1014907c0,124,DebugBreakWide
code-creation,BytecodeHandler,0,7375,0x101490840,124,DebugBreakExtraWide
code-creation,BytecodeHandler,0,7375,0x1014908c0,188,DebugBreak0
code-creation,BytecodeHandler,0,7375,0x101490980,124,DebugBreak1
code-creation,BytecodeHandler,0,7416,0x101490a00,124,DebugBreak2
code-creation,BytecodeHandler,0,7416,0x101490a80,124,DebugBreak3
code-creation,BytecodeHandler,0,7416,0x101490b00,124,DebugBreak4
code-creation,BytecodeHandler,0,7416,0x101490b80,124,DebugBreak5
code-creation,BytecodeHandler,0,7416,0x101490c00,124,DebugBreak6
code-creation,BytecodeHandler,0,7416,0x101490c80,44,Ldar
code-creation,BytecodeHandler,0,7416,0x101490cc0,76,LdaZero
code-creation,BytecodeHandler,0,7416,0x101490d20,80,LdaSmi
code-creation,BytecodeHandler,0,7416,0x101490d80,76,LdaUndefined
code-creation,BytecodeHandler,0,7416,0x101490de0,76,LdaNull
code-creation,BytecodeHandler,0,7416,0x101490e40,76,LdaTheHole
code-creation,BytecodeHandler,0,7416,0x101490ea0,28,LdaTrue
code-creation,BytecodeHandler,0,7458,0x101490ec0,28,LdaFalse
code-creation,BytecodeHandler,0,7458,0x101490ee0,92,LdaConstant
tick,0x1a37298d4,7458,0,0x0,6
tick,0x1a364939c,7458,0,0x0,6
code-creation,BytecodeHandler,0,7458,0x101490f40,168,LdaContextSlot
code-creation,BytecodeHandler,0,7458,0x101491000,168,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,7458,0x1014910c0,112,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,7458,0x101491140,112,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,7458,0x1014911c0,40,Star
code-creation,BytecodeHandler,0,7500,0x101491200,52,Mov
code-creation,BytecodeHandler,0,7500,0x101491240,48,PushContext
code-creation,BytecodeHandler,0,7500,0x101491280,44,PopContext
code-creation,BytecodeHandler,0,7500,0x1014912c0,64,TestReferenceEqual
code-creation,BytecodeHandler,0,7500,0x101491320,64,TestUndetectable
code-creation,BytecodeHandler,0,7500,0x101491380,52,TestNull
code-creation,BytecodeHandler,0,7500,0x1014913c0,52,TestUndefined
code-creation,BytecodeHandler,0,7500,0x101491400,388,TestTypeOf
code-creation,BytecodeHandler,0,7500,0x1014915a0,5036,LdaGlobal
code-creation,BytecodeHandler,0,7500,0x101492960,3816,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,7500,0x101493860,192,StaGlobal
code-creation,BytecodeHandler,0,7500,0x101493940,212,StaContextSlot
code-creation,BytecodeHandler,0,7541,0x101493a20,156,StaCurrentContextSlot
code-creation,BytecodeHandler,0,7541,0x101493ac0,152,LdaLookupSlot
code-creation,BytecodeHandler,0,7541,0x101493b60,308,LdaLookupContextSlot
code-creation,BytecodeHandler,0,7541,0x101493ca0,4160,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,7541,0x101494d00,152,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,7541,0x101494da0,308,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,7541,0x101494ee0,4088,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,7541,0x101495ee0,256,StaLookupSlot
code-creation,BytecodeHandler,0,7541,0x101496000,4448,LdaNamedProperty
code-creation,BytecodeHandler,0,7541,0x101497180,148,LdaNamedPropertyNoFeedback
code-creation,BytecodeHandler,0,7541,0x101497220,208,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,7583,0x101497300,240,LdaKeyedProperty
code-creation,BytecodeHandler,0,7583,0x101497400,216,LdaModuleVariable
code-creation,BytecodeHandler,0,7583,0x1014974e0,364,StaModuleVariable
code-creation,BytecodeHandler,0,7583,0x101497660,200,StaNamedProperty
code-creation,BytecodeHandler,0,7583,0x101497740,168,StaNamedPropertyNoFeedback
code-creation,BytecodeHandler,0,7583,0x101497800,200,StaNamedOwnProperty
code-creation,BytecodeHandler,0,7583,0x1014978e0,192,StaKeyedProperty
code-creation,BytecodeHandler,0,7583,0x1014979c0,192,StaInArrayLiteral
code-creation,BytecodeHandler,0,7583,0x101497aa0,228,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,7583,0x101497ba0,188,CollectTypeProfile
code-creation,BytecodeHandler,0,7583,0x101497c60,992,Add
code-creation,BytecodeHandler,0,7625,0x101498060,1036,Sub
code-creation,BytecodeHandler,0,7625,0x101498480,988,Mul
code-creation,BytecodeHandler,0,7625,0x101498860,940,Div
code-creation,BytecodeHandler,0,7625,0x101498c20,840,Mod
code-creation,BytecodeHandler,0,7625,0x101498f80,220,Exp
code-creation,BytecodeHandler,0,7625,0x101499060,784,BitwiseOr
code-creation,BytecodeHandler,0,7625,0x101499380,796,BitwiseXor
code-creation,BytecodeHandler,0,7625,0x1014996a0,796,BitwiseAnd
code-creation,BytecodeHandler,0,7625,0x1014999c0,796,ShiftLeft
code-creation,BytecodeHandler,0,7625,0x101499ce0,796,ShiftRight
code-creation,BytecodeHandler,0,7625,0x10149a000,908,ShiftRightLogical
code-creation,BytecodeHandler,0,7625,0x10149a3a0,968,AddSmi
code-creation,BytecodeHandler,0,7666,0x10149a780,996,SubSmi
code-creation,BytecodeHandler,0,7666,0x10149ab80,908,MulSmi
code-creation,BytecodeHandler,0,7666,0x10149af20,992,DivSmi
code-creation,BytecodeHandler,0,7666,0x10149b320,792,ModSmi
code-creation,BytecodeHandler,0,7666,0x10149b640,212,ExpSmi
code-creation,BytecodeHandler,0,7666,0x10149b720,468,BitwiseOrSmi
code-creation,BytecodeHandler,0,7666,0x10149b900,468,BitwiseXorSmi
code-creation,BytecodeHandler,0,7666,0x10149bae0,468,BitwiseAndSmi
code-creation,BytecodeHandler,0,7666,0x10149bcc0,468,ShiftLeftSmi
code-creation,BytecodeHandler,0,7666,0x10149bea0,468,ShiftRightSmi
code-creation,BytecodeHandler,0,7666,0x10149c080,604,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,7666,0x10149c2e0,664,Inc
code-creation,BytecodeHandler,0,7666,0x10149c580,664,Dec
code-creation,BytecodeHandler,0,7708,0x10149c820,624,Negate
code-creation,BytecodeHandler,0,7708,0x10149caa0,452,BitwiseNot
code-creation,BytecodeHandler,0,7708,0x10149cc80,140,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,7708,0x10149cd20,44,LogicalNot
code-creation,BytecodeHandler,0,7708,0x10149cd60,216,TypeOf
code-creation,BytecodeHandler,0,7708,0x10149ce40,132,DeletePropertyStrict
code-creation,BytecodeHandler,0,7708,0x10149cee0,132,DeletePropertySloppy
code-creation,BytecodeHandler,0,7708,0x10149cf80,48,GetSuperConstructor
code-creation,BytecodeHandler,0,7708,0x10149cfc0,996,CallAnyReceiver
code-creation,BytecodeHandler,0,7708,0x10149d3c0,996,CallProperty
code-creation,BytecodeHandler,0,7708,0x10149d7c0,1004,CallProperty0
code-creation,BytecodeHandler,0,7708,0x10149dbc0,1016,CallProperty1
code-creation,BytecodeHandler,0,7750,0x10149dfc0,1036,CallProperty2
code-creation,BytecodeHandler,0,7750,0x10149e3e0,984,CallUndefinedReceiver
code-creation,BytecodeHandler,0,7750,0x10149e7c0,980,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,7750,0x10149eba0,992,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,7750,0x10149efa0,1012,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,7750,0x10149f3a0,68,CallNoFeedback
code-creation,BytecodeHandler,0,7750,0x10149f400,996,CallWithSpread
code-creation,BytecodeHandler,0,7750,0x10149f800,140,CallRuntime
code-creation,BytecodeHandler,0,7750,0x10149f8a0,176,CallRuntimeForPair
code-creation,BytecodeHandler,0,7750,0x10149f960,100,CallJSRuntime
code-creation,BytecodeHandler,0,7750,0x10149f9e0,1732,InvokeIntrinsic
code-creation,BytecodeHandler,0,7750,0x1014a00c0,1012,Construct
code-creation,BytecodeHandler,0,7791,0x1014a04c0,520,ConstructWithSpread
code-creation,BytecodeHandler,0,7791,0x1014a06e0,1976,TestEqual
code-creation,BytecodeHandler,0,7791,0x1014a0ea0,952,TestEqualStrict
code-creation,BytecodeHandler,0,7791,0x1014a1260,1636,TestLessThan
code-creation,BytecodeHandler,0,7791,0x1014a18e0,1636,TestGreaterThan
code-creation,BytecodeHandler,0,7791,0x1014a1f60,1636,TestLessThanOrEqual
code-creation,BytecodeHandler,0,7791,0x1014a25e0,1636,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,7791,0x1014a2c60,876,TestInstanceOf
code-creation,BytecodeHandler,0,7791,0x1014a2fe0,184,TestIn
code-creation,BytecodeHandler,0,7791,0x1014a30a0,128,ToName
code-creation,BytecodeHandler,0,7833,0x1014a3140,244,ToNumber
code-creation,BytecodeHandler,0,7833,0x1014a3240,264,ToNumeric
code-creation,BytecodeHandler,0,7833,0x1014a3360,128,ToObject
code-creation,BytecodeHandler,0,7833,0x1014a3400,156,ToString
code-creation,BytecodeHandler,0,7833,0x1014a34a0,464,CreateRegExpLiteral
code-creation,BytecodeHandler,0,7833,0x1014a3680,1440,CreateArrayLiteral
code-creation,BytecodeHandler,0,7833,0x1014a3c40,108,CreateArrayFromIterable
code-creation,BytecodeHandler,0,7833,0x1014a3cc0,872,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,7833,0x1014a4040,2092,CreateObjectLiteral
code-creation,BytecodeHandler,0,7833,0x1014a4880,248,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,7833,0x1014a4980,192,CloneObject
code-creation,BytecodeHandler,0,7875,0x1014a4a60,240,GetTemplateObject
code-creation,BytecodeHandler,0,7875,0x1014a4b60,380,CreateClosure
code-creation,BytecodeHandler,0,7875,0x1014a4ce0,140,CreateBlockContext
code-creation,BytecodeHandler,0,7875,0x1014a4d80,148,CreateCatchContext
code-creation,BytecodeHandler,0,7875,0x1014a4e20,304,CreateFunctionContext
code-creation,BytecodeHandler,0,7875,0x1014a4f60,304,CreateEvalContext
code-creation,BytecodeHandler,0,7875,0x1014a50a0,148,CreateWithContext
code-creation,BytecodeHandler,0,7875,0x1014a5140,1948,CreateMappedArguments
code-creation,BytecodeHandler,0,7875,0x1014a58e0,660,CreateUnmappedArguments
code-creation,BytecodeHandler,0,7875,0x1014a5b80,700,CreateRestParameter
code-creation,BytecodeHandler,0,7875,0x1014a5e40,556,JumpLoop
code-creation,BytecodeHandler,0,7875,0x1014a6080,60,Jump
code-creation,BytecodeHandler,0,7916,0x1014a60c0,80,JumpConstant
code-creation,BytecodeHandler,0,7916,0x1014a6120,112,JumpIfNullConstant
code-creation,BytecodeHandler,0,7916,0x1014a61a0,112,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,7916,0x1014a6220,112,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,7916,0x1014a62a0,112,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,7916,0x1014a6320,124,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,7916,0x1014a63a0,112,JumpIfTrueConstant
code-creation,BytecodeHandler,0,7916,0x1014a6420,112,JumpIfFalseConstant
code-creation,BytecodeHandler,0,7916,0x1014a64a0,120,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,7916,0x1014a6520,208,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,7916,0x1014a6600,208,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,7916,0x1014a66e0,188,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,7958,0x1014a67a0,188,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,7958,0x1014a6860,92,JumpIfTrue
code-creation,BytecodeHandler,0,7958,0x1014a68c0,92,JumpIfFalse
code-creation,BytecodeHandler,0,7958,0x1014a6920,92,JumpIfNull
code-creation,BytecodeHandler,0,7958,0x1014a6980,92,JumpIfNotNull
code-creation,BytecodeHandler,0,7958,0x1014a69e0,92,JumpIfUndefined
code-creation,BytecodeHandler,0,7958,0x1014a6a40,92,JumpIfNotUndefined
code-creation,BytecodeHandler,0,7958,0x1014a6aa0,104,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,7958,0x1014a6b20,100,JumpIfJSReceiver
code-creation,BytecodeHandler,0,7958,0x1014a6ba0,140,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,7958,0x1014a6c40,556,ForInEnumerate
code-creation,BytecodeHandler,0,8000,0x1014a6e80,268,ForInPrepare
code-creation,BytecodeHandler,0,8000,0x1014a6fa0,76,ForInContinue
code-creation,BytecodeHandler,0,8000,0x1014a7000,304,ForInNext
code-creation,BytecodeHandler,0,8000,0x1014a7140,48,ForInStep
code-creation,BytecodeHandler,0,8000,0x1014a7180,36,SetPendingMessage
code-creation,BytecodeHandler,0,8000,0x1014a71c0,132,Throw
code-creation,BytecodeHandler,0,8000,0x1014a7260,132,ReThrow
code-creation,BytecodeHandler,0,8000,0x1014a7300,132,Return
code-creation,BytecodeHandler,0,8000,0x1014a73a0,232,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,8000,0x1014a74a0,152,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,8041,0x1014a7540,152,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,8041,0x1014a75e0,176,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,8041,0x1014a76a0,148,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,8041,0x1014a7740,576,SuspendGenerator
code-creation,BytecodeHandler,0,8041,0x1014a79a0,160,ResumeGenerator
code-creation,BytecodeHandler,0,8041,0x1014a7a60,172,GetIterator
code-creation,BytecodeHandler,0,8041,0x1014a7b20,128,Debugger
code-creation,BytecodeHandler,0,8041,0x1014a7bc0,136,IncBlockCounter
code-creation,BytecodeHandler,0,8041,0x1014a7c60,76,Abort
code-creation,BytecodeHandler,0,8083,0x1014a7cc0,44,Star0
code-creation,BytecodeHandler,0,8083,0x1014a7d00,72,Illegal
code-creation,BytecodeHandler,0,8083,0x1014a7d60,128,DebugBreak1.Wide
code-creation,BytecodeHandler,0,8083,0x1014a7e00,128,DebugBreak2.Wide
code-creation,BytecodeHandler,0,8083,0x1014a7ea0,128,DebugBreak3.Wide
code-creation,BytecodeHandler,0,8083,0x1014a7f40,128,DebugBreak4.Wide
code-creation,BytecodeHandler,0,8083,0x1014a7fe0,128,DebugBreak5.Wide
code-creation,BytecodeHandler,0,8083,0x1014a8080,128,DebugBreak6.Wide
code-creation,BytecodeHandler,0,8083,0x1014a8120,44,Ldar.Wide
code-creation,BytecodeHandler,0,8083,0x1014a8160,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,8083,0x1014a81a0,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,8083,0x1014a81e0,128,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8280,128,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8320,72,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8380,72,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,8125,0x1014a83e0,40,Star.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8420,52,Mov.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8460,48,PushContext.Wide
code-creation,BytecodeHandler,0,8125,0x1014a84a0,44,PopContext.Wide
code-creation,BytecodeHandler,0,8125,0x1014a84e0,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,8125,0x1014a8540,3980,LdaGlobal.Wide
code-creation,BytecodeHandler,0,8125,0x1014a94e0,3880,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa420,196,StaGlobal.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa500,212,StaContextSlot.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa5e0,156,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa680,156,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa720,312,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,8166,0x1014aa860,4232,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,8166,0x1014ab900,156,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,8166,0x1014ab9a0,312,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,8166,0x1014abae0,4156,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,8166,0x1014acb20,252,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,8208,0x1014acc20,4476,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,8208,0x1014adda0,152,LdaNamedPropertyNoFeedback.Wide
code-creation,BytecodeHandler,0,8208,0x1014ade40,212,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,8208,0x1014adf20,188,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,8208,0x1014adfe0,216,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,8208,0x1014ae0c0,368,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,8208,0x1014ae240,204,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,8208,0x1014ae320,172,StaNamedPropertyNoFeedback.Wide
code-creation,BytecodeHandler,0,8208,0x1014ae3e0,204,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,8208,0x1014ae4c0,196,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,8250,0x1014ae5a0,196,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,8250,0x1014ae680,232,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,8250,0x1014ae780,192,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,8250,0x1014ae860,944,Add.Wide
code-creation,BytecodeHandler,0,8250,0x1014aec20,992,Sub.Wide
code-creation,BytecodeHandler,0,8250,0x1014af020,936,Mul.Wide
code-creation,BytecodeHandler,0,8250,0x1014af3e0,944,Div.Wide
tick,0x1a3726358,8250,0,0x0,6
code-creation,BytecodeHandler,0,8250,0x1014af7a0,860,Mod.Wide
code-creation,BytecodeHandler,0,8291,0x1014afb00,224,Exp.Wide
code-creation,BytecodeHandler,0,8291,0x1014afc00,796,BitwiseOr.Wide
code-creation,BytecodeHandler,0,8291,0x1014aff20,808,BitwiseXor.Wide
code-creation,BytecodeHandler,0,8291,0x1014b0260,808,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,8291,0x1014b05a0,808,ShiftLeft.Wide
code-creation,BytecodeHandler,0,8291,0x1014b08e0,808,ShiftRight.Wide
code-creation,BytecodeHandler,0,8291,0x1014b0c20,916,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,8291,0x1014b0fc0,924,AddSmi.Wide
code-creation,BytecodeHandler,0,8291,0x1014b1360,956,SubSmi.Wide
code-creation,BytecodeHandler,0,8291,0x1014b1720,908,MulSmi.Wide
code-creation,BytecodeHandler,0,8291,0x1014b1ac0,992,DivSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b1ec0,792,ModSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b21e0,216,ExpSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b22c0,476,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b24a0,476,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b2680,476,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b2860,476,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b2a40,476,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b2c20,612,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,8333,0x1014b2ea0,624,Inc.Wide
code-creation,BytecodeHandler,0,8333,0x1014b3120,624,Dec.Wide
code-creation,BytecodeHandler,0,8333,0x1014b33a0,632,Negate.Wide
code-creation,BytecodeHandler,0,8375,0x1014b3620,460,BitwiseNot.Wide
code-creation,BytecodeHandler,0,8375,0x1014b3800,136,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,8375,0x1014b38a0,136,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,8375,0x1014b3940,48,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,8375,0x1014b3980,1000,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,8375,0x1014b3d80,1000,CallProperty.Wide
code-creation,BytecodeHandler,0,8375,0x1014b4180,1008,CallProperty0.Wide
code-creation,BytecodeHandler,0,8375,0x1014b4580,1020,CallProperty1.Wide
code-creation,BytecodeHandler,0,8375,0x1014b4980,1040,CallProperty2.Wide
code-creation,BytecodeHandler,0,8375,0x1014b4da0,988,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,8375,0x1014b5180,984,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,8416,0x1014b5560,996,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,8416,0x1014b5960,1016,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,8416,0x1014b5d60,72,CallNoFeedback.Wide
code-creation,BytecodeHandler,0,8416,0x1014b5dc0,1000,CallWithSpread.Wide
code-creation,BytecodeHandler,0,8416,0x1014b61c0,144,CallRuntime.Wide
code-creation,BytecodeHandler,0,8416,0x1014b6260,184,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,8416,0x1014b6320,104,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,8416,0x1014b63a0,1736,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,8416,0x1014b6a80,960,Construct.Wide
code-creation,BytecodeHandler,0,8416,0x1014b6e60,468,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,8416,0x1014b7040,2008,TestEqual.Wide
code-creation,BytecodeHandler,0,8416,0x1014b7820,960,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,8458,0x1014b7c00,1628,TestLessThan.Wide
code-creation,BytecodeHandler,0,8458,0x1014b8260,1628,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,8458,0x1014b88c0,1628,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,8458,0x1014b8f20,1628,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,8458,0x1014b9580,884,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,8458,0x1014b9900,188,TestIn.Wide
code-creation,BytecodeHandler,0,8458,0x1014b99c0,132,ToName.Wide
code-creation,BytecodeHandler,0,8458,0x1014b9a60,248,ToNumber.Wide
code-creation,BytecodeHandler,0,8458,0x1014b9b60,268,ToNumeric.Wide
code-creation,BytecodeHandler,0,8458,0x1014b9c80,132,ToObject.Wide
code-creation,BytecodeHandler,0,8500,0x1014b9d20,468,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,8500,0x1014b9f00,1348,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,8500,0x1014ba460,872,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,8500,0x1014ba7e0,1996,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,8500,0x1014bafc0,196,CloneObject.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb0a0,188,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb160,376,CreateClosure.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb2e0,144,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb380,152,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb420,304,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,8500,0x1014bb560,304,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,8541,0x1014bb6a0,152,CreateWithContext.Wide
code-creation,BytecodeHandler,0,8541,0x1014bb740,576,JumpLoop.Wide
code-creation,BytecodeHandler,0,8541,0x1014bb9a0,60,Jump.Wide
code-creation,BytecodeHandler,0,8541,0x1014bb9e0,80,JumpConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bba40,112,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbac0,112,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbb40,112,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbbc0,112,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbc40,124,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbcc0,112,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,8541,0x1014bbd40,112,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,8583,0x1014bbdc0,120,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,8583,0x1014bbe40,208,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,8583,0x1014bbf20,208,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc000,188,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc0c0,188,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc180,92,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc1e0,92,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc240,92,JumpIfNull.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc2a0,92,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc300,92,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,8583,0x1014bc360,92,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc3c0,104,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc440,100,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc4c0,140,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc560,560,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc7a0,268,ForInPrepare.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc8c0,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,8625,0x1014bc920,308,ForInNext.Wide
code-creation,BytecodeHandler,0,8625,0x1014bca60,48,ForInStep.Wide
code-creation,BytecodeHandler,0,8625,0x1014bcaa0,192,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,8625,0x1014bcb80,180,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,8625,0x1014bcc40,148,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,8666,0x1014bcce0,580,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,8666,0x1014bcf40,160,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,8666,0x1014bd000,176,GetIterator.Wide
code-creation,BytecodeHandler,0,8666,0x1014bd0c0,140,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,8666,0x1014bd160,80,Abort.Wide
code-creation,BytecodeHandler,0,8666,0x1014bd1c0,128,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,8666,0x1014bd260,128,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,8666,0x1014bd300,128,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,8666,0x1014bd3a0,128,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,8666,0x1014bd440,128,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd4e0,128,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd580,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd5c0,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd600,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd640,128,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd6e0,128,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd780,72,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd7e0,72,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd840,40,Star.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd880,52,Mov.ExtraWide
code-creation,BytecodeHandler,0,8708,0x1014bd8c0,48,PushContext.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bd900,44,PopContext.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bd940,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bd9a0,3980,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014be940,3880,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bf880,196,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bf960,212,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bfa40,156,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bfae0,156,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bfb80,312,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014bfcc0,4232,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,8750,0x1014c0d60,156,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c0e00,312,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c0f40,4156,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c1f80,252,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c2080,4476,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c3200,152,LdaNamedPropertyNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c32a0,212,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c3380,188,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c3440,216,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c3520,368,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,8791,0x1014c36a0,204,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3780,172,StaNamedPropertyNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3840,204,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3920,196,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3a00,196,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3ae0,232,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3be0,192,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c3cc0,944,Add.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c4080,992,Sub.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c4480,936,Mul.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c4840,944,Div.ExtraWide
code-creation,BytecodeHandler,0,8833,0x1014c4c00,860,Mod.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c4f60,224,Exp.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c5060,796,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c5380,808,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c56c0,808,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c5a00,808,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c5d40,808,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c6080,916,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c6420,924,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c67c0,956,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c6b80,908,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,8875,0x1014c6f20,992,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7320,792,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7640,216,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7720,476,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7900,476,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7ae0,476,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7cc0,476,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c7ea0,476,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c8080,612,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c8300,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c8580,624,Dec.ExtraWide
code-creation,BytecodeHandler,0,8916,0x1014c8800,632,Negate.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c8a80,460,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c8c60,136,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c8d00,136,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c8da0,48,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c8de0,1000,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c91e0,1000,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c95e0,1008,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c99e0,1020,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014c9de0,1040,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014ca200,988,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,8958,0x1014ca5e0,984,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014ca9c0,996,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cadc0,1016,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb1c0,72,CallNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb220,1000,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb620,144,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb6c0,184,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb780,104,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cb800,1736,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cbee0,960,Construct.ExtraWide
code-creation,BytecodeHandler,0,9000,0x1014cc2c0,468,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cc4a0,2008,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014ccc80,960,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cd060,1628,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cd6c0,1628,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cdd20,1628,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014ce380,1628,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014ce9e0,884,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014ced60,188,TestIn.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cee20,132,ToName.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014ceec0,248,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cefc0,268,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,9041,0x1014cf0e0,132,ToObject.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014cf180,468,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014cf360,1348,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014cf8c0,872,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014cfc40,1996,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014d0420,196,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014d0500,188,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014d05c0,376,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014d0740,144,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,9083,0x1014d07e0,152,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0880,304,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d09c0,304,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0b00,152,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0ba0,576,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0e00,60,Jump.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0e40,80,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0ea0,112,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0f20,112,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d0fa0,112,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d1020,112,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,9125,0x1014d10a0,124,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1120,112,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d11a0,112,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1220,120,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d12a0,208,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1380,208,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1460,188,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1520,188,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d15e0,92,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d1640,92,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,9166,0x1014d16a0,92,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1700,92,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1760,92,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d17c0,92,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1820,104,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d18a0,100,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1920,140,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d19c0,560,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1c00,268,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1d20,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1d80,308,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,9208,0x1014d1ec0,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d1f00,192,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d1fe0,180,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d20a0,148,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d2140,580,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d23a0,160,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d2460,176,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d2520,140,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,9250,0x1014d25c0,80,Abort.ExtraWide
tick,0x1a3720f28,9291,0,0x0,6
new,MemoryChunk,0x3ad5a9100000,262144
new,MemoryChunk,0x2d4de6000000,262144
new,MemoryChunk,0x17d2b0580000,262144
tick,0x100f4997c,10583,0,0x0,5
new,MemoryChunk,0x311ed2240000,262144
code-creation,Eval,10,11750,0x311ed227b88e,5, node:internal/main/run_main_module:1:1,0x311ed227b738,~
script-source,90,node:internal/main/run_main_module,'use strict';\n\nconst {\n  prepareMainThreadExecution\n} = require('internal/bootstrap/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n
code-source-info,0x311ed227b88e,90,0,632,C0O0C4O632,,
code-creation,Function,10,11791,0x311ed227b946,58, node:internal/main/run_main_module:1:1,0x311ed227b7f8,~
code-source-info,0x311ed227b946,90,0,632,C0O56C3O56C8O25C13O102C15O102C19O137C22O560C25O560C30O598C35O605C40O622C47O626C51O606C57O631,,
tick,0x1a362a478,11833,0,0x0,3
code-creation,LazyCompile,10,11958,0x311ed227bb96,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x1910fc7cf8c8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - NativeModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/loaders') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\n});\n\n\n// internalBindingAllowlist contains the name of internalBinding modules\n// that are allowed for access via process.binding()... This is used\n// to provide a transition path for modules that are being moved over to\n// internalBinding.\nconst internalBindingAllowlist = new SafeSet([\n  'async_wrap'\x2C\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'crypto'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'http_parser'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'natives'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'signal_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'url'\x2C\n  'util'\x2C\n  'uv'\x2C\n  'v8'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'util'\x2C\n]);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = ObjectCreate(null);\n\n  process.binding = function binding(module) {\n    module = String(module);\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (internalBindingAllowlist.has(module)) {\n      if (runtimeDeprecatedList.has(module)) {\n        runtimeDeprecatedList.delete(module);\n        process.emitWarning(\n          `Access to process.binding('${module}') is deprecated.`\x2C\n          'DeprecationWarning'\x2C\n          'DEP0111');\n      }\n      if (legacyWrapperList.has(module)) {\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\n      }\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n// Set up internalBinding() in the closure.\n/**\n * @type {InternalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = ObjectCreate(null);\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst loaderId = 'internal/bootstrap/loaders';\nconst {\n  moduleIds\x2C\n  compileFunction\n} = internalBinding('native_module');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass NativeModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C NativeModule>}\n  */\n  static map = new SafeMap(\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the native module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\n      // Do not expose this to user land even with --expose-internals.\n      if (id !== loaderId) {\n        mod.canBeRequiredByUsers = true;\n      }\n    }\n  }\n\n  static exists(id) {\n    return NativeModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    const mod = NativeModule.map.get(id);\n    return mod && mod.canBeRequiredByUsers;\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!this.canBeRequiredByUsers) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    const url = `node:${this.id}`;\n    const nativeModule = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        nativeModule.syncExports();\n        this.setExport('default'\x2C nativeModule.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : nativeModuleRequire;\n\n      const fn = compileFunction(id);\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  NativeModule\x2C\n  require: nativeModuleRequire\n};\n\nfunction nativeModuleRequire(id) {\n  if (id === loaderId) {\n    return loaderExports;\n  }\n\n  const mod = NativeModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (!NativeModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return nativeModuleRequire(request);\n}\n\n// Pass the exports back to C++ land for C++ internals to use.\nreturn loaderExports;\n
code-source-info,0x311ed227bb96,9,10315,10658,C0O10324C2O10335C4O10331C9O10351C13O10372C14O10392C19O10405C24O10409C29O10409C35O10550C37O10560C47O10608C60O10566C65O10560C66O10629C71O10629C75O10656,,
code-creation,LazyCompile,10,12416,0x311ed227c8a6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x1910fc7cf7f8,~
code-source-info,0x311ed227c8a6,9,9528,10089,C0O9546C6O9561C12O9590C16O9598C17O9626C22O9634C23O9647C30O9690C37O9721C45O9690C63O9820C70O9820C75O9855C89O9890C103O9847C108O9928C109O9940C124O9970C126O9983C141O10003C152O10022C160O10054C165O10003C170O10077C174O10085,,
code-creation,Eval,10,12625,0x311ed227d806,5, node:internal/bootstrap/pre_execution:1:1,0x311ed227d460,~
script-source,91,node:internal/bootstrap/pre_execution,'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  shouldNotRegisterESMLoader\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\n\nconst { Buffer } = require('buffer');\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\nconst assert = require('internal/assert');\n\nfunction prepareMainThreadExecution(expandArgv1 = false) {\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\n  // this toggle from the snapshot.\n  reconnectZeroFillToggle();\n\n  // Patch the process object with legacy properties and normalizations\n  patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupPerfHooks();\n  setupInspectorHooks();\n  setupWarningHandler();\n\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd.\n  if (process.env.NODE_V8_COVERAGE) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n\n\n  setupDebugEnv();\n\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n  setupStacktracePrinterOnSigint();\n\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n  initializeReportSignalHandlers();  // Main-thread-only.\n\n  initializeHeapSnapshotSignalHandlers();\n\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n  // spawned by our child_process module\x2C then initialize IPC.\n  // This attaches some internal event listeners and creates:\n  // process.send()\x2C process.channel\x2C process.connected\x2C\n  // process.disconnect().\n  setupChildProcessIpcChannel();\n\n  // Load policy from disk and parse it.\n  initializePolicy();\n\n  // If this is a worker in cluster mode\x2C start up the communication\n  // channel. This needs to be done before any user code gets executed\n  // (including preload modules).\n  initializeClusterIPC();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n  initializeWASI();\n  initializeCJSLoader();\n  initializeESMLoader();\n\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n}\n\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\n  // deserialization).\n  const {\n    hrtime\x2C\n    hrtimeBigInt\n  } = require('internal/process/per_thread').getFastAPIs(binding);\n\n  process.hrtime = hrtime;\n  process.hrtime.bigint = hrtimeBigInt;\n\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    enumerable: true\x2C\n    configurable: false\x2C\n    value: process.argv[0]\n  });\n  process.argv[0] = process.execPath;\n\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      process.argv[1] = path.resolve(process.argv[1]);\n    } catch {}\n  }\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n  }\n}\n\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage to a specified file.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  const { report } = require('internal/process/report');\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    enumerable: false\x2C\n    configurable: true\x2C\n    get() {\n      return report;\n    }\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  const { addSignalHandler } = require('internal/process/report');\n\n  addSignalHandler();\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  process.on(signal\x2C () => {\n    writeHeapSnapshot();\n  });\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupPerfHooks() {\n  require('internal/perf/performance').refreshTimeOrigin();\n  require('internal/perf/utils').refreshTimeOrigin();\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n\n  // Create global.process and global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePolicy() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = new URL(`file://${experimentalPolicy}`);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    require('internal/process/policy')\n      .setup(src\x2C manifestURL.href);\n  }\n}\n\nfunction initializeWASI() {\n  const { NativeModule } = require('internal/bootstrap/loaders');\n  const mod = NativeModule.map.get('wasi');\n  mod.canBeRequiredByUsers =\n    getOptionValue('--experimental-wasi-unstable-preview1');\n}\n\nfunction initializeCJSLoader() {\n  const CJSLoader = require('internal/modules/cjs/loader');\n  CJSLoader.Module._initPaths();\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  CJSLoader.Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\nfunction initializeESMLoader() {\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\n\n  if (shouldNotRegisterESMLoader) return;\n\n  const {\n    setImportModuleDynamicallyCallback\x2C\n    setInitializeImportMetaObjectCallback\n  } = internalBinding('module_wrap');\n  const esm = require('internal/process/esm_loader');\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const { setSourceMapsEnabled } =\n    require('internal/source_map/source_map_cache');\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nmodule.exports = {\n  patchProcessObject\x2C\n  setupCoverageHooks\x2C\n  setupWarningHandler\x2C\n  setupDebugEnv\x2C\n  setupPerfHooks\x2C\n  prepareMainThreadExecution\x2C\n  initializeDeprecations\x2C\n  initializeESMLoader\x2C\n  initializeFrozenIntrinsics\x2C\n  initializeSourceMapsHandlers\x2C\n  loadPreloadModules\x2C\n  setupTraceCategoryState\x2C\n  setupInspectorHooks\x2C\n  initializeReport\x2C\n  initializeCJSLoader\x2C\n  initializeWASI\n};\n
code-source-info,0x311ed227d806,91,0,15915,C0O0C4O15915,,
code-creation,Function,10,13208,0x311ed227e316,426, node:internal/bootstrap/pre_execution:1:1,0x311ed227d770,~
code-source-info,0x311ed227e316,91,0,15915,C0O0C190O25C196O43C202O67C208O78C214O93C220O122C226O211C232O211C237O162C243O180C249O276C255O276C260O248C266O324C272O324C277O313C283O385C289O385C294O411C299O351C305O434C311O434C315O434C317O15518C324O15539C330O15561C336O15583C342O15606C348O15623C354O15641C360O15671C366O15697C372O15720C378O15750C384O15782C390O15804C396O15831C402O15854C408O15874C414O15897C420O15533C425O15914,,
tick,0x1a375be7c,13250,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x311ed227b949
new,MemoryChunk,0x3a1583d00000,262144
code-creation,Eval,10,13333,0x311ed227fc06,5, node:internal/options:1:1,0x311ed227fa40,~
script-source,92,node:internal/options,'use strict';\n\nconst { getOptions\x2C shouldNotRegisterESMLoader } = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\n\n// getOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  shouldNotRegisterESMLoader\n};\n
code-source-info,0x311ed227fc06,92,0,1612,C0O0C4O1612,,
code-creation,Function,10,13416,0x3a1583d0114e,139, node:internal/options:1:1,0x311ed227fb70,~
code-source-info,0x3a1583d0114e,92,0,1612,C0O0C43O66C46O66C51O23C57O35C62O125C63O125C65O136C66O136C68O152C69O152C71O1401C78O1540C84O1558C90O1582C133O1416C138O1611,,
code-creation,LazyCompile,10,13458,0x3a1583d015ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x1910fc7cf348,~
code-source-info,0x3a1583d015ee,9,5115,5353,C0O5140C7O5150C11O5164C15O5201C25O5228C30O5226C37O5262C48O5281C56O5317C61O5262C66O5338C68O5349,,
code-creation,LazyCompile,10,13583,0x3a1583d01d1e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x311ed227d838,~
code-source-info,0x3a1583d01d1e,91,498,2387,C10O641C15O641C18O743C21O743C25O778C28O778C31O807C34O807C37O827C40O827C43O852C46O852C49O1055C52O1067C57O1071C63O1095C66O1103C77O1159C82O1163C87O1132C91O1124C95O1190C98O1190C101O1282C104O1282C107O1388C110O1388C113O1410C116O1410C119O1469C122O1469C125O1792C128O1792C131O1867C134O1867C137O2064C140O2064C143O2091C146O2091C149O2125C152O2125C155O2153C158O2153C161O2173C164O2173C167O2198C170O2198C173O2242C179O2242C184O2284C189O2302C195O2284C199O2332C202O2332C205O2356C208O2356C212O2386,,
code-creation,LazyCompile,10,13666,0x3a1583d02f46,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x30d75bb1b00,~
script-source,19,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\n} = internalBinding('buffer');\nconst {\n  untransferable_object_private_symbol\x2C\n  setHiddenValue\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\n};\n
code-source-info,0x3a1583d02f46,19,30717,30757,C0O30724C5O30735C11O30733C18O30756,,
tick,0x1a375c180,14833,0,0x0,3,0x0,0x3a1583d01d2d,0x311ed227b955
code-creation,LazyCompile,10,14833,0x3a1583d05796,432,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x311ed227d888,~
code-source-info,0x3a1583d
code-creation,LazyCompile,10,14958,0x3a1583d05e4e,113,getFastAPIs node:internal/process/per_thread:57:21,0x30d75bbdcb0,~
script-source,23,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\n\nfunction getFastAPIs(binding) {\n  const {\n    hrtime: _hrtime\n  } = binding.getFastAPIs();\n\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  const hrValues = new Uint32Array(_hrtime.buffer);\n\n  function hrtime(time) {\n    _hrtime.hrtime();\n\n    if (time !== undefined) {\n      validateArray(time\x2C 'time');\n      if (time.length !== 2) {\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n      }\n\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n      const nsec = hrValues[2] - time[1];\n      const needsBorrow = nsec < 0;\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n    }\n\n    return [\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\n      hrValues[2]\x2C\n    ];\n  }\n\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\n  function hrtimeBigInt() {\n    _hrtime.hrtimeBigInt();\n    return hrBigintValues[0];\n  }\n\n  return {\n    hrtime\x2C\n    hrtimeBigInt\x2C\n  };\n}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    if (code || code === 0)\n      process.exitCode = code;\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || 0);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || 0);\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw errnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvironment }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvironment) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  NodeEnvironmentFlagsSet.prototype.keys =\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\n    NodeEnvironmentFlagsSet.prototype.values;\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  getFastAPIs\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\n};\n
code-source-info,0x3a1583d05e4e,23,1229,2412,C0O1229C24O1285C29O1285C34O1263C40O1500C50O1524C57O1500C62O1500C64O2232C74O2259C86O2232C91O2232C93O2367C100O2380C106O2392C112O2410,,
code-creation,LazyCompile,10,15500,0x3a1583d074f6,175,resolve node:path:1091:10,0xe898a5e8648,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instancee\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n\n      validateString(path\x2C 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0x3a1583d074f6,35,33782,34692,C0O33782C3O33817C6O33848C8O33878C12O33885C16O33898C18O33892C25O33902C27O33946C28O33948C35O33959C42O33965C45O33965C49O33984C57O33984C62O34058C68O34065C73O34082C75O34107C87O34133C92O34155C99O34182C107O34221C109O34217C113O33921C118O33860C121O34437C126O34483C137O34452C143O34569C147O34599C152O34610C156O34625C157O34656C163O34663C174O34688,,
tick,0x1a375c16c,17208,0,0x0,3,0x0,0x3a1583d0587b,0x3a1583d01d33,0x311ed227b955
tick,0x1016e5934,17208,0,0x0,3,0x0,0x3a1583d0587b,0x3a1583d01d33,0x311ed227b955
code-creation,LazyCompile,10,17208,0x3a1583d0a73e,30,validateString node:internal/validators:117:24,0x30d75b99d28,~
script-source,17,node:internal/validators,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeTest\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n    ERR_INVALID_CALLBACK\x2C\n  }\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isArrayBufferView\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\n  return value;\n}\n\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n);\n\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (!isInt32(value)) {\n      if (typeof value !== 'number') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n      }\n      if (!NumberIsInteger(value)) {\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n      }\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\n);\n\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\n  if (!isUint32(value)) {\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    const min = positive ? 1 : 0;\n    // 2 ** 32 === 4294967296\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\n  }\n  if (positive && value === 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\n  }\n});\n\nfunction validateString(value\x2C name) {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n}\n\nfunction validateNumber(value\x2C name) {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n}\n\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateBoolean(value\x2C name) {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n}\n\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C {\n    nullable = false\x2C\n    allowArray = false\x2C\n    allowFunction = false\x2C\n  } = {}) => {\n    if ((!nullable && value === null) ||\n        (!allowArray && ArrayIsArray(value)) ||\n        (typeof value !== 'object' && (\n          !allowFunction || typeof value !== 'function'\n        ))) {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n    }\n  });\n\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateSignalName(signal\x2C name = 'signal') {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n}\n\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\nfunction validateEncoding(data\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n}\n\n// Check that the port number is not NaN when coerced to a number\x2C\n// is an integer and that it falls within the legal range of port numbers.\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n}\n\nconst validateCallback = hideStackFrames((callback) => {\n  if (typeof callback !== 'function')\n    throw new ERR_INVALID_CALLBACK(callback);\n});\n\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateCallback\x2C\n  validateAbortSignal\x2C\n};\n
code-source-info,0x3a1583d0a73e,17,3398,3507,C0O3416C6O3451C22O3457C27O3451C29O3506,,
code-creation,LazyCompile,10,17541,0x3a1583d0b066,13, node:path:1082:10,0xe898a5e85f8,~
code-source-info,0x3a1583d0b066,35,33631,33650,C0O33645C3O33645C8O33645C12O33650,,
code-creation,LazyCompile,10,17541,0x3a1583d0b176,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x23e292d0d3e8,~
script-source,89,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\n    }\n  } = require('internal/errors');\n  const {\n    validateUint32\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id |= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0x3a1583d0b176,89,3341,3425,C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423,,
code-creation,LazyCompile,10,17791,0x3a1583d0b7ee,442,normalizeString node:path:66:25,0xe898a5e8160,~
code-source-info,0x3a1583d0b7ee
code-creation,LazyCompile,10,17833,0x3a1583d0bb7e,8,isPosixPathSeparator node:path:56:30,0xe898a5e80c0,~
code-source-info,0x3a1583d0bb7e,35,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
code-creation,LazyCompile,10,17875,0x3a1583d0bef6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33,0x311ed227d8d8,~
code-source-info,0x3a1583d0bef6,91,4292,4517,C16O4344C21O4344C26O4370C28O4387C36O4417C43O4480C49O4498C56O4387C62O4516,,
code-creation,LazyCompile,10,17875,0x3a1583d0c086,82,getOptionValue node:internal/options:28:24,0x311ed227fcd8,~
code-source-info,0x3a1583d0c086,92,692,932,C0O725C3O725C7O767C15O767C22O817C30O839C38O839C43O826C47O817C53O854C55O879C60O885C61O907C66O907C74O922C81O930,,
code-creation,LazyCompile,10,17916,0x3a1583d0c3ee,33,getOptionsFromBinding node:internal/options:14:31,0x311ed227fc38,~
code-source-info,0x3a1583d0c3ee,92,439,537,C0O446C6O469C11O496C15O481C28O517C32O535,,
code-creation,LazyCompile,10,18041,0x3a1583d0c7ee,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33,0x311ed227db80,~
code-source-info,0x3a1583d0c7ee,91,6760,6987,C0O6802C6O6802C11O6775C16O6874C22O6874C27O6845C32O6916C35O6941C40O6916C45O6986,,
code-creation,LazyCompile,10,18083,0x3a1583d0c996,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x30d75bbe2a0,~
code-source-info,0x3a1583d0c996,23,11040,11337,C0O11064C4O11093C10O11128C16O11159C21O11203C26O11204C33O11149C39O11228C44O11249C49O11249C55O11268C61O11300C66O11321C71O11321C76O11336,,
code-creation,LazyCompile,10,18125,0x3a1583d0cb56,42,setupPerfHooks node:internal/bootstrap/pre_execution:227:24,0x311ed227dbd0,~
code-source-info,0x3a1583d0cb56,91,7012,7132,C0O7019C6O7019C11O7055C16O7056C20O7079C26O7079C31O7109C36O7110C41O7131,,
tick,0x100e2d800,18125,0,0x0,3,0x0,0x3a1583d0c816,0x3a1583d01d3a,0x311ed227b955
code-creation,LazyCompile,10,18125,0x3a1583d0cce6,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x1910fc7ff5d8,~
script-source,69,node:internal/perf/performance,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  EventTarget\x2C\n} = require('internal/event_target');\n\nconst { now } = require('internal/perf/utils');\n\nconst {\n  mark\x2C\n  measure\x2C\n  clearMarkTimings\x2C\n} = require('internal/perf/usertiming');\nconst {\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n} = require('internal/perf/observe');\n\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\nconst nodeTiming = require('internal/perf/nodetiming');\nconst timerify = require('internal/perf/timerify');\nconst { customInspectSymbol: kInspect } = require('internal/util');\nconst { inspect } = require('util');\n\nconst {\n  getTimeOriginTimestamp\n} = internalBinding('performance');\n\nclass Performance extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `Performance ${inspect({\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n    }\x2C opts)}`;\n  }\n}\n\nfunction toJSON() {\n  return {\n    nodeTiming: this.nodeTiming\x2C\n    timeOrigin: this.timeOrigin\x2C\n    eventLoopUtilization: this.eventLoopUtilization()\n  };\n}\n\nfunction clearMarks(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearMarkTimings(name);\n  clearEntriesFromBuffer('mark'\x2C name);\n}\n\nfunction clearMeasures(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('measure'\x2C name);\n}\n\nfunction getEntries() {\n  return filterBufferMapByNameAndType();\n}\n\nfunction getEntriesByName(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  return filterBufferMapByNameAndType(name\x2C undefined);\n}\n\nfunction getEntriesByType(type) {\n  if (type !== undefined) {\n    type = `${type}`;\n  }\n  return filterBufferMapByNameAndType(undefined\x2C type);\n}\n\nclass InternalPerformance extends EventTarget {}\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\n\nObjectDefineProperties(Performance.prototype\x2C {\n  clearMarks: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMarks\x2C\n  }\x2C\n  clearMeasures: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMeasures\x2C\n  }\x2C\n  eventLoopUtilization: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: eventLoopUtilization\x2C\n  }\x2C\n  getEntries: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntries\x2C\n  }\x2C\n  getEntriesByName: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByName\x2C\n  }\x2C\n  getEntriesByType: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByType\x2C\n  }\x2C\n  mark: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: mark\x2C\n  }\x2C\n  measure: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: measure\x2C\n  }\x2C\n  nodeTiming: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: nodeTiming\x2C\n  }\x2C\n  now: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: now\x2C\n  }\x2C\n  timerify: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: timerify\x2C\n  }\x2C\n  // This would be updated during pre-execution in case\n  // the process is launched from a snapshot.\n  // TODO(joyeecheung): we may want to warn about access to\n  // this during snapshot building.\n  timeOrigin: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  }\x2C\n  toJSON: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: toJSON\x2C\n  }\n});\n\nfunction refreshTimeOrigin() {\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  });\n}\n\nmodule.exports = {\n  InternalPerformance\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0x3a1583d0cce6,69,3755,3912,C0O3762C7O3783C10O3795C25O3879C28O3879C35O3762C41O3911,,
code-creation,LazyCompile,10,18333,0x3a1583d0d406,19,refreshTimeOrigin node:internal/perf/utils:25:27,0xe898a5fa668,~
script-source,41,node:internal/perf/utils,'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones\x2C\n  getTimeOrigin\x2C\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0x3a1583d0d406,41,525,563,C0O532C5O545C11O543C18O562,,
code-creation,LazyCompile,10,18375,0x3a1583d0d686,62,setupInspectorHooks node:internal/bootstrap/pre_execution:232:29,0x311ed227dc20,~
code-source-info,0x3a1583d0d686,91,7162,7715,C0O7505C6O7509C11O7534C17O7599C23O7599C28O7569C33O7583C38O7645C44O7645C49O7673C54O7674C61O7714,,
code-creation,Eval,10,18416,0x3a1583d0da46,5, node:internal/inspector_async_hook:1:1,0x3a1583d0d880,~
script-source,93,node:internal/inspector_async_hook,'use strict';\n\nlet hook;\nlet config;\n\nconst {\n  SafeSet\x2C\n} = primordials;\n\nfunction lazyHookCreation() {\n  const inspector = internalBinding('inspector');\n  const { createHook } = require('async_hooks');\n  config = internalBinding('config');\n\n  hook = createHook({\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\n    // therefore we mark all tasks as recurring. Based on the discussion\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\n    // this should be fine as long as we call asyncTaskCanceled() too.\n      const recurring = true;\n      if (type === 'PROMISE')\n        this.promiseIds.add(asyncId);\n      else\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\n    }\x2C\n\n    before(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskStarted(asyncId);\n    }\x2C\n\n    after(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskFinished(asyncId);\n    }\x2C\n\n    destroy(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return this.promiseIds.delete(asyncId);\n      inspector.asyncTaskCanceled(asyncId);\n    }\x2C\n  });\n\n  hook.promiseIds = new SafeSet();\n}\n\nfunction enable() {\n  if (hook === undefined) lazyHookCreation();\n  if (config.bits < 64) {\n    // V8 Inspector stores task ids as (void*) pointers.\n    // async_hooks store ids as 64bit numbers.\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\n    // ids on 32bit platforms.\n    process.emitWarning(\n      'Warning: Async stack traces in debugger are not available ' +\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\n      {\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\n      });\n  } else {\n    hook.enable();\n  }\n}\n\nfunction disable() {\n  if (hook === undefined) lazyHookCreation();\n  hook.disable();\n}\n\nmodule.exports = {\n  enable\x2C\n  disable\n};\n
code-source-info,0x3a1583d0da46,93,0,1972,C0O0C4O1972,,
code-creation,Function,10,18500,0x3a1583d0dc76,79, node:internal/inspector_async_hook:1:1,0x3a1583d0d9b0,~
code-source-info,0x3a1583d0dc76,93,0,1972,C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971,,
code-creation,LazyCompile,10,18541,0x3a1583d0e17e,69,setupWarningHandler node:internal/bootstrap/pre_execution:141:29,0x311ed227d928,~
code-source-info,0x3a1583d0e17e,91,4547,4744,C0O4582C6O4582C11O4566C16O4621C24O4625C33O4669C38O4673C45O4690C50O4705C53O4713C61O4713C68O4743,,
code-creation,LazyCompile,10,18625,0x3a1583d0e2ee,20,addListener node:events:490:58,0x1910fc7f2d90,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\n\nlet spliceOne;\n\nconst {\n  AbortError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNHANDLED_ERROR\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  inspect\n} = require('internal/util/inspect');\n\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @returns {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\n                                 'a non-negative number'\x2C\n                                 arg);\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = ObjectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catcheable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\n// Returns the length and line number of the first sequence of `a` that fully\n// appears in `b` with a length of at least 4.\nfunction identicalSequenceRange(a\x2C b) {\n  for (let i = 0; i < a.length - 3; i++) {\n    // Find the first entry of b that matches the current entry of a.\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\n    if (pos !== -1) {\n      const rest = b.length - pos;\n      if (rest > 3) {\n        let len = 1;\n        const maxLen = MathMin(a.length - i\x2C rest);\n        // Count the number of consecutive entries.\n        while (maxLen > len && a[i + len] === b[pos + len]) {\n          len++;\n        }\n        if (len > 3) {\n          return [len\x2C i];\n        }\n      }\n    }\n  }\n\n  return [0\x2C 0];\n}\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {}\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError = (doError && events.error === undefined);\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\n        });\n      } catch {}\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    const { inspect } = require('internal/util/inspect');\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = ObjectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\n                          `${existing.length} ${String(type)} listeners ` +\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\n                          'emitter.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      const list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = ObjectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          if (spliceOne === undefined)\n            spliceOne = require('internal/util').spliceOne;\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = ObjectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = ObjectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = ObjectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  const events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  const evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {number}\n */\nfunction listenerCount(type) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = {}) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError();\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError());\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters\x2C we do not listen to `error` events here.\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError();\n\n  const unconsumedEvents = [];\n  const unconsumedPromises = [];\n  let error = null;\n  let finished = false;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      const value = unconsumedEvents.shift();\n      if (value) {\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) {\n        return PromiseResolve(createIterResult(undefined\x2C true));\n      }\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n\n      if (signal) {\n        eventTargetAgnosticRemoveListener(\n          signal\x2C\n          'abort'\x2C\n          abortListener\x2C\n          { once: true });\n      }\n\n      finished = true;\n\n      for (const promise of unconsumedPromises) {\n        promise.resolve(createIterResult(undefined\x2C true));\n      }\n\n      return PromiseResolve(createIterResult(undefined\x2C true));\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      error = err;\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n    }\x2C\n\n    [SymbolAsyncIterator]() {\n      return this;\n    }\n  }\x2C AsyncIteratorPrototype);\n\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    emitter.on('error'\x2C errorHandler);\n  }\n\n  if (signal) {\n    eventTargetAgnosticAddListener(\n      signal\x2C\n      'abort'\x2C\n      abortListener\x2C\n      { once: true });\n  }\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError());\n  }\n\n  function eventHandler(...args) {\n    const promise = ArrayPrototypeShift(unconsumedPromises);\n    if (promise) {\n      promise.resolve(createIterResult(args\x2C false));\n    } else {\n      unconsumedEvents.push(args);\n    }\n  }\n\n  function errorHandler(err) {\n    finished = true;\n\n    const toError = ArrayPrototypeShift(unconsumedPromises);\n\n    if (toError) {\n      toError.reject(err);\n    } else {\n      // The next time we call next()\n      error = err;\n    }\n\n    iterator.return();\n  }\n}\n
code-source-info,0x3a1583d0e2ee,13,14253,14325,C0O14274C14O14281C19O14323,,
tick,0x1a375c16c,19708,0,0x0,3,0x0,0x3a1583d0e1bb,0x3a1583d01d4c,0x311ed227b955
code-creation,LazyCompile,10,19708,0x3a1583d1057e,387,_addListener node:events:422:22,0x1910fc7f2cf0,~
code-source-info,0x3a1583d1057e
code-creation,LazyCompile,10,19750,0x3a1583d108c6,15,checkListener node:events:130:23,0x1910fc7f2650,~
code-source-info,0x3a1583d108c6,13,3673,3729,C0O3688C8O3688C14O3728,,
code-creation,LazyCompile,10,19750,0x3a1583d109c6,30, node:internal/validators:226:42,0x30d75b9a1c0,~
code-source-info,0x3a1583d109c6,17,6853,6969,C0O6874C6O6911C22O6917C27O6911C29O6968,,
code-creation,LazyCompile,10,19833,0x3a1583d10c66,401,emit node:events:343:44,0x1910fc7f2c30,~
code-source-info,0x3a1583d10c
code-creation,LazyCompile,10,19875,0x3a1583d11036,172,startListeningIfSignal node:internal/process/signal:22:32,0x23e292d0be98,~
script-source,88,node:internal/process/signal,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n} = require('internal/errors');\n\nconst { signals } = internalBinding('constants').os;\n\nlet Signal;\nconst signalWraps = new SafeMap();\n\nfunction isSignal(event) {\n  return typeof event === 'string' && signals[event] !== undefined;\n}\n\n// Detect presence of a listener for the special signal types\nfunction startListeningIfSignal(type) {\n  if (isSignal(type) && !signalWraps.has(type)) {\n    if (Signal === undefined)\n      Signal = internalBinding('signal_wrap').Signal;\n    const wrap = new Signal();\n\n    wrap.unref();\n\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\n\n    const signum = signals[type];\n    const err = wrap.start(signum);\n    if (err) {\n      wrap.close();\n      throw errnoException(err\x2C 'uv_signal_start');\n    }\n\n    signalWraps.set(type\x2C wrap);\n  }\n}\n\nfunction stopListeningIfSignal(type) {\n  const wrap = signalWraps.get(type);\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\n    wrap.close();\n    signalWraps.delete(type);\n  }\n}\n\nmodule.exports = {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n};\n
code-source-info,0x3a1583d11036,88,429,904,C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C148O819C153O813C154O870C159O882C164O882C171O903,,
code-creation,LazyCompile,10,19958,0x3a1583d11406,19,isSignal node:internal/process/signal:17:18,0x23e292d0bce0,~
code-source-info,0x3a1583d11406,88,255,334,C0O267C8O303C13O310C17O318C18O332,,
code-creation,LazyCompile,10,19958,0x3a1583d115b6,75,setupDebugEnv node:internal/bootstrap/pre_execution:193:23,0x311ed227da90,~
code-source-info,0x3a1583d115b6,91,6010,6220,C0O6017C6O6017C11O6050C19O6078C24O6082C29O6051C34O6097C42O6101C48O6145C54O6145C59O6182C64O6195C69O6196C74O6219,,
code-creation,LazyCompile,10,20000,0x3a1583d1195e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xe898a5f9a10,~
script-source,40,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = ObjectCreate(null);\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 0: return debug();\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 0: return debug();\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\n};\n
code-source-info,0x3a1583d1195e,40,546,991,C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990,,
code-creation,LazyCompile,10,20166,0x3a1583d1205e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40,0x311ed227d9c8,~
code-source-info,0x3a1583d1205e,91,5574,5760,C0O5581C8O5586C14O5626C15O5633C16O5667C22O5667C27O5648C32O5717C38O5750C43O5750C48O5759,,
code-creation,LazyCompile,10,20166,0x3a1583d122de,62,initializeReport node:internal/bootstrap/pre_execution:182:26,0x311ed227da18,~
code-source-info,0x3a1583d122de,91,5787,5986,C0O5787C8O5813C16O5813C21O5802C27O5851C42O5872C47O5944C55O5851C61O5985,,
code-creation,Eval,10,20250,0x3a1583d1286e,5, node:internal/process/report:1:1,0x3a1583d12658,~
script-source,94,node:internal/process/report,'use strict';\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_SYNTHETIC\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateSignalName\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst nr = internalBinding('report');\nconst {\n  JSONParse\x2C\n} = primordials;\nconst report = {\n  writeReport(file\x2C err) {\n    if (typeof file === 'object' && file !== null) {\n      err = file;\n      file = undefined;\n    } else if (file !== undefined && typeof file !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\n    } else if (err === undefined) {\n      err = new ERR_SYNTHETIC();\n    } else {\n      validateObject(err\x2C 'err');\n    }\n\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\n  }\x2C\n  getReport(err) {\n    if (err === undefined)\n      err = new ERR_SYNTHETIC();\n    else\n      validateObject(err\x2C 'err');\n\n    return JSONParse(nr.getReport(err));\n  }\x2C\n  get directory() {\n    return nr.getDirectory();\n  }\x2C\n  set directory(dir) {\n    validateString(dir\x2C 'directory');\n    nr.setDirectory(dir);\n  }\x2C\n  get filename() {\n    return nr.getFilename();\n  }\x2C\n  set filename(name) {\n    validateString(name\x2C 'filename');\n    nr.setFilename(name);\n  }\x2C\n  get compact() {\n    return nr.getCompact();\n  }\x2C\n  set compact(b) {\n    validateBoolean(b\x2C 'compact');\n    nr.setCompact(b);\n  }\x2C\n  get signal() {\n    return nr.getSignal();\n  }\x2C\n  set signal(sig) {\n    validateSignalName(sig\x2C 'signal');\n    removeSignalHandler();\n    addSignalHandler(sig);\n    nr.setSignal(sig);\n  }\x2C\n  get reportOnFatalError() {\n    return nr.shouldReportOnFatalError();\n  }\x2C\n  set reportOnFatalError(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnFatalError(trigger);\n  }\x2C\n  get reportOnSignal() {\n    return nr.shouldReportOnSignal();\n  }\x2C\n  set reportOnSignal(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnSignal(trigger);\n    removeSignalHandler();\n    addSignalHandler();\n  }\x2C\n  get reportOnUncaughtException() {\n    return nr.shouldReportOnUncaughtException();\n  }\x2C\n  set reportOnUncaughtException(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnUncaughtException(trigger);\n  }\n};\n\nfunction addSignalHandler(sig) {\n  if (nr.shouldReportOnSignal()) {\n    if (typeof sig !== 'string')\n      sig = nr.getSignal();\n\n    process.on(sig\x2C signalHandler);\n  }\n}\n\nfunction removeSignalHandler() {\n  const sig = nr.getSignal();\n\n  if (sig)\n    process.removeListener(sig\x2C signalHandler);\n}\n\nfunction signalHandler(sig) {\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\n}\n\nmodule.exports = {\n  addSignalHandler\x2C\n  report\n};\n
code-source-info,0x3a1583d1286e,94,0,2623,C0O0C4O2623,,
code-creation,Function,10,20375,0x3a1583d13396,315, node:internal/process/report:1:1,0x3a1583d127d8,~
code-source-info,0x3a1583d13396,94,0,2623,C0O0C51O66C54O66C59O92C64O24C70O48C76O189C79O189C84O110C90O129C96O147C102O169C108O232C111O232C115O232C117O269C123O312C128O316C136O756C290O2572C297O2593C303O2613C309O2587C314O2622,,
code-creation,LazyCompile,10,20458,0x3a1583d15066,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40,0x311ed227dae0,~
code-source-info,0x3a1583d15066,91,6321,6417,C0O6357C6O6357C11O6336C16O6396C20O6416,,
code-creation,LazyCompile,10,20500,0x3a1583d151be,57,addSignalHandler node:internal/process/report:97:26,0x3a1583d128a0,~
code-source-info,0x3a1583d151be,94,2222,2368,C0O2232C5O2239C10O2239C16O2269C22O2304C27O2313C32O2313C38O2331C41O2339C49O2339C56O2367,,
code-creation,LazyCompile,10,20500,0x3a1583d1578e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46,0x311ed227db30,~
code-source-info,0x3a1583d1578e,91,6464,6726,C0O6464C8O6486C18O6486C23O6530C25O6547C26O6554C27O6558C35O6558C40O6588C45O6589C50O6649C58O6649C63O6627C69O6667C74O6675C79O6678C84O6675C91O6725,,
code-creation,LazyCompile,10,20541,0x3a1583d15a2e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37,0x311ed227dd00,~
code-source-info,0x3a1583d15a2e,91,10478,11007,C0O10485C3O10497C8O10501C14O10539C20O10539C25O10583C33O10606C38O10610C46O10583C52O10636C53O10646C57O10636C61O10727C64O10742C73O10800C76O10808C81O10812C90O10859C93O10874C102O10916C108O10916C113O10940C118O10941C124O10980C127O10995C132O10980C137O11006,,
code-creation,LazyCompile,10,20583,0x3a1583d15e36,455,initializePolicy node:internal/bootstrap/pre_execution:365:26,0x311ed227dda0,~
code-source-info,0x3a1583d15e
tick,0x100ff5574,20625,0,0x0,3,0x0,0x3a1583d01da4,0x311ed227b955
code-creation,LazyCompile,10,20625,0x3a1583d16236,63,initializeClusterIPC node:internal/bootstrap/pre_execution:356:30,0x311ed227dd50,~
code-source-info,0x3a1583d16236,91,11038,11279,C0O11045C3O11057C10O11061C18O11076C23O11080C29O11118C35O11118C40O11150C45O11150C49O11239C52O11254C62O11278,,
code-creation,LazyCompile,10,20666,0x3a1583d163b6,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:458:38,0x311ed227dee0,~
code-source-info,0x3a1583d163b6,91,14759,14908,C0O14803C6O14803C11O14774C16O14854C21O14883C26O14907,,
code-creation,Eval,10,20791,0x3a1583d16d46,5, node:internal/source_map/source_map_cache:1:1,0x3a1583d169d0,~
script-source,95,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nfunction ObjectGetValueSafe(obj\x2C key) {\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\n}\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\nconst fs = require('fs');\nconst { getOptionValue } = require('internal/options');\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\nconst {\n  normalizeReferrerURL\x2C\n} = require('internal/modules/cjs/helpers');\nconst { validateBoolean } = require('internal/validators');\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst cjsSourceMapCache = new IterableWeakMap();\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\nlet SourceMap;\n\nlet sourceMapsEnabled;\nfunction getSourceMapsEnabled() {\n  if (sourceMapsEnabled === undefined) {\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n  }\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  const {\n    setSourceMapsEnabled\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  setSourceMapsEnabled(val);\n  if (val) {\n    const {\n      prepareStackTrace\n    } = require('internal/source_map/prepare_stack_trace');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      prepareStackTrace\x2C\n    } = require('internal/errors');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an [eval]-wrapper\x2C which is currently not\n    // supported.\n    debug(err.stack);\n    return;\n  }\n  const match = StringPrototypeMatch(\n    content\x2C\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\n  );\n  if (match) {\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\n    const url = data ? null : match.groups.sourceMappingURL;\n    if (cjsModuleInstance) {\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\n        filename\x2C\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    } else {\n      // If there is no cjsModuleInstance assume we are in a\n      // "modules/esm" context.\n      esmSourceMapCache.set(filename\x2C {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    }\n  }\n}\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err.stack);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\n  // account in coverage calculations.\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\n    return line.length;\n  });\n}\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err.stack);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err.stack);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = ObjectCreate(null);\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of cjsSourceMapCache) {\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\n      url: ObjectGetValueSafe(value\x2C 'url')\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let sourceMap = esmSourceMapCache.get(sourceURL);\n  if (sourceMap === undefined) {\n    for (const value of cjsSourceMapCache) {\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\n      if (sourceURL === filename) {\n        sourceMap = {\n          data: ObjectGetValueSafe(value\x2C 'data')\n        };\n      }\n    }\n  }\n  if (sourceMap && sourceMap.data) {\n    return new SourceMap(sourceMap.data);\n  }\n  return undefined;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x3a1583d16d46,95,0,7654,C0O0C4O7654,,
code-creation,Function,10,21083,0x3a1583d173ce,435, node:internal/source_map/source_map_cache:1:1,0x3a1583d16cb0,~
code-source-info,0x3a1583d173ce,95,0,7654,C0O0C152O25C158O46C164O59C170O75C176O89C182O123C188O156C194O179C199O190C205O214C211O526C217O526C222O515C228O557C234O557C239O590C252O591C258O557C260O653C266O653C270O653C272O695C278O695C283O676C289O752C295O752C300O732C305O832C311O832C316O806C322O901C328O901C333O881C339O1137C341O1137C346O1137C348O1264C350O1264C355O1264C357O1325C363O1325C368O1287C374O1302C380O1317C386O1354C387O1354C389O1370C390O1370C392O7518C399O7539C405O7556C411O7580C417O7604C423O7627C429O7533C434O7653,,
code-creation,LazyCompile,10,21166,0x3a1583d181c6,82,debuglog node:internal/util/debuglog:71:18,0xe898a5f9d48,~
code-source-info,0x3a1583d181c6,40,2232,3279,C0O2232C28O2357C32O2357C34O2789C35O2789C37O2811C41O2811C43O2899C48O3128C58O3149C63O3174C74O3128C79O3263C81O3277,,
code-creation,Eval,10,21250,0x3a1583d18756,5, node:internal/util/iterable_weak_map:1:1,0x3a1583d184f8,~
script-source,96,node:internal/util/iterable_weak_map,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SymbolIterator\x2C\n} = primordials;\n\n// This class is modified from the example code in the WeakRefs specification:\n// https://github.com/tc39/proposal-weakrefs\n// Licensed under ECMA's MIT-style license\x2C see:\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\nclass IterableWeakMap {\n  #weakMap = new SafeWeakMap();\n  #refSet = new SafeSet();\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\n\n  set(key\x2C value) {\n    const entry = this.#weakMap.get(key);\n    if (entry) {\n      // If there's already an entry for the object represented by "key"\x2C\n      // the value can be updated without creating a new WeakRef:\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\n    } else {\n      const ref = new SafeWeakRef(key);\n      this.#weakMap.set(key\x2C { value\x2C ref });\n      this.#refSet.add(ref);\n      this.#finalizationGroup.register(key\x2C {\n        set: this.#refSet\x2C\n        ref\n      }\x2C ref);\n    }\n  }\n\n  get(key) {\n    return this.#weakMap.get(key)?.value;\n  }\n\n  has(key) {\n    return this.#weakMap.has(key);\n  }\n\n  delete(key) {\n    const entry = this.#weakMap.get(key);\n    if (!entry) {\n      return false;\n    }\n    this.#weakMap.delete(key);\n    this.#refSet.delete(entry.ref);\n    this.#finalizationGroup.unregister(entry.ref);\n    return true;\n  }\n\n  [SymbolIterator]() {\n    const iterator = this.#refSet[SymbolIterator]();\n\n    const next = () => {\n      const result = iterator.next();\n      if (result.done) return result;\n      const key = result.value.deref();\n      if (key == null) return next();\n      const { value } = this.#weakMap.get(key);\n      return { done: false\x2C value };\n    };\n\n    return {\n      [SymbolIterator]() { return this; }\x2C\n      next\x2C\n    };\n  }\n}\n\nfunction cleanup({ set\x2C ref }) {\n  set.delete(ref);\n}\n\nObjectFreeze(IterableWeakMap.prototype);\n\nmodule.exports = {\n  IterableWeakMap\x2C\n};\n
code-source-info,0x3a1583d18756,96,0,1958,C0O0C4O1958,,
code-creation,Function,10,21333,0x3a1583d18ec6,196, node:internal/util/iterable_weak_map:1:1,0x3a1583d186c0,~
code-source-info,0x3a1583d18ec6,96,0,1958,C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957,,
code-creation,Function,10,21333,0x3a1583d19056,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x3a1583d189e0,~
code-source-info,0x3a1583d19056,96,399,516,C3O410C10O410C27O441C34O441C48O479C62O479C74O516,,
code-creation,Eval,10,21458,0x3a1583d19c76,5, node:internal/modules/cjs/helpers:1:1,0x3a1583d199b0,~
script-source,97,node:internal/modules/cjs/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\n} = require('internal/errors').codes;\nconst { NativeModule } = require('internal/bootstrap/loaders');\n\nconst { validateString } = require('internal/validators');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst userConditions = getOptionValue('--conditions');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet(['require'\x2C 'node'\x2C ...userConditions]);\n\nfunction loadNativeModule(filename\x2C request) {\n  const mod = NativeModule.map.get(filename);\n  if (mod?.canBeRequiredByUsers) {\n    debug('load native module %s'\x2C request);\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\n    mod.compileForPublicLoader();\n    return mod;\n  }\n}\n\n// Invoke with makeRequireFunction(module) where |module| is the Module object\n// to use as the context for the require() function.\n// Use redirects to set up a mapping from a policy and restrict dependencies\nconst urlToFileCache = new SafeMap();\nfunction makeRequireFunction(mod\x2C redirects) {\n  const Module = mod.constructor;\n\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = cjsConditions;\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        if (destination.protocol === 'node:') {\n          const specifier = destination.pathname;\n          const mod = loadNativeModule(specifier\x2C href);\n          if (mod && mod.canBeRequiredByUsers) {\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (destination.protocol === 'file:') {\n          let filepath;\n          if (urlToFileCache.has(href)) {\n            filepath = urlToFileCache.get(href);\n          } else {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod.require(filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\n        ));\n      }\n      return mod.require(specifier);\n    };\n  } else {\n    require = function require(path) {\n      return mod.require(path);\n    };\n  }\n\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  require.main = process.mainModule;\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\nfunction addBuiltinLibsToObject(object) {\n  // Make built-in modules available directly (loaded lazily).\n  const { builtinModules } = require('internal/modules/cjs/loader').Module;\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      get: () => {\n        const lib = require(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object\x2C name\x2C {\n          get: () => lib\x2C\n          set: setReal\x2C\n          configurable: true\x2C\n          enumerable: false\n        });\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\n    });\n  });\n}\n\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\n// For error messages only - used to check if ESM syntax is in use.\nfunction hasEsmSyntax(code) {\n  debug('Checking for ESM syntax');\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n  let root;\n  try {\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\n  } catch {\n    return false;\n  }\n\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\n    stmt.type === 'ExportDefaultDeclaration' ||\n    stmt.type === 'ExportNamedDeclaration' ||\n    stmt.type === 'ImportDeclaration' ||\n    stmt.type === 'ExportAllDeclaration');\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n};\n
code-source-info,0x3a1583d19c76,97,0,6319,C0O0C4O6319,,
code-creation,Function,10,21708,0x3a1583d1a1c6,462, node:internal/modules/cjs/helpers:1:1,0x3a1583d19be0,~
code-source-info,0x3a1583d1a1c6,97,0,6319,C0O0C104O25C110O50C116O72C122O94C128O118C134O151C139O162C144O173C150O202C156O229C162O253C168O373C174O373C179O399C184O307C190O342C196O432C202O432C207O415C213O499C219O499C224O480C230O544C236O544C240O544C242O607C248O607C253O569C259O584C265O599C271O660C277O660C282O641C287O712C290O712C295O757C301O757C306O790C319O791C325O757C327O935C334O970C335O970C391O935C396O935C398O1528C400O1528C405O1528C407O6159C414O6180C420O6206C426O6223C432O6239C438O6259C444O6282C450O6306C456O6174C461O6318,,
code-creation,LazyCompile,10,21791,0x3a1583d1ad16,27,SafeSet node:internal/per_context/primordials:364:16,0x1910fc7c9f90,~
script-source,6,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    value: uncurryThis(get)\x2C\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      value: uncurryThis(set)\x2C\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n// Because these functions are used by `makeSafe`\x2C which is exposed\n// on the `primordials` object\x2C it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\n);\n\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x3a1583d1ad16,6,10527,10544,C3O10533C7O10539C11O10533C26O10543,,
code-creation,LazyCompile,10,22291,0x3a1583d1bb66,27,SafeMap node:internal/per_context/primordials:351:16,0x1910fc7c9e08,~
code-source-info,0x3a1583d1bb66,6,10200,10217,C3O10206C7O10212C11O10206C26O10216,,
tick,0x1016e6084,22291,0,0x0,3,0x0,0x3a1583d1a34d,0x311ed227c90d,0x311ed227bbdd,0x3a1583d17505,0x311ed227c90d,0x311ed227bbdd,0x3a1583d163bc,0x3a1583d01db0,0x311ed227b955
code-creation,LazyCompile,10,22333,0x3a1583d1bcee,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x3a1583d187d8,~
code-source-info,0x3a1583d1bcee,96,373,373,C0O373C15O373,,
code-creation,LazyCompile,10,22333,0x3a1583d1c086,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x1910fc7c9ec8,~
code-source-info,0x3a1583d1c086,6,10371,10388,C3O10377C7O10383C11O10377C26O10387,,
code-creation,LazyCompile,10,22333,0x3a1583d1c19e,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x1910fc7ca118,~
code-source-info,0x3a1583d1c19e,6,10977,11022,C3O10997C7O11003C11O10997C26O11021,,
code-creation,LazyCompile,10,22416,0x3a1583d1c986,492,initializeDeprecations node:internal/bootstrap/pre_execution:250:32,0x311ed227dc70,~
code-source-info,0x3a1583d1c
code-creation,LazyCompile,10,22458,0x3a1583d1cfc6,53,initializeWASI node:internal/bootstrap/pre_execution:414:24,0x311ed227ddf0,~
code-source-info,0x3a1583d1cfc6,91,13129,13335,C0O13161C6O13161C11O13144C16O13227C21O13231C29O13231C35O13246C37O13277C43O13277C47O13271C52O13334,,
code-creation,LazyCompile,10,22500,0x3a1583d1d19e,51,initializeCJSLoader node:internal/bootstrap/pre_execution:421:29,0x311ed227de40,~
code-source-info,0x3a1583d1d19e,91,13365,13623,C0O13390C6O13390C11O13442C16O13449C21O13449C25O13541C36O13562C41O13598C45O13556C50O13622,,
code-creation,Eval,10,23041,0x3a1583d1f156,5, node:internal/modules/cjs/loader:1:1,0x3a1583d1e860,~
script-source,98,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\n};\n\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\nconst { deprecate } = require('internal/util');\nconst vm = require('vm');\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = internalBinding('fs');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst { getOptionValue } = require('internal/options');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\n} = require('internal/constants');\n\nconst {\n  isProxy\n} = require('internal/util/types');\n\nconst asyncESM = require('internal/process/esm_loader');\nconst { enrichCJSError } = require('internal/modules/esm/translators');\nconst { kEvaluated } = internalBinding('module_wrap');\nconst {\n  encodedSepRegEx\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n} = require('internal/modules/esm/resolve');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = ObjectCreate(null);\n\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\n    ArrayPrototypePush(children\x2C child);\n}\n\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  this.exports = {};\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\nconst builtinModules = [];\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\n  if (mod.canBeRequiredByUsers) {\n    ArrayPrototypePush(builtinModules\x2C id);\n  }\n}\n\nObjectFreeze(builtinModules);\nModule.builtinModules = builtinModules;\n\nModule._cache = ObjectCreate(null);\nModule._pathCache = ObjectCreate(null);\nModule._extensions = ObjectCreate(null);\nlet modulePaths = [];\nModule.globalPaths = [];\n\nlet patched = false;\n\n// eslint-disable-next-line func-style\nlet wrap = function(script) {\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  get: pendingDeprecation ? deprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : getModuleParent\x2C\n  set: pendingDeprecation ? deprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : setModuleParent\x2C\n});\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath\x2C false);\n    return false;\n  }\n\n  try {\n    const parsed = JSONParse(json);\n    const filtered = {\n      name: parsed.name\x2C\n      main: parsed.main\x2C\n      exports: parsed.exports\x2C\n      imports: parsed.imports\x2C\n      type: parsed.type\n    };\n    packageJsonCache.set(jsonPath\x2C filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\n      return false;\n    const pjson = readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson\x2C\n      path: checkPath\x2C\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = readPackage(requestPath)?.main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls\x2C\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false\x2C\n// keep symlinks intact\x2C otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path\x2C check if the file exists with any of the set extensions\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) return currentExtension;\n  }\n  return '.js';\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) return false;\n\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = readPackage(pkgPath);\n  if (pkg?.exports != null) {\n    try {\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry)\n    return entry;\n\n  let exts;\n  let trailingSlash = request.length > 0 &&\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\n    CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (preserveSymlinks) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (preserveSymlinksMain) {\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the preserveSymlinksMain option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n\n  return false;\n};\n\n// 'node_modules' character codes reversed\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\n      return [from + 'node_modules'];\n\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/')\n      return ['/node_modules'];\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (NativeModule.canBeRequiredByUsers(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    let paths = modulePaths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\n\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n// Check the cache for the requested file.\n// 1. If a module already exists in the cache: return its exports object.\n// 2. If the module is native: call\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\n//    Then have it load  the file contents before returning its exports\n//    object.\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded)\n          return getExportsForCircularRequire(cachedModule);\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(filename\x2C 5);\n\n    const module = loadNativeModule(id\x2C request);\n    if (!module?.canBeRequiredByUsers) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\n    }\n\n    return module.exports;\n  }\n\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded)\n        return getExportsForCircularRequire(cachedModule);\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  const mod = loadNativeModule(filename\x2C request);\n  if (mod?.canBeRequiredByUsers) return mod.exports;\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    process.mainModule = module;\n    module.id = '.';\n  }\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\n      NativeModule.canBeRequiredByUsers(request)) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (parent?.filename) {\n    if (request[0] === '#') {\n      const pkg = readPackageScope(parent.filename) || {};\n      if (pkg.data?.imports != null) {\n        try {\n          return finalizeEsmResolution(\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\n            pkg.path);\n        } catch (e) {\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\n            throw createEsmNotFoundErr(request);\n          throw e;\n        }\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\n  const { resolved\x2C exact } = match;\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  const filename = fileURLToPath(resolved);\n  let actual = tryFile(filename);\n  if (!exact && !actual) {\n    const exts = ObjectKeys(Module._extensions);\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\n      tryPackage(filename\x2C exts\x2C false\x2C request);\n  }\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n// Given a file name\x2C pass it to the proper extension handler.\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  const ESMLoader = asyncESM.ESMLoader;\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache\n  if ((module?.module === undefined ||\n       module.module.getStatus() < kEvaluated) &&\n      !ESMLoader.cjsCache.has(this))\n    ESMLoader.cjsCache.set(this\x2C exports);\n};\n\n\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n\n// Resolved path to process.argv[1] will be lazily placed here\n// (needed for setting breakpoint when called with --inspect-brk)\nlet resolvedArgv;\nlet hasPausedEntry = false;\n\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  if (patched) {\n    const wrapper = Module.wrap(content);\n    return vm.runInThisContext(wrapper\x2C {\n      filename\x2C\n      lineOffset: 0\x2C\n      displayErrors: true\x2C\n      importModuleDynamically: async (specifier) => {\n        const loader = asyncESM.ESMLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\n      }\x2C\n    });\n  }\n  try {\n    return vm.compileFunction(content\x2C [\n      'exports'\x2C\n      'require'\x2C\n      'module'\x2C\n      '__filename'\x2C\n      '__dirname'\x2C\n    ]\x2C {\n      filename\x2C\n      importModuleDynamically(specifier) {\n        const loader = asyncESM.ESMLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\n      }\x2C\n    });\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance)\n      enrichCJSError(err\x2C content);\n    throw err;\n  }\n}\n\n// Run the file contents in the correct scope or sandbox. Expose\n// the correct helper variables (require\x2C module\x2C exports) to\n// the file.\n// Returns exception\x2C if any.\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  if (policy?.manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  maybeCacheSourceMap(filename\x2C content\x2C this);\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) statCache = new SafeMap();\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) statCache = null;\n  return result;\n};\n\n// Native extension for .js\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = readPackageScope(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data?.type === 'module') {\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = hasEsmSyntax(content);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {}\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n\n// Native extension for .json\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  if (policy?.manifest) {\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    module.exports = JSONParse(stripBOM(content));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n\n// Native extension for .node\nModule._extensions['.node'] = function(module\x2C filename) {\n  if (policy?.manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURLInstance(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests))\n    return;\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++)\n    parent.require(requests[n]);\n  isPreloading = false;\n};\n\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of NativeModule.map.values()) {\n    if (mod.canBeRequiredByUsers) {\n      mod.syncExports();\n    }\n  }\n};\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x3a1583d1f156,98,0,40182,C0O0C4O40182,,
code-creation,Function,10,24541,0x3a1583d20ef6,2547, node:internal/modules/cjs/loader:1:1,0x3a1583d1f0c0,~
code-source-info,0x3a1583d20ef
tick,0x1a36c6a58,24666,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
tick,0x10100ae20,24666,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,24750,0x3a1583d24f76,5, node:internal/modules/package_json_reader:1:1,0x3a1583d24dc0,~
script-source,99,node:internal/modules/package_json_reader,'use strict';\n\nconst { SafeMap } = primordials;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n *\n * @param {string} jsonPath\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string\x2C containsKeys };\n  const { getOptionValue } = require('internal/options');\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\nmodule.exports = { read };\n
code-source-info,0x3a1583d24f76,99,0,983,C0O0C4O983,,
code-creation,Function,10,24833,0x3a1583d250d6,113, node:internal/modules/package_json_reader:1:1,0x3a1583d24ee0,~
code-source-info,0x3a1583d250d6,99,0,983,C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982,,
code-creation,Eval,10,24916,0x3a1583d25886,5, node:internal/process/esm_loader:1:1,0x3a1583d25680,~
script-source,100,node:internal/process/esm_loader,'use strict';\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n} = require('internal/errors').codes;\nconst { Loader } = require('internal/modules/esm/loader');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst { pathToFileURL } = require('internal/url');\nconst {\n  getModuleFromWrap\x2C\n} = require('internal/vm/module');\n\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { initializeImportMeta } = callbackMap.get(wrap);\n    if (initializeImportMeta !== undefined) {\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n};\n\nexports.importModuleDynamicallyCallback = async function(wrap\x2C specifier) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { importModuleDynamically } = callbackMap.get(wrap);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(\n        specifier\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n};\n\nlet ESMLoader = new Loader();\nexports.ESMLoader = ESMLoader;\n\nasync function initializeLoader() {\n  const { getOptionValue } = require('internal/options');\n  const userLoader = getOptionValue('--experimental-loader');\n  if (!userLoader)\n    return;\n  let cwd;\n  try {\n    cwd = process.cwd() + '/';\n  } catch {\n    cwd = 'file:///';\n  }\n  // If --experimental-loader is specified\x2C create a loader with user hooks.\n  // Otherwise create the default loader.\n  const { emitExperimentalWarning } = require('internal/util');\n  emitExperimentalWarning('--experimental-loader');\n  return (async () => {\n    const hooks =\n        await ESMLoader.import(userLoader\x2C pathToFileURL(cwd).href);\n    ESMLoader = new Loader();\n    ESMLoader.hook(hooks);\n    ESMLoader.runGlobalPreloadCode();\n    return exports.ESMLoader = ESMLoader;\n  })();\n}\n\nexports.loadESM = async function loadESM(callback) {\n  try {\n    await initializeLoader();\n    await callback(ESMLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    internalBinding('errors').triggerUncaughtException(\n      err\x2C\n      true /* fromPromise */\n    );\n  }\n};\n
code-source-info,0x3a1583d25886,100,0,2326,C0O0C4O2326,,
code-creation,Function,10,25000,0x3a1583d25b6e,189, node:internal/process/esm_loader:1:1,0x3a1583d257f0,~
code-source-info,0x3a1583d25b6e,100,0,2326,C0O0C45O69C51O69C56O95C61O25C67O122C73O122C78O111C84O213C90O213C95O172C101O278C107O278C112O260C118O336C124O336C129O313C135O368C142O403C146O704C153O744C157O1156C160O1156C165O1156C167O1170C172O1188C176O1971C183O1987C188O2325,,
code-creation,Eval,10,25125,0x3a1583d2687e,5, node:internal/modules/esm/loader:1:1,0x3a1583d26578,~
script-source,101,node:internal/modules/esm/loader,'use strict';\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nrequire('internal/modules/cjs/loader');\n\nconst {\n  FunctionPrototypeBind\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeExec\x2C\n  SafeWeakMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_RETURN_PROPERTY\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\n} = require('internal/errors').codes;\nconst { URL\x2C pathToFileURL\x2C isURLInstance } = require('internal/url');\nconst ModuleMap = require('internal/modules/esm/module_map');\nconst ModuleJob = require('internal/modules/esm/module_job');\n\nconst {\n  defaultResolve\x2C\n  DEFAULT_CONDITIONS\x2C\n} = require('internal/modules/esm/resolve');\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { defaultGetSource } = require(\n  'internal/modules/esm/get_source');\nconst { defaultTransformSource } = require(\n  'internal/modules/esm/transform_source');\nconst { translators } = require(\n  'internal/modules/esm/translators');\nconst { getOptionValue } = require('internal/options');\n\n/* A Loader instance is used as the main entry point for loading ES modules.\n * Currently\x2C this is a singleton -- there is only one used for loading\n * the main module and everything in its dependency graph. */\nclass Loader {\n  constructor() {\n    // Methods which translate input code or other information\n    // into es modules\n    this.translators = translators;\n\n    // Registry of loaded modules\x2C akin to `require.cache`\n    this.moduleMap = new ModuleMap();\n\n    // Map of already-loaded CJS modules to use\n    this.cjsCache = new SafeWeakMap();\n\n    // This hook is called before the first root module is imported. It's a\n    // function that returns a piece of code that runs as a sloppy-mode script.\n    // The script may evaluate to a function that can be called with a\n    // `getBuiltin` helper that can be used to retrieve builtins.\n    // If the hook returns `null` instead of a source string\x2C it opts out of\n    // running any preload code.\n    // The preload code runs as soon as the hook module has finished evaluating.\n    this._getGlobalPreloadCode = null;\n    // The resolver has the signature\n    //   (specifier : string\x2C parentURL : string\x2C defaultResolve)\n    //       -> Promise<{ url : string }>\n    // where defaultResolve is ModuleRequest.resolve (having the same\n    // signature itself).\n    this._resolve = defaultResolve;\n    // This hook is called after the module is resolved but before a translator\n    // is chosen to load it; the format returned by this function is the name\n    // of a translator.\n    this._getFormat = defaultGetFormat;\n    // This hook is called just before the source code of an ES module file\n    // is loaded.\n    this._getSource = defaultGetSource;\n    // This hook is called just after the source code of an ES module file\n    // is loaded\x2C but before anything is done with the string.\n    this._transformSource = defaultTransformSource;\n    // The index for assigning unique URLs to anonymous module evaluation\n    this.evalIndex = 0;\n  }\n\n  async resolve(specifier\x2C parentURL) {\n    const isMain = parentURL === undefined;\n    if (!isMain && typeof parentURL !== 'string' && !isURLInstance(parentURL))\n      throw new ERR_INVALID_ARG_TYPE('parentURL'\x2C ['string'\x2C 'URL']\x2C parentURL);\n\n    const resolveResponse = await this._resolve(\n      specifier\x2C { parentURL\x2C conditions: DEFAULT_CONDITIONS }\x2C defaultResolve);\n    if (typeof resolveResponse !== 'object') {\n      throw new ERR_INVALID_RETURN_VALUE(\n        'object'\x2C 'loader resolve'\x2C resolveResponse);\n    }\n\n    const { url } = resolveResponse;\n    if (typeof url !== 'string') {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'string'\x2C 'loader resolve'\x2C 'url'\x2C url);\n    }\n    return url;\n  }\n\n  async getFormat(url) {\n    const getFormatResponse = await this._getFormat(\n      url\x2C {}\x2C defaultGetFormat);\n    if (typeof getFormatResponse !== 'object') {\n      throw new ERR_INVALID_RETURN_VALUE(\n        'object'\x2C 'loader getFormat'\x2C getFormatResponse);\n    }\n\n    const { format } = getFormatResponse;\n    if (format === null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n        url\x2C\n      );\n      throw new ERR_INVALID_MODULE_SPECIFIER(\n        url\x2C\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : '');\n    }\n    if (typeof format !== 'string') {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'string'\x2C 'loader getFormat'\x2C 'format'\x2C format);\n    }\n\n    if (format === 'builtin') {\n      return format;\n    }\n\n    if (this._resolve !== defaultResolve) {\n      try {\n        new URL(url);\n      } catch {\n        throw new ERR_INVALID_RETURN_PROPERTY(\n          'url'\x2C 'loader resolve'\x2C 'url'\x2C url\n        );\n      }\n    }\n\n    if (this._resolve === defaultResolve &&\n      !StringPrototypeStartsWith(url\x2C 'file:') &&\n      !StringPrototypeStartsWith(url\x2C 'data:')\n    ) {\n      throw new ERR_INVALID_RETURN_PROPERTY(\n        'file: or data: url'\x2C 'loader resolve'\x2C 'url'\x2C url\n      );\n    }\n\n    return format;\n  }\n\n  async eval(\n    source\x2C\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\n  ) {\n    const evalInstance = (url) => {\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n      callbackMap.set(module\x2C {\n        importModuleDynamically: (specifier\x2C { url }) => {\n          return this.import(specifier\x2C url);\n        }\n      });\n\n      return module;\n    };\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\n    this.moduleMap.set(url\x2C job);\n    const { module } = await job.run();\n    return {\n      namespace: module.getNamespace()\x2C\n    };\n  }\n\n  async import(specifier\x2C parent) {\n    const job = await this.getModuleJob(specifier\x2C parent);\n    const { module } = await job.run();\n    return module.getNamespace();\n  }\n\n  hook(hooks) {\n    const {\n      resolve\x2C\n      dynamicInstantiate\x2C\n      getFormat\x2C\n      getSource\x2C\n      transformSource\x2C\n      getGlobalPreloadCode\x2C\n    } = hooks;\n\n    // Use .bind() to avoid giving access to the Loader instance when called.\n    if (resolve !== undefined)\n      this._resolve = FunctionPrototypeBind(resolve\x2C null);\n    if (dynamicInstantiate !== undefined) {\n      process.emitWarning(\n        'The dynamicInstantiate loader hook has been removed.');\n    }\n    if (getFormat !== undefined) {\n      this._getFormat = FunctionPrototypeBind(getFormat\x2C null);\n    }\n    if (getSource !== undefined) {\n      this._getSource = FunctionPrototypeBind(getSource\x2C null);\n    }\n    if (transformSource !== undefined) {\n      this._transformSource = FunctionPrototypeBind(transformSource\x2C null);\n    }\n    if (getGlobalPreloadCode !== undefined) {\n      this._getGlobalPreloadCode =\n        FunctionPrototypeBind(getGlobalPreloadCode\x2C null);\n    }\n  }\n\n  runGlobalPreloadCode() {\n    if (!this._getGlobalPreloadCode) {\n      return;\n    }\n    const preloadCode = this._getGlobalPreloadCode();\n    if (preloadCode === null) {\n      return;\n    }\n\n    if (typeof preloadCode !== 'string') {\n      throw new ERR_INVALID_RETURN_VALUE(\n        'string'\x2C 'loader getGlobalPreloadCode'\x2C preloadCode);\n    }\n    const { compileFunction } = require('vm');\n    const preloadInit = compileFunction(preloadCode\x2C ['getBuiltin']\x2C {\n      filename: '<preload>'\x2C\n    });\n    const { NativeModule } = require('internal/bootstrap/loaders');\n\n    preloadInit.call(globalThis\x2C (builtinName) => {\n      if (NativeModule.canBeRequiredByUsers(builtinName)) {\n        return require(builtinName);\n      }\n      throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\n    });\n  }\n\n  async getModuleJob(specifier\x2C parentURL) {\n    const url = await this.resolve(specifier\x2C parentURL);\n    const format = await this.getFormat(url);\n    let job = this.moduleMap.get(url);\n    // CommonJS will set functions for lazy job evaluation.\n    if (typeof job === 'function')\n      this.moduleMap.set(url\x2C job = job());\n    if (job !== undefined)\n      return job;\n\n    if (!translators.has(format))\n      throw new ERR_UNKNOWN_MODULE_FORMAT(format);\n\n    const loaderInstance = translators.get(format);\n\n    const inspectBrk = parentURL === undefined &&\n        format === 'module' && getOptionValue('--inspect-brk');\n    job = new ModuleJob(this\x2C url\x2C loaderInstance\x2C parentURL === undefined\x2C\n                        inspectBrk);\n    this.moduleMap.set(url\x2C job);\n    return job;\n  }\n}\n\nObjectSetPrototypeOf(Loader.prototype\x2C null);\n\nexports.Loader = Loader;\n
code-source-info,0x3a1583d2687e,101,0,8716,C0O0C4O8716,,
code-creation,Function,10,25458,0x3a1583d26ede,430, node:internal/modules/esm/loader:1:1,0x3a1583d267e8,~
code-source-info,0x3a1583d26ede,101,0,8716,C0O0C89O79C95O79C99O130C105O155C110O179C116O202C122O217C128O246C134O493C140O493C145O519C150O286C156O310C162O335C168O367C174O398C180O435C186O463C192O573C198O573C203O535C209O540C215O555C221O616C227O616C231O616C233O678C239O678C243O678C245O775C251O775C256O733C262O751C268O845C274O845C279O824C285O918C291O918C296O897C302O1000C308O1000C313O973C319O1077C325O1077C330O1061C336O1152C342O1152C347O1133C410O8672C417O8644C422O8691C424O8706C429O8715,,
code-creation,Eval,10,25541,0x3a1583d27dce,5, node:internal/modules/esm/module_map:1:1,0x3a1583d27bf0,~
script-source,102,node:internal/modules/esm/module_map,'use strict';\n\nconst ModuleJob = require('internal/modules/esm/module_job');\nconst {\n  SafeMap\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// Tracks the state of the loader-level module cache\nclass ModuleMap extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url) {\n    validateString(url\x2C 'url');\n    return super.get(url);\n  }\n  set(url\x2C job) {\n    validateString(url\x2C 'url');\n    if (job instanceof ModuleJob !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} in ModuleMap`);\n    return super.set(url\x2C job);\n  }\n  has(url) {\n    validateString(url\x2C 'url');\n    return super.has(url);\n  }\n}\nmodule.exports = ModuleMap;\n
code-source-info,0x3a1583d27dce,102,0,955,C0O0C4O955,,
code-creation,Function,10,25583,0x3a1583d281fe,149, node:internal/modules/esm/module_map:1:1,0x3a1583d27d38,~
code-source-info,0x3a1583d281fe,102,0,955,C0O0C17O33C20O33C24O33C26O87C31O125C34O125C39O158C52O159C58O125C60O236C63O236C68O262C73O211C79O297C82O297C87O278C97O407C141O927C143O942C148O954,,
tick,0x1a37298d4,25625,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d26fc1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,25708,0x3a1583d28c56,5, node:internal/modules/esm/module_job:1:1,0x3a1583d28960,~
script-source,103,node:internal/modules/esm/module_job,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSome\x2C\n  FunctionPrototype\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  PromiseResolve\x2C\n  PromisePrototypeCatch\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { ModuleWrap } = internalBinding('module_wrap');\n\nconst { decorateErrorStack } = require('internal/util');\nconst {\n  getSourceMapsEnabled\x2C\n} = require('internal/source_map/source_map_cache');\nconst assert = require('internal/assert');\nconst resolvedPromise = PromiseResolve();\n\nconst noop = FunctionPrototype;\n\nlet hasPausedEntry = false;\n\nconst CJSGlobalLike = [\n  'require'\x2C\n  'module'\x2C\n  'exports'\x2C\n  '__filename'\x2C\n  '__dirname'\x2C\n];\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\n  ArrayPrototypeSome(\n    CJSGlobalLike\x2C\n    (globalLike) => errorMessage === `${globalLike} is not defined`\n  );\n\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\n * its dependencies\x2C over time. */\nclass ModuleJob {\n  // `loader` is the Loader instance used for loading dependencies.\n  // `moduleProvider` is a function\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\n    this.loader = loader;\n    this.isMain = isMain;\n    this.inspectBrk = inspectBrk;\n\n    this.module = undefined;\n    // Expose the promise to the ModuleWrap directly for linking below.\n    // `this.module` is also filled in below.\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\n\n    // Wait for the ModuleWrap instance being linked with all dependencies.\n    const link = async () => {\n      this.module = await this.modulePromise;\n      assert(this.module instanceof ModuleWrap);\n\n      // Explicitly keeping track of dependency jobs is needed in order\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\n      // so that circular dependencies can't cause a deadlock by two of\n      // these `link` callbacks depending on each other.\n      const dependencyJobs = [];\n      const promises = this.module.link(async (specifier) => {\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\n        const job = await jobPromise;\n        return job.modulePromise;\n      });\n\n      if (promises !== undefined)\n        await PromiseAll(new SafeArrayIterator(promises));\n\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\n    };\n    // Promise for the list of all dependencyJobs.\n    this.linked = link();\n    // This promise is awaited later anyway\x2C so silence\n    // 'unhandled rejection' warnings.\n    PromisePrototypeCatch(this.linked\x2C noop);\n\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\n    // and module wrapper is instantiated.\n    this.instantiated = undefined;\n  }\n\n  instantiate() {\n    if (this.instantiated === undefined) {\n      this.instantiated = this._instantiate();\n    }\n    return this.instantiated;\n  }\n\n  async _instantiate() {\n    const jobsInGraph = new SafeSet();\n    const addJobsToDependencyGraph = async (moduleJob) => {\n      if (jobsInGraph.has(moduleJob)) {\n        return;\n      }\n      jobsInGraph.add(moduleJob);\n      const dependencyJobs = await moduleJob.linked;\n      return PromiseAll(new SafeArrayIterator(\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\n    };\n    await addJobsToDependencyGraph(this);\n\n    try {\n      if (!hasPausedEntry && this.inspectBrk) {\n        hasPausedEntry = true;\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\n        initWrapper(this.module.instantiate\x2C this.module);\n      } else {\n        this.module.instantiate();\n      }\n    } catch (e) {\n      decorateErrorStack(e);\n      // TODO(@bcoe): Add source map support to exception that occurs as result\n      // of missing named export. This is currently not possible because\n      // stack trace originates in module_job\x2C not the file itself. A hidden\n      // symbol with filename could be set in node_errors.cc to facilitate this.\n      if (!getSourceMapsEnabled() &&\n          StringPrototypeIncludes(e.message\x2C\n                                  ' does not provide an export named')) {\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\n        const parentFileUrl = StringPrototypeReplace(\n          splitStack[0]\x2C\n          /:\\d+$/\x2C\n          ''\n        );\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\n          e.message\x2C\n          /module '(.*)' does not provide an export named '(.+)'/);\n        const childFileURL =\n            await this.loader.resolve(childSpecifier\x2C parentFileUrl);\n        const format = await this.loader.getFormat(childFileURL);\n        if (format === 'commonjs') {\n          const importStatement = splitStack[1];\n          // TODO(@ctavan): The original error stack only provides the single\n          // line which causes the error. For multi-line import statements we\n          // cannot generate an equivalent object destructuring assignment by\n          // just parsing the error stack.\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\n          const destructuringAssignment = oneLineNamedImports &&\n              StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\n          e.message = `Named export '${name}' not found. The requested module` +\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\n            'always be imported via the default export\x2C for example using:' +\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\n              destructuringAssignment ?\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\n          newStack[3] = `SyntaxError: ${e.message}`;\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\n        }\n      }\n      throw e;\n    }\n\n    for (const dependencyJob of jobsInGraph) {\n      // Calling `this.module.instantiate()` instantiates not only the\n      // ModuleWrap in this module\x2C but all modules in the graph.\n      dependencyJob.instantiated = resolvedPromise;\n    }\n  }\n\n  async run() {\n    await this.instantiate();\n    const timeout = -1;\n    const breakOnSigint = false;\n    try {\n      await this.module.evaluate(timeout\x2C breakOnSigint);\n    } catch (e) {\n      if (e?.name === 'ReferenceError' &&\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\n        e.message += ' in ES module scope';\n\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\n          e.message += '\x2C you can use import instead';\n        }\n\n        const packageConfig =\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\n            require('internal/modules/esm/resolve')\n              .getPackageScopeConfig(this.module.url);\n        if (packageConfig.type === 'module') {\n          e.message +=\n            '\\nThis file is being treated as an ES module because it has a ' +\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\n            'to use the \\'.cjs\\' file extension.';\n        }\n      }\n      throw e;\n    }\n    return { module: this.module };\n  }\n}\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\nmodule.exports = ModuleJob;\n
code-source-info,0x3a1583d28c56,103,0,7676,C0O0C4O7676,,
code-creation,Function,10,26000,0x3a1583d29156,334, node:internal/modules/esm/module_job:1:1,0x3a1583d28bc0,~
code-source-info,0x3a1583d29156,103,0,7676,C0O0C85O25C91O47C97O68C103O90C109O112C114O133C119O157C125O171C130O189C136O214C142O230C148O253C154O274C160O285C166O312C172O336C178O362C184O386C190O454C196O454C201O439C207O518C213O518C218O495C224O580C230O580C235O554C241O644C247O644C251O644C253O696C256O696C258O728C260O728C262O769C263O769C265O799C269O799C271O917C275O917C314O7630C321O7599C326O7648C328O7663C333O7675,,
code-creation,Eval,10,26458,0x3a1583d2bc4e,5, node:internal/modules/esm/resolve:1:1,0x3a1583d2b588,~
script-source,104,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSubstr\x2C\n} = primordials;\nconst internalFS = require('internal/fs/utils');\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  realpathSync\x2C\n  statSync\x2C\n  Stats\x2C\n} = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst { sep\x2C relative\x2C resolve } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst typeFlag = getOptionValue('--input-type');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\n\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst userConditions = getOptionValue('--conditions');\nconst DEFAULT_CONDITIONS = ObjectFreeze(['node'\x2C 'import'\x2C ...userConditions]);\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\n\n/**\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\n * @typedef {'module' | 'commonjs'} PackageType\n * @typedef {{\n *   exports?: ExportConfig;\n *   name?: string;\n *   main?: string;\n *   type?: PackageType;\n * }} PackageConfig\n */\n\nconst emittedPackageWarnings = new SafeSet();\n\n/**\n * @param {string} match\n * @param {URL} pjsonUrl\n * @param {boolean} isExports\n * @param {string | URL | undefined} base\n * @returns {void}\n */\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\n      '"exports"' : '"imports"'} field module resolution of the package at ${\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0148'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @param {string} main\n * @returns\n */\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\n  const { format } = defaultGetFormat(url);\n  if (format !== 'module')\n    return;\n  const path = fileURLToPath(url);\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n  const basePath = fileURLToPath(base);\n  if (main)\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n  else\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return DEFAULT_CONDITIONS_SET;\n}\n\nconst realpathCache = new SafeMap();\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\n\n/**\n * @param {string | URL} path\n * @returns {import('fs').Stats}\n */\nconst tryStatSync =\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\n\n/**\n * @param {string} path\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {PackageConfig}\n */\nfunction getPackageConfig(path\x2C specifier\x2C base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path\x2C\n      exists: false\x2C\n      main: undefined\x2C\n      name: undefined\x2C\n      type: 'none'\x2C\n      exports: undefined\x2C\n      imports: undefined\x2C\n    };\n    packageJSONCache.set(path\x2C packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path\x2C\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n      error.message\n    );\n  }\n\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\n  const { exports } = packageJSON;\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\n  if (typeof main !== 'string') main = undefined;\n  if (typeof name !== 'string') name = undefined;\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\n\n  const packageConfig = {\n    pjsonPath: path\x2C\n    exists: true\x2C\n    main\x2C\n    name\x2C\n    type\x2C\n    exports\x2C\n    imports\x2C\n  };\n  packageJSONCache.set(path\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\n      break;\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\n                                           resolved);\n    if (packageConfig.exists) return packageConfig;\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check "/package.json" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath\x2C\n    exists: false\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {string | URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\n                                   packageJSONUrl))) {\n      return guess;\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\n                                          packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\n                                        packageJSONUrl)));\n    else guess = undefined;\n    if (guess) {\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\n                                 packageConfig.main);\n      return guess;\n    }\n    // Fallthrough.\n  }\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\n  // So fs.\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\n  else guess = undefined;\n  if (guess) {\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\n    return guess;\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensionsWithTryExactName(search) {\n  if (fileExists(search)) return search;\n  return resolveExtensions(search);\n}\n\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensions(search) {\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\n    if (fileExists(guess)) return guess;\n  }\n  return undefined;\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveDirectoryEntry(search) {\n  const dirPath = fileURLToPath(search);\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\n  if (fileExists(pkgJsonPath)) {\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\n    if (pkgJson.containsKeys) {\n      const { main } = JSONParse(pkgJson.string);\n      if (main != null) {\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\n        return resolveExtensionsWithTryExactName(mainUrl);\n      }\n    }\n  }\n  return resolveExtensions(new URL('index'\x2C search));\n}\n\nconst encodedSepRegEx = /%2F|%2C/i;\n/**\n * @param {URL} resolved\n * @param {string | URL | undefined} base\n * @returns {URL | undefined}\n */\nfunction finalizeResolution(resolved\x2C base) {\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      fileURLToPath(base));\n\n  const path = fileURLToPath(resolved);\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\n    let file = resolveExtensionsWithTryExactName(resolved);\n    if (file !== undefined) return file;\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\n      if (file !== undefined) return file;\n    } else {\n      return resolveDirectoryEntry(resolved) || resolved;\n    }\n    throw new ERR_MODULE_NOT_FOUND(\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\n  }\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\n    StringPrototypeSlice(path\x2C -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\n  }\n\n  return resolved;\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n *\n * @param {string | URL} subpath\n * @param {URL} packageJSONUrl\n * @param {boolean} internal\n * @param {string | URL | undefined} base\n */\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid subpath for the "${internal ?\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\nfunction throwInvalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  throw new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\nconst patternRegEx = /\\*/g;\n\nfunction resolvePackageTargetString(\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\n        !StringPrototypeStartsWith(target\x2C '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {}\n      if (!isURL) {\n        const exportTarget = pattern ?\n          StringPrototypeReplace(target\x2C patternRegEx\x2C subpath) :\n          target + subpath;\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (pattern)\n    return new URL(StringPrototypeReplace(resolved.href\x2C patternRegEx\x2C\n                                          subpath));\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0)\n      return null;\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolved;\n      try {\n        resolved = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\n          continue;\n        throw e;\n      }\n      if (resolved === undefined)\n        continue;\n      if (resolved === null) {\n        lastException = null;\n        continue;\n      }\n      return resolved;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolved = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C conditions);\n        if (resolved === undefined)\n          continue;\n        return resolved;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                            base);\n}\n\n/**\n *\n * @param {Exports} exports\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @returns\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath)) {\n    const target = exports[packageSubpath];\n    const resolved = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\n    );\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    return { resolved\x2C exact: true };\n  }\n\n  let bestMatch = '';\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key[key.length - 1] === '*' &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C -1)) &&\n        packageSubpath.length >= key.length &&\n        key.length > bestMatch.length) {\n      bestMatch = key;\n    } else if (key[key.length - 1] === '/' &&\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\n      key.length > bestMatch.length) {\n      bestMatch = key;\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const pattern = bestMatch[bestMatch.length - 1] === '*';\n    const subpath = StringPrototypeSubstr(packageSubpath\x2C bestMatch.length -\n      (pattern ? 1 : 0));\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C\n                                          bestMatch\x2C base\x2C pattern\x2C false\x2C\n                                          conditions);\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    if (!pattern)\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\n    return { resolved\x2C exact: pattern };\n  }\n\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {string} name\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name)) {\n        const resolved = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\n        );\n        if (resolved !== null)\n          return { resolved\x2C exact: true };\n      } else {\n        let bestMatch = '';\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          if (key[key.length - 1] === '*' &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C -1)) &&\n              name.length >= key.length &&\n              key.length > bestMatch.length) {\n            bestMatch = key;\n          } else if (key[key.length - 1] === '/' &&\n            StringPrototypeStartsWith(name\x2C key) &&\n            key.length > bestMatch.length) {\n            bestMatch = key;\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const pattern = bestMatch[bestMatch.length - 1] === '*';\n          const subpath = StringPrototypeSubstr(name\x2C bestMatch.length -\n            (pattern ? 1 : 0));\n          const resolved = resolvePackageTarget(\n            packageJSONUrl\x2C target\x2C subpath\x2C bestMatch\x2C base\x2C pattern\x2C true\x2C\n            conditions);\n          if (resolved !== null) {\n            if (!pattern)\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\n            return { resolved\x2C exact: pattern };\n          }\n        }\n      }\n    }\n  }\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {URL} url\n * @returns {PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // separators.\n  for (let i = 0; i < packageName.length; i++) {\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\n      validPackageName = false;\n      break;\n    }\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    if (packageSubpath === '.')\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier\x2C base);\n  } else if (specifier[0] === '#') {\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\n    }\n  }\n  return finalizeResolution(resolved\x2C base);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent\x2C found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\n      const index = StringPrototypeIndexOf(found\x2C pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found\x2C index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = StringPrototypeReplace(found\x2C new RegExp(`\\\\${sep}`\x2C 'g')\x2C '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\n  let { parentURL\x2C conditions } = context;\n  if (parentURL && policy?.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve\x2C reaction } = redirects;\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { url: href };\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\n        );\n      }\n    }\n  }\n  let parsed;\n  try {\n    parsed = new URL(specifier);\n    if (parsed.protocol === 'data:') {\n      return {\n        url: specifier\n      };\n    }\n  } catch {}\n  if (parsed && parsed.protocol === 'node:')\n    return { url: specifier };\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\n    return {\n      url: 'node:' + specifier\n    };\n  }\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\n    // This is gonna blow up\x2C we want the error\n    new URL(specifier\x2C parentURL);\n  }\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (typeFlag)\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines\x2C '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\n    const urlPath = fileURLToPath(url);\n    const real = realpathSync(urlPath\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\n    });\n    const old = url;\n    url = pathToFileURL(\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\n    url.search = old.search;\n    url.hash = old.hash;\n  }\n\n  return { url: `${url}` };\n}\n\nmodule.exports = {\n  DEFAULT_CONDITIONS\x2C\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n};\n\n// cycle\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\n
code-source-info,0x3a1583d2bc4e,104,0,33456,C0O0C4O33456,,
code-creation,Function,10,27750,0x3a1583d2cafe,977, node:internal/modules/esm/resolve:1:1,0x3a1583d2bbb8,~
code-source-info,0x3a1583d2cafe
tick,0x1a3726358,27791,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d26fd9,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,27916,0x3a1583d2f9be,5, node:internal/modules/esm/get_format:1:1,0x3a1583d2f798,~
script-source,105,node:internal/modules/esm/get_format,'use strict';\nconst {\n  RegExpPrototypeExec\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst { extname } = require('path');\nconst { getOptionValue } = require('internal/options');\n\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\nconst experimentalSpecifierResolution =\n  getOptionValue('--experimental-specifier-resolution');\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\nconst { getPackageType } = require('internal/modules/esm/resolve');\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.mjs': 'module'\n};\n\nconst legacyExtensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'commonjs'\x2C\n  '.json': 'commonjs'\x2C\n  '.mjs': 'module'\x2C\n  '.node': 'commonjs'\n};\n\nif (experimentalWasmModules)\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\n\nif (experimentalJsonModules)\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\n\nfunction defaultGetFormat(url\x2C context\x2C defaultGetFormatUnused) {\n  if (StringPrototypeStartsWith(url\x2C 'node:')) {\n    return { format: 'builtin' };\n  }\n  const parsed = new URL(url);\n  if (parsed.protocol === 'data:') {\n    const { 1: mime } = RegExpPrototypeExec(\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n      parsed.pathname\x2C\n    ) || [ \x2C null ];\n    const format = ({\n      '__proto__': null\x2C\n      'text/javascript': 'module'\x2C\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\n    })[mime] || null;\n    return { format };\n  } else if (parsed.protocol === 'file:') {\n    const ext = extname(parsed.pathname);\n    let format;\n    if (ext === '.js') {\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\n    } else {\n      format = extensionFormatMap[ext];\n    }\n    if (!format) {\n      if (experimentalSpecifierResolution === 'node') {\n        process.emitWarning(\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\n          'ExperimentalWarning');\n        format = legacyExtensionFormatMap[ext];\n      } else {\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\n      }\n    }\n    return { format: format || null };\n  }\n  return { format: null };\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  extensionFormatMap\x2C\n  legacyExtensionFormatMap\x2C\n};\n
code-source-info,0x3a1583d2f9be,105,0,2537,C0O0C4O2537,,
code-creation,Function,10,28000,0x3a1583d2fc7e,258, node:internal/modules/esm/get_format:1:1,0x3a1583d2f928,~
code-source-info,0x3a1583d2fc7e,105,0,2537,C0O0C50O24C56O47C62O111C65O111C70O99C76O155C79O155C84O136C89O217C92O217C96O217C98O306C101O306C105O306C107O393C110O393C114O393C116O467C119O467C124O448C130O539C133O539C138O516C144O521C150O603C153O603C158O629C163O572C169O665C173O665C175O785C179O785C181O920C185O951C194O1015C200O979C204O1026C208O1057C217O1121C223O1085C227O2445C234O2466C240O2486C246O2508C252O2460C257O2536,,
code-creation,Eval,10,28083,0x3a1583d305e6,5, node:internal/modules/esm/get_source:1:1,0x3a1583d30400,~
script-source,106,node:internal/modules/esm/get_source,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n  decodeURIComponent\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\nconst { Buffer } = require('buffer');\n\nconst fs = require('internal/fs/promises').exports;\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_INVALID_URL_SCHEME\x2C\n} = require('internal/errors').codes;\nconst readFileAsync = fs.readFile;\n\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\n\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\n  const parsed = new URL(url);\n  let source;\n  if (parsed.protocol === 'file:') {\n    source = await readFileAsync(parsed);\n  } else if (parsed.protocol === 'data:') {\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\n    if (!match) {\n      throw new ERR_INVALID_URL(url);\n    }\n    const { 1: base64\x2C 2: body } = match;\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\n  } else {\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\n  }\n  if (policy?.manifest) {\n    policy.manifest.assertIntegrity(parsed\x2C source);\n  }\n  return { source };\n}\nexports.defaultGetSource = defaultGetSource;\n
code-source-info,0x3a1583d305e6,106,0,1353,C0O0C4O1353,,
code-creation,Function,10,28166,0x3a1583d30766,169, node:internal/modules/esm/get_source:1:1,0x3a1583d30550,~
code-source-info,0x3a1583d30766,106,0,1353,C0O0C37O25C43O48C49O112C52O112C57O93C62O207C65O207C74O251C81O207C83O316C86O316C91O305C97O347C100O347C105O378C110O404C113O404C118O396C124O486C127O486C132O512C137O439C143O458C149O545C153O542C155O581C159O581C161O1308C163O1333C168O1352,,
tick,0x1a375c0e8,28208,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d27001,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,28541,0x3a1583d31a76,5, node:internal/fs/promises:1:1,0x3a1583d312e8,~
script-source,107,node:internal/fs/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  NumberIsSafeInteger\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  SafeArrayIterator\x2C\n  SafePromisePrototypeFinally\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  F_OK\x2C\n  O_SYMLINK\x2C\n  O_WRONLY\x2C\n  S_IFMT\x2C\n  S_IFREG\n} = internalBinding('constants').fs;\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\n\nconst {\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst { isArrayBufferView } = require('internal/util/types');\nconst { rimrafPromises } = require('internal/fs/rimraf');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  copyObject\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validateRmOptions\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst { opendir } = require('internal/fs/dir');\nconst {\n  parseFileMode\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst { lazyDOMException\x2C promisify } = require('internal/util');\nconst { EventEmitterMixin } = require('internal/event_target');\nconst { watch } = require('internal/fs/watchers');\nconst { isIterable } = require('internal/streams/utils');\nconst assert = require('internal/assert');\n\nconst kHandle = Symbol('kHandle');\nconst kFd = Symbol('kFd');\nconst kRefs = Symbol('kRefs');\nconst kClosePromise = Symbol('kClosePromise');\nconst kCloseResolve = Symbol('kCloseResolve');\nconst kCloseReject = Symbol('kCloseReject');\nconst kRef = Symbol('kRef');\nconst kUnref = Symbol('kUnref');\n\nconst { kUsePromises } = binding;\nconst {\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\n} = require('internal/worker/js_transferable');\n\nconst getDirectoryEntriesPromise = promisify(getDirents);\nconst validateRmOptionsPromise = promisify(validateRmOptions);\n\nlet cpPromises;\nfunction lazyLoadCpPromises() {\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\n}\n\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\n  /**\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\n   */\n  constructor(filehandle) {\n    super();\n    this[kHandle] = filehandle;\n    this[kFd] = filehandle ? filehandle.fd : -1;\n\n    this[kRefs] = 1;\n    this[kClosePromise] = null;\n  }\n\n  getAsyncId() {\n    return this[kHandle].getAsyncId();\n  }\n\n  get fd() {\n    return this[kFd];\n  }\n\n  appendFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  chmod(mode) {\n    return fsCall(fchmod\x2C this\x2C mode);\n  }\n\n  chown(uid\x2C gid) {\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\n  }\n\n  datasync() {\n    return fsCall(fdatasync\x2C this);\n  }\n\n  sync() {\n    return fsCall(fsync\x2C this);\n  }\n\n  read(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  readv(buffers\x2C position) {\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\n  }\n\n  readFile(options) {\n    return fsCall(readFile\x2C this\x2C options);\n  }\n\n  stat(options) {\n    return fsCall(fstat\x2C this\x2C options);\n  }\n\n  truncate(len = 0) {\n    return fsCall(ftruncate\x2C this\x2C len);\n  }\n\n  utimes(atime\x2C mtime) {\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\n  }\n\n  write(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  writev(buffers\x2C position) {\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\n  }\n\n  writeFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  close = () => {\n    if (this[kFd] === -1) {\n      return PromiseResolve();\n    }\n\n    if (this[kClosePromise]) {\n      return this[kClosePromise];\n    }\n\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        this[kHandle].close()\x2C\n        () => { this[kClosePromise] = undefined; }\n      );\n    } else {\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        new Promise((resolve\x2C reject) => {\n          this[kCloseResolve] = resolve;\n          this[kCloseReject] = reject;\n        })\x2C () => {\n          this[kClosePromise] = undefined;\n          this[kCloseReject] = undefined;\n          this[kCloseResolve] = undefined;\n        }\n      );\n    }\n\n    this.emit('close');\n    return this[kClosePromise];\n  }\n\n  [kTransfer]() {\n    if (this[kClosePromise] || this[kRefs] > 1) {\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\n                             'DataCloneError');\n    }\n\n    const handle = this[kHandle];\n    this[kFd] = -1;\n    this[kHandle] = null;\n    this[kRefs] = 0;\n\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/fs/promises:FileHandle'\n    };\n  }\n\n  [kTransferList]() {\n    return [ this[kHandle] ];\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kFd] = handle.fd;\n  }\n\n  [kRef]() {\n    this[kRefs]++;\n  }\n\n  [kUnref]() {\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      PromisePrototypeThen(\n        this[kHandle].close()\x2C\n        this[kCloseResolve]\x2C\n        this[kCloseReject]\n      );\n    }\n  }\n}\n\nasync function fsCall(fn\x2C handle\x2C ...args) {\n  assert(handle[kRefs] !== undefined\x2C\n         'handle must be an instance of FileHandle');\n\n  if (handle.fd === -1) {\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error('file closed');\n    err.code = 'EBADF';\n    err.syscall = fn.name;\n    throw err;\n  }\n\n  try {\n    handle[kRef]();\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\n  } finally {\n    handle[kUnref]();\n  }\n}\n\nfunction checkAborted(signal) {\n  if (signal?.aborted)\n    throw new AbortError();\n}\n\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\n  checkAborted(signal);\n  if (isCustomIterable(data)) {\n    for await (const buf of data) {\n      checkAborted(signal);\n      const toWrite =\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\n      let remaining = toWrite.byteLength;\n      while (remaining > 0) {\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\n        const { bytesWritten } = await write(\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\n        remaining -= bytesWritten;\n        checkAborted(signal);\n      }\n    }\n    return;\n  }\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n  let remaining = data.byteLength;\n  if (remaining === 0) return;\n  do {\n    checkAborted(signal);\n    const { bytesWritten } =\n      await write(filehandle\x2C data\x2C 0\x2C\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\n    remaining -= bytesWritten;\n    data = new Uint8Array(\n      data.buffer\x2C\n      data.byteOffset + bytesWritten\x2C\n      data.byteLength - bytesWritten\n    );\n  } while (remaining > 0);\n}\n\nasync function readFileHandle(filehandle\x2C options) {\n  const signal = options?.signal;\n\n  checkAborted(signal);\n\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\n\n  checkAborted(signal);\n\n  let size;\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\n    size = statFields[8/* size */];\n  } else {\n    size = 0;\n  }\n\n  if (size > kIoMaxLength)\n    throw new ERR_FS_FILE_TOO_LARGE(size);\n\n  let endOfFile = false;\n  let totalRead = 0;\n  const noSize = size === 0;\n  const buffers = [];\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\n  do {\n    checkAborted(signal);\n    let buffer;\n    let offset;\n    let length;\n    if (noSize) {\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n      offset = 0;\n      length = kReadFileUnknownBufferLength;\n    } else {\n      buffer = fullBuffer;\n      offset = totalRead;\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\n    }\n\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\n                                          length\x2C -1\x2C kUsePromises)) || 0;\n    totalRead += bytesRead;\n    endOfFile = bytesRead === 0 || totalRead === size;\n    if (noSize && bytesRead > 0) {\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\n    }\n  } while (!endOfFile);\n\n  let result;\n  if (size > 0) {\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\n  } else {\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\n                                                               totalRead);\n  }\n\n  return options.encoding ? result.toString(options.encoding) : result;\n}\n\n// All of the functions are defined as async in order to ensure that errors\n// thrown cause promise rejections rather than being thrown synchronously.\nasync function access(path\x2C mode = F_OK) {\n  path = getValidatedPath(path);\n\n  mode = getValidMode(mode\x2C 'access');\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\n                        kUsePromises);\n}\n\nasync function cp(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\n}\n\nasync function copyFile(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  mode = getValidMode(mode\x2C 'copyFile');\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\n                          pathModule.toNamespacedPath(dest)\x2C\n                          mode\x2C\n                          kUsePromises);\n}\n\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\n// fsPromises.open() uses the fs.FileHandle class.\nasync function open(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  return new FileHandle(\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\n                                 flagsNumber\x2C mode\x2C kUsePromises));\n}\n\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\n  let buffer = bufferOrOptions;\n  if (!isArrayBufferView(buffer)) {\n    if (bufferOrOptions === undefined) {\n      bufferOrOptions = {};\n    }\n    if (bufferOrOptions.buffer) {\n      buffer = bufferOrOptions.buffer;\n      validateBuffer(buffer);\n    } else {\n      buffer = Buffer.alloc(16384);\n    }\n    offset = bufferOrOptions.offset || 0;\n    length = buffer.byteLength;\n    position = bufferOrOptions.position || null;\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0)\n    return { bytesRead: length\x2C buffer };\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (!NumberIsSafeInteger(position))\n    position = -1;\n\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\n                                        position\x2C kUsePromises)) || 0;\n\n  return { bytesRead\x2C buffer };\n}\n\nasync function readv(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                               kUsePromises)) || 0;\n  return { bytesRead\x2C buffers };\n}\n\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\n  if (buffer?.byteLength === 0)\n    return { bytesWritten: 0\x2C buffer };\n\n  if (isArrayBufferView(buffer)) {\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    const bytesWritten =\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\n                                 length\x2C position\x2C kUsePromises)) || 0;\n    return { bytesWritten\x2C buffer };\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n  validateEncoding(buffer\x2C length);\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\n                                                  length\x2C kUsePromises)) || 0;\n  return { bytesWritten\x2C buffer };\n}\n\nasync function writev(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                                   kUsePromises)) || 0;\n  return { bytesWritten\x2C buffers };\n}\n\nasync function rename(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                        pathModule.toNamespacedPath(newPath)\x2C\n                        kUsePromises);\n}\n\nasync function truncate(path\x2C len = 0) {\n  const fd = await open(path\x2C 'r+');\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\n}\n\nasync function ftruncate(handle\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\n}\n\nasync function rm(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\n  return rimrafPromises(path\x2C options);\n}\n\nasync function rmdir(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = validateRmdirOptions(options);\n\n  if (options.recursive) {\n    emitRecursiveRmdirWarning();\n    const stats = await stat(path);\n    if (stats.isDirectory()) {\n      return rimrafPromises(path\x2C options);\n    }\n  }\n\n  return binding.rmdir(path\x2C kUsePromises);\n}\n\nasync function fdatasync(handle) {\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\n}\n\nasync function fsync(handle) {\n  return binding.fsync(handle.fd\x2C kUsePromises);\n}\n\nasync function mkdir(path\x2C options) {\n  if (typeof options === 'number' || typeof options === 'string') {\n    options = { mode: options };\n  }\n  const {\n    recursive = false\x2C\n    mode = 0o777\n  } = options || {};\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\n                       kUsePromises);\n}\n\nasync function readdir(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                       options.encoding\x2C\n                                       !!options.withFileTypes\x2C\n                                       kUsePromises);\n  return options.withFileTypes ?\n    getDirectoryEntriesPromise(path\x2C result) :\n    result;\n}\n\nasync function readlink(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                          options.encoding\x2C kUsePromises);\n}\n\nasync function symlink(target\x2C path\x2C type_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                         pathModule.toNamespacedPath(path)\x2C\n                         stringToSymlinkType(type)\x2C\n                         kUsePromises);\n}\n\nasync function fstat(handle\x2C options = { bigint: false }) {\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function lstat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                                     options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function stat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\n                                    options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function link(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                      pathModule.toNamespacedPath(newPath)\x2C\n                      kUsePromises);\n}\n\nasync function unlink(path) {\n  path = getValidatedPath(path);\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\n}\n\nasync function fchmod(handle\x2C mode) {\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\n}\n\nasync function chmod(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\n}\n\nasync function lchmod(path\x2C mode) {\n  if (O_SYMLINK === undefined)\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\n\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\n}\n\nasync function lchown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\n                        uid\x2C gid\x2C kUsePromises);\n}\n\nasync function fchown(handle\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\n}\n\nasync function chown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\n                       uid\x2C gid\x2C kUsePromises);\n}\n\nasync function utimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                        toUnixTimestamp(atime)\x2C\n                        toUnixTimestamp(mtime)\x2C\n                        kUsePromises);\n}\n\nasync function futimes(handle\x2C atime\x2C mtime) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\n}\n\nasync function lutimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                         toUnixTimestamp(atime)\x2C\n                         toUnixTimestamp(mtime)\x2C\n                         kUsePromises);\n}\n\nasync function realpath(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function mkdtemp(prefix\x2C options) {\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix);\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function writeFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  validateAbortSignal(options.signal);\n  if (path instanceof FileHandle)\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C options.mode);\n  return SafePromisePrototypeFinally(\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\n}\n\nfunction isCustomIterable(obj) {\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\n}\n\nasync function appendFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n  options = copyObject(options);\n  options.flag = options.flag || 'a';\n  return writeFile(path\x2C data\x2C options);\n}\n\nasync function readFile(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const flag = options.flag || 'r';\n\n  if (path instanceof FileHandle)\n    return readFileHandle(path\x2C options);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C 0o666);\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\n}\n\nmodule.exports = {\n  exports: {\n    access\x2C\n    copyFile\x2C\n    cp\x2C\n    open\x2C\n    opendir: promisify(opendir)\x2C\n    rename\x2C\n    truncate\x2C\n    rm\x2C\n    rmdir\x2C\n    mkdir\x2C\n    readdir\x2C\n    readlink\x2C\n    symlink\x2C\n    lstat\x2C\n    stat\x2C\n    link\x2C\n    unlink\x2C\n    chmod\x2C\n    lchmod\x2C\n    lchown\x2C\n    chown\x2C\n    utimes\x2C\n    lutimes\x2C\n    realpath\x2C\n    mkdtemp\x2C\n    writeFile\x2C\n    appendFile\x2C\n    readFile\x2C\n    watch\x2C\n  }\x2C\n\n  FileHandle\x2C\n  kRef\x2C\n  kUnref\x2C\n};\n
code-source-info,0x3a1583d31a76,107,0,21882,C0O0C4O21882,,
code-creation,Function,10,29375,0x3a1583d340b6,1635, node:internal/fs/promises:1:1,0x3a1583d319e0,~
code-source-info,0x3a1583d340b
code-creation,Function,10,29458,0x3a1583d34a56,27,<instance_members_initializer> node:internal/fs/promises:183:3,0x3a1583d32f60,~
code-source-info,0x3a1583d34a56,107,4057,4855,C0O4057C12O4065C26O4855,,
tick,0x1a37298d4,29458,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d307ca,0x311ed227c90d,0x311ed227bbdd,0x3a1583d27001,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,29666,0x3a1583d37366,5, node:internal/fs/rimraf:1:1,0x3a1583d36ff0,~
script-source,108,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\n// modified in the following ways:\n// - Use of the assert module has been replaced with core's error system.\n// - All code related to the glob dependency has been removed.\n// - Bring your own custom fs module is not currently supported.\n// - Some basic code cleanup.\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst fs = require('fs');\nconst {\n  chmod\x2C\n  chmodSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  unlink\x2C\n  unlinkSync\n} = fs;\nconst { sep } = require('path');\nconst { setTimeout } = require('timers');\nconst { sleep } = require('internal/util');\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\nconst retryErrorCodes = new SafeSet(\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\nconst isWindows = process.platform === 'win32';\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\nconst readdirEncoding = 'buffer';\nconst separator = Buffer.from(sep);\n\n\nfunction rimraf(path\x2C options\x2C callback) {\n  let retries = 0;\n\n  _rimraf(path\x2C options\x2C function CB(err) {\n    if (err) {\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\n        retries++;\n        const delay = retries * options.retryDelay;\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\n      }\n\n      // The file is already gone.\n      if (err.code === 'ENOENT')\n        err = null;\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rimraf(path\x2C options\x2C callback) {\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\n  // it's not a directory.\n  lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (err.code === 'ENOENT')\n        return callback(null);\n\n      // Windows can EPERM on stat.\n      if (isWindows && err.code === 'EPERM')\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\n    } else if (stats.isDirectory()) {\n      return _rmdir(path\x2C options\x2C err\x2C callback);\n    }\n\n    unlink(path\x2C (err) => {\n      if (err) {\n        if (err.code === 'ENOENT')\n          return callback(null);\n        if (err.code === 'EISDIR')\n          return _rmdir(path\x2C options\x2C err\x2C callback);\n        if (err.code === 'EPERM') {\n          return epermHandler(path\x2C options\x2C err\x2C callback);\n        }\n      }\n\n      return callback(err);\n    });\n  });\n}\n\n\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\n  chmod(path\x2C 0o666\x2C (err) => {\n    if (err)\n      return callback(err.code === 'ENOENT' ? null : originalErr);\n\n    stat(path\x2C (err\x2C stats) => {\n      if (err)\n        return callback(err.code === 'ENOENT' ? null : originalErr);\n\n      if (stats.isDirectory())\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\n      else\n        unlink(path\x2C callback);\n    });\n  });\n}\n\n\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\n  rmdir(path\x2C (err) => {\n    if (err) {\n      if (notEmptyErrorCodes.has(err.code))\n        return _rmchildren(path\x2C options\x2C callback);\n      if (err.code === 'ENOTDIR')\n        return callback(originalErr);\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rmchildren(path\x2C options\x2C callback) {\n  const pathBuf = Buffer.from(path);\n\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\n    if (err)\n      return callback(err);\n\n    let numFiles = files.length;\n\n    if (numFiles === 0)\n      return rmdir(path\x2C callback);\n\n    let done = false;\n\n    ArrayPrototypeForEach(files\x2C (child) => {\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n      rimraf(childPath\x2C options\x2C (err) => {\n        if (done)\n          return;\n\n        if (err) {\n          done = true;\n          return callback(err);\n        }\n\n        numFiles--;\n        if (numFiles === 0)\n          rmdir(path\x2C callback);\n      });\n    });\n  });\n}\n\n\nfunction rimrafPromises(path\x2C options) {\n  return new Promise((resolve\x2C reject) => {\n    rimraf(path\x2C options\x2C (err) => {\n      if (err)\n        return reject(err);\n\n      resolve();\n    });\n  });\n}\n\n\nfunction rimrafSync(path\x2C options) {\n  let stats;\n\n  try {\n    stats = lstatSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    // Windows can EPERM on stat.\n    if (isWindows && err.code === 'EPERM')\n      fixWinEPERMSync(path\x2C options\x2C err);\n  }\n\n  try {\n    // SunOS lets the root user unlink directories.\n    if (stats?.isDirectory())\n      _rmdirSync(path\x2C options\x2C null);\n    else\n      _unlinkSync(path\x2C options);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'EPERM')\n      return epermHandlerSync(path\x2C options\x2C err);\n    if (err.code !== 'EISDIR')\n      throw err;\n\n    _rmdirSync(path\x2C options\x2C err);\n  }\n}\n\n\nfunction _unlinkSync(path\x2C options) {\n  const tries = options.maxRetries + 1;\n\n  for (let i = 1; i <= tries; i++) {\n    try {\n      return unlinkSync(path);\n    } catch (err) {\n      // Only sleep if this is not the last try\x2C and the delay is greater\n      // than zero\x2C and an error was encountered that warrants a retry.\n      if (retryErrorCodes.has(err.code) &&\n          i < tries &&\n          options.retryDelay > 0) {\n        sleep(i * options.retryDelay);\n      }\n    }\n  }\n}\n\n\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\n  try {\n    rmdirSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'ENOTDIR')\n      throw originalErr;\n\n    if (notEmptyErrorCodes.has(err.code)) {\n      // Removing failed. Try removing all children and then retrying the\n      // original removal. Windows has a habit of not closing handles promptly\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\n      // around that issue by retrying on Windows.\n      const pathBuf = Buffer.from(path);\n\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n        rimrafSync(childPath\x2C options);\n      });\n\n      const tries = options.maxRetries + 1;\n\n      for (let i = 1; i <= tries; i++) {\n        try {\n          return fs.rmdirSync(path);\n        } catch (err) {\n          // Only sleep if this is not the last try\x2C and the delay is greater\n          // than zero\x2C and an error was encountered that warrants a retry.\n          if (retryErrorCodes.has(err.code) &&\n              i < tries &&\n              options.retryDelay > 0) {\n            sleep(i * options.retryDelay);\n          }\n        }\n      }\n    }\n  }\n}\n\n\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\n  try {\n    chmodSync(path\x2C 0o666);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    throw originalErr;\n  }\n\n  let stats;\n\n  try {\n    stats = statSync(path\x2C { throwIfNoEntry: false });\n  } catch {\n    throw originalErr;\n  }\n\n  if (stats === undefined) return;\n\n  if (stats.isDirectory())\n    _rmdirSync(path\x2C options\x2C originalErr);\n  else\n    _unlinkSync(path\x2C options);\n}\n\n\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\n
code-source-info,0x3a1583d37366,108,0,7095,C0O0C4O7095,,
code-creation,Function,10,29958,0x3a1583d37976,409, node:internal/fs/rimraf:1:1,0x3a1583d372d0,~
code-source-info,0x3a1583d37976,108,0,7095,C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7038C385O7057C391O7065C397O7081C403O7053C408O7094,,
code-creation,LazyCompile,10,30083,0x3a1583d3881e,188,from node:buffer:295:28,0x30d75ba4938,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\n} = internalBinding('buffer');\nconst {\n  getOwnNonIndexProperties\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_ENCODING\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateNumber\x2C\n  validateInteger\x2C\n  validateString\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\n} = require('internal/buffer');\n\nconst {\n  Blob\x2C\n  resolveObjectURL\x2C\n} = require('internal/blob');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\x2C\n  MAX_STRING_LENGTH: {\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = ObjectCreate(null);\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  if (sourceStart > source.length) {\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\n                               `<= ${source.length}`\x2C\n                               sourceStart);\n  }\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\n  );\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n// The 'assertSize' method will remove itself from the callstack when an error\n// occurs. This is done simply to keep the internal details of the\n// implementation from bleeding out to users.\nconst assertSize = hideStackFrames((size) => {\n  validateNumber(size\x2C 'size');\n  if (!(size >= 0 && size <= kMaxLength)) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n});\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  assertSize(size);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  assertSize(size);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  assertSize(size);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(length) {\n  assertSize(length);\n  return createUnsafeBuffer(length);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n    encoding = undefined;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\n  }\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\n    );\n  }\n\n  const len = string.length;\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n  if (!mustMatch && len === 0)\n    return 0;\n\n  if (!encoding)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n  return ops.byteLength(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n\n  if (this.byteLength !== otherBuffer.byteLength)\n    return false;\n\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(StringPrototypeReplace(\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = ObjectCreate(null);\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\n    err.code = code;\n    err.errno = result;\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\nconst kBase64Digits =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (!kBase64Digits.includes(input[n]))\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nmodule.exports = {\n  Blob\x2C\n  resolveObjectURL\x2C\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) { INSPECT_MAX_BYTES = val; }\n  }\n});\n
code-source-info,0x3a1583d3881e,18,8406,9357,C3O8444C9O8479C12O8486C17O8522C18O8526C28O8581C33O8585C39O8616C51O8623C56O8672C57O8700C63O8717C68O8717C73O8732C78O8771C95O8862C104O8869C109O8909C110O8931C113O8931C118O8954C120O8967C122O8976C123O8982C125O8999C127O8998C134O9060C136O9066C138O9065C145O9084C151O9102C155O9147C158O9154C163O9194C164O9216C182O9222C187O9216,,
tick,0x1a37298d4,31500,0,0x0,3,0x0,0x3a1583d37ae9,0x311ed227c90d,0x311ed227bbdd,0x3a1583d34372,0x311ed227c90d,0x311ed227bbdd,0x3a1583d307ca,0x311ed227c90d,0x311ed227bbdd,0x3a1583d27001,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,LazyCompile,10,31500,0x3a1583d3b206,110,fromString node:buffer:431:20,0x30d75ba4d20,~
code-source-info,0x3a1583d3b206,18,12457,12891,C0O12484C2O12491C8O12536C14O12543C19O12567C25O12574C30O12587C35O12594C40O12611C41O12616C46O12634C51O12644C56O12681C59O12687C64O12717C66O12746C73O12752C78O12746C79O12803C85O12810C90O12823C95O12830C100O12847C101O12854C104O12861C109O12889,,
code-creation,LazyCompile,10,31541,0x3a1583d3b3ce,177,fromStringFast node:buffer:412:24,0x30d75ba4c80,~
code-source-info,0x3a1583d3b3ce,18,11913,12436,C0O11950C5O11950C11O11973C14O11995C18O12004C21O11984C26O12016C31O12052C36O12023C41O12065C42O12069C44O12083C49O12094C51O12092C54O12080C59O12111C62O12111C65O12135C72O12150C77O12161C85O12135C91O12203C110O12203C116O12234C118O12245C123O12329C130O12348C135O12359C143O12333C149O12386C156O12400C162O12397C168O12410C171O12410C174O12425C176O12434,,
code-creation,LazyCompile,10,31583,0x3a1583d3b5ce,36,FastBuffer node:internal/buffer:958:14,0x30d75bb1848,~
code-source-info,0x3a1583d3b5ce,19,26364,26453,C3O26407C7O26441C20O26407C35O26452,,
code-creation,LazyCompile,10,31583,0x3a1583d3b6de,23,write node:buffer:592:12,0x30d75ba5090,~
code-source-info,0x3a1583d3b6de,18,16525,16589,C0O16559C17O16559C22O16589,,
code-creation,LazyCompile,10,31625,0x3a1583d3b7de,42,alignPool node:buffer:158:19,0x30d75ba46b8,~
code-source-info,0x3a1583d3b7de,18,3998,4102,C0O4032C4O4047C9O4060C19O4071C25O4083C34O4093C41O4101,,
code-creation,LazyCompile,10,31666,0x3a1583d3bbae,251,promisify node:internal/util:327:19,0x1910fc7ea450,~
script-source,12,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  toUSVString: _toUSVString\x2C\n} = internalBinding('url');\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  getHiddenValue\x2C\n  setHiddenValue\x2C\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\n  sleep: _sleep\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nconst unpairedSurrogateRe =\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\nfunction toUSVString(val) {\n  const str = `${val}`;\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\n  // slower than `unpairedSurrogateRe.exec()`.\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\n  if (!match)\n    return str;\n  return _toUSVString(str\x2C match.index);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  let warned = false;\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) ||\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\n    return;\n\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n          `${enc}`.toLowerCase() === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n          `${enc}`.toLowerCase() === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n        `${enc}`.toLowerCase() === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n          `${enc}`.toLowerCase() === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature. This feature could ` +\n       'change at any time';\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { value: type.name }\x2C\n    length: { value: type.length }\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = ObjectCreate(null);\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n  });\n  return ObjectDefineProperties(\n    fn\x2C\n    ObjectGetOwnPropertyDescriptors(original)\n  );\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\n        continue;\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\nlet DOMException;\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\n  if (DOMException === undefined)\n    DOMException = internalBinding('messaging').DOMException;\n  return new DOMException(message\x2C name);\n});\n\nfunction structuredClone(value) {\n  const {\n    DefaultSerializer\x2C\n    DefaultDeserializer\x2C\n  } = require('v8');\n  const ser = new DefaultSerializer();\n  ser._getDataCloneError = hideStackFrames((message) =>\n    lazyDOMException(message\x2C 'DataCloneError'));\n  ser.writeValue(value);\n  const serialized = ser.releaseBuffer();\n\n  const des = new DefaultDeserializer(serialized);\n  return des.readValue();\n}\n\nmodule.exports = {\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  filterDuplicateStrings\x2C\n  getConstructorOf\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  sleep\x2C\n  spliceOne\x2C\n  structuredClone\x2C\n  toUSVString\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\n};\n
code-source-info,0x3a1583d3bbae,12,8881,10385,C0O8881C17O8943C25O8983C33O9007C38O8986C55O9043C68O9043C73O9086C80O9099C82O9098C87O9143C94O9152C96O9151C100O9184C110O9184C115O9236C126O9268C136O9309C143O9243C148O9375C149O9538C156O9547C158O9546C161O9538C163O10102C174O10127C180O10127C185O10102C190O10163C201O10188C211O10227C218O10163C223O10294C234O10337C240O10337C245O10301C250O10383,,
tick,0x1a3726358,32250,0,0x0,3,0x0,0x3a1583d3455c,0x311ed227c90d,0x311ed227bbdd,0x3a1583d307ca,0x311ed227c90d,0x311ed227bbdd,0x3a1583d27001,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,LazyCompile,10,32291,0x3a1583d3d1ae,65,EventEmitterMixin node:internal/event_target:696:27,0xe898a5f5510,~
script-source,38,node:internal/event_target,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SafeWeakSet\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_EVENT_RECURSION\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_INVALID_THIS\x2C\n  }\n} = require('internal/errors');\nconst { validateObject\x2C validateString } = require('internal/validators');\n\nconst { customInspectSymbol } = require('internal/util');\nconst { inspect } = require('util');\n\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\n\nconst EventEmitter = require('events');\nconst {\n  kMaxEventTargetListeners\x2C\n  kMaxEventTargetListenersWarned\x2C\n} = EventEmitter;\n\nconst kEvents = Symbol('kEvents');\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\nconst kStop = Symbol('kStop');\nconst kTarget = Symbol('kTarget');\nconst kHandlers = Symbol('khandlers');\nconst kWeakHandler = Symbol('kWeak');\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCreateEvent = Symbol('kCreateEvent');\nconst kNewListener = Symbol('kNewListener');\nconst kRemoveListener = Symbol('kRemoveListener');\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\nconst kTrustEvent = Symbol('kTrustEvent');\n\nconst { now } = require('internal/perf/utils');\n\n// TODO(joyeecheung): V8 snapshot does not support instance member\n// initializers for now:\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\nconst kType = Symbol('type');\nconst kDefaultPrevented = Symbol('defaultPrevented');\nconst kCancelable = Symbol('cancelable');\nconst kTimestamp = Symbol('timestamp');\nconst kBubbles = Symbol('bubbles');\nconst kComposed = Symbol('composed');\nconst kPropagationStopped = Symbol('propagationStopped');\n\nconst isTrustedSet = new SafeWeakSet();\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return isTrustedSet.has(this);\n  }\n}\x2C 'isTrusted').get;\n\nclass Event {\n  constructor(type\x2C options = null) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    validateObject(options\x2C 'options'\x2C {\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\n    });\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\n    this[kCancelable] = !!cancelable;\n    this[kBubbles] = !!bubbles;\n    this[kComposed] = !!composed;\n    this[kType] = `${type}`;\n    this[kDefaultPrevented] = false;\n    this[kTimestamp] = now();\n    this[kPropagationStopped] = false;\n    if (options?.[kTrustEvent]) {\n      isTrustedSet.add(this);\n    }\n\n    // isTrusted is special (LegacyUnforgeable)\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\n      get: isTrusted\x2C\n      enumerable: true\x2C\n      configurable: false\n    });\n    this[kTarget] = null;\n    this[kIsBeingDispatched] = false;\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({\n      type: this[kType]\x2C\n      defaultPrevented: this[kDefaultPrevented]\x2C\n      cancelable: this[kCancelable]\x2C\n      timeStamp: this[kTimestamp]\x2C\n    }\x2C opts)}`;\n  }\n\n  stopImmediatePropagation() {\n    this[kStop] = true;\n  }\n\n  preventDefault() {\n    this[kDefaultPrevented] = true;\n  }\n\n  get target() { return this[kTarget]; }\n  get currentTarget() { return this[kTarget]; }\n  get srcElement() { return this[kTarget]; }\n\n  get type() { return this[kType]; }\n\n  get cancelable() { return this[kCancelable]; }\n\n  get defaultPrevented() {\n    return this[kCancelable] && this[kDefaultPrevented];\n  }\n\n  get timeStamp() { return this[kTimestamp]; }\n\n\n  // The following are non-op and unused properties/methods from Web API Event.\n  // These are not supported in Node.js and are provided purely for\n  // API completeness.\n\n  composedPath() { return this[kIsBeingDispatched] ? [this[kTarget]] : []; }\n  get returnValue() { return !this.defaultPrevented; }\n  get bubbles() { return this[kBubbles]; }\n  get composed() { return this[kComposed]; }\n  get eventPhase() {\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\n  }\n  get cancelBubble() { return this[kPropagationStopped]; }\n  set cancelBubble(value) {\n    if (value) {\n      this.stopPropagation();\n    }\n  }\n  stopPropagation() {\n    this[kPropagationStopped] = true;\n  }\n\n  static NONE = 0;\n  static CAPTURING_PHASE = 1;\n  static AT_TARGET = 2;\n  static BUBBLING_PHASE = 3;\n}\n\nObjectDefineProperty(Event.prototype\x2C SymbolToStringTag\x2C {\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'Event'\x2C\n});\n\nclass NodeCustomEvent extends Event {\n  constructor(type\x2C options) {\n    super(type\x2C options);\n    if (options?.detail) {\n      this.detail = options.detail;\n    }\n  }\n}\n\n// Weak listener cleanup\n// This has to be lazy for snapshots to work\nlet weakListenersState = null;\n// The resource needs to retain the callback so that it doesn't\n// get garbage collected now that it's weak.\nlet objectToWeakListenerMap = null;\nfunction weakListeners() {\n  weakListenersState ??= new SafeFinalizationRegistry(\n    (listener) => listener.remove()\n  );\n  objectToWeakListenerMap ??= new SafeWeakMap();\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\n}\n\n// The listeners for an EventTarget are maintained as a linked list.\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\n// use of capture or bubbling\x2C in order to be spec compliant we have to\n// take on the additional complexity of supporting it. Fortunately\x2C using\n// the linked list makes dispatching faster\x2C even if adding/removing is\n// slower.\nclass Listener {\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n              isNodeStyleListener\x2C weak) {\n    this.next = undefined;\n    if (previous !== undefined)\n      previous.next = this;\n    this.previous = previous;\n    this.listener = listener;\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\n    this.once = once;\n    this.capture = capture;\n    this.passive = passive;\n    this.isNodeStyleListener = isNodeStyleListener;\n    this.removed = false;\n    this.weak = Boolean(weak); // Don't retain the object\n\n    if (this.weak) {\n      this.callback = new SafeWeakRef(listener);\n      weakListeners().registry.register(listener\x2C this\x2C this);\n      // Make the retainer retain the listener in a WeakMap\n      weakListeners().map.set(weak\x2C listener);\n      this.listener = this.callback;\n    } else if (typeof listener === 'function') {\n      this.callback = listener;\n      this.listener = listener;\n    } else {\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\n      this.listener = listener;\n    }\n  }\n\n  same(listener\x2C capture) {\n    const myListener = this.weak ? this.listener.deref() : this.listener;\n    return myListener === listener && this.capture === capture;\n  }\n\n  remove() {\n    if (this.previous !== undefined)\n      this.previous.next = this.next;\n    if (this.next !== undefined)\n      this.next.previous = this.previous;\n    this.removed = true;\n    if (this.weak)\n      weakListeners().registry.unregister(this);\n  }\n}\n\nfunction initEventTarget(self) {\n  self[kEvents] = new SafeMap();\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\n  self[kMaxEventTargetListenersWarned] = false;\n}\n\nclass EventTarget {\n  // Used in checking whether an object is an EventTarget. This is a well-known\n  // symbol as EventTarget may be used cross-realm.\n  // Ref: https://github.com/nodejs/node/pull/33661\n  static [kIsEventTarget] = true;\n\n  constructor() {\n    initEventTarget(this);\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\n    if (this[kMaxEventTargetListeners] > 0 &&\n        size > this[kMaxEventTargetListeners] &&\n        !this[kMaxEventTargetListenersWarned]) {\n      this[kMaxEventTargetListenersWarned] = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventTarget memory leak detected. ' +\n                          `${size} ${type} listeners ` +\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\n                          'events.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.target = this;\n      w.type = type;\n      w.count = size;\n      process.emitWarning(w);\n    }\n  }\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\n\n  addEventListener(type\x2C listener\x2C options = {}) {\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n\n    // We validateOptions before the shouldAddListeners check because the spec\n    // requires us to hit getters.\n    const {\n      once\x2C\n      capture\x2C\n      passive\x2C\n      signal\x2C\n      isNodeStyleListener\x2C\n      weak\x2C\n    } = validateEventListenerOptions(options);\n\n    if (!shouldAddListener(listener)) {\n      // The DOM silently allows passing undefined as a second argument\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error(`addEventListener called with ${listener}` +\n                          ' which has no effect.');\n      w.name = 'AddEventListenerArgumentTypeWarning';\n      w.target = this;\n      w.type = type;\n      process.emitWarning(w);\n      return;\n    }\n    type = String(type);\n\n    if (signal) {\n      if (signal.aborted) {\n        return;\n      }\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\n      // not prevent the event target from GC.\n      signal.addEventListener('abort'\x2C () => {\n        this.removeEventListener(type\x2C listener\x2C options);\n      }\x2C { once: true\x2C [kWeakHandler]: this });\n    }\n\n    let root = this[kEvents].get(type);\n\n    if (root === undefined) {\n      root = { size: 1\x2C next: undefined };\n      // This is the first handler in our linked list.\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                   isNodeStyleListener\x2C weak);\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\n      this[kEvents].set(type\x2C root);\n      return;\n    }\n\n    let handler = root.next;\n    let previous = root;\n\n    // We have to walk the linked list to see if we have a match\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\n      previous = handler;\n      handler = handler.next;\n    }\n\n    if (handler !== undefined) { // Duplicate! Ignore\n      return;\n    }\n\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                 isNodeStyleListener\x2C weak);\n    root.size++;\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\n  }\n\n  removeEventListener(type\x2C listener\x2C options = {}) {\n    if (!shouldAddListener(listener))\n      return;\n\n    type = String(type);\n    const capture = options?.capture === true;\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler.same(listener\x2C capture)) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  dispatchEvent(event) {\n    if (!(event instanceof Event))\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\n\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n\n    if (event[kIsBeingDispatched])\n      throw new ERR_EVENT_RECURSION(event.type);\n\n    this[kHybridDispatch](event\x2C event.type\x2C event);\n\n    return event.defaultPrevented !== true;\n  }\n\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\n    const createEvent = () => {\n      if (event === undefined) {\n        event = this[kCreateEvent](nodeValue\x2C type);\n        event[kTarget] = this;\n        event[kIsBeingDispatched] = true;\n      }\n      return event;\n    };\n    if (event !== undefined) {\n      event[kTarget] = this;\n      event[kIsBeingDispatched] = true;\n    }\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return true;\n\n    let handler = root.next;\n    let next;\n\n    while (handler !== undefined &&\n           (handler.passive || event?.[kStop] !== true)) {\n      // Cache the next item in case this iteration removes the current one\n      next = handler.next;\n\n      if (handler.removed) {\n        // Deal with the case an event is removed while event handlers are\n        // Being processed (removeEventListener called from a listener)\n        handler = next;\n        continue;\n      }\n      if (handler.once) {\n        handler.remove();\n        root.size--;\n        const { listener\x2C capture } = handler;\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n      }\n\n      try {\n        let arg;\n        if (handler.isNodeStyleListener) {\n          arg = nodeValue;\n        } else {\n          arg = createEvent();\n        }\n        const callback = handler.weak ?\n          handler.callback.deref() : handler.callback;\n        let result;\n        if (callback) {\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\n          if (!handler.isNodeStyleListener) {\n            arg[kIsBeingDispatched] = false;\n          }\n        }\n        if (result !== undefined && result !== null)\n          addCatch(result);\n      } catch (err) {\n        emitUncaughtException(err);\n      }\n\n      handler = next;\n    }\n\n    if (event !== undefined)\n      event[kIsBeingDispatched] = false;\n  }\n\n  [kCreateEvent](nodeValue\x2C type) {\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\n  }\n  [customInspectSymbol](depth\x2C options) {\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({}\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(EventTarget.prototype\x2C {\n  addEventListener: { enumerable: true }\x2C\n  removeEventListener: { enumerable: true }\x2C\n  dispatchEvent: { enumerable: true }\n});\nObjectDefineProperty(EventTarget.prototype\x2C SymbolToStringTag\x2C {\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'EventTarget'\x2C\n});\n\nfunction initNodeEventTarget(self) {\n  initEventTarget(self);\n}\n\nclass NodeEventTarget extends EventTarget {\n  static defaultMaxListeners = 10;\n\n  constructor() {\n    super();\n    initNodeEventTarget(this);\n  }\n\n  setMaxListeners(n) {\n    EventEmitter.setMaxListeners(n\x2C this);\n  }\n\n  getMaxListeners() {\n    return this[kMaxEventTargetListeners];\n  }\n\n  eventNames() {\n    return ArrayFrom(this[kEvents].keys());\n  }\n\n  listenerCount(type) {\n    const root = this[kEvents].get(String(type));\n    return root !== undefined ? root.size : 0;\n  }\n\n  off(type\x2C listener\x2C options) {\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  removeListener(type\x2C listener\x2C options) {\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  on(type\x2C listener) {\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  addListener(type\x2C listener) {\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n  emit(type\x2C arg) {\n    validateString(type\x2C 'type');\n    const hadListeners = this.listenerCount(type) > 0;\n    this[kHybridDispatch](arg\x2C type);\n    return hadListeners;\n  }\n\n  once(type\x2C listener) {\n    this.addEventListener(type\x2C listener\x2C\n                          { once: true\x2C [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  removeAllListeners(type) {\n    if (type !== undefined) {\n      this[kEvents].delete(String(type));\n    } else {\n      this[kEvents].clear();\n    }\n\n    return this;\n  }\n}\n\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\n  setMaxListeners: { enumerable: true }\x2C\n  getMaxListeners: { enumerable: true }\x2C\n  eventNames: { enumerable: true }\x2C\n  listenerCount: { enumerable: true }\x2C\n  off: { enumerable: true }\x2C\n  removeListener: { enumerable: true }\x2C\n  on: { enumerable: true }\x2C\n  addListener: { enumerable: true }\x2C\n  once: { enumerable: true }\x2C\n  emit: { enumerable: true }\x2C\n  removeAllListeners: { enumerable: true }\x2C\n});\n\n// EventTarget API\n\nfunction shouldAddListener(listener) {\n  if (typeof listener === 'function' ||\n      typeof listener?.handleEvent === 'function') {\n    return true;\n  }\n\n  if (listener == null)\n    return false;\n\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\n}\n\nfunction validateEventListenerOptions(options) {\n  if (typeof options === 'boolean')\n    return { capture: options };\n\n  if (options === null)\n    return {};\n  validateObject(options\x2C 'options'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  return {\n    once: Boolean(options.once)\x2C\n    capture: Boolean(options.capture)\x2C\n    passive: Boolean(options.passive)\x2C\n    signal: options.signal\x2C\n    weak: options[kWeakHandler]\x2C\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\n  };\n}\n\n// Test whether the argument is an event object. This is far from a fool-proof\n// test\x2C for example this input will result in a false positive:\n// > isEventTarget({ constructor: EventTarget })\n// It stands in its current implementation as a compromise.\n// Ref: https://github.com/nodejs/node/pull/33661\nfunction isEventTarget(obj) {\n  return obj?.constructor?.[kIsEventTarget];\n}\n\nfunction addCatch(promise) {\n  const then = promise.then;\n  if (typeof then === 'function') {\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\n      // The callback is called with nextTick to avoid a follow-up\n      // rejection from this promise.\n      emitUncaughtException(err);\n    });\n  }\n}\n\nfunction emitUncaughtException(err) {\n  process.nextTick(() => { throw err; });\n}\n\nfunction makeEventHandler(handler) {\n  // Event handlers are dispatched in the order they were first set\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\n  function eventHandler(...args) {\n    if (typeof eventHandler.handler !== 'function') {\n      return;\n    }\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\n  }\n  eventHandler.handler = handler;\n  return eventHandler;\n}\n\nfunction defineEventHandler(emitter\x2C name) {\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    get() {\n      return this[kHandlers]?.get(name)?.handler;\n    }\x2C\n    set(value) {\n      if (!this[kHandlers]) {\n        this[kHandlers] = new SafeMap();\n      }\n      let wrappedHandler = this[kHandlers]?.get(name);\n      if (wrappedHandler) {\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size--;\n          const size = this[kEvents].get(name).size;\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\n        }\n        wrappedHandler.handler = value;\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size++;\n          const size = this[kEvents].get(name).size;\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\n        }\n      } else {\n        wrappedHandler = makeEventHandler(value);\n        this.addEventListener(name\x2C wrappedHandler);\n      }\n      this[kHandlers].set(name\x2C wrappedHandler);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n}\n\nconst EventEmitterMixin = (Superclass) => {\n  class MixedEventEmitter extends Superclass {\n    constructor(...args) {\n      args = new SafeArrayIterator(args);\n      super(...args);\n      FunctionPrototypeCall(EventEmitter\x2C this);\n    }\n  }\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\n  delete protoProps.constructor;\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\n  return MixedEventEmitter;\n};\n\nmodule.exports = {\n  Event\x2C\n  EventEmitterMixin\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initEventTarget\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kTrustEvent\x2C\n  kRemoveListener\x2C\n  kEvents\x2C\n  kWeakHandler\x2C\n  isEventTarget\x2C\n};\n
code-source-info,0x3a1583d3d1ae,38,19901,20323,C0O19953C23O20137C30O20169C33O20182C38O20137C43O20196C47O20229C52O20270C57O20229C62O20296C64O20321,,
tick,0x1a3576720,33166,0,0x0,0,0x0,0x3a1583d3464d,0x311ed227c90d,0x311ed227bbdd,0x3a1583d307ca,0x311ed227c90d,0x311ed227bbdd,0x3a1583d27001,0x311ed227c90d,0x311ed227bbdd,0x3a1583d25bb7,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,Eval,10,33208,0x3a1583d3ebde,5, node:internal/modules/esm/transform_source:1:1,0x3a1583d3ea88,~
script-source,109,node:internal/modules/esm/transform_source,'use strict';\n\nfunction defaultTransformSource(source\x2C { url\x2C format } = {}\x2C\n                                defaultTransformSource) {\n  return { source };\n}\nexports.defaultTransformSource = defaultTransformSource;\n
code-source-info,0x3a1583d3ebde,109,0,215,C0O0C4O215,,
code-creation,Function,10,33208,0x3a1583d3ecc6,13, node:internal/modules/esm/transform_source:1:1,0x3a1583d3eb48,~
code-source-info,0x3a1583d3ecc6,109,0,215,C0O0C5O158C7O189C12O214,,
new,MemoryChunk,0x172aed040000,262144
code-creation,Eval,10,33416,0x3a1583d3f8c6,5, node:internal/modules/esm/translators:1:1,0x3a1583d3f3e0,~
script-source,110,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  JSONParse\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectKeys\x2C\n  PromisePrototypeCatch\x2C\n  PromiseReject\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SyntaxErrorPrototype\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nlet _TYPES = null;\nfunction lazyTypes() {\n  if (_TYPES !== null) return _TYPES;\n  return _TYPES = require('internal/util/types');\n}\n\nconst { readFileSync } = require('fs');\nconst { extname\x2C isAbsolute } = require('path');\nconst {\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst {\n  Module: CJSModule\x2C\n  cjsParseCache\n} = require('internal/modules/cjs/loader');\nconst internalURLModule = require('internal/url');\nconst { defaultGetSource } = require(\n  'internal/modules/esm/get_source');\nconst { defaultTransformSource } = require(\n  'internal/modules/esm/transform_source');\nconst createDynamicModule = require(\n  'internal/modules/esm/create_dynamic_module');\nconst { fileURLToPath\x2C URL } = require('url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\nconst { getOptionValue } = require('internal/options');\nconst experimentalImportMetaResolve =\n    getOptionValue('--experimental-import-meta-resolve');\nconst asyncESM = require('internal/process/esm_loader');\nconst { emitWarningSync } = require('internal/process/warning');\nconst { TextDecoder } = require('internal/encoding');\n\nlet cjsParse;\nasync function initCJSParse() {\n  if (typeof WebAssembly === 'undefined') {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  } else {\n    const { parse\x2C init } =\n        require('internal/deps/cjs-module-lexer/dist/lexer');\n    await init();\n    cjsParse = parse;\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\nexports.enrichCJSError = enrichCJSError;\n\nlet DECODER = null;\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\n  if (allowString && typeof body === 'string') {\n    return;\n  }\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\n    return;\n  }\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\n    hookName\x2C\n    'source'\x2C\n    body\n  );\n}\n\nfunction stringify(body) {\n  if (typeof body === 'string') return body;\n  assertBufferSource(body\x2C false\x2C 'transformSource');\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\n  return DECODER.decode(body);\n}\n\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\nasync function importModuleDynamically(specifier\x2C { url }) {\n  return asyncESM.ESMLoader.import(specifier\x2C url);\n}\n\nfunction createImportMetaResolve(defaultParentUrl) {\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\n    return PromisePrototypeCatch(\n      asyncESM.ESMLoader.resolve(specifier\x2C parentUrl)\x2C\n      (error) => (\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\n          error.url : PromiseReject(error))\n    );\n  };\n}\n\nfunction initializeImportMeta(meta\x2C { url }) {\n  // Alphabetical\n  if (experimentalImportMetaResolve)\n    meta.resolve = createImportMetaResolve(url);\n  meta.url = url;\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C async function moduleStrategy(url) {\n  let { source } = await this._getSource(\n    url\x2C { format: 'module' }\x2C defaultGetSource);\n  assertBufferSource(source\x2C true\x2C 'getSource');\n  ({ source } = await this._transformSource(\n    source\x2C { url\x2C format: 'module' }\x2C defaultTransformSource));\n  source = stringify(source);\n  maybeCacheSourceMap(url\x2C source);\n  debug(`Translating StandardModule ${url}`);\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n  moduleWrap.callbackMap.set(module\x2C {\n    initializeImportMeta\x2C\n    importModuleDynamically\x2C\n  });\n  return module;\n});\n\n/**\n * @param {Error | any} err\n * @param {string} [content] Content of the file\x2C if known.\n * @param {string} [filename] Useful only if `content` is unknown.\n */\nfunction enrichCJSError(err\x2C content\x2C filename) {\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\n    // Emit the warning synchronously because we are in the middle of handling\n    // a SyntaxError that will throw and likely terminate the process before an\n    // asynchronous warning would be emitted.\n    emitWarningSync(\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\n      'the .mjs extension.'\n    );\n  }\n}\n\n// Strategy for loading a node-style CommonJS module\nconst isWindows = process.platform === 'win32';\nconst winSepRegEx = /\\//g;\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C isMain) {\n  debug(`Translating CJSModule ${url}`);\n\n  let filename = internalURLModule.fileURLToPath(new URL(url));\n  if (isWindows)\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\n\n  if (!cjsParse) await initCJSParse();\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    let exports;\n    if (asyncESM.ESMLoader.cjsCache.has(module)) {\n      exports = asyncESM.ESMLoader.cjsCache.get(module);\n      asyncESM.ESMLoader.cjsCache.delete(module);\n    } else {\n      try {\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\n      } catch (err) {\n        enrichCJSError(err\x2C undefined\x2C filename);\n        throw err;\n      }\n    }\n\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default')\n        continue;\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {}\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  });\n});\n\nfunction cjsPreparseModuleExports(filename) {\n  let module = CJSModule._cache[filename];\n  if (module) {\n    const cached = cjsParseCache.get(module);\n    if (cached)\n      return { module\x2C exportNames: cached.exportNames };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    CJSModule._cache[filename] = module;\n  }\n\n  let source;\n  try {\n    source = readFileSync(filename\x2C 'utf8');\n  } catch {}\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n  }\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\n    let resolved;\n    try {\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\n    } catch {\n      return;\n    }\n    const ext = extname(resolved);\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n        isAbsolute(resolved)) {\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\n      for (const name of reexportNames)\n        exportNames.add(name);\n    }\n  });\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadNativeModule(id\x2C url);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C async function jsonStrategy(url) {\n  emitExperimentalWarning('Importing JSON modules');\n  debug(`Translating JSONModule ${url}`);\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  let modulePath;\n  let module;\n  if (pathname) {\n    modulePath = isWindows ?\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  let { source } = await this._getSource(\n    url\x2C { format: 'json' }\x2C defaultGetSource);\n  assertBufferSource(source\x2C true\x2C 'getSource');\n  ({ source } = await this._transformSource(\n    source\x2C { url\x2C format: 'json' }\x2C defaultTransformSource));\n  source = stringify(source);\n  if (pathname) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (pathname) {\n    CJSModule._cache[modulePath] = module;\n  }\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url) {\n  emitExperimentalWarning('Importing Web Assembly modules');\n  let { source } = await this._getSource(\n    url\x2C { format: 'wasm' }\x2C defaultGetSource);\n  assertBufferSource(source\x2C false\x2C 'getSource');\n  ({ source } = await this._transformSource(\n    source\x2C { url\x2C format: 'wasm' }\x2C defaultTransformSource));\n  assertBufferSource(source\x2C false\x2C 'transformSource');\n  debug(`Translating WASMModule ${url}`);\n  let compiled;\n  try {\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports))\n      reflect.exports[expt].set(exports[expt]);\n  }).module;\n});\n
code-source-info,0x3a1583d3f8c6,110,0,11976,C0O0C4O11976,,
code-creation,Function,10,33875,0x172aed04141e,813, node:internal/modules/esm/translators:1:1,0x3a1583d3f830,~
code-source-info,0x172aed04141e
code-creation,Eval,10,34000,0x172aed042ae6,5, node:internal/modules/esm/create_dynamic_module:1:1,0x172aed042900,~
script-source,111,node:internal/modules/esm/create_dynamic_module,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  JSONStringify\x2C\n  ObjectCreate\x2C\n  SafeSet\x2C\n} = primordials;\n\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\n\nfunction createImport(impt\x2C index) {\n  const imptPath = JSONStringify(impt);\n  return `import * as $import_${index} from ${imptPath};\nimport.meta.imports[${imptPath}] = $import_${index};`;\n}\n\nfunction createExport(expt) {\n  const name = `${expt}`;\n  return `let $${name};\nexport { $${name} as ${name} };\nimport.meta.exports.${name} = {\n  get: () => $${name}\x2C\n  set: (v) => $${name} = v\x2C\n};`;\n}\n\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\n  const source = `\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\nimport.meta.done();\n`;\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\n\n  const readyfns = new SafeSet();\n  const reflect = {\n    exports: ObjectCreate(null)\x2C\n    onReady: (cb) => { readyfns.add(cb); }\x2C\n  };\n\n  if (imports.length)\n    reflect.imports = ObjectCreate(null);\n\n  callbackMap.set(m\x2C {\n    initializeImportMeta: (meta\x2C wrap) => {\n      meta.exports = reflect.exports;\n      if (reflect.imports)\n        meta.imports = reflect.imports;\n      meta.done = () => {\n        evaluate(reflect);\n        reflect.onReady = (cb) => cb(reflect);\n        for (const fn of readyfns) {\n          readyfns.delete(fn);\n          fn(reflect);\n        }\n      };\n    }\x2C\n  });\n\n  return {\n    module: m\x2C\n    reflect\x2C\n  };\n};\n\nmodule.exports = createDynamicModule;\n
code-source-info,0x172aed042ae6,111,0,1756,C0O0C4O1756,,
code-creation,Function,10,34083,0x172aed042d1e,111, node:internal/modules/esm/create_dynamic_module:1:1,0x172aed042a50,~
code-source-info,0x172aed042d1e,111,0,1756,C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755,,
code-creation,Eval,10,34333,0x172aed043e4e,5, node:internal/vm/module:1:1,0x172aed0438f8,~
script-source,112,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  ReflectApply\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  getConstructorOf\x2C\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\nconst wrapToModuleMap = new SafeWeakMap();\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n\n      binding.callbackMap.set(this[kWrap]\x2C {\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      });\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    wrapToModuleMap.set(this[kWrap]\x2C this);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = {}) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = ObjectCreate({ constructor });\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      value: constructor.name\x2C\n      configurable: true\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = {}) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined &&\n        typeof initializeImportMeta !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\n    }\n\n    if (importModuleDynamically !== undefined &&\n        typeof importModuleDynamically !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.importModuleDynamically'\x2C 'function'\x2C\n        importModuleDynamically);\n    }\n\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\n        const module = await linker(identifier\x2C this\x2C { assert });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\n          // and error cause proposal.\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await PromiseAll(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kDependencySpecifiers] === undefined) {\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\n    }\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\n};\n
code-source-info,0x172aed043e4e,112,0,12310,C0O0C4O12310,,
code-creation,Function,10,34833,0x172aed0450be,872, node:internal/vm/module:1:1,0x172aed043db8,~
code-source-info,0x172aed0450be
code-creation,Function,10,34875,0x172aed04560e,30,<instance_members_initializer> node:internal/vm/module:256:3,0x172aed044438,~
code-source-info,0x172aed04560e,112,6796,6832,C3O6805C29O6832,,
tick,0x1a363621c,34875,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x3a1583d25bea,0x311ed227c90d,0x311ed227bbdd,0x3a1583d213a1,0x311ed227c90d,0x311ed227bbdd,0x3a1583d1d1a4,0x3a1583d01dc2,0x311ed227b955
code-creation,LazyCompile,10,34958,0x172aed046c56,80,Loader node:internal/modules/esm/loader:45:14,0x3a1583d268b0,~
code-source-info,0x172aed046c56,101,1421,3183,C0O1516C2O1535C4O1533C8O1612C10O1633C13O1629C18O1627C22O1699C24O1719C27O1715C32O1713C36O2223C37O2250C41O2504C43O2520C45O2518C49O2722C51O2740C53O2738C57O2856C59O2874C61O2872C65O3034C67O3058C69O3056C73O3160C74O3175C79O3182,,
code-creation,LazyCompile,10,35000,0x172aed047676,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x3a1583d27e50,~
code-source-info,0x172aed047676,102,430,447,C3O436C7O442C11O436C26O446,,
code-creation,LazyCompile,10,35000,0x172aed0478e6,13,desc.value node:internal/per_context/primordials:325:32,0x1910fc7c9d60,~
code-source-info,0x172aed0478e6,6,9496,9555,C0O9513C7O9520C12O9543,,
code-creation,LazyCompile,10,35041,0x172aed0479fe,13,SafeIterator node:internal/per_context/primordials:270:16,0x1910fc7c97b0,~
code-source-info,0x172aed0479fe,6,7785,7845,C0O7804C3O7821C7O7819C12O7844,,
code-creation,LazyCompile,10,35041,0x172aed047b46,13,next node:internal/per_context/primordials:273:9,0x1910fc7c9878,~
code-source-info,0x172aed047b46,6,7854,7899,C0O7865C3O7882C8O7872C12O7893,,
code-creation,LazyCompile,10,35125,0x172aed048026,152,deprecate node:internal/util:99:19,0x1910fc7e9cd8,~
code-source-info,0x172aed048026,12,2444,3620,C0O2444C26O2464C31O2476C37O2490C42O2506C44O2516C45O2571C53O2609C61O2631C66O2612C83O2667C87O2695C100O2695C105O2741C106O2741C108O3316C121O3316C126O3356C129O3363C135O3556C141O3582C145O3577C149O3600C151O3618,,
code-creation,LazyCompile,10,35250,0x172aed04878e,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0x3a1583d203d8,~
code-source-info,0x172aed04878e,98,38372,39328,C0O38395C9O38415C14O38419C22O38433C28O38433C33O38472C42O38492C47O38496C55O38508C61O38508C66O38703C74O38719C77O38724C85O38740C93O38724C103O38762C106O38767C114O38783C125O38767C131O38823C140O38824C143O38829C157O38829C169O38868C173O38887C180O38916C183O38921C191O38921C198O38887C203O38963C210O38992C213O38997C221O38997C228O38963C233O39040C237O39060C244O39094C249O39122C254O39153C257O39158C262O39122C270O39176C273O39094C279O39060C284O39199C286O39211C292O39272C297O39293C302O39313C305O39293C309O39291C314O39327,,
code-creation,Eval,10,35375,0x172aed04b72e,5, node:internal/modules/run_main:1:1,0x172aed04b518,~
script-source,113,node:internal/modules/run_main,'use strict';\n\nconst {\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst CJSLoader = require('internal/modules/cjs/loader');\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\n\nfunction resolveMainPath(main) {\n  // Note extension resolution for the main entry point can be deprecated in a\n  // future major.\n  // Module._findPath is monkey-patchable here.\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  if (!mainPath)\n    return;\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain)\n    mainPath = toRealPath(mainPath);\n\n  return mainPath;\n}\n\nfunction shouldUseESMLoader(mainPath) {\n  const userLoader = getOptionValue('--experimental-loader');\n  if (userLoader)\n    return true;\n  const esModuleSpecifierResolution =\n    getOptionValue('--experimental-specifier-resolution');\n  if (esModuleSpecifierResolution === 'node')\n    return true;\n  // Determine the module format of the main\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\n    return true;\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\n    return false;\n  const pkg = readPackageScope(mainPath);\n  return pkg && pkg.data.type === 'module';\n}\n\nfunction runMainESM(mainPath) {\n  const esmLoader = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n  handleMainPromise(esmLoader.loadESM((ESMLoader) => {\n    const main = path.isAbsolute(mainPath) ?\n      pathToFileURL(mainPath).href : mainPath;\n    return ESMLoader.import(main);\n  }));\n}\n\nasync function handleMainPromise(promise) {\n  // Handle a Promise from running code that potentially does Top-Level Await.\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\n  // value if the main code never finishes running.\n  function handler() {\n    if (process.exitCode === undefined)\n      process.exitCode = 13;\n  }\n  process.on('exit'\x2C handler);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handler);\n  }\n}\n\n// For backwards compatibility\x2C we have to run a bunch of\n// monkey-patchable code that belongs to the CJS loader (exposed by\n// `require('module')`) even when the entry point is ESM.\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x172aed04b72e,113,0,2696,C0O0C4O2696,,
code-creation,Function,10,35458,0x172aed04ba36,149, node:internal/modules/run_main:1:1,0x172aed04b698,~
code-source-info,0x172aed04ba36,113,0,2696,C0O0C60O25C66O85C72O85C77O133C83O141C89O153C95O212C101O212C106O193C112O254C118O254C122O254C124O2628C131O2649C137O2674C143O2643C148O2695,,
code-creation,LazyCompile,10,35541,0x172aed04c016,154,initializeESMLoader node:internal/bootstrap/pre_execution:429:29,0x311ed227de90,~
code-source-info,0x172aed04c016,91,13653,14720,C0O13735C6O13735C13O13784C16O13780C21O13778C25O13802C31O13834C32O13841C33O13941C39O13941C44O13857C49O13897C54O13987C60O13987C65O14188C70O14146C74O14258C79O14219C83O14424C91O14428C97O14544C103O14544C108O14493C113O14501C118O14519C123O14590C129O14590C134O14609C136O14619C140O14633C142O14653C146O14677C148O14696C153O14719,,
code-creation,LazyCompile,10,35541,0x172aed04c226,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x3a1583d1f8c8,~
code-source-info,0x172aed04c226,98,2306,2346,C0O2311C4O2344,,
code-creation,LazyCompile,10,35583,0x172aed04c2de,21,assert node:internal/assert:11:16,0x30d75b97750,~
script-source,16,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x172aed04c2de,16,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,LazyCompile,10,35625,0x172aed04c4ee,53,loadPreloadModules node:internal/bootstrap/pre_execution:472:28,0x311ed227df80,~
code-source-info,0x172aed04c4ee,91,15196,15516,C0O15283C8O15283C13O15314C15O15351C21O15358C26O15434C32O15434C37O15434C42O15401C47O15478C52O15515,,
code-creation,LazyCompile,10,35625,0x172aed04c6de,166,Module._preloadModules node:internal/modules/cjs/loader:1257:34,0x3a1583d20468,~
code-source-info,0x172aed04c6de,98,39364,39938,C0O39379C5O39384C11O39412C12O39419C13O39423C17O39436C23O39631C33O39631C42O39681C45O39703C53O39728C58O39728C63O39703C68O39694C85O39756C88O39762C95O39767C100O39789C106O39802C114O39817C116O39817C119O39851C121O39867C125O39856C130O39891C137O39907C141O39891C146O39876C151O39838C154O39915C158O39928C165O39937,,
tick,0x1014273a0,35666,0,0x0,0,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,35666,0x172aed04c90e,94,Module node:internal/modules/cjs/loader:172:16,0x3a1583d1f228,~
code-source-info,0x172aed04c90e,98,5284,5521,C14O5306C16O5314C20O5322C22O5334C25O5339C30O5339C35O5332C39O5354C40O5367C44O5375C49O5393C54O5393C60O5414C71O5414C76O5453C77O5467C81O5477C82O5489C86O5500C88O5514C93O5520,,
code-creation,LazyCompile,10,35708,0x172aed04cb56,162,dirname node:path:1275:10,0xe898a5e8828,~
code-source-info,0x172aed04cb56,35,38742,39411,C0O38755C8O38755C13O38798C19O38805C24O38818C26O38829C27O38850C34O38850C42O38889C44O38885C48O38923C51O38950C53O38978C57O38985C61O38992C63O38992C68O39011C73O39015C81O39054C83O39050C88O39084C92O39115C97O39134C101O39221C103O39000C108O38960C111O39262C113O39270C118O39284C128O39311C129O39316C135O39335C140O39348C142O39360C143O39365C156O39372C161O39407,,
code-creation,LazyCompile,10,35750,0x172aed04cd3e,45,updateChildren node:internal/modules/cjs/loader:165:24,0x3a1583d1f1d8,~
code-source-info,0x172aed04cd3e,98,5049,5222,C0O5092C7O5098C15O5112C19O5130C23O5138C26O5138C33O5184C38O5184C44O5221,,
code-creation,LazyCompile,10,35791,0x172aed04cf0e,183,Module._nodeModulePaths node:internal/modules/cjs/loader:629:37,0x3a1583d1fd08,~
code-source-info,0x172aed04cf0e,98,18791,19922,C0O18846C5O18858C10O18858C17O19037C19O19046C24O19061C28O19086C29O19301C32O19327C36O19334C40O19343C42O19358C47O19368C48O19368C53O19400C58O19400C64O19442C66O19455C68O19451C73O19485C75O19495C77O19491C82O19512C89O19563C100O19563C108O19599C112O19512C117O19638C120O19656C124O19676C126O19682C131O19700C138O19711C144O19715C149O19737C156O19769C159O19376C164O19309C167O19856C175O19856C180O19905C182O19918,,
code-creation,LazyCompile,10,35833,0x172aed04d2ae,127,Module.require node:internal/modules/cjs/loader:997:36,0x3a1583d20068,~
code-source-info,0x172aed04d2ae,98,31204,31495,C0O31213C8O31213C13O31241C15O31248C20O31262C36O31268C41O31262C42O31377C51O31389C60O31405C63O31419C76O31419C93O31474C102O31486C126O31494,,
code-creation,LazyCompile,10,35916,0x172aed04d5ae,619,Module._load node:internal/modules/cjs/loader:757:24,0x3a1583d1fec8,~
code-source-info,0x172aed04d5ae
code-creation,LazyCompile,10,35958,0x172aed04da56,104,logger node:internal/util/debuglog:96:18,0xe898a5f9fb0,~
code-source-info,0x172aed04da56,40,2899,3124,C0O2899C3O2931C30O2955C35O2962C38O2970C39O2985C45O3002C49O2992C53O3007C54O3022C60O3039C66O3048C70O3029C75O3053C76O3069C80O3076C87O3089C92O3085C98O3076C103O3114,,
code-creation,LazyCompile,10,36000,0x172aed04dbbe,3, node:internal/per_context/primordials:276:21,0x1910fc7c9920,~
code-source-info,0x172aed04dbbe,6,7920,7949,C0O7931C2O7943,,
code-creation,LazyCompile,10,36000,0x172aed04dca6,155,debug node:internal/util/debuglog:76:15,0xe898a5f9f10,~
code-source-info,0x172aed04dca6,40,2357,2781,C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C81O2612C86O2619C89O2627C90O2642C96O2659C100O2649C104O2664C105O2679C111O2696C117O2705C121O2686C126O2710C127O2726C131O2733C138O2746C143O2742C149O2733C154O2771,,
code-creation,LazyCompile,10,36041,0x172aed04de86,41,init node:internal/util/debuglog:72:16,0xe898a5f9ec0,~
code-source-info,0x172aed04de86,40,2259,2342,C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341,,
code-creation,LazyCompile,10,36041,0x172aed04df86,2,testEnabled node:internal/util/debuglog:32:19,0x3a1583d11828,~
code-source-info,0x172aed04df86,40,973,984,C0O979C1O984,,
code-creation,LazyCompile,10,36083,0x172aed04e12e,116,debuglogImpl node:internal/util/debuglog:49:22,0xe898a5f9cf8,~
code-source-info,0x172aed04e12e,40,1451,1995,C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993,,
code-creation,LazyCompile,10,36083,0x172aed04e2f6,10, node:internal/modules/cjs/loader:272:66,0x3a1583d1fb98,~
code-source-info,0x172aed04e2f6,98,7709,7734,C0O7721C2O7727C9O7733,,
code-creation,LazyCompile,10,36125,0x172aed04e3b6,2,noop node:internal/util/debuglog:47:14,0xe898a5f9ca8,~
code-source-info,0x172aed04e3b6,40,1419,1427,C1O1426,,
code-creation,LazyCompile,10,36208,0x172aed04e7a6,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x3a1583d1ff50,~
code-source-info,0x172aed04e7a
code-creation,LazyCompile,10,36250,0x172aed04ed76,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x1910fc7cf628,~
code-source-info,0x172aed04ed76,9,7353,7449,C0O7376C5O7389C10O7393C15O7393C21O7406C23O7424C27O7445,,
code-creation,LazyCompile,10,36291,0x172aed04f03e,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x3a1583d1fd98,~
code-source-info,0x172aed04f03e
code-creation,LazyCompile,10,36333,0x172aed04f35e,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x3a1583d1f548,~
code-source-info,0x172aed04f35e,98,12270,12533,C0O12283C4O12296C5O12309C6O12324C12O12354C16O12363C17O12384C24O12387C29O12410C36O12413C44O12455C47O12470C52O12470C59O12478C62O12483C66O12476C69O12487C72O12508C73O12521C75O12532,,
code-creation,LazyCompile,10,36375,0x172aed04f59e,235,trySelf node:internal/modules/cjs/loader:441:17,0x3a1583d1f598,~
code-source-info,0x172aed04f59e,98,12551,13384,C0O12577C4O12594C5O12607C6O12648C9O12648C17O12625C22O12636C27O12686C31O12702C37O12725C38O12738C39O12756C47O12775C48O12788C49O12796C51O12829C55O12821C60O12841C65O12867C70O12913C82O12871C89O12929C94O12947C97O12981C102O12986C107O12947C112O12945C118O13010C119O13023C123O13041C128O13070C133O13099C138O13121C142O13099C149O13163C152O13163C159O13190C168O13070C183O13048C188O13236C200O13257C203O13263C210O13268C215O13302C222O13346C226O13308C231O13302C232O13370C234O13370,,
code-creation,LazyCompile,10,36416,0x172aed04f886,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x3a1583d1f368,~
code-source-info,0x172aed04f886,98,8919,9437,C0O8962C7O8996C10O8962C16O9008C18O9035C25O9090C28O9052C34O9100C47O9112C54O9168C61O9207C66O9211C70O9172C77O9236C78O9249C79O9268C84O9292C86O9290C90O9268C95O9302C97O9313C104O9334C110O9353C116O9370C117O9397C119O9397C124O9026C127O9422C128O9435,,
code-creation,LazyCompile,10,36458,0x172aed04fbe6,234,readPackage node:internal/modules/cjs/loader:290:21,0x3a1583d1f318,~
code-source-info,0x172aed04fbe6,98,8102,8892,C0O8137C5O8142C13O8142C20O8200C25O8217C30O8217C36O8234C38O8262C40O8278C41O8297C46O8315C51O8315C57O8353C63O8366C72O8392C77O8402C79O8432C84O8449C91O8449C97O8475C98O8488C102O8521C107O8521C112O8559C117O8580C125O8605C133O8633C141O8664C149O8692C160O8708C165O8725C170O8725C176O8754C178O8770C190O8791C195O8798C199O8814C207O8843C213O8854C220O8865C224O8861C227O8824C231O8878C233O8878,,
code-creation,LazyCompile,10,36500,0x172aed04fefe,199,read node:internal/modules/package_json_reader:16:14,0x3a1583d24fa8,~
code-source-info,0x172aed04fefe,99,292,954,C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952,,
code-creation,LazyCompile,10,36541,0x172aed05025e,3,toNamespacedPath node:path:1266:19,0xe898a5e87d8,~
code-source-info,0x172aed05025e,35,38609,38669,C0O38653C2O38665,,
code-creation,LazyCompile,10,36666,0x172aed0509ee,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x3a1583d1fbe8,~
code-source-info,0x172aed0509ee
code-creation,LazyCompile,10,36708,0x172aed050dae,45,isAbsolute node:path:1156:13,0xe898a5e86e8,~
code-source-info,0x172aed050dae,35,35448,35594,C0O35461C8O35461C13O35507C19O35514C26O35532C31O35532C39O35571C41O35567C44O35590,,
code-creation,LazyCompile,10,36750,0x172aed050fd6,85,stat node:internal/modules/cjs/loader:151:14,0x3a1583d1f188,~
code-source-info,0x172aed050fd6,98,4627,5024,C0O4642C5O4658C10O4658C17O4688C23O4733C28O4743C33O4743C39O4762C41O4788C43O4802C44O4824C49O4824C54O4856C61O4889C66O4969C71O4979C76O4979C82O5008C84O5022,,
code-creation,LazyCompile,10,36791,0x172aed05113e,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x3a1583d1f4a8,~
code-source-info,0x172aed05113e,98,11501,11685,C0O11536C2O11548C6O11541C11O11584C16O11600C19O11594C23O11584C29O11619C31O11641C33O11657C34O11557C39O11523C42O11670C43O11683,,
code-creation,LazyCompile,10,36833,0x172aed05127e,50,tryFile node:internal/modules/cjs/loader:384:17,0x3a1583d1f408,~
code-source-info,0x172aed05127e,98,11077,11271,C0O11114C3O11114C8O11135C9O11142C14O11149C15O11156C16O11159C24O11184C26O11198C31O11210C36O11210C41O11231C42O11238C45O11245C49O11269,,
code-creation,LazyCompile,10,36875,0x172aed0513d6,42,toRealPath node:internal/modules/cjs/loader:393:20,0x3a1583d1f458,~
code-source-info,0x172aed0513d6,98,11292,11404,C0O11310C5O11320C10O11333C17O11353C20O11364C28O11383C35O11320C41O11402,,
tick,0x10110c4cc,36958,0,0x0,2,0x0,0x172aed0513f9,0x172aed0512ab,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,37083,0x172aed051816,1036,realpathSync node:fs:2408:22,0x6a337a1eab0,~
script-source,76,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\n// When using FSReqCallback\x2C make sure to create the object only *after* all\n// parameter validation has happened\x2C so that the objects are not kept in memory\n// in case they are created but never used due to an exception.\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\n} = constants;\n\nconst pathModule = require('path');\nconst { isArrayBufferView } = require('internal/util/types');\n\n// We need to get the statValues from the binding at the callsite since\n// it's re-initialized after deserialization.\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\n  }\x2C\n  AbortError\x2C\n  uvErrmapGet\x2C\n  uvException\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst internalUtil = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n} = require('internal/fs/utils');\nconst {\n  Dir\x2C\n  opendir\x2C\n  opendirSync\n} = require('internal/fs/dir');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isUint32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst watchers = require('internal/fs/watchers');\nconst ReadFileContext = require('internal/fs/read_file_context');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateCallback(cb);\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateCallback(cb);\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateCallback(cb);\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isUint32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void | never}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  const ctx = { path };\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\n  value: (path) => {\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n  const ctx = { path };\n  const nPath = pathModule.toNamespacedPath(path);\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\n\n  // In case of an invalid symlink\x2C `binding.access()` on win32\n  // will **not** return an error and is therefore not enough.\n  // Double check with `binding.stat()`.\n  if (isWindows && ctx.errno === undefined) {\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\n  }\n\n  return ctx.errno === undefined;\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError());\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const ctx = {};\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\n  if (ctx.errno !== undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw uvException(ctx);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  fd = getValidatedFd(fd);\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  fd = getValidatedFd(fd);\n\n  const ctx = {};\n  binding.close(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n\n  const ctx = { path };\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\n                              flagsNumber\x2C mode\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offset\n * @param {number} length\n * @param {number | bigint} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  if (arguments.length <= 3) {\n    // Assume fs.read(fd\x2C options\x2C callback)\n    let options = {};\n    if (arguments.length < 3) {\n      // This is fs.read(fd\x2C callback)\n      // buffer will be the callback\n      callback = buffer;\n    } else {\n      // This is fs.read(fd\x2C {}\x2C callback)\n      // buffer will be the options object\n      // offset is the callback\n      options = buffer;\n      callback = offset;\n    }\n\n    ({\n      buffer = Buffer.alloc(16384)\x2C\n      offset = 0\x2C\n      length = buffer.byteLength\x2C\n      position\n    } = options);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint;\n *   }} [offset]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  if (arguments.length <= 3) {\n    // Assume fs.read(fd\x2C buffer\x2C options)\n    const options = offset || {};\n\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  const ctx = {};\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\n * @param {number} [offset]\n * @param {number} [length]\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = String(buffer);\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\n * @param {number} [offset]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n  if (isArrayBufferView(buffer)) {\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const ctx = { path: oldPath\x2C dest: newPath };\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  const ctx = {};\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          return binding.rmdir(path\x2C req);\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    return binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  const ctx = { path };\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  return handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fsync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const ctx = { path };\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\n                               undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Direct[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                 options.encoding\x2C !!options.withFileTypes\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  fd = getValidatedFd(fd);\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction hasNoEntryError(ctx) {\n  if (ctx.errno) {\n    const uvErr = uvErrmapGet(ctx.errno);\n    return uvErr?.[0] === 'ENOENT';\n  }\n\n  if (ctx.error) {\n    return ctx.error.code === 'ENOENT';\n  }\n\n  return false;\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  fd = getValidatedFd(fd);\n  const ctx = { fd };\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                              options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\n                             options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  const ctx = { path };\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                                  options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch { }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  const flags = stringToSymlinkType(type);\n\n  const ctx = { path: target\x2C dest: path };\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const ctx = { path: existingPath\x2C dest: newPath };\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                              pathModule.toNamespacedPath(newPath)\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  const ctx = {};\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  const ctx = { path };\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const ctx = {};\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\n                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  const ctx = {};\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError();\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (isUserFd) {\n        callback(null);\n      } else {\n        fs.close(fd\x2C callback);\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | Object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | Object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  const flag = options.flag || 'w';\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options\x2C {});\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n  if (options.recursive && !(isOSX || isWindows))\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\n  const watcher = new watchers.FSWatcher();\n  watcher[watchers.kFSWatchStart](filename\x2C\n                                  options.persistent\x2C\n                                  options.recursive\x2C\n                                  options.encoding);\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      options.signal.addEventListener('abort'\x2C listener);\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\nconst emptyObj = ObjectCreate(null);\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options\x2C emptyObj);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = ObjectCreate(null);\n  const knownHard = ObjectCreate(null);\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const ctx = { path: base };\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n    handleErrorFromBinding(ctx);\n    knownHard[base] = true;\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard[base] || cache?.get(base) === base) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const ctx = { path: base };\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard[base] = true;\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks[id]) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        const ctx = { path: base };\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      if (cache) cache.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      const ctx = { path: base };\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n      knownHard[base] = true;\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options\x2C {});\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = ObjectCreate(null);\n  const knownHard = ObjectCreate(null);\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard[base]) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard[base] = true;\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard[base]) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard[base] = true;\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks[id]) {\n        return gotTarget(null\x2C seenLinks[id]);\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  return binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const path = `${prefix}XXXXXX`;\n  const ctx = { path };\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  const ctx = { path: src\x2C dest };  // non-prefixed\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {Object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {Object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 kb.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: Object | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: Object | null;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  opendir\x2C\n  opendirSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dir\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\n};\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  promises: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      if (promises === null)\n        promises = require('internal/fs/promises').exports;\n      return promises;\n    }\n  }\n});\n
code-source-info,0x172aed
tick,0x100e1c848,40125,0,0x0,3,0x0,0x172aed0513f9,0x172aed0512ab,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
tick,0x1a375bb3c,40125,0,0x0,3,0x0,0x172aed0513f9,0x172aed0512ab,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,40166,0x172aed057ec6,123,getOptions node:internal/fs/utils:314:20,0x6a337a26e58,~
script-source,77,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  MathMin\x2C\n  ObjectIs\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  Symbol\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  hideStackFrames\x2C\n  uvException\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isDate\x2C\n  isBigUint64Array\n} = require('internal/util/types');\nconst { once } = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\n    }\n  }\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type) {\n    this.name = name;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats) {\n    super(name\x2C null);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\n    return new DirentFromStats(name\x2C stats);\n  } else {\n    return new Dirent(name\x2C type);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions) {\n  if (options === null || options === undefined ||\n      typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = uvException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\n// otherwise return silently.\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  const err = new ERR_INVALID_ARG_VALUE(\n    propName\x2C\n    path\x2C\n    'must be a string or Uint8Array without null bytes'\n  );\n  if (throwError) {\n    throw err;\n  }\n  return err;\n});\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() to the timestamp.\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\nfunction dateFromMs(ms) {\n  return new Date(Number(ms) + 0.5);\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigUint64Array} stats\n * @param {number} offset\n * @returns\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigUint64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C\n                                 `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32(length\x2C 'length'\x2C 0);\n  }\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const err = nullCheck(path\x2C propName\x2C false);\n\n  if (err !== undefined) {\n    throw err;\n  }\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      return cb(new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      }));\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean(options.recursive\x2C 'options.recursive');\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\n    return mode;\n  }\n  if (typeof mode !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\n  }\n  throw new ERR_OUT_OF_RANGE(\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer === 'string') {\n    return;\n  }\n\n  if (\n    typeof buffer === 'object' &&\n    buffer !== null &&\n    typeof buffer.toString === 'function' &&\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\n  ) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n    buffer\n  );\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger(position\x2C 'position');\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE('position'\x2C\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                 position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\n                                   ['integer'\x2C 'bigint']\x2C\n                                   position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n};\n
code-source-info,0x172aed057ec6,77,7218,7841,C0O7248C14O7340C16O7362C17O7370C23O7409C29O7453C31O7477C35O7492C42O7527C48O7566C66O7572C71O7566C72O7659C79O7668C84O7686C87O7709C92O7686C96O7735C102O7763C107O7791C115O7763C120O7824C122O7839,,
code-creation,LazyCompile,10,41166,0x172aed059e2e,48,assertEncoding node:internal/fs/utils:151:24,0x6a337a26860,~
code-source-info,0x172aed059e2e,77,3527,3704,C0O3542C6O3559C9O3566C14O3566C21O3609C24O3636C40O3642C45O3636C47O3703,,
tick,0x1a3726358,41208,0,0x0,3,0x0,0x172aed051822,0x172aed0513f9,0x172aed0512ab,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,41250,0x172aed059f56,20,toPathIfFileURL node:internal/url:1496:25,0xe898a5db320,~
script-source,33,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  Int8Array\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  toUSVString\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateCallback\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst {\n  domainToASCII: _domainToASCII\x2C\n  domainToUnicode: _domainToUnicode\x2C\n  encodeAuth\x2C\n  parse\x2C\n  setURLConstructor\x2C\n  URL_FLAGS_CANNOT_BE_BASE\x2C\n  URL_FLAGS_HAS_FRAGMENT\x2C\n  URL_FLAGS_HAS_HOST\x2C\n  URL_FLAGS_HAS_PASSWORD\x2C\n  URL_FLAGS_HAS_PATH\x2C\n  URL_FLAGS_HAS_QUERY\x2C\n  URL_FLAGS_HAS_USERNAME\x2C\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\n  URL_FLAGS_SPECIAL\x2C\n  kFragment\x2C\n  kHost\x2C\n  kHostname\x2C\n  kPathStart\x2C\n  kPort\x2C\n  kQuery\x2C\n  kSchemeStart\n} = internalBinding('url');\n\nconst {\n  storeDataObject\x2C\n  revokeDataObject\x2C\n} = internalBinding('blob');\n\nconst context = Symbol('context');\nconst cannotBeBase = Symbol('cannot-be-base');\nconst cannotHaveUsernamePasswordPort =\n    Symbol('cannot-have-username-password-port');\nconst special = Symbol('special');\nconst searchParams = Symbol('query');\nconst kFormat = Symbol('format');\n\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nconst IteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf([][SymbolIterator]())\n);\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\nconst kOpaqueOrigin = 'null';\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  constructor() {\n    this.flags = 0;\n    this.scheme = ':';\n    this.username = '';\n    this.password = '';\n    this.host = null;\n    this.port = null;\n    this.path = [];\n    this.query = null;\n    this.fragment = null;\n  }\n}\n\nfunction isURLSearchParams(self) {\n  return self && self[searchParams] && !self[searchParams][searchParams];\n}\n\nclass URLSearchParams {\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init === null || init === undefined) {\n      this[searchParams] = [];\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator]) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init[searchParams];\n        this[searchParams] = childParams.slice();\n      } else if (method !== null && method !== undefined) {\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // Sequence<sequence<USVString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        const pairs = [];\n        for (const pair of init) {\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\n              pair === null ||\n              typeof pair[SymbolIterator] !== 'function') {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          const convertedPair = [];\n          for (const element of pair)\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\n          ArrayPrototypePush(pairs\x2C convertedPair);\n        }\n\n        this[searchParams] = [];\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        this[searchParams] = [];\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = toUSVString(key);\n            const typedValue = toUSVString(init[key]);\n            this[searchParams].push(typedKey\x2C typedValue);\n          }\n        }\n      }\n    } else {\n      // USVString\n      init = toUSVString(init);\n      if (init[0] === '?') init = init.slice(1);\n      initSearchParams(this\x2C init);\n    }\n\n    // "associated url object"\n    this[context] = null;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this[searchParams];\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  append(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = toUSVString(name);\n    value = toUSVString(value);\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\n    update(this[context]\x2C this);\n  }\n\n  delete(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        list.splice(i\x2C 2);\n      } else {\n        i += 2;\n      }\n    }\n    update(this[context]\x2C this);\n  }\n\n  get(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    const values = [];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    value = toUSVString(value);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  sort() {\n    const a = this[searchParams];\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateCallback(callback);\n\n    let list = this[searchParams];\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this[searchParams];\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this[searchParams]);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: { enumerable: true }\x2C\n  delete: { enumerable: true }\x2C\n  get: { enumerable: true }\x2C\n  getAll: { enumerable: true }\x2C\n  has: { enumerable: true }\x2C\n  set: { enumerable: true }\x2C\n  sort: { enumerable: true }\x2C\n  entries: { enumerable: true }\x2C\n  forEach: { enumerable: true }\x2C\n  keys: { enumerable: true }\x2C\n  values: { enumerable: true }\x2C\n  toString: { enumerable: true }\x2C\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n  if (!this[searchParams]) { // Invoked from URL constructor\n    this[searchParams] = new URLSearchParams();\n    this[searchParams][context] = this;\n  }\n  initSearchParams(this[searchParams]\x2C query);\n}\n\nfunction onParseError(flags\x2C input) {\n  throw new ERR_INVALID_URL(input);\n}\n\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\n    ctx.flags |= URL_FLAGS_SPECIAL;\n  } else {\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\n  }\n  ctx.scheme = protocol;\n  ctx.port = port;\n}\n\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  } else {\n    ctx.host = null;\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].port = port;\n}\n\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\n}\n\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\n    ctx.path = path;\n    ctx.flags |= URL_FLAGS_HAS_PATH;\n  } else {\n    ctx.path = [];\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\n  }\n\n  // The C++ binding may set host to empty string.\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].query = query;\n}\n\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].fragment = fragment;\n}\n\nclass URL {\n  constructor(input\x2C base) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    let base_context;\n    if (base !== undefined) {\n      base_context = new URL(base)[context];\n    }\n    this[context] = new URLContext();\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\n  }\n\n  get [special]() {\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\n  }\n\n  get [cannotBeBase]() {\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\n  }\n\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  get [cannotHaveUsernamePasswordPort]() {\n    const { host\x2C scheme } = this[context];\n    return ((host == null || host === '') ||\n            this[cannotBeBase] ||\n            scheme === 'file:');\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (this == null ||\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\n      throw new ERR_INVALID_THIS('URL');\n    }\n\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = ObjectCreate({ constructor });\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj.cannotBeBase = this[cannotBeBase];\n      obj.special = this[special];\n      obj[context] = this[context];\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  [kFormat](options) {\n    if (options)\n      validateObject(options\x2C 'options');\n\n    options = {\n      fragment: true\x2C\n      unicode: false\x2C\n      search: true\x2C\n      auth: true\x2C\n      ...options\n    };\n    const ctx = this[context];\n    // https://url.spec.whatwg.org/#url-serializing\n    let ret = ctx.scheme;\n    if (ctx.host !== null) {\n      ret += '//';\n      const has_username = ctx.username !== '';\n      const has_password = ctx.password !== '';\n      if (options.auth && (has_username || has_password)) {\n        if (has_username)\n          ret += ctx.username;\n        if (has_password)\n          ret += `:${ctx.password}`;\n        ret += '@';\n      }\n      ret += options.unicode ?\n        domainToUnicode(ctx.host) : ctx.host;\n      if (ctx.port !== null)\n        ret += `:${ctx.port}`;\n    }\n    if (this[cannotBeBase]) {\n      ret += ctx.path[0];\n    } else {\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\n        ret += '/.';\n      }\n      if (ctx.path.length) {\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\n      }\n    }\n    if (options.search && ctx.query !== null)\n      ret += `?${ctx.query}`;\n    if (options.fragment && ctx.fragment !== null)\n      ret += `#${ctx.fragment}`;\n    return ret;\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  toString() {\n    return this[kFormat]({});\n  }\n\n  get href() {\n    return this[kFormat]({});\n  }\n\n  set href(input) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\n  }\n\n  // readonly\n  get origin() {\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\n    const ctx = this[context];\n    switch (ctx.scheme) {\n      case 'blob:':\n        if (ctx.path.length > 0) {\n          try {\n            return (new URL(ctx.path[0])).origin;\n          } catch {\n            // Fall through... do nothing\n          }\n        }\n        return kOpaqueOrigin;\n      case 'ftp:':\n      case 'http:':\n      case 'https:':\n      case 'ws:':\n      case 'wss:':\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\n    }\n    return kOpaqueOrigin;\n  }\n\n  get protocol() {\n    return this[context].scheme;\n  }\n\n  set protocol(scheme) {\n    // toUSVString is not needed.\n    scheme = `${scheme}`;\n    if (scheme.length === 0)\n      return;\n    const ctx = this[context];\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\n  }\n\n  get username() {\n    return this[context].username;\n  }\n\n  set username(username) {\n    // toUSVString is not needed.\n    username = `${username}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (username === '') {\n      ctx.username = '';\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\n      return;\n    }\n    ctx.username = encodeAuth(username);\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\n  }\n\n  get password() {\n    return this[context].password;\n  }\n\n  set password(password) {\n    // toUSVString is not needed.\n    password = `${password}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (password === '') {\n      ctx.password = '';\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\n      return;\n    }\n    ctx.password = encodeAuth(password);\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\n  }\n\n  get host() {\n    const ctx = this[context];\n    let ret = ctx.host || '';\n    if (ctx.port !== null)\n      ret += `:${ctx.port}`;\n    return ret;\n  }\n\n  set host(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\n  }\n\n  get hostname() {\n    return this[context].host || '';\n  }\n\n  set hostname(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\n  }\n\n  get port() {\n    const port = this[context].port;\n    return port === null ? '' : String(port);\n  }\n\n  set port(port) {\n    // toUSVString is not needed.\n    port = `${port}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (port === '') {\n      ctx.port = null;\n      return;\n    }\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\n  }\n\n  get pathname() {\n    const ctx = this[context];\n    if (this[cannotBeBase])\n      return ctx.path[0];\n    if (ctx.path.length === 0)\n      return '';\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\n  }\n\n  set pathname(path) {\n    // toUSVString is not needed.\n    path = `${path}`;\n    if (this[cannotBeBase])\n      return;\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\n          onParsePathComplete.bind(this));\n  }\n\n  get search() {\n    const { query } = this[context];\n    if (query === null || query === '')\n      return '';\n    return `?${query}`;\n  }\n\n  set search(search) {\n    const ctx = this[context];\n    search = toUSVString(search);\n    if (search === '') {\n      ctx.query = null;\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n    } else {\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\n      ctx.query = '';\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\n      if (search) {\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\n      }\n    }\n    initSearchParams(this[searchParams]\x2C search);\n  }\n\n  // readonly\n  get searchParams() {\n    return this[searchParams];\n  }\n\n  get hash() {\n    const { fragment } = this[context];\n    if (fragment === null || fragment === '')\n      return '';\n    return `#${fragment}`;\n  }\n\n  set hash(hash) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    hash = `${hash}`;\n    if (!hash) {\n      ctx.fragment = null;\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\n      return;\n    }\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\n    ctx.fragment = '';\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\n  }\n\n  toJSON() {\n    return this[kFormat]({});\n  }\n\n  static createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    // Yes\x2C lazy loading is annoying but because of circular\n    // references between the url\x2C internal/blob\x2C and buffer\n    // modules\x2C lazy loading here makes sure that things work.\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  static revokeObjectURL(url) {\n    url = `${url}`;\n    try {\n      const parsed = new URL(url);\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n      if (split.length === 2)\n        revokeDataObject(split[1]);\n    } catch {\n      // If there's an error\x2C it's ignored.\n    }\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\n  toString: { enumerable: true }\x2C\n  href: { enumerable: true }\x2C\n  origin: { enumerable: true }\x2C\n  protocol: { enumerable: true }\x2C\n  username: { enumerable: true }\x2C\n  password: { enumerable: true }\x2C\n  host: { enumerable: true }\x2C\n  hostname: { enumerable: true }\x2C\n  port: { enumerable: true }\x2C\n  pathname: { enumerable: true }\x2C\n  search: { enumerable: true }\x2C\n  searchParams: { enumerable: true }\x2C\n  hash: { enumerable: true }\x2C\n  toJSON: { enumerable: true }\x2C\n});\n\nfunction update(url\x2C params) {\n  if (!url)\n    return;\n\n  const ctx = url[context];\n  const serializedParams = params.toString();\n  if (serializedParams) {\n    ctx.query = serializedParams;\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\n  } else {\n    ctx.query = null;\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n  }\n}\n\nfunction initSearchParams(url\x2C init) {\n  if (!init) {\n    url[searchParams] = [];\n    return;\n  }\n  url[searchParams] = parseParams(init);\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let pairStart = 0;\n  let lastPos = 0;\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i;\n  for (i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// Mainly to mitigate func-name-matching ESLint rule\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\n  // https://heycam.github.io/webidl/#dfn-class-string\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: classStr\n  });\n\n  // https://heycam.github.io/webidl/#es-operations\n  for (const key of ObjectKeys(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\nfunction createSearchParamsIterator(target\x2C kind) {\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\n  iterator[context] = {\n    target\x2C\n    kind\x2C\n    index: 0\n  };\n  return iterator;\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\n\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\n  next() {\n    if (!this ||\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n    }\n\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const values = target[searchParams];\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this[context].index = index + 2;\n\n    let result;\n    if (kind === 'key') {\n      result = name;\n    } else if (kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\n    };\n  }\x2C\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (this == null || this[context] == null || this[context].target == null)\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\n    );\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n});\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToUnicode(`${domain}`);\n}\n\n// Utility function that converts a URL object into an ordinary\n// options object as expected by the http.request and https.request\n// APIs.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol\x2C\n    hostname: typeof url.hostname === 'string' &&\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\n      url.hostname\x2C\n    hash: url.hash\x2C\n    search: url.search\x2C\n    pathname: url.pathname\x2C\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n  }\n  return options;\n}\n\nconst forwardSlashRegEx = /\\//g;\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\n        );\n      }\n    }\n  }\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = pathname.codePointAt(1) | 0x20;\n  const sep = pathname[2];\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return pathname.slice(1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURLInstance(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIncludes(filepath\x2C '%'))\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  const outURL = new URL('file://');\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\n    if (paths.length <= 3) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\n      );\n    }\n    const hostname = paths[2];\n    if (hostname.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Empty UNC servername'\n      );\n    }\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\n  } else {\n    let resolved = path.resolve(filepath);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                   filepath.length - 1);\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n        resolved[resolved.length - 1] !== path.sep)\n      resolved += '/';\n    outURL.pathname = encodePathChars(resolved);\n  }\n  return outURL;\n}\n\nfunction isURLInstance(fileURLOrPath) {\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURLInstance(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = new URLContext();\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n\n  const url = ObjectCreate(URL.prototype);\n  url[context] = ctx;\n  const params = new URLSearchParams();\n  url[searchParams] = params;\n  params[context] = url;\n  initSearchParams(params\x2C query);\n  return url;\n}\nsetURLConstructor(constructUrl);\n\nmodule.exports = {\n  toUSVString\x2C\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  isURLInstance\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  formatSymbol: kFormat\x2C\n  searchParamsSymbol: searchParams\x2C\n  encodeStr\n};\n
code-source-info,0x172aed059f56,33,41449,41570,C0O41469C3O41474C9O41508C11O41529C12O41532C15O41539C19O41568,,
code-creation,LazyCompile,10,42833,0x172aed05d096,17,isURLInstance node:internal/url:1492:23,0xe898a5db2d0,~
code-source-info,0x172aed05d096,33,41326,41423,C0O41346C3O41367C6O41392C12O41414C16O41421,,
tick,0x1a37298d4,42875,0,0x0,3,0x0,0x172aed05182f,0x172aed0513f9,0x172aed0512ab,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,42875,0x172aed05d206,81, node:internal/fs/utils:668:38,0x6a337a27880,~
code-source-info,0x172aed05d206,77,18141,18411,C14O18174C22O18207C25O18207C31O18233C36O18264C49O18239C54O18233C55O18329C68O18329C74O18366C76O18395C78O18395C80O18410,,
code-creation,LazyCompile,10,42916,0x172aed05d426,110, node:internal/fs/utils:357:35,0x6a337a26ef8,~
code-source-info,0x172aed05d426,77,8569,9158,C16O8633C21O8686C26O8686C31O8780C37O8803C41O8831C45O8848C51O8848C60O8899C64O8920C69O8920C76O8965C77O8972C78O8992C94O8992C100O9106C104O9128C106O9128C107O9145C109O9156,,
code-creation,LazyCompile,10,42916,0x172aed05d5ae,16,isUint8Array node:internal/util/types:13:22,0x30d75b96d28,~
script-source,15,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\n  }\x2C\n  isCryptoKey: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\n  }\n});\n
code-source-info,0x172aed05d5ae,15,257,342,C0O269C5O276C12O323C15O340,,
code-creation,LazyCompile,10,43041,0x172aed05da36,61,splitRoot node:fs:2362:33,0x6a337a1e9c0,~
code-source-info,0x172aed05da36,76,62796,62988,C0O62821C2O62832C6O62826C11O62853C16O62857C24O62895C26O62891C31O62923C44O62930C49O62962C50O62842C55O62808C58O62973C60O62984,,
code-creation,LazyCompile,10,43083,0x172aed05db7e,20,nextPart node:fs:2395:31,0x6a337a1ea60,~
code-source-info,0x172aed05db7e,76,63703,63761,C0O63716C14O63723C19O63757,,
code-creation,LazyCompile,10,43083,0x172aed05dd8e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x6a337a26ea8,~
code-source-info,0x172aed05dd8e,77,7930,8428,C0O7948C6O8011C11O8011C16O8033C24O8033C29O8090C31O8090C32O8115C38O8343C43O8370C51O8343C56O8416C60O8406C62O8427,,
code-creation,LazyCompile,10,43125,0x172aed05deee,34,isFileType node:fs:205:20,0x6a337a1c650,~
code-source-info,0x172aed05deee,76,5285,5526,C0O5419C2O5424C6O5431C10O5465C15O5472C20O5488C22O5503C24O5501C30O5511C33O5524,,
code-creation,LazyCompile,10,43166,0x172aed05e1ee,72,encodeRealpathResult node:fs:2371:30,0x6a337a1ea10,~
code-source-info,0x172aed05e1ee,76,63022,63280,C0O63044C4O63069C10O63089C17O63098C22O63114C24O63128C25O63148C30O63155C35O63155C41O63183C48O63192C53O63212C55O63228C56O63251C61O63268C66O63251C71O63278,,
code-creation,LazyCompile,10,43208,0x172aed05e38e,62,loadNativeModule node:internal/modules/cjs/helpers:36:26,0x3a1583d19ca8,~
code-source-info,0x172aed05e38e,97,1014,1294,C0O1050C5O1063C10O1067C15O1067C21O1084C26O1091C35O1121C43O1121C48O1247C53O1247C57O1277C59O1288C61O1293,,
tick,0x100feff70,43250,0,0x0,3,0x0,0x172aed04d6de,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,43250,0x172aed05ec76,246,Module.load node:internal/modules/cjs/loader:969:33,0x3a1583d1ffe0,~
code-source-info,0x172aed05ec76,98,30265,31078,C0O30280C8O30326C16O30280C21O30334C26O30347C32O30334C36O30358C38O30372C42O30386C45O30406C52O30423C55O30428C60O30428C66O30406C71O30397C75O30469C78O30469C83O30546C91O30550C101O30603C106O30614C112O30628C124O30634C129O30628C130O30674C133O30681C140O30692C144O30703C150O30723C151O30735C155O30764C160O30773C165O30875C170O30910C175O30921C187O30961C192O30968C197O30968C204O30982C206O30980C211O31014C216O31023C221O31023C228O31048C233O31057C238O31057C245O31077,,
code-creation,LazyCompile,10,43291,0x172aed05eff6,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x3a1583d1f4f8,~
code-source-info,0x172aed05eff6,98,11813,12242,C0O11841C5O11846C10O11846C16O11872C18O11896C20O11922C22O11990C36O11943C44O11990C49O12004C51O12023C55O12032C56O12042C61O12049C63O12096C68O12115C74O12154C77O12165C84O12176C89O12196C91O12220C92O11927C95O12227C97O12240,,
code-creation,LazyCompile,10,43375,0x172aed05f1e6,353,basename node:path:1306:11,0xe898a5e8878,~
code-source-info,0x172aed05f1e
code-creation,LazyCompile,10,43458,0x172aed05f6a6,485,Module._extensions..js node:internal/modules/cjs/loader:1110:37,0x3a1583d20180,~
code-source-info,0x172aed05f6a
code-creation,LazyCompile,10,43500,0x172aed05fb16,376,readFileSync node:fs:450:22,0x6a337a1cb08,~
code-source-info,0x172aed05fb
code-creation,LazyCompile,10,43541,0x172aed05fe46,30,isEncoding node:buffer:529:40,0x30d75ba4f68,~
code-source-info,0x172aed05fe46,18,14774,14906,C0O14789C6O14837C12O14844C20O14862C23O14862C28O14890C29O14904,,
code-creation,LazyCompile,10,43583,0x172aed05ff5e,30,normalizeEncoding node:internal/util:163:27,0x1910fc7e9f88,~
code-source-info,0x172aed05ff5e,12,4242,4347,C0O4252C7O4275C14O4293C19O4306C21O4320C22O4323C25O4330C29O4345,,
code-creation,LazyCompile,10,43583,0x172aed060056,9,isUint32 node:internal/validators:39:18,0x30d75b99b78,~
code-source-info,0x172aed060056,17,777,822,C0O789C2O813C5O802C8O820,,
code-creation,LazyCompile,10,43625,0x172aed0601be,113,openSync node:fs:576:18,0x6a337a1ccf0,~
code-source-info,0x172aed0601be,76,14426,14805,C0O14450C5O14457C11O14503C16O14503C21O14527C37O14534C44O14585C51O14587C58O14612C63O14620C70O14625C73O14636C78O14636C95O14620C101O14758C106O14758C110O14789C112O14803,,
code-creation,LazyCompile,10,43625,0x172aed06034e,37, node:internal/fs/utils:680:42,0x6a337a278d0,~
code-source-info,0x172aed06034e,77,18456,18591,C14O18511C19O18511C24O18545C29O18545C34O18577C36O18589,,
code-creation,LazyCompile,10,43666,0x172aed060736,515,stringToFlags node:internal/fs/utils:555:23,0x6a337a276f0,~
code-source-info,0x172aed
code-creation,LazyCompile,10,43708,0x172aed060b36,97,parseFileMode node:internal/validators:58:23,0x30d75b99bc8,~
code-source-info,0x172aed060b36,17,1468,1764,C0O1491C11O1508C17O1545C24O1570C27O1550C34O1596C41O1641C52O1602C57O1596C58O1662C66O1670C73O1703C89O1703C94O1749C96O1762,,
code-creation,LazyCompile,10,43750,0x172aed060d16,206, node:internal/validators:83:3,0x30d75b99c88,~
code-source-info,0x172aed060d16,17,2236,2817,C36O2377C39O2382C45O2406C51O2447C67O2453C72O2447C73O2516C78O2521C84O2555C100O2561C105O2555C106O2624C116O2663C129O2676C142O2630C147O2624C148O2701C150O2711C157O2726C162O2741C172O2780C185O2793C198O2747C203O2741C205O2816,,
code-creation,LazyCompile,10,43791,0x172aed060eee,9,isInt32 node:internal/validators:35:17,0x30d75b997c0,~
code-source-info,0x172aed060eee,17,715,758,C0O727C2O751C5O740C8O756,,
code-creation,LazyCompile,10,43833,0x172aed061006,66,tryStatSync node:fs:404:21,0x6a337a1ca18,~
code-source-info,0x172aed061006,76,10330,10540,C0O10361C2O10381C7O10389C22O10389C28O10433C36O10457C38O10473C43O10476C48O10476C53O10495C58O10501C62O10495C63O10525C65O10538,,
code-creation,LazyCompile,10,43833,0x172aed0611de,96,tryCreateBuffer node:fs:414:25,0x6a337a1ca68,~
code-source-info,0x172aed0611de,76,10566,10853,C0O10603C2O10615C7O10635C9O10646C11O10644C16O10668C23O10674C28O10668C29O10717C34O10733C39O10733C45O10756C57O10762C58O10789C65O10803C67O10813C72O10816C77O10816C93O10837C95O10851,,
code-creation,LazyCompile,10,43875,0x172aed061346,17,allocUnsafe node:buffer:372:42,0x30d75ba4ae0,~
code-source-info,0x172aed061346,18,10871,10926,C0O10882C5O10882C9O10902C12O10909C16O10924,,
code-creation,LazyCompile,10,43875,0x172aed06145e,54, node:buffer:348:36,0x30d75ba4a28,~
code-source-info,0x172aed06145e,18,10169,10324,C0O10183C8O10183C13O10215C14O10226C21O10242C23O10239C28O10261C33O10293C46O10267C51O10261C53O10323,,
code-creation,LazyCompile,10,43916,0x172aed061596,30,validateNumber node:internal/validators:122:24,0x30d75b99dc8,~
code-source-info,0x172aed061596,17,3532,3641,C0O3550C6O3585C22O3591C27O3585C29O3640,,
code-creation,LazyCompile,10,43916,0x172aed0616be,119,allocate node:buffer:397:18,0x30d75ba4c30,~
code-source-info,0x172aed0616be,18,11573,11888,C0O11584C1O11593C6O11605C11O11612C16O11629C17O11636C20O11655C24O11664C27O11645C32O11678C34O11690C39O11701C41O11699C44O11687C49O11720C52O11720C55O11748C62O11763C67O11774C75O11748C81O11797C88O11811C94O11808C100O11821C103O11821C106O11838C108O11847C109O11854C114O11861C118O11886,,
code-creation,LazyCompile,10,43958,0x172aed06187e,86,tryReadSync node:fs:429:21,0x6a337a1cab8,~
code-source-info,0x172aed06187e,76,10875,11110,C0O10924C2O10936C7O10959C12O10974C29O10974C35O11010C47O11016C48O11043C55O11057C57O11067C62O11070C67O11070C83O11091C85O11108,,
code-creation,LazyCompile,10,44000,0x172aed061a76,239,readSync node:fs:684:18,0x6a337a1cdc0,~
code-source-info,0x172aed061a76,76,17128,18059,C0O17128C2O17171C7O17176C13O17199C18O17199C22O17240C29O17247C34O17318C40O17340C52O17352C58O17368C64O17380C70O17410C75O17436C80O17463C93O17463C98O17508C105O17524C106O17535C111O17548C112O17557C113O17576C119O17587C124O17600C140O17606C145O17600C146O17728C151O17776C162O17728C167O17792C172O17818C176O17836C184O17836C189O17891C191O17912C196O17920C221O17920C227O18012C232O18012C236O18043C238O18057,,
code-creation,LazyCompile,10,44000,0x172aed061cd6,52, node:internal/fs/utils:686:40,0x6a337a27920,~
code-source-info,0x172aed061cd6,77,18634,18755,C14O18663C22O18667C29O18691C30O18700C31O18708C44O18708C49O18743C51O18753,,
code-creation,LazyCompile,10,44041,0x172aed061e56,51, node:internal/validators:181:40,0x30d75b99ff0,~
code-source-info,0x172aed061e56,17,5308,5538,C14O5341C19O5346C25O5379C30O5410C43O5385C48O5379C50O5537,,
code-creation,LazyCompile,10,44083,0x172aed061fbe,151, node:internal/validators:72:3,0x30d75b99c38,~
code-source-info,0x172aed061fbe,17,1809,2190,C12O1829C25O1859C32O1892C38O1929C54O1935C59O1929C60O1988C65O1993C71O2023C87O2029C92O2023C93O2082C95O2092C102O2107C107O2120C117O2159C130O2172C143O2126C148O2120C150O2189,,
code-creation,LazyCompile,10,44083,0x172aed0621d6,103, node:internal/fs/utils:636:3,0x6a337a277e0,~
code-source-info,0x172aed0621d6,77,17258,17637,C0O17298C1O17309C6O17322C22O17328C27O17322C28O17386C29O17397C34O17410C50O17416C55O17410C56O17474C58O17485C64O17494C69O17518C82O17607C95O17524C100O17518C102O17636,,
code-creation,LazyCompile,10,44125,0x172aed0624ee,151, node:internal/fs/utils:886:42,0x6a337a27c40,~
code-source-info,0x172aed0624ee,77,23965,24523,C0O23989C6O24029C14O24029C21O24077C27O24117C32O24140C35O24135C37O24132C47O24166C53O24173C56O24160C61O24188C77O24271C80O24266C98O24291C104O24298C117O24194C122O24188C125O24371C143O24377C148O24371C150O24522,,
code-creation,LazyCompile,10,44875,0x172aed0626b6,47,closeSync node:fs:526:19,0x6a337a1cc18,~
code-source-info,0x172aed0626b6,76,13295,13417,C0O13304C5O13309C11O13344C13O13350C18O13358C31O13358C36O13387C41O13387C46O13416,,
tick,0x1a3726538,44916,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,44958,0x172aed0627fe,162,toString node:buffer:782:46,0x30d75ba6968,~
code-source-info,0x172aed0627fe,18,23264,23826,C0O23264C2O23305C8O23312C13O23337C20O23355C25O23337C31O23363C32O23388C37O23399C38O23409C43O23419C48O23437C50O23447C55O23459C57O23469C58O23481C65O23496C71O23525C76O23536C83O23558C90O23571C92O23579C97O23593C99O23603C100O23607C104O23651C109O23651C115O23673C116O23689C119O23689C124O23717C126O23744C133O23750C138O23744C139O23800C156O23800C161O23824,,
code-creation,LazyCompile,10,45000,0x172aed062ab6,503,getEncodingOps node:buffer:678:24,0x30d75ba67c0,~
code-source-info,0x172aed062ab
code-creation,LazyCompile,10,45041,0x172aed062ea6,12,slice node:buffer:593:12,0x30d75ba5188,~
code-source-info,0x172aed062ea6,18,16602,16648,C0O16627C5O16627C11O16648,,
code-creation,LazyCompile,10,45208,0x172aed063ab6,499,Module._compile node:internal/modules/cjs/loader:1055:37,0x3a1583d200f0,~
code-source-info,0x172aed063ab
code-creation,LazyCompile,10,45250,0x172aed064026,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x3a1583d16e68,~
code-source-info,0x172aed064026,95,2239,3273,C0O2308C3O2308C7O2334C10O2348C15O2352C23O2372C25O2392C26O2399C30O2412C35O2423C44O2421C54O2564C64O2574C69O2564C73O2586C74O2593C75O2614C80O2640C85O2614C91O2717C93O2747C96O2775C101O2782C106O2747C112O2817C117O2837C122O2844C127O2866C131O2897C136O2915C141O2919C148O2948C155O2979C165O3009C171O3023C175O2915C183O3149C188O3167C193O3171C201O3204C211O3234C217O3248C221O3167C228O3272,,
code-creation,LazyCompile,10,45291,0x172aed064a96,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x3a1583d16dc8,~
code-source-info,0x172aed064a96,95,1418,1563,C0O1425C6O1468C11O1489C17O1489C22O1468C26O1536C30O1561,,
code-creation,LazyCompile,10,45333,0x172aed064c1e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x3a1583d16e18,~
code-source-info,0x172aed064c1e,95,1594,2209,C0O1604C8O1604C13O1709C19O1709C24O1648C29O1674C34O1738C38O1767C42O1822C48O1822C53O1796C58O1878C64O1936C70O2095C76O2095C81O2068C86O2127C90O2183C92O2201C99O2208,,
code-creation,LazyCompile,10,45333,0x172aed064da6,30,validateBoolean node:internal/validators:138:25,0x30d75b99e88,~
code-source-info,0x172aed064da6,17,4042,4153,C0O4060C6O4096C22O4102C27O4096C29O4152,,
code-creation,LazyCompile,10,45375,0x172aed06519e,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x3a1583d1f778,~
code-source-info,0x172aed06519e,98,31692,32552,C0O31692C9O31735C17O31770C22O31777C27O31777C33O31796C40O31806C45O31823C52O31840C56O31929C64O31806C70O32084C74O32101C81O32111C86O32127C98O32242C102O32258C113O32111C118O32427C130O32450C135O32462C142O32473C147O32502C157O32502C162O32536C164O32536,,
code-creation,LazyCompile,10,45500,0x172aed0659b6,472,compileFunction node:vm:308:25,0x6a337a390f8,~
script-source,84,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeUnshift\x2C\n  Symbol\x2C\n  PromiseReject\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  ContextifyScript\x2C\n  MicrotaskQueue\x2C\n  makeContext\x2C\n  isContext: _isContext\x2C\n  constants\x2C\n  compileFunction: _compileFunction\x2C\n  measureMemory: _measureMemory\x2C\n} = internalBinding('contextify');\nconst {\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n} = require('internal/errors').codes;\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  kVmBreakFirstLineSymbol\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\nconst kParsingContext = Symbol('script parsing context');\n\nclass Script extends ContextifyScript {\n  constructor(code\x2C options = {}) {\n    code = `${code}`;\n    if (typeof options === 'string') {\n      options = { filename: options };\n    } else {\n      validateObject(options\x2C 'options');\n    }\n\n    const {\n      filename = 'evalmachine.<anonymous>'\x2C\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      cachedData\x2C\n      produceCachedData = false\x2C\n      importModuleDynamically\x2C\n      [kParsingContext]: parsingContext\x2C\n    } = options;\n\n    validateString(filename\x2C 'options.filename');\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\n    // protects against that.\n    try { // eslint-disable-line no-useless-catch\n      super(code\x2C\n            filename\x2C\n            lineOffset\x2C\n            columnOffset\x2C\n            cachedData\x2C\n            produceCachedData\x2C\n            parsingContext);\n    } catch (e) {\n      throw e; /* node-do-not-add-exception-line */\n    }\n\n    if (importModuleDynamically !== undefined) {\n      validateFunction(importModuleDynamically\x2C\n                       'options.importModuleDynamically');\n      const { importModuleDynamicallyWrap } =\n        require('internal/vm/module');\n      const { callbackMap } = internalBinding('module_wrap');\n      callbackMap.set(this\x2C {\n        importModuleDynamically:\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\n      });\n    }\n  }\n\n  runInThisContext(options) {\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\n  }\n\n  runInContext(contextifiedObject\x2C options) {\n    validateContext(contextifiedObject);\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInContext\x2C this\x2C args);\n  }\n\n  runInNewContext(contextObject\x2C options) {\n    const context = createContext(contextObject\x2C getContextOptions(options));\n    return this.runInContext(context\x2C options);\n  }\n}\n\nfunction validateContext(contextifiedObject) {\n  if (!isContext(contextifiedObject)) {\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\n                                   contextifiedObject);\n  }\n}\n\nfunction getRunInContextArgs(options = {}) {\n  validateObject(options\x2C 'options');\n\n  let timeout = options.timeout;\n  if (timeout === undefined) {\n    timeout = -1;\n  } else {\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\n  }\n\n  const {\n    displayErrors = true\x2C\n    breakOnSigint = false\x2C\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\n  } = options;\n\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n\n  return {\n    breakOnSigint\x2C\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\n  };\n}\n\nfunction getContextOptions(options) {\n  if (!options)\n    return {};\n  const contextOptions = {\n    name: options.contextName\x2C\n    origin: options.contextOrigin\x2C\n    codeGeneration: undefined\x2C\n    microtaskMode: options.microtaskMode\x2C\n  };\n  if (contextOptions.name !== undefined)\n    validateString(contextOptions.name\x2C 'options.contextName');\n  if (contextOptions.origin !== undefined)\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\n  if (options.contextCodeGeneration !== undefined) {\n    validateObject(options.contextCodeGeneration\x2C\n                   'options.contextCodeGeneration');\n    const { strings\x2C wasm } = options.contextCodeGeneration;\n    if (strings !== undefined)\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\n    if (wasm !== undefined)\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\n    contextOptions.codeGeneration = { strings\x2C wasm };\n  }\n  if (options.microtaskMode !== undefined)\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\n  return contextOptions;\n}\n\nfunction isContext(object) {\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\n\n  return _isContext(object);\n}\n\nlet defaultContextNameIndex = 1;\nfunction createContext(contextObject = {}\x2C options = {}) {\n  if (isContext(contextObject)) {\n    return contextObject;\n  }\n\n  validateObject(options\x2C 'options');\n\n  const {\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\n    origin\x2C\n    codeGeneration\x2C\n    microtaskMode\n  } = options;\n\n  validateString(name\x2C 'options.name');\n  if (origin !== undefined)\n    validateString(origin\x2C 'options.origin');\n  if (codeGeneration !== undefined)\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\n\n  let strings = true;\n  let wasm = true;\n  if (codeGeneration !== undefined) {\n    ({ strings = true\x2C wasm = true } = codeGeneration);\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\n  }\n\n  let microtaskQueue = null;\n  if (microtaskMode !== undefined) {\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\n                  ['afterEvaluate'\x2C undefined]);\n\n    if (microtaskMode === 'afterEvaluate')\n      microtaskQueue = new MicrotaskQueue();\n  }\n\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\n  return contextObject;\n}\n\nfunction createScript(code\x2C options) {\n  return new Script(code\x2C options);\n}\n\n// Remove all SIGINT listeners and re-attach them after the wrapped function\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\n  const sigintListeners = process.rawListeners('SIGINT');\n\n  process.removeAllListeners('SIGINT');\n\n  try {\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\n  } finally {\n    // Add using the public methods so that the `newListener` handler of\n    // process can re-attach the listeners.\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\n      process.addListener('SIGINT'\x2C listener);\n    });\n  }\n}\n\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\n  validateContext(contextifiedObject);\n  if (typeof options === 'string') {\n    options = {\n      filename: options\x2C\n      [kParsingContext]: contextifiedObject\n    };\n  } else {\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\n  }\n  return createScript(code\x2C options)\n    .runInContext(contextifiedObject\x2C options);\n}\n\nfunction runInNewContext(code\x2C contextObject\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\n  options = { ...options\x2C [kParsingContext]: contextObject };\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\n}\n\nfunction runInThisContext(code\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  return createScript(code\x2C options).runInThisContext(options);\n}\n\nfunction compileFunction(code\x2C params\x2C options = {}) {\n  validateString(code\x2C 'code');\n  if (params !== undefined) {\n    validateArray(params\x2C 'params');\n    ArrayPrototypeForEach(params\x2C\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\n  }\n\n  const {\n    filename = ''\x2C\n    columnOffset = 0\x2C\n    lineOffset = 0\x2C\n    cachedData = undefined\x2C\n    produceCachedData = false\x2C\n    parsingContext = undefined\x2C\n    contextExtensions = []\x2C\n    importModuleDynamically\x2C\n  } = options;\n\n  validateString(filename\x2C 'options.filename');\n  validateUint32(columnOffset\x2C 'options.columnOffset');\n  validateUint32(lineOffset\x2C 'options.lineOffset');\n  if (cachedData !== undefined)\n    validateBuffer(cachedData\x2C 'options.cachedData');\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n  if (parsingContext !== undefined) {\n    if (\n      typeof parsingContext !== 'object' ||\n      parsingContext === null ||\n      !isContext(parsingContext)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.parsingContext'\x2C\n        'Context'\x2C\n        parsingContext\n      );\n    }\n  }\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\n    const name = `options.contextExtensions[${i}]`;\n    validateObject(extension\x2C name\x2C { nullable: true });\n  });\n\n  const result = _compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n    const { importModuleDynamicallyWrap } =\n      require('internal/vm/module');\n    const { callbackMap } = internalBinding('module_wrap');\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\n    const func = result.function;\n    callbackMap.set(result.cacheKey\x2C {\n      importModuleDynamically: (s\x2C _k) => wrapped(s\x2C func)\x2C\n    });\n  }\n\n  return result.function;\n}\n\nconst measureMemoryModes = {\n  summary: constants.measureMemory.mode.SUMMARY\x2C\n  detailed: constants.measureMemory.mode.DETAILED\x2C\n};\n\nconst measureMemoryExecutions = {\n  default: constants.measureMemory.execution.DEFAULT\x2C\n  eager: constants.measureMemory.execution.EAGER\x2C\n};\n\nfunction measureMemory(options = {}) {\n  emitExperimentalWarning('vm.measureMemory');\n  validateObject(options\x2C 'options');\n  const { mode = 'summary'\x2C execution = 'default' } = options;\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\n                                measureMemoryExecutions[execution]);\n  if (result === undefined) {\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\n  }\n  return result;\n}\n\nmodule.exports = {\n  Script\x2C\n  createContext\x2C\n  createScript\x2C\n  runInContext\x2C\n  runInNewContext\x2C\n  runInThisContext\x2C\n  isContext\x2C\n  compileFunction\x2C\n  measureMemory\x2C\n};\n\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\n// and vm.SyntheticModule in the pre-execution phase when\n// --experimental-vm-modules is on.\n
code-source-info,0x172aed0659b
code-creation,LazyCompile,10,46000,0x172aed066b8e,95, node:internal/validators:158:39,0x30d75b99f28,~
code-source-info,0x172aed066b8e,17,4612,4890,C16O4648C21O4653C27O4680C43O4686C48O4680C49O4750C56O4757C61O4791C66O4814C71O4831C87O4837C92O4831C94O4889,,
code-creation,LazyCompile,10,46041,0x172aed066cfe,27, node:vm:313:27,0x172aed065678,~
code-source-info,0x172aed066cfe,84,9752,9803,C0O9766C10O9798C21O9766C26O9803,,
code-creation,LazyCompile,10,46041,0x172aed066e9e,149, node:internal/validators:100:40,0x30d75b99cd8,~
code-source-info,0x172aed066e9e,17,2861,3371,C0O2892C3O2897C9O2920C15O2959C31O2965C36O2959C37O3024C42O3029C48O3061C64O3067C69O3061C70O3138C80O3190C90O3229C109O3196C114O3190C115O3266C120O3288C125O3301C141O3307C146O3301C148O3370,,
tick,0x1a362a478,46083,0,0x0,3,0x0,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,46083,0x172aed0671e6,5, /opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js:1:1,0x172aed067090,~
script-source,114,/opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x172aed0671e6,114,0,119,C0O0C4O119,,
code-creation,Function,10,46125,0x172aed0672de,29, /opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js:1:1,0x172aed067150,~
code-source-info,0x172aed0672de,114,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,46166,0x172aed067566,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x172aed043e80,~
code-source-info,0x172aed067566,112,11705,12148,C0O11705C13O11774C18O12146,,
code-creation,LazyCompile,10,46208,0x172aed06886e,159,makeRequireFunction node:internal/modules/cjs/helpers:50:29,0x3a1583d19cf8,~
code-source-info,0x172aed06886e,97,1571,3541,C0O1571C22O1607C25O1611C29O1607C31O1631C33O1642C53O1674C58O1678C69O1694C73O1674C75O1721C81O1721C83O1748C89O1757C95O1785C104O2945C109O3176C111O3192C115O3332C117O3346C121O3358C126O3381C130O3371C134O3446C137O3474C141O3465C145O3490C148O3513C152O3504C156O3524C158O3539,,
code-creation,LazyCompile,10,46208,0x172aed068bfe,14,require node:internal/modules/cjs/helpers:93:31,0x172aed068730,~
code-source-info,0x172aed068bfe,97,2971,3017,C0O2986C3O2997C8O2997C13O3011,,
code-creation,LazyCompile,10,46250,0x172aed068d3e,10, node:internal/modules/cjs/helpers:29:66,0x3a1583d19ec8,~
code-source-info,0x172aed068d3e,97,810,835,C0O822C2O828C9O834,,
code-creation,LazyCompile,10,46250,0x172aed068ec6,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x1910fc7cf6a0,~
code-source-info,0x172aed068ec6,9,7543,8215,C0O7562C6O7706C16O7749C33O7712C38O7706C39O7786C44O7786C48O7828C54O8017C61O8048C69O8017C75O8072C80O8090C90O8106C93O8122C98O8106C102O8088C106O8147C111O8147C115O8172C120O8172C124O8203C128O8211,,
code-creation,Eval,10,46291,0x172aed069236,5, node:cluster:1:1,0x172aed0690e0,~
script-source,115,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\n
code-source-info,0x172aed069236,115,0,1291,C0O0C4O1291,,
code-creation,Function,10,46375,0x172aed0692ee,39, node:cluster:1:1,0x172aed0691a0,~
code-source-info,0x172aed0692ee,115,0,1291,C0O1172C3O1200C7O1189C19O1227C24O1272C29O1244C33O1242C38O1290,,
code-creation,Eval,10,46541,0x172aed069f16,5, node:internal/cluster/primary:1:1,0x172aed069b80,~
script-source,116,node:internal/cluster/primary,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSome\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst { fork } = require('child_process');\nconst path = require('path');\nconst EventEmitter = require('events');\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\nconst SharedHandle = require('internal/cluster/shared_handle');\nconst Worker = require('internal/cluster/worker');\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\nconst cluster = new EventEmitter();\nconst intercom = new EventEmitter();\nconst SCHED_NONE = 1;\nconst SCHED_RR = 2;\nconst minPort = 1024;\nconst maxPort = 65535;\nconst { validatePort } = require('internal/validators');\n\nmodule.exports = cluster;\n\nconst handles = new SafeMap();\ncluster.isWorker = false;\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\ncluster.isPrimary = true;\ncluster.Worker = Worker;\ncluster.workers = {};\ncluster.settings = {};\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\n\nlet ids = 0;\nlet debugPortOffset = 1;\nlet initialized = false;\n\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\nif (schedulingPolicy === 'rr')\n  schedulingPolicy = SCHED_RR;\nelse if (schedulingPolicy === 'none')\n  schedulingPolicy = SCHED_NONE;\nelse if (process.platform === 'win32') {\n  // Round-robin doesn't perform well on\n  // Windows due to the way IOCP is wired up.\n  schedulingPolicy = SCHED_NONE;\n} else\n  schedulingPolicy = SCHED_RR;\n\ncluster.schedulingPolicy = schedulingPolicy;\n\ncluster.setupPrimary = function(options) {\n  const settings = {\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\n    exec: process.argv[1]\x2C\n    execArgv: process.execArgv\x2C\n    silent: false\x2C\n    ...cluster.settings\x2C\n    ...options\n  };\n\n  // Tell V8 to write profile data for each process to a separate file.\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\n  // file. (Unusable because what V8 logs are memory addresses and each\n  // process has its own memory mappings.)\n  if (ArrayPrototypeSome(settings.execArgv\x2C\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\n      !ArrayPrototypeSome(settings.execArgv\x2C\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\n  }\n\n  cluster.settings = settings;\n\n  if (initialized === true)\n    return process.nextTick(setupSettingsNT\x2C settings);\n\n  initialized = true;\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\n\n  process.nextTick(setupSettingsNT\x2C settings);\n\n  process.on('internalMessage'\x2C (message) => {\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\n      return;\n\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.state === 'online' || worker.state === 'listening') {\n        process._debugProcess(worker.process.pid);\n      } else {\n        worker.once('online'\x2C function() {\n          process._debugProcess(this.process.pid);\n        });\n      }\n    }\n  });\n};\n\n// Deprecated alias must be same as setupPrimary\ncluster.setupMaster = cluster.setupPrimary;\n\nfunction setupSettingsNT(settings) {\n  cluster.emit('setup'\x2C settings);\n}\n\nfunction createWorkerProcess(id\x2C env) {\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\n  const execArgv = [...cluster.settings.execArgv];\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\n  const nodeOptions = process.env.NODE_OPTIONS || '';\n\n  if (ArrayPrototypeSome(execArgv\x2C\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\n    let inspectPort;\n    if ('inspectPort' in cluster.settings) {\n      if (typeof cluster.settings.inspectPort === 'function')\n        inspectPort = cluster.settings.inspectPort();\n      else\n        inspectPort = cluster.settings.inspectPort;\n\n      validatePort(inspectPort);\n    } else {\n      inspectPort = process.debugPort + debugPortOffset;\n      if (inspectPort > maxPort)\n        inspectPort = inspectPort - maxPort + minPort - 1;\n      debugPortOffset++;\n    }\n\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\n  }\n\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\n    cwd: cluster.settings.cwd\x2C\n    env: workerEnv\x2C\n    serialization: cluster.settings.serialization\x2C\n    silent: cluster.settings.silent\x2C\n    windowsHide: cluster.settings.windowsHide\x2C\n    execArgv: execArgv\x2C\n    stdio: cluster.settings.stdio\x2C\n    gid: cluster.settings.gid\x2C\n    uid: cluster.settings.uid\n  });\n}\n\nfunction removeWorker(worker) {\n  assert(worker);\n  delete cluster.workers[worker.id];\n\n  if (ObjectKeys(cluster.workers).length === 0) {\n    assert(handles.size === 0\x2C 'Resource leak detected.');\n    intercom.emit('disconnect');\n  }\n}\n\nfunction removeHandlesForWorker(worker) {\n  assert(worker);\n\n  handles.forEach((handle\x2C key) => {\n    if (handle.remove(worker))\n      handles.delete(key);\n  });\n}\n\ncluster.fork = function(env) {\n  cluster.setupPrimary();\n  const id = ++ids;\n  const workerProcess = createWorkerProcess(id\x2C env);\n  const worker = new Worker({\n    id: id\x2C\n    process: workerProcess\n  });\n\n  worker.on('message'\x2C function(message\x2C handle) {\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\n  });\n\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\n    /*\n     * Remove the worker from the workers list only\n     * if it has disconnected\x2C otherwise we might\n     * still want to access it.\n     */\n    if (!worker.isConnected()) {\n      removeHandlesForWorker(worker);\n      removeWorker(worker);\n    }\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'dead';\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\n  });\n\n  worker.process.once('disconnect'\x2C () => {\n    /*\n     * Now is a good time to remove the handles\n     * associated with this worker because it is\n     * not connected to the primary anymore.\n     */\n    removeHandlesForWorker(worker);\n\n    /*\n     * Remove the worker from the workers list only\n     * if its process has exited. Otherwise\x2C we might\n     * still want to access it.\n     */\n    if (worker.isDead())\n      removeWorker(worker);\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'disconnected';\n    worker.emit('disconnect');\n    cluster.emit('disconnect'\x2C worker);\n  });\n\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\n  process.nextTick(emitForkNT\x2C worker);\n  cluster.workers[worker.id] = worker;\n  return worker;\n};\n\nfunction emitForkNT(worker) {\n  cluster.emit('fork'\x2C worker);\n}\n\ncluster.disconnect = function(cb) {\n  const workers = ObjectKeys(cluster.workers);\n\n  if (workers.length === 0) {\n    process.nextTick(() => intercom.emit('disconnect'));\n  } else {\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.isConnected()) {\n        worker.disconnect();\n      }\n    }\n  }\n\n  if (typeof cb === 'function')\n    intercom.once('disconnect'\x2C cb);\n};\n\nconst methodMessageMapping = {\n  close\x2C\n  exitedAfterDisconnect\x2C\n  listening\x2C\n  online\x2C\n  queryServer\x2C\n};\n\nfunction onmessage(message\x2C handle) {\n  const worker = this;\n\n  const fn = methodMessageMapping[message.act];\n\n  if (typeof fn === 'function')\n    fn(worker\x2C message);\n}\n\nfunction online(worker) {\n  worker.state = 'online';\n  worker.emit('online');\n  cluster.emit('online'\x2C worker);\n}\n\nfunction exitedAfterDisconnect(worker\x2C message) {\n  worker.exitedAfterDisconnect = true;\n  send(worker\x2C { ack: message.seq });\n}\n\nfunction queryServer(worker\x2C message) {\n  // Stop processing if worker already disconnecting\n  if (worker.exitedAfterDisconnect)\n    return;\n\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\n              `${message.fd}:${message.index}`;\n  let handle = handles.get(key);\n\n  if (handle === undefined) {\n    let address = message.address;\n\n    // Find shortest path for unix sockets because of the ~100 byte limit\n    if (message.port < 0 && typeof address === 'string' &&\n        process.platform !== 'win32') {\n\n      address = path.relative(process.cwd()\x2C address);\n\n      if (message.address.length < address.length)\n        address = message.address;\n    }\n\n    // UDP is exempt from round-robin connection balancing for what should\n    // be obvious reasons: it's connectionless. There is nothing to send to\n    // the workers except raw datagrams and that's pointless.\n    if (schedulingPolicy !== SCHED_RR ||\n        message.addressType === 'udp4' ||\n        message.addressType === 'udp6') {\n      handle = new SharedHandle(key\x2C address\x2C message);\n    } else {\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\n    }\n\n    handles.set(key\x2C handle);\n  }\n\n  if (!handle.data)\n    handle.data = message.data;\n\n  // Set custom server data\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\n    const { data } = handles.get(key);\n\n    if (errno)\n      handles.delete(key);  // Gives other workers a chance to retry.\n\n    send(worker\x2C {\n      errno\x2C\n      key\x2C\n      ack: message.seq\x2C\n      data\x2C\n      ...reply\n    }\x2C handle);\n  });\n}\n\nfunction listening(worker\x2C message) {\n  const info = {\n    addressType: message.addressType\x2C\n    address: message.address\x2C\n    port: message.port\x2C\n    fd: message.fd\n  };\n\n  worker.state = 'listening';\n  worker.emit('listening'\x2C info);\n  cluster.emit('listening'\x2C worker\x2C info);\n}\n\n// Server in worker is closing\x2C remove from list. The handle may have been\n// removed by a prior call to removeHandlesForWorker() so guard against that.\nfunction close(worker\x2C message) {\n  const key = message.key;\n  const handle = handles.get(key);\n\n  if (handle && handle.remove(worker))\n    handles.delete(key);\n}\n\nfunction send(worker\x2C message\x2C handle\x2C cb) {\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\n}\n\n// Extend generic Worker with methods specific to the primary process.\nWorker.prototype.disconnect = function() {\n  this.exitedAfterDisconnect = true;\n  send(this\x2C { act: 'disconnect' });\n  removeHandlesForWorker(this);\n  removeWorker(this);\n  return this;\n};\n\nWorker.prototype.destroy = function(signo) {\n  const proc = this.process;\n\n  signo = signo || 'SIGTERM';\n\n  if (this.isConnected()) {\n    this.once('disconnect'\x2C () => proc.kill(signo));\n    this.disconnect();\n    return;\n  }\n\n  proc.kill(signo);\n};\n
code-source-info,0x172aed069f16,116,0,10794,C0O0C4O10794,,
code-creation,Function,10,46958,0x172aed06a8ee,640, node:internal/cluster/primary:1:1,0x172aed069e80,~
code-source-info,0x172aed06a8ee
tick,0x1a375be7c,47041,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,47375,0x172aed06c7de,5, node:child_process:1:1,0x172aed06c2f8,~
script-source,117,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeTest\x2C\n  SafeSet\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  promisify\x2C\n  convertToValidSignal\x2C\n  createDeferredPromise\x2C\n  getSystemErrorName\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: errorCodes\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = errorCodes;\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   detached?: boolean;\n *   env?: Object;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath /* \x2C args\x2C options */) {\n  validateString(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n  let options = {};\n  let args = [];\n  let pos = 1;\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\n    args = arguments[pos++];\n  }\n\n  if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && arguments[pos] != null) {\n    if (typeof arguments[pos] !== 'object') {\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\n    }\n\n    options = { ...arguments[pos++] };\n  }\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  options.execPath = options.execPath || process.execPath;\n  options.shell = false;\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Object;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Object;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\n  let args = [];\n  let callback;\n  let options;\n\n  // Parse the optional positional parameters.\n  let pos = 1;\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\n    args = arguments[pos++];\n  } else if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\n    options = arguments[pos++];\n  } else if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\n    callback = arguments[pos++];\n  }\n\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\n  }\n\n  options = {\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout &&\n        child.stdout.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr &&\n        child.stderr.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args.length !== 0)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    if (!ex) {\n      // eslint-disable-next-line no-restricted-syntax\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\n      ex.killed = child.killed || killed;\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\n      ex.signal = signal;\n    }\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        _stderr.push(chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\n});\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  if (options === undefined)\n    options = {};\n  else\n    validateObject(options\x2C 'options');\n\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  if (process.env.NODE_V8_COVERAGE &&\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError());\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Object;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\n      child.once('exit'\x2C\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Object;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i] && options.stdio[i].input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    // eslint-disable-next-line no-restricted-syntax\n    err = new Error(msg);\n  }\n  if (err) {\n    ObjectAssign(err\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} command\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Object;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(command\x2C args\x2C options) {\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(options.file\x2C\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Object;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\n};\n
code-source-info,0x172aed06c7de,117,0,24635,C0O0C4O24635,,
code-creation,Function,10,48291,0x172aed06d24e,748, node:child_process:1:1,0x172aed06c748,~
code-source-info,0x172aed06d24e
tick,0x1a377811c,48333,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,48791,0x172aed0722c6,5, node:internal/child_process:1:1,0x172aed071bc8,~
script-source,118,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\n        });\n      }\n\n      emit(socket);\n    }\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\n  }\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = errnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw errnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      // When i === 0 - we're dealing with stdin\n      // (which is the only one writable pipe).\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw errnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        if (!this._handleQueue)\n          this._handleQueue = [];\n        if (obj && obj.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj && obj.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = errnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    target.emit(event\x2C message\x2C handle);\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    if (stdio == null) {\n      stdio = i < 3 ? 'pipe' : 'ignore';\n    }\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output && result.output[1];\n  result.stderr = result.output && result.output[2];\n\n  if (result.error) {\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\n};\n
code-source-info,0x172aed0722c6,118,0,30803,C0O0C4O30803,,
code-creation,Function,10,49958,0x172aed0738e6,1253, node:internal/child_process:1:1,0x172aed072230,~
code-source-info,0x172aed0738e
code-creation,Function,10,50000,0x172aed07405e,35,<instance_members_initializer> node:internal/child_process:524:3,0x172aed072fa0,~
code-source-info,0x172aed07405e,118,13654,13711,C3O13665C16O13681C26O13706C34O13711,,
tick,0x1a369eb88,50041,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed06d492,0x311ed227c90d,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,50666,0x172aed0781ae,5, node:net:1:1,0x172aed0779c0,~
script-source,119,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIndexOf\x2C\n  Boolean\x2C\n  Error\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\n} = internalBinding('uv');\n\nconst { Buffer } = require('buffer');\nconst { guessHandleType } = internalBinding('util');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n} = require('internal/stream_base_commons');\nconst {\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  uvExceptionWithHostPort\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst {\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n} = require('internal/dtrace');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\n\nconst { clearTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst isWindows = process.platform === 'win32';\n\nconst noop = () => {};\n\nfunction getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kSetNoDelay] = false;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw errnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        value: 0\x2C writable: true\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.pending) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(errnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\n        self._readableState);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  const er = new Error('This socket has been ended by the other party');\n  er.code = 'EPIPE';\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  if (!this._handle) {\n    this.once('connect'\x2C\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\n    return this;\n  }\n\n  // Backwards compatibility: assume true when `enable` is omitted\n  const newValue = enable === undefined ? true : !!enable;\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = newValue;\n    this._handle.setNoDelay(newValue);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\n  if (!this._handle) {\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\n    return this;\n  }\n\n  if (this._handle.setKeepAlive)\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  get: function() {\n    return this.connecting;\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  get: function() {\n    return this._unrefTimer;\n  }\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(errnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug('_read');\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  DTRACE_NET_STREAM_END(this);\n  return this;\n};\n\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      this._handle.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(errnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    this._handle.close(() => {\n      debug('emit close');\n      this.emit('close'\x2C isException);\n    });\n    this._handle.onread = noop;\n    this._handle = null;\n    this._sockname = null;\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    this._peername = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getpeername(this._peername);\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  }\n}\n\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n    });\n    return;\n  }\n\n  if (options.lookup !== undefined)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: options.family\x2C\n    hints: options.hints || 0\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n      }\n    });\n  });\n}\n\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  let self = handle[owner_symbol];\n\n  if (self.constructor.name === 'ReusedHandle') {\n    self = self.handle;\n  }\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n\n  } else {\n    self.connecting = false;\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = exceptionWithHostPort(status\x2C\n                                     'connect'\x2C\n                                     req.address\x2C\n                                     req.port\x2C\n                                     details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n    self.destroy(ex);\n  }\n}\n\nfunction addAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    signal.addEventListener('abort'\x2C onAborted);\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = {};\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n  };\n\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n\n  function listenOnPrimaryHandle(err\x2C handle) {\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options.ipv6Only);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\n    return this;\n  }\n  addAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\n                    backlog\x2C undefined\x2C options.exclusive);\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw errnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\n});\n\nServer.prototype.address = function() {\n  if (this._handle && this._handle.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw errnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\n  });\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n\n  DTRACE_NET_SERVER_CONNECTION(socket);\n  self.emit('connection'\x2C socket);\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n};\n
code-source-info,0x172aed0781ae,119,0,47274,C0O0C4O47274,,
code-creation,Function,10,52458,0x172aed07b08e,2513, node:net:1:1,0x172aed078118,~
code-source-info,0x172aed07b08e,119,0,47274,C0O0C411O1159C417O1175C423O1200C429O1211C435O1220C441O1230C447O1245C453O1263C459O1287C464O1311C469O1358C475O1358C479O1358C481O1392C487O1392C491O1392C493O1423C499O1423C504O1456C518O1457C524O1423C526O1581C532O1581C537O1511C543O1519C548O1529C553O1539C559O1563C565O1621C571O1621C575O1621C577O1705C580O1705C585O1659C591O1676C597O1689C603O1748C609O1748C614O1737C620O1795C623O1795C628O1775C634O1845C637O1845C642O1828C648O1940C651O1940C656O1887C662O1894C668O1923C674O2035C677O2035C682O1979C688O1987C694O2017C700O2166C706O2166C711O2075C717O2089C728O2130C734O2147C740O2364C746O2364C751O2209C757O2226C763O2242C769O2258C774O2278C780O2289C785O2305C790O2325C796O2336C802O2349C808O2744C814O2744C819O2744C824O2428C830O2460C836O2486C842O2513C848O2538C854O2566C860O2597C866O2625C872O2648C878O2673C884O2691C890O2716C896O2797C902O2797C907O2780C913O2952C919O2952C924O2839C930O2862C936O2882C942O2899C948O2917C954O2933C960O3012C963O3012C967O3012C969O3110C975O3110C980O3052C986O3084C992O3190C993O3190C995O3203C996O3203C998O3212C999O3212C1001O3227C1002O3227C1004O3268C1010O3268C1015O3251C1021O3308C1027O3308C1032O3295C1038O3363C1040O3363C1042O3400C1044O3400C1046O3425C1049O3433C1056O3442C1059O3425C1061O3469C1065O3469C1067O6921C1070O6921C1074O6921C1076O6965C1079O6965C1083O6965C1085O7010C1088O7010C1092O7010C1094O10628C1097O10656C1105O10674C1110O10681C1115O10628C1120O10693C1126O10729C1131O10693C1136O10769C1139O10776C1148O10798C1152O11024C1155O11031C1164O11048C1168O12594C1171O12601C1178O12622C1182O12644C1185O12651C1194O12672C1198O13182C1201O13189C1210O13210C1214O13665C1217O13672C1226O13695C1230O13948C1233O13955C1242O13973C1246O14023C1252O14051C1266O14086C1274O14023C1279O14136C1285O14164C1299O14190C1307O14136C1312O14275C1318O14303C1332O14337C1340O14275C1345O14659C1351O14687C1365O14721C1373O14659C1378O14807C1384O14835C1389O14846C1395O14869C1406O14807C1411O15234C1414O15241C1423O15257C1427O15492C1430O15499C1439O15513C1443O15706C1446O15713C1455O15729C1459O16069C1462O16076C1471O16093C1475O16283C1478O16290C1487O16305C1491O16642C1494O16649C1503O16671C1507O16824C1510O16831C1519O16850C1523O17809C1526O17816C1535O17839C1539O18300C1547O18300C1552O18420C1560O18420C1565O18519C1573O18519C1578O18615C1586O18615C1596O18706C1599O18713C1608O18736C1616O19018C1624O19018C1634O19116C1642O19116C1652O19205C1655O19212C1660O19222C1664O19240C1672O19292C1675O19299C1684O19323C1692O20090C1695O20097C1704O20115C1712O20189C1715O20196C1724O20213C1732O20457C1740O20457C1750O20597C1758O20597C1768O24069C1771O24076C1780O24094C1788O28495C1791O28502C1800O28516C1808O28709C1811O28716C1820O28732C1828O31544C1831O31572C1843O31596C1852O31544C1862O31608C1868O31608C1878O35594C1881O35601C1892O35620C1900O37068C1903O37075C1916O37092C1924O41049C1930O41077C1951O41110C1963O41049C1973O41201C1976O41208C1989O41226C1997O42296C2000O42303C2013O42328C2021O43087C2024O43094C2037O43110C2045O43982C2048O43989C2061O44019C2069O44497C2072O44504C2084O44527C2097O44551C2105O44869C2111O44894C2132O44918C2144O44958C2156O44869C2166O45005C2172O45033C2189O45059C2201O45094C2213O45005C2223O45136C2226O45143C2239O45166C2247O45412C2250O45419C2263O45433C2271O45536C2274O45543C2287O45559C2295O45667C2297O45722C2298O45722C2300O45729C2311O45752C2312O45752C2314O45776C2323O46484C2328O46756C2338O46798C2348O46836C2358O46853C2368O47112C2378O47141C2388O47152C2398O47174C2408O47190C2418O47208C2428O47218C2438O47228C2448O47246C2503O46771C2512O47273,,
tick,0x100d087b4,52583,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed073ad1,0x311ed227c90d,0x311ed227bbdd,0x172aed06d492,0x311ed227c90d,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
tick,0x1a3726358,52583,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed073ad1,0x311ed227c90d,0x311ed227bbdd,0x172aed06d492,0x311ed227c90d,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
new,MemoryChunk,0x1b9b88140000,262144
code-creation,Eval,10,52750,0x1b9b88141736,5, node:internal/net:1:1,0x1b9b88141560,~
script-source,120,node:internal/net,'use strict';\n\nconst {\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n} = primordials;\n\nconst Buffer = require('buffer').Buffer;\nconst { writeBuffer } = internalBinding('fs');\nconst errors = require('internal/errors');\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\nconst IPv6Reg = new RegExp('^(' +\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\n\nfunction isIPv4(s) {\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\n}\n\nfunction isIPv6(s) {\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\n}\n\nfunction isIP(s) {\n  if (isIPv4(s)) return 4;\n  if (isIPv6(s)) return 6;\n  return 0;\n}\n\nfunction makeSyncWrite(fd) {\n  return function(chunk\x2C enc\x2C cb) {\n    if (enc !== 'buffer')\n      chunk = Buffer.from(chunk\x2C enc);\n\n    this._handle.bytesWritten += chunk.length;\n\n    const ctx = {};\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\n    if (ctx.errno !== undefined) {\n      const ex = errors.uvException(ctx);\n      ex.errno = ctx.errno;\n      return cb(ex);\n    }\n    cb();\n  };\n}\n\nmodule.exports = {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  makeSyncWrite\x2C\n  normalizedArgsSymbol: Symbol('normalizedArgs')\n};\n
code-source-info,0x1b9b88141736,120,0,1749,C0O0C4O1749,,
code-creation,Function,10,52833,0x1b9b88141b36,617, node:internal/net:1:1,0x1b9b881416a0,~
code-source-info,0x1b9b88141b36,120,0,1749,C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748,,
code-creation,Eval,10,52958,0x1b9b88143326,5, node:internal/dtrace:1:1,0x1b9b881431d0,~
script-source,121,node:internal/dtrace,'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n};\n
code-source-info,0x1b9b88143326,121,0,568,C0O0C4O568,,
code-creation,Function,10,53000,0x1b9b8814380e,140, node:internal/dtrace:1:1,0x1b9b88143290,~
code-source-info,0x1b9b8814380e,121,0,568,C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567,,
code-creation,LazyCompile,10,53125,0x1b9b8814467e,34,protoGetter node:net:703:21,0x172aed0785f0,~
code-source-info,0x1b9b8814467e,119,18158,18298,C0O18179C8O18207C13O18218C20O18282C27O18179C33O18297,,
tick,0x100e2dc54,53291,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed073add,0x311ed227c90d,0x311ed227bbdd,0x172aed06d492,0x311ed227c90d,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,53541,0x1b9b88149816,5, node:dgram:1:1,0x1b9b881492a0,~
script-source,122,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_SOCKET_ALREADY_BOUND\x2C\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n  ERR_SOCKET_BUFFER_SIZE\x2C\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  ERR_INVALID_FD_TYPE\n} = errors.codes;\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY }\x2C\n  UDP\x2C\n  SendWrap\n} = internalBinding('udp_wrap');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  if (!_cluster) _cluster = require('cluster');\n  return _cluster;\n}\n\nconst errnoException = errors.errnoException;\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\n\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    ipv6Only: options && options.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      signal.addEventListener('abort'\x2C onAborted);\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n    }\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  // Todo: handle errors\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n  // Check if the udp handle was connected and set the state accordingly\n  if (isConnected(self))\n    state.connectState = CONNECT_STATE_CONNECTED;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      errCb(err);\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = errnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    // Check if the udp handle was connected and set the state accordingly\n    if (isConnected(this))\n      state.connectState = CONNECT_STATE_CONNECTED;\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      if (!state.handle)\n        return; // Handle has been closed in the mean time\n\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw errnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\nfunction isConnected(self) {\n  try {\n    self.remoteAddress();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address && typeof address !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw errnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw errnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\n  )\x2C\n  createSocket\x2C\n  Socket\n};\n
code-source-info,0x1b9b88149816,122,0,27485,C0O0C4O27485,,
code-creation,Function,10,54583,0x1b9b8814b786,1498, node:dgram:1:1,0x1b9b88149780,~
code-source-info,0x1b9b8814b
tick,0x1016e5934,54666,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed073add,0x311ed227c90d,0x311ed227bbdd,0x172aed06d492,0x311ed227c90d,0x311ed227bbdd,0x172aed06a9c9,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,54791,0x1b9b8814ebfe,5, node:internal/dgram:1:1,0x1b9b8814e9e8,~
script-source,123,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst {\n  ERR_SOCKET_BAD_TYPE\x2C\n} = codes;\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\n};\n
code-source-info,0x1b9b8814ebfe,123,0,1849,C0O0C4O1849,,
code-creation,Function,10,54875,0x1b9b8814eed6,196, node:internal/dgram:1:1,0x1b9b8814eb68,~
code-source-info,0x1b9b8814eed6,123,0,1849,C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848,,
code-creation,Eval,10,55000,0x1b9b881527d6,5, node:internal/socket_list:1:1,0x1b9b88152670,~
script-source,124,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0x1b9b881527d6,124,0,2705,C0O0C4O2705,,
code-creation,Function,10,55125,0x1b9b88152e26,126, node:internal/socket_list:1:1,0x1b9b88152740,~
code-source-info,0x1b9b88152e26,124,0,2705,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704,,
code-creation,LazyCompile,10,55250,0x1b9b88153996,14,customPromiseExecFunction node:child_process:231:35,0x172aed06cdc0,~
code-source-info,0x1b9b88153996,117,6605,6969,C0O6605C9O6619C13O6967,,
code-creation,Eval,10,55291,0x1b9b88155b86,5, node:internal/cluster/round_robin_handle:1:1,0x1b9b881559a0,~
script-source,125,node:internal/cluster/round_robin_handle,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Boolean\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst net = require('net');\nconst { sendHelper } = require('internal/cluster/utils');\nconst { constants } = internalBinding('tcp_wrap');\n\nmodule.exports = RoundRobinHandle;\n\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags }) {\n  this.key = key;\n  this.all = new SafeMap();\n  this.free = new SafeMap();\n  this.handles = [];\n  this.handle = null;\n  this.server = net.createServer(assert.fail);\n\n  if (fd >= 0)\n    this.server.listen({ fd });\n  else if (port >= 0) {\n    this.server.listen({\n      port\x2C\n      host: address\x2C\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\n    });\n  } else\n    this.server.listen(address);  // UNIX socket path.\n\n  this.server.once('listening'\x2C () => {\n    this.handle = this.server._handle;\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\n    this.server._handle = null;\n    this.server = null;\n  });\n}\n\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\n  assert(this.all.has(worker.id) === false);\n  this.all.set(worker.id\x2C worker);\n\n  const done = () => {\n    if (this.handle.getsockname) {\n      const out = {};\n      this.handle.getsockname(out);\n      // TODO(bnoordhuis) Check err.\n      send(null\x2C { sockname: out }\x2C null);\n    } else {\n      send(null\x2C null\x2C null);  // UNIX socket.\n    }\n\n    this.handoff(worker);  // In case there are connections pending.\n  };\n\n  if (this.server === null)\n    return done();\n\n  // Still busy binding.\n  this.server.once('listening'\x2C done);\n  this.server.once('error'\x2C (err) => {\n    send(err.errno\x2C null);\n  });\n};\n\nRoundRobinHandle.prototype.remove = function(worker) {\n  const existed = this.all.delete(worker.id);\n\n  if (!existed)\n    return false;\n\n  this.free.delete(worker.id);\n\n  if (this.all.size !== 0)\n    return false;\n\n  for (const handle of this.handles) {\n    handle.close();\n  }\n  this.handles = [];\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\n  ArrayPrototypePush(this.handles\x2C handle);\n  // eslint-disable-next-line node-core/no-array-destructuring\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\n\n  if (ArrayIsArray(workerEntry)) {\n    const { 0: workerId\x2C 1: worker } = workerEntry;\n    this.free.delete(workerId);\n    this.handoff(worker);\n  }\n};\n\nRoundRobinHandle.prototype.handoff = function(worker) {\n  if (!this.all.has(worker.id)) {\n    return;  // Worker is closing (or has closed) the server.\n  }\n\n  const handle = ArrayPrototypeShift(this.handles);\n\n  if (handle === undefined) {\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\n    return;\n  }\n\n  const message = { act: 'newconn'\x2C key: this.key };\n\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\n    if (reply.accepted)\n      handle.close();\n    else\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\n\n    this.handoff(worker);\n  });\n};\n
code-source-info,0x1b9b88155b86,125,0,3155,C0O0C4O3155,,
code-creation,Function,10,55416,0x1b9b88155f3e,173, node:internal/cluster/round_robin_handle:1:1,0x1b9b88155af0,~
code-source-info,0x1b9b88155f3e,125,0,3155,C0O0C37O25C43O41C49O63C55O86C61O97C67O139C70O139C74O139C76O179C79O179C83O179C85O218C88O218C93O203C99O275C102O275C107O261C113O305C115O320C119O1146C128O1160C132O1811C141O1828C145O2175C154O2196C158O2563C167O2581C172O3154,,
code-creation,Eval,10,55500,0x1b9b8815680e,5, node:internal/cluster/utils:1:1,0x1b9b88156688,~
script-source,126,node:internal/cluster/utils,'use strict';\n\nconst {\n  ReflectApply\x2C\n  SafeMap\x2C\n} = primordials;\n\nmodule.exports = {\n  sendHelper\x2C\n  internal\n};\n\nconst callbacks = new SafeMap();\nlet seq = 0;\n\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\n  if (!proc.connected)\n    return false;\n\n  // Mark message as internal. See INTERNAL_PREFIX in lib/child_process.js\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\n\n  if (typeof cb === 'function')\n    callbacks.set(seq\x2C cb);\n\n  seq += 1;\n  return proc.send(message\x2C handle);\n}\n\n// Returns an internalMessage listener that hands off normal messages\n// to the callback but intercepts and redirects ACK messages.\nfunction internal(worker\x2C cb) {\n  return function onInternalMessage(message\x2C handle) {\n    if (message.cmd !== 'NODE_CLUSTER')\n      return;\n\n    let fn = cb;\n\n    if (message.ack !== undefined) {\n      const callback = callbacks.get(message.ack);\n\n      if (callback !== undefined) {\n        fn = callback;\n        callbacks.delete(message.ack);\n      }\n    }\n\n    ReflectApply(fn\x2C worker\x2C arguments);\n  };\n}\n
code-source-info,0x1b9b8815680e,126,0,1039,C0O0C4O1039,,
code-creation,Function,10,55541,0x1b9b881569de,72, node:internal/cluster/utils:1:1,0x1b9b88156778,~
code-source-info,0x1b9b881569de,126,0,1039,C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O134C60O134C65O134C67O159C68O159C71O1038,,
code-creation,Eval,10,55625,0x1b9b88156ff6,5, node:internal/cluster/shared_handle:1:1,0x1b9b88156e60,~
script-source,127,node:internal/cluster/shared_handle,'use strict';\nconst { SafeMap } = primordials;\nconst assert = require('internal/assert');\nconst dgram = require('internal/dgram');\nconst net = require('net');\n\nmodule.exports = SharedHandle;\n\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\n  this.key = key;\n  this.workers = new SafeMap();\n  this.handle = null;\n  this.errno = 0;\n\n  let rval;\n  if (addressType === 'udp4' || addressType === 'udp6')\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n  else\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n  if (typeof rval === 'number')\n    this.errno = rval;\n  else\n    this.handle = rval;\n}\n\nSharedHandle.prototype.add = function(worker\x2C send) {\n  assert(!this.workers.has(worker.id));\n  this.workers.set(worker.id\x2C worker);\n  send(this.errno\x2C null\x2C this.handle);\n};\n\nSharedHandle.prototype.remove = function(worker) {\n  if (!this.workers.has(worker.id))\n    return false;\n\n  this.workers.delete(worker.id);\n\n  if (this.workers.size !== 0)\n    return false;\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n
code-source-info,0x1b9b88156ff6,127,0,1102,C0O0C4O1102,,
code-creation,Function,10,55666,0x1b9b8815723e,89, node:internal/cluster/shared_handle:1:1,0x1b9b88156f60,~
code-source-info,0x1b9b8815723e,127,0,1102,C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101,,
code-creation,Eval,10,55708,0x1b9b88157816,5, node:internal/cluster/worker:1:1,0x1b9b88157690,~
script-source,128,node:internal/cluster/worker,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\n\nmodule.exports = Worker;\n\n// Common Worker implementation shared between the cluster primary and workers.\nfunction Worker(options) {\n  if (!(this instanceof Worker))\n    return new Worker(options);\n\n  ReflectApply(EventEmitter\x2C this\x2C []);\n\n  if (options === null || typeof options !== 'object')\n    options = {};\n\n  this.exitedAfterDisconnect = undefined;\n\n  this.state = options.state || 'none';\n  this.id = options.id | 0;\n\n  if (options.process) {\n    this.process = options.process;\n    this.process.on('error'\x2C (code\x2C signal) =>\n      this.emit('error'\x2C code\x2C signal)\n    );\n    this.process.on('message'\x2C (message\x2C handle) =>\n      this.emit('message'\x2C message\x2C handle)\n    );\n  }\n}\n\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\n\nWorker.prototype.kill = function() {\n  ReflectApply(this.destroy\x2C this\x2C arguments);\n};\n\nWorker.prototype.send = function() {\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\n};\n\nWorker.prototype.isDead = function() {\n  return this.process.exitCode != null || this.process.signalCode != null;\n};\n\nWorker.prototype.isConnected = function() {\n  return this.process.connected;\n};\n
code-source-info,0x1b9b88157816,128,0,1315,C0O0C4O1315,,
code-creation,Function,10,55791,0x1b9b88157b8e,141, node:internal/cluster/worker:1:1,0x1b9b88157780,~
code-source-info,0x1b9b88157b8e,128,0,1315,C0O0C17O25C22O49C28O102C31O102C35O102C37O122C39O137C43O812C46O840C54O864C59O812C64O876C70O876C75O921C78O928C87O943C91O1009C94O1016C103O1031C107O1117C110O1124C119O1141C123O1235C126O1242C135O1264C140O1314,,
tick,0x1a37298d4,55833,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x172aed06a9fa,0x311ed227c90d,0x311ed227bbdd,0x172aed06930b,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x172aed0672e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,55833,0x1b9b881580ee,21,EventEmitter node:events:87:22,0x1910fc7f1c00,~
code-source-info,0x1b9b881580ee,13,2482,2530,C0O2493C3O2506C8O2511C13O2511C20O2529,,
code-creation,LazyCompile,10,55875,0x1b9b88158246,149,EventEmitter.init node:events:197:29,0x1910fc7f2900,~
code-source-info,0x1b9b88158246,13,5582,6171,C0O5603C6O5639C13O5651C16O5651C21O5677C25O5647C30O5693C32O5708C37O5708C41O5706C45O5732C46O5750C50O5788C60O5781C64O5820C71O5828C80O5855C85O5876C93O5855C98O5929C100O5934C105O5946C108O5959C113O5946C117O5944C123O6115C125O6120C131O6145C138O6155C140O6154C143O6130C148O6170,,
code-creation,LazyCompile,10,55916,0x1b9b8815866e,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x1910fc7cf718,~
code-source-info,0x1b9b8815866e,9,8231,8860,C0O8231C8O8249C14O8269C18O8276C19O8304C29O8304C34O8289C39O8352C42O8365C51O8396C53O8396C55O8426C62O8451C67O8426C72O8468C82O8468C87O8516C89O8568C102O8530C107O8528C111O8774C116O8781C121O8781C125O8805C130O8812C140O8812C146O8849C150O8856,,
code-creation,LazyCompile,10,55958,0x1b9b88158a66,40, node:internal/bootstrap/loaders:273:15,0x1b9b88158558,~
code-source-info,0x1b9b88158a66,9,8595,8700,C0O8608C5O8621C10O8621C14O8649C24O8670C27O8683C32O8649C39O8699,,
code-creation,LazyCompile,10,56000,0x1b9b88158bce,89,syncExports node:internal/bootstrap/loaders:287:14,0x1910fc7cf788,~
code-source-info,0x1b9b88158bce,9,9167,9500,C0O9195C5O9220C11O9249C13O9262C17O9254C22O9304C24O9309C28O9322C30O9337C35O9352C37O9375C42O9382C51O9434C54O9446C59O9472C67O9434C73O9382C79O9271C84O9236C88O9499,,
code-creation,LazyCompile,10,56000,0x1b9b88158d46,35,getOwn node:internal/bootstrap/loaders:180:16,0x1910fc7cf420,~
code-source-info,0x1b9b88158d46,9,5498,5652,C0O5534C5O5541C14O5595C26O5595C34O5650,,
new,MemoryChunk,0x107500000,262144
code-creation,RegExp,3,56125,0x107508060,1688,(?:^|\\/)\\.?\\.$
code-creation,Eval,10,56541,0x1b9b881593de,5, /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x1b9b88159228,~
script-source,129,/opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n}\n
code-source-info,0x1b9b881593de,129,0,412,C0O0C4O412,,
code-creation,Function,10,56583,0x1b9b8815963e,110, /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x1b9b88159348,~
code-source-info,0x1b9b8815963e,129,0,412,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C109O411,,
code-creation,LazyCompile,10,56625,0x1b9b88159ace,37,get BlockList node:net:1764:16,0x172aed07a520,~
code-source-info,0x1b9b88159ace,119,46893,46982,C0O46902C14O46916C19O46945C26O46912C32O46961C36O46978,,
code-creation,Eval,10,56708,0x1b9b88159fae,5, node:internal/blocklist:1:1,0x1b9b88159db8,~
script-source,130,node:internal/blocklist,'use strict';\n\nconst {\n  Boolean\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\n} = primordials;\n\nconst {\n  BlockList: BlockListHandle\x2C\n} = internalBinding('block_list');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  SocketAddress\x2C\n  kHandle: kSocketAddressHandle\x2C\n} = require('internal/socketaddress');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst kHandle = Symbol('kHandle');\nconst { owner_symbol } = internalBinding('symbols');\n\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\n\nconst { validateInt32\x2C validateString } = require('internal/validators');\n\nclass BlockList extends JSTransferable {\n  constructor() {\n    super();\n    this[kHandle] = new BlockListHandle();\n    this[kHandle][owner_symbol] = this;\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `BlockList ${inspect({\n      rules: this.rules\n    }\x2C opts)}`;\n  }\n\n  addAddress(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      address = new SocketAddress({\n        address\x2C\n        family\x2C\n      });\n    }\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\n  }\n\n  addRange(start\x2C end\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(start)) {\n      validateString(start\x2C 'start');\n      validateString(family\x2C 'family');\n      start = new SocketAddress({\n        address: start\x2C\n        family\x2C\n      });\n    }\n    if (!SocketAddress.isSocketAddress(end)) {\n      validateString(end\x2C 'end');\n      validateString(family\x2C 'family');\n      end = new SocketAddress({\n        address: end\x2C\n        family\x2C\n      });\n    }\n    const ret = this[kHandle].addRange(\n      start[kSocketAddressHandle]\x2C\n      end[kSocketAddressHandle]);\n    if (ret === false)\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\n  }\n\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(network)) {\n      validateString(network\x2C 'network');\n      validateString(family\x2C 'family');\n      network = new SocketAddress({\n        address: network\x2C\n        family\x2C\n      });\n    }\n    switch (network.family) {\n      case 'ipv4':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\n        break;\n      case 'ipv6':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\n        break;\n    }\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\n  }\n\n  check(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      try {\n        address = new SocketAddress({\n          address\x2C\n          family\x2C\n        });\n      } catch {\n        // Ignore the error. If it's not a valid address\x2C return false.\n        return false;\n      }\n    }\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\n  }\n\n  get rules() {\n    return this[kHandle].getRules();\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kHandle][owner_symbol] = this;\n  }\n}\n\nclass InternalBlockList extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n    if (handle !== undefined)\n      handle[owner_symbol] = this;\n  }\n}\n\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\n\nmodule.exports = {\n  BlockList\x2C\n  InternalBlockList\x2C\n};\n
code-source-info,0x1b9b88159fae,130,0,3877,C0O0C4O3877,,
code-creation,Function,10,56875,0x1b9b8815a9c6,359, node:internal/blocklist:1:1,0x1b9b88159f18,~
code-source-info,0x1b9b8815a9c6,130,0,3877,C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876,,
code-creation,Eval,10,57000,0x1b9b8815c256,5, node:internal/socketaddress:1:1,0x1b9b8815c050,~
script-source,131,node:internal/socketaddress,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  SocketAddress: _SocketAddress\x2C\n  AF_INET\x2C\n  AF_INET6\x2C\n} = internalBinding('block_list');\n\nconst {\n  validateObject\x2C\n  validateString\x2C\n  validatePort\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst kHandle = Symbol('kHandle');\nconst kDetail = Symbol('kDetail');\n\nclass SocketAddress extends JSTransferable {\n  static isSocketAddress(value) {\n    return value?.[kHandle] !== undefined;\n  }\n\n  constructor(options = {}) {\n    super();\n    validateObject(options\x2C 'options');\n    let { family = 'ipv4' } = options;\n    const {\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\n      port = 0\x2C\n      flowlabel = 0\x2C\n    } = options;\n\n    let type;\n    if (typeof family?.toLowerCase === 'function')\n      family = family.toLowerCase();\n    switch (family) {\n      case 'ipv4':\n        type = AF_INET;\n        break;\n      case 'ipv6':\n        type = AF_INET6;\n        break;\n      default:\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\n    }\n\n    validateString(address\x2C 'options.address');\n    validatePort(port\x2C 'options.port');\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\n\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\n    this[kDetail] = this[kHandle].detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  get address() {\n    return this[kDetail].address;\n  }\n\n  get port() {\n    return this[kDetail].port;\n  }\n\n  get family() {\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\n  }\n\n  get flowlabel() {\n    // The flow label can be changed internally.\n    return this[kHandle].flowlabel();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kDetail] = handle.detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  toJSON() {\n    return {\n      address: this.address\x2C\n      port: this.port\x2C\n      family: this.family\x2C\n      flowlabel: this.flowlabel\x2C\n    };\n  }\n}\n\nclass InternalSocketAddress extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nInternalSocketAddress.prototype.constructor =\n  SocketAddress.prototype.constructor;\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\n\nmodule.exports = {\n  SocketAddress\x2C\n  InternalSocketAddress\x2C\n  kHandle\x2C\n};\n
code-source-info,0x1b9b8815c256,131,0,3207,C0O0C4O3207,,
code-creation,Function,10,57166,0x1b9b8815cd8e,366, node:internal/socketaddress:1:1,0x1b9b8815c1c0,~
code-source-info,0x1b9b8815cd8e,131,0,3207,C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206,,
tick,0x1a3726358,57208,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x1b9b8815aa17,0x311ed227c90d,0x311ed227bbdd,0x1b9b88159adc,0x101460594,0x1b9b88158d60,0x1b9b88158c11,0x1b9b88158a70,0x100c999d0,0x1b9b881586fa,0x172aed068f35,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x1b9b88159641,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,57250,0x1b9b8815d7f6,37,get SocketAddress node:net:1768:20,0x172aed07a598,~
code-source-info,0x1b9b8815d7f6,119,47003,47108,C0O47012C14O47030C19O47063C26O47026C32O47083C36O47104,,
code-creation,Eval,10,57291,0x1b9b8815dbde,5, node:worker_threads:1:1,0x1b9b8815da88,~
script-source,132,node:worker_threads,'use strict';\n\nconst {\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable\x2C\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n};\n
code-source-info,0x1b9b8815dbde,132,0,686,C0O0C4O686,,
code-creation,Function,10,57333,0x1b9b8815ddfe,180, node:worker_threads:1:1,0x1b9b8815db48,~
code-source-info,0x1b9b8815ddfe,132,0,686,C0O139C3O139C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O285C46O285C51O178C56O193C61O211C66O239C71O263C76O353C79O353C84O327C89O382C96O403C102O419C108O434C114O452C120O476C126O504C132O528C138O546C144O558C150O571C156O621C162O641C168O663C174O397C179O685,,
code-creation,Eval,10,57583,0x1b9b8815edb6,5, node:internal/worker:1:1,0x1b9b8815e7a8,~
script-source,133,node:internal/worker,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  JSONStringify\x2C\n  MathMax\x2C\n  ObjectCreate\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst { now } = require('internal/perf/utils');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_UNSUPPORTED_EXTENSION\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\nconst { getOptionValue } = require('internal/options');\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\n} = workerIo;\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\nconst { validateArray } = require('internal/validators');\n\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\nif (isMainThread) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = {}) {\n    super();\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\n    if (options.execArgv && !ArrayIsArray(options.execArgv)) {\n      throw new ERR_INVALID_ARG_TYPE('options.execArgv'\x2C\n                                     'Array'\x2C\n                                     options.execArgv);\n    }\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'module';\n      filename = `import ${JSONStringify(`${filename}`)}`;\n    } else {\n      doEval = false;\n      if (isURLInstance(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n\n      const ext = path.extname(filename);\n      if (ext !== '.js' && ext !== '.mjs' && ext !== '.cjs') {\n        throw new ERR_WORKER_UNSUPPORTED_EXTENSION(ext);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = ObjectCreate(null);\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true));\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const { port1\x2C port2 } = new MessageChannel();\n    const transferList = [port2];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = port1;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      publicPort: port2\x2C\n      manifestURL: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').url :\n        null\x2C\n      manifestSrc: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').src :\n        null\x2C\n      hasStdin: !!options.stdin\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\n          readable.push(chunk\x2C encoding);\n        });\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot() {\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        const { HeapSnapshotStream } = require('internal/heap_utils');\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle = this[kHandle].loopIdleTime();\n\n  // Using performance.now() here is fine since it's always the time from\n  // the beginning of the process\x2C and is why it needs to be offset by the\n  // loopStart time (which is also calculated from the beginning of the\n  // process).\n  const active = now() - this[kLoopStartTime] - idle;\n\n  if (!util1) {\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle_delta = idle - util1.idle;\n  const active_delta = active - util1.active;\n  const utilization = active_delta / (idle_delta + active_delta);\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n};\n
code-source-info,0x1b9b8815edb6,133,0,15713,C0O0C4O15713,,
code-creation,Function,10,58166,0x1b9b88160126,1203, node:internal/worker:1:1,0x1b9b8815ed20,~
code-source-info,0x1b9b
tick,0x10149628c,58333,0,0x0,0,0x311ed227bb9a,0x1b9b88160331,0x311ed227c90d,0x311ed227bbdd,0x1b9b8815de01,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x1b9b8815964e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,Eval,10,58375,0x1b9b881620e6,5, node:internal/error_serdes:1:1,0x1b9b88161e10,~
script-source,134,node:internal/error_serdes,'use strict';\n\nconst Buffer = require('buffer').Buffer;\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object) {\n  const all = ObjectCreate(null);\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n      } catch {}\n    }\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\n      delete descriptor.get;\n      delete descriptor.set;\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc && desc.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        value: desc.value\x2C enumerable: true\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc && desc.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error) {\n  if (!serialize) serialize = require('v8').serialize;\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error)\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {}\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {}\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  if (!deserialize) deserialize = require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError:\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        value: { value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\n      });\n      return ObjectCreate(ctor.prototype\x2C properties);\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError:\n      const buf = Buffer.from(error.buffer\x2C\n                              error.byteOffset + 1\x2C\n                              error.byteLength - 1);\n      return buf.toString('utf8');\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0x1b9b881620e6,134,0,4030,C0O0C4O4030,,
code-creation,Function,10,58541,0x1b9b88162516,335, node:internal/error_serdes:1:1,0x1b9b88162050,~
code-source-info,0x1b9b88162516,134,0,4030,C0O0C100O30C106O30C111O47C115O30C117O66C123O91C128O100C133O113C139O138C145O154C151O170C157O194C163O228C169O257C175O281C180O295C186O322C191O336C196O354C201O365C207O386C212O401C217O414C222O467C223O467C225O496C227O496C229O523C231O523C233O542C240O546C246O553C252O564C258O576C264O586C270O599C276O615C282O542C284O658C287O670C294O658C299O658C301O2038C302O2038C304O2235C305O2235C307O3156C308O3156C310O3975C317O3994C323O4010C329O3990C334O4029,,
code-creation,LazyCompile,10,58708,0x1b9b881635e6,674,Socket node:net:283:16,0x172aed078460,~
code-source-info,0x1b9b881635e
code-creation,LazyCompile,10,58791,0x1b9b88163b66,109,Duplex node:internal/streams/duplex:52:16,0x38fe55848c58,~
script-source,47,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  for (const method of ObjectKeys(Writable.prototype)) {\n    if (!Duplex.prototype[method])\n      Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this\x2C options);\n  Writable.call(this\x2C options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false)\n      this.readable = false;\n\n    if (options.writable === false)\n      this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n    }\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\n  writableHighWaterMark:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\n  writableObjectMode:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\n  writableBuffer:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\n  writableLength:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\n  writableFinished:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\n  writableCorked:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\n  writableEnded:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\n  writableNeedDrain:\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\n\n  destroyed: {\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\n  }\n});\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  if (!duplexify) {\n    duplexify = require('internal/streams/duplexify');\n  }\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x1b9b88163b66,47,1951,2360,C0O1965C2O1976C7O2000C12O2007C17O2027C18O2031C23O2040C28O2040C34O2063C39O2072C44O2072C50O2095C51O2114C55O2125C59O2156C65O2165C70O2182C71O2196C75O2222C81O2231C86O2248C87O2262C91O2288C97O2302C102O2321C103O2340C108O2359,,
code-creation,LazyCompile,10,59000,0x1b9b8816421e,220,Readable node:internal/streams/readable:181:18,0x38fe55853aa0,~
script-source,48,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  SymbolAsyncIterator\x2C\n  Symbol\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\n\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst BufferList = require('internal/streams/buffer_list');\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n} = require('internal/errors').codes;\nconst { validateObject } = require('internal/validators');\n\nconst kPaused = Symbol('kPaused');\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.readableObjectMode);\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = [];\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this[kPaused] = null;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Has it been destroyed.\n  this.destroyed = false;\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n  this.multiAwaitDrain = false;\n\n  // If true\x2C a maybeReadMore has been scheduled.\n  this.readingMore = false;\n\n  this.dataEmitted = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor\x2C at least with V8 6.5.\n  const isDuplex = this instanceof Stream.Duplex;\n\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n    if (options.signal && !isDuplex)\n      addAbortSignalNoValidate(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this\x2C this._readableState);\n    }\n  });\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\n};\n\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\n  debug('readableAddChunk'\x2C chunk);\n  const state = stream._readableState;\n\n  let err;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n        } else {\n          chunk = Buffer.from(chunk\x2C encoding);\n          encoding = '';\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = '';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = '';\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  if (err) {\n    errorOrDestroy(stream\x2C err);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream\x2C state);\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted)\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n      else\n        addChunk(stream\x2C state\x2C chunk\x2C true);\n    } else if (state.ended) {\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    } else if (state.destroyed || state.errored) {\n      return false;\n    } else {\n      state.reading = false;\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk);\n        if (state.objectMode || chunk.length !== 0)\n          addChunk(stream\x2C state\x2C chunk\x2C false);\n        else\n          maybeReadMore(stream\x2C state);\n      } else {\n        addChunk(stream\x2C state\x2C chunk\x2C false);\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n    maybeReadMore(stream\x2C state);\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return !state.ended &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync &&\n      stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n    state.dataEmitted = true;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront)\n      state.buffer.unshift(chunk);\n    else\n      state.buffer.push(chunk);\n\n    if (state.needReadable)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return state[kPaused] === true || state.flowing === false;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  const buffer = this._readableState.buffer;\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of buffer) {\n    content += decoder.write(data);\n  }\n  buffer.clear();\n  if (content !== '')\n    buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && state.ended))\n    return 0;\n  if (state.objectMode)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length)\n      return state.buffer.first().length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return state.ended ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state.emittedReadable = false;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       state.ended)) {\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = state.needReadable;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if (state.ended || state.reading || state.destroyed || state.errored ||\n      !state.constructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n\n    // Call internal read method\n    this._read(state.highWaterMark);\n\n    state.sync = false;\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended)\n      state.needReadable = true;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && state.ended)\n      endReadable(this);\n  }\n\n  if (ret !== null) {\n    state.dataEmitted = true;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    const chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  if (state.sync) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    state.emittedReadable = true;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable'\x2C state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state.needReadable =\n    !state.flowing &&\n    !state.ended &&\n    state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended &&\n         (state.length < state.highWaterMark ||\n          (state.flowing && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state.multiAwaitDrain = false;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause();\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      EE.listenerCount(src\x2C 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false)\n      this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable'\x2C state.length\x2C state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  } else if (!state.readableListening) {\n    state.flowing = null;\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state.flowing = !state.readableListening;\n    resume(this\x2C state);\n  }\n  state[kPaused] = false;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState[kPaused] = true;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow'\x2C state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  const opts = {\n    destroyOnReturn: true\x2C\n    destroyOnError: true\x2C\n    ...options\x2C\n  };\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  const state = stream._readableState;\n\n  let error = state.errored;\n  let errorEmitted = state.errorEmitted;\n  let endEmitted = state.endEmitted;\n  let closeEmitted = state.closeEmitted;\n\n  stream\n    .on('readable'\x2C next)\n    .on('error'\x2C function(err) {\n      error = err;\n      errorEmitted = true;\n      next.call(this);\n    })\n    .on('end'\x2C function() {\n      endEmitted = true;\n      next.call(this);\n    })\n    .on('close'\x2C function() {\n      closeEmitted = true;\n      next.call(this);\n    });\n\n  let errorThrown = false;\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (errorEmitted) {\n        throw error;\n      } else if (endEmitted) {\n        break;\n      } else if (closeEmitted) {\n        break;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    if (opts.destroyOnError) {\n      destroyImpl.destroyer(stream\x2C err);\n    }\n    errorThrown = true;\n    throw err;\n  } finally {\n    if (!errorThrown && opts.destroyOnReturn) {\n      if (state.autoDestroy || !endEmitted) {\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\n        destroyImpl.destroyer(stream\x2C null);\n      }\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\n  }\x2C\n\n  readableDidRead: {\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\n  }\x2C\n\n  readableAborted: {\n    enumerable: false\x2C\n    get: function() {\n      return !!(this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted;\n    }\n  }\x2C\n\n  readableHighWaterMark: {\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\n  }\x2C\n\n  readableBuffer: {\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState && this._readableState.buffer;\n    }\n  }\x2C\n\n  readableFlowing: {\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\n  }\x2C\n\n  readableLength: {\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\n  }\x2C\n\n  readableObjectMode: {\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\n  }\x2C\n\n  readableEncoding: {\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\n  }\x2C\n\n  destroyed: {\n    enumerable: false\x2C\n    get() {\n      if (this._readableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\n  }\x2C\n\n  readableEnded: {\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    get() {\n      return this.pipes.length;\n    }\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    get() {\n      return this[kPaused] !== false;\n    }\x2C\n    set(value) {\n      this[kPaused] = !!value;\n    }\n  }\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let ret;\n  if (state.objectMode)\n    ret = state.buffer.shift();\n  else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if (state.decoder)\n      ret = state.buffer.join('');\n    else if (state.buffer.length === 1)\n      ret = state.buffer.first();\n    else\n      ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n\x2C state.decoder);\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable'\x2C state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.errorEmitted && !state.closeEmitted &&\n      !state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\n  }).wrap(src);\n};\n
code-source-info,0x1b9b8816421e,48,6246,7126,C0O6246C9O6260C16O6271C21O6297C28O6304C33O6326C34O6481C41O6497C44O6504C48O6486C52O6515C71O6537C76O6535C80O6584C84O6622C92O6649C95O6670C99O6660C103O6700C111O6730C114O6754C118O6744C122O6787C130O6819C133O6845C137O6835C141O6872C149O6883C151O6899C158O6932C166O6899C171O6954C178O6961C186O6961C192O6985C199O6997C212O6997C219O7125,,
tick,0x100c56808,60500,0,0x0,3,0x0,0x1b9b8815967f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,60500,0x1b9b88166fee,18,Stream node:internal/streams/legacy:10:16,0x38fe55856290,~
script-source,49,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x1b9b88166fee,49,127,160,C0O138C5O141C10O141C17O159,,
code-creation,LazyCompile,10,60708,0x1b9b88167be6,354,ReadableState node:internal/streams/readable:78:23,0x38fe55853a50,~
code-source-info,0x1b9b88167be
code-creation,LazyCompile,10,60750,0x1b9b8816801e,98,getHighWaterMark node:internal/streams/state:19:26,0x38fe55858c38,~
script-source,52,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n};\n
code-source-info,0x1b9b8816801e,52,424,832,C0O478C12O478C18O529C21O552C26O557C33O585C38O611C47O633C56O678C69O684C74O678C75O732C80O739C84O754C85O781C88O818C93O788C97O830,,
tick,0x100c5668c,60833,0,0x0,3,0x0,0x1b9b88167c3e,0x1b9b88164265,0x1b9b88163b82,0x1b9b881636ab,0x1b9b8815967f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,60833,0x1b9b881682c6,26,highWaterMarkFrom node:internal/streams/state:10:27,0x38fe55858ad8,~
code-source-info,0x1b9b881682c6,52,168,309,C0O218C7O250C15O270C19O288C25O307,,
code-creation,LazyCompile,10,60833,0x1b9b881683ae,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x38fe55858be8,~
code-source-info,0x1b9b881683ae,52,343,397,C0O360C12O395,,
code-creation,LazyCompile,10,60875,0x1b9b8816849e,17,BufferList node:internal/streams/buffer_list:14:14,0x38fe55857fb8,~
script-source,51,node:internal/streams/buffer_list,'use strict';\n\nconst {\n  StringPrototypeSlice\x2C\n  SymbolIterator\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { inspect } = require('internal/util/inspect');\n\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  push(v) {\n    const entry = { data: v\x2C next: null };\n    if (this.length > 0)\n      this.tail.next = entry;\n    else\n      this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  }\n\n  unshift(v) {\n    const entry = { data: v\x2C next: this.head };\n    if (this.length === 0)\n      this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  }\n\n  shift() {\n    if (this.length === 0)\n      return;\n    const ret = this.head.data;\n    if (this.length === 1)\n      this.head = this.tail = null;\n    else\n      this.head = this.head.next;\n    --this.length;\n    return ret;\n  }\n\n  clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  }\n\n  join(s) {\n    if (this.length === 0)\n      return '';\n    let p = this.head;\n    let ret = '' + p.data;\n    while (p = p.next)\n      ret += s + p.data;\n    return ret;\n  }\n\n  concat(n) {\n    if (this.length === 0)\n      return Buffer.alloc(0);\n    const ret = Buffer.allocUnsafe(n >>> 0);\n    let p = this.head;\n    let i = 0;\n    while (p) {\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n\x2C hasStrings) {\n    const data = this.head.data;\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0\x2C n);\n      this.head.data = data.slice(n);\n      return slice;\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift();\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\n  }\n\n  first() {\n    return this.head.data;\n  }\n\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data;\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = '';\n    let p = this.head;\n    let c = 0;\n    do {\n      const str = p.data;\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n      } else {\n        if (n === str.length) {\n          ret += str;\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\n          this.head = p;\n          p.data = StringPrototypeSlice(str\x2C n);\n        }\n        break;\n      }\n      ++c;\n    } while (p = p.next);\n    this.length -= c;\n    return ret;\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n);\n    const retLen = n;\n    let p = this.head;\n    let c = 0;\n    do {\n      const buf = p.data;\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n        n -= buf.length;\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n          ++c;\n          if (p.next)\n            this.head = p.next;\n          else\n            this.head = this.tail = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\n                                 retLen - n);\n          this.head = p;\n          p.data = buf.slice(n);\n        }\n        break;\n      }\n      ++c;\n    } while (p = p.next);\n    this.length -= c;\n    return ret;\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\n    });\n  }\n};\n
code-source-info,0x1b9b8816849e,51,265,338,C0O274C1O284C5O296C6O306C10O318C11O330C16O337,,
code-creation,LazyCompile,10,61083,0x1b9b88168bfe,98,construct node:internal/streams/destroy:225:19,0x38fe55847990,~
script-source,46,node:internal/streams/destroy,'use strict';\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w.destroyed = true;\n  }\n  if (r) {\n    r.destroyed = true;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w.closed = true;\n    }\n    if (r) {\n      r.closed = true;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    const result = self._destroy(err || null\x2C onDestroy);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            process.nextTick(onDestroy\x2C null);\n          }\x2C\n          function(err) {\n            process.nextTick(onDestroy\x2C err);\n          });\n      }\n    }\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w.closeEmitted = true;\n  }\n  if (r) {\n    r.closeEmitted = true;\n  }\n\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return;\n  }\n\n  if (w) {\n    w.errorEmitted = true;\n  }\n  if (r) {\n    r.errorEmitted = true;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = false;\n    r.endEmitted = false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.ended = false;\n    w.ending = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.finished = false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this;\n  }\n\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\n    stream.destroy(err);\n  else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r.constructed = false;\n  }\n  if (w) {\n    w.constructed = false;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r.constructed = true;\n    }\n    if (w) {\n      w.constructed = true;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      process.nextTick(emitConstructNT\x2C stream);\n    }\n  }\n\n  try {\n    const result = stream._construct(onConstruct);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            process.nextTick(onConstruct\x2C null);\n          }\x2C\n          function(err) {\n            process.nextTick(onConstruct\x2C err);\n          });\n      }\n    }\n  } catch (err) {\n    onConstruct(err);\n  }\n}\n\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct);\n}\n\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function';\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream) return;\n  if (isRequest(stream)) return stream.abort();\n  if (isRequest(stream.req)) return stream.req.abort();\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\n  if (typeof stream.close === 'function') return stream.close();\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\n};\n
code-source-info,0x1b9b88168bfe,46,4626,5014,C0O4661C8O4694C9O4701C10O4726C15O4761C20O4780C24O4793C25O4807C29O4822C33O4835C34O4849C38O4872C45O4877C48O4872C54O4908C61O4922C64O4908C72O4934C77O4959C78O4966C79O4974C82O4982C90O4982C97O5013,,
code-creation,LazyCompile,10,61416,0x1b9b881698be,266,Writable node:internal/streams/writable:219:18,0x38fe55861cb0,~
script-source,55,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\n\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n} = require('internal/streams/state');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_STREAM_CANNOT_PIPE\x2C\n  ERR_STREAM_DESTROYED\x2C\n  ERR_STREAM_ALREADY_FINISHED\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n  ERR_STREAM_WRITE_AFTER_END\x2C\n  ERR_UNKNOWN_ENCODING\n} = require('internal/errors').codes;\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinished = Symbol('kOnFinished');\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Duplex streams are both readable and writable\x2C but share\n  // the same options object.\n  // However\x2C some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream\x2C\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\n  if (typeof isDuplex !== 'boolean')\n    isDuplex = stream instanceof Stream.Duplex;\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode);\n\n  if (isDuplex)\n    this.objectMode = this.objectMode ||\n      !!(options && options.writableObjectMode);\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  // if _final has been called.\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // At the start of calling end()\n  this.ending = false;\n  // When end() has been called\x2C and returned.\n  this.ended = false;\n  // When 'finish' is emitted.\n  this.finished = false;\n\n  // Has it been destroyed\n  this.destroyed = false;\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false);\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  this.writecb = null;\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  this.constructed = true;\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false;\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null;\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false;\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false;\n\n  this[kOnFinished] = [];\n}\n\nfunction resetBuffer(state) {\n  state.buffered = [];\n  state.bufferedIndex = 0;\n  state.allBuffers = true;\n  state.allNoop = true;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  get() {\n    return this.buffered.length - this.bufferedIndex;\n  }\n});\n\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes\x2C too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false\x2C as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor\x2C at least with V8 6.5.\n  const isDuplex = (this instanceof Stream.Duplex);\n\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n    if (options.signal)\n      addAbortSignalNoValidate(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  destroyImpl.construct(this\x2C () => {\n    const state = this._writableState;\n\n    if (!state.writing) {\n      clearBuffer(this\x2C state);\n    }\n\n    finishMaybe(this\x2C state);\n  });\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = state.defaultEncoding;\n  } else {\n    if (!encoding)\n      encoding = state.defaultEncoding;\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (typeof cb !== 'function')\n      cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n    }\n  }\n\n  let err;\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark;\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false;\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false;\n    }\n  } else {\n    state.writelen = len;\n    state.writecb = callback;\n    state.writing = true;\n    state.sync = true;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state.sync = false;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n  const sync = state.sync;\n  const cb = state.writecb;\n\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null &&\n          state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++;\n      } else {\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state.afterWriteTickInfo = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\n    state.needDrain;\n  if (needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb();\n  }\n\n  if (state.destroyed) {\n    errorBuffer(state);\n  }\n\n  finishMaybe(stream\x2C state);\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return;\n  }\n\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    const { chunk\x2C callback } = state.buffered[n];\n    const len = state.objectMode ? 1 : chunk.length;\n    state.length -= len;\n    callback(new ERR_STREAM_DESTROYED('write'));\n  }\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\n  }\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if (state.corked ||\n      state.bufferProcessing ||\n      state.destroyed ||\n      !state.constructed) {\n    return;\n  }\n\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state.bufferProcessing = true;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = state.allNoop ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = state.allBuffers;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && !state.writing);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true;\n    finishMaybe(this\x2C state\x2C true);\n    state.ended = true;\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb\x2C err);\n    } else {\n      state[kOnFinished].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.constructed &&\n          state.length === 0 &&\n          !state.errored &&\n          state.buffered.length === 0 &&\n          !state.finished &&\n          !state.writing &&\n          !state.errorEmitted &&\n          !state.closeEmitted);\n}\n\nfunction callFinal(stream\x2C state) {\n  let called = false;\n\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    state.pendingcb--;\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0);\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err);\n      }\n      errorOrDestroy(stream\x2C err\x2C state.sync);\n    } else if (needFinish(state)) {\n      state.prefinished = true;\n      stream.emit('prefinish');\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++;\n      process.nextTick(finish\x2C stream\x2C state);\n    }\n  }\n\n  state.sync = true;\n  state.pendingcb++;\n\n  try {\n    const result = stream._final(onFinish);\n    if (result != null) {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          function() {\n            process.nextTick(onFinish\x2C null);\n          }\x2C\n          function(err) {\n            process.nextTick(onFinish\x2C err);\n          });\n      }\n    }\n  } catch (err) {\n    onFinish(stream\x2C state\x2C err);\n  }\n\n  state.sync = false;\n}\n\nfunction prefinish(stream\x2C state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true;\n      callFinal(stream\x2C state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0 && needFinish(state)) {\n      state.pendingcb++;\n      if (sync) {\n        process.nextTick(finish\x2C stream\x2C state);\n      } else {\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state.finished = true;\n\n  const onfinishCallbacks = state[kOnFinished].splice(0);\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]();\n  }\n\n  stream.emit('finish');\n\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n\n  destroyed: {\n    get() {\n      return this._writableState ? this._writableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value;\n      }\n    }\n  }\x2C\n\n  writable: {\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\n        !w.ending && !w.ended;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\n  }\x2C\n\n  writableFinished: {\n    get() {\n      return this._writableState ? this._writableState.finished : false;\n    }\n  }\x2C\n\n  writableObjectMode: {\n    get() {\n      return this._writableState ? this._writableState.objectMode : false;\n    }\n  }\x2C\n\n  writableBuffer: {\n    get() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  }\x2C\n\n  writableEnded: {\n    get() {\n      return this._writableState ? this._writableState.ending : false;\n    }\n  }\x2C\n\n  writableNeedDrain: {\n    get() {\n      const wState = this._writableState;\n      if (!wState) return false;\n      return !wState.destroyed && !wState.ending && wState.needDrain;\n    }\n  }\x2C\n\n  writableHighWaterMark: {\n    get() {\n      return this._writableState && this._writableState.highWaterMark;\n    }\n  }\x2C\n\n  writableCorked: {\n    get() {\n      return this._writableState ? this._writableState.corked : 0;\n    }\n  }\x2C\n\n  writableLength: {\n    get() {\n      return this._writableState && this._writableState.length;\n    }\n  }\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if (!state.destroyed &&\n    (state.bufferedIndex < state.buffered.length ||\n      state[kOnFinished].length)) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n
code-source-info,0x1b9b881698be,55,7409,8929,C0O7409C9O7983C16O8000C19O8007C23O7989C27O8019C33O8037C44O8037C51O8093C58O8100C63O8122C64O8126C83O8148C88O8146C92O8195C96O8233C104O8261C107O8283C111O8273C115O8314C123O8343C126O8366C130O8356C134O8398C142O8428C145O8452C149O8442C153O8485C161O8513C164O8535C168O8525C172O8566C180O8598C183O8624C187O8614C191O8651C197O8665C204O8698C212O8665C217O8720C224O8727C232O8727C238O8751C245O8763C258O8763C265O8928,,
tick,0x100c56844,62333,0,0x0,3,0x0,0x1b9b88163b92,0x1b9b881636ab,0x1b9b8815967f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed04c76b,0x172aed04c51d,0x3a1583d01de8,0x311ed227b955
code-creation,LazyCompile,10,62375,0x1b9b8816b91e,341,WritableState node:internal/streams/writable:77:23,0x38fe55861b50,~
code-source-info,0x1b9b8816b91e
code-creation,LazyCompile,10,62416,0x1b9b8816bd3e,23,resetBuffer node:internal/streams/writable:202:21,0x38fe55861ba0,~
code-source-info,0x1b9b8816bd3e,55,7005,7117,C0O7017C2O7032C6O7040C7O7060C11O7067C12O7084C16O7094C17O7108C22O7116,,
code-creation,LazyCompile,10,62458,0x1b9b8816be56,21,set node:internal/streams/readable:1175:8,0x38fe55854a48,~
code-source-info,0x1b9b8816be56,48,35837,35964,C0O35887C6O35918C13O35946C15O35942C20O35963,,
code-creation,LazyCompile,10,62500,0x1b9b8816bfbe,131,createHandle node:net:137:22,0x172aed078230,~
code-source-info,0x1b9b8816bfbe,119,3597,3957,C0O3617C13O3617C18O3660C23O3660C28O3683C30O3692C35O3710C42O3733C46O3745C49O3759C57O3768C60O3782C67O3717C72O3795C73O3803C75O3812C80O3829C87O3851C91O3863C94O3876C102O3885C105O3898C112O3836C117O3911C118O3919C125O3925C130O3919,,
code-creation,LazyCompile,10,62541,0x1b9b8816c16e,14,set node:net:1692:6,0x172aed07a270,~
code-source-info,0x1b9b8816c16e,119,45097,45130,C0O45103C2O45115C7O45124C13O45128,,
code-creation,LazyCompile,10,62541,0x1b9b8816c26e,8,get node:net:1691:6,0x172aed07a220,~
code-source-info,0x1b9b8816c26e,119,45062,45090,C0O45067C2O45079C4O45078C7O45088,,
code-creation,LazyCompile,10,62625,0x1b9b8816c42e,196,Readable.on node:internal/streams/readable:875:33,0x38fe55854380,~
code-source-info,0x1b9b8816c42e,48,27773,28672,C0O27798C5O27805C10O27815C15O27818C29O27818C35O27859C40O27878C42O27885C47O28067C55O28067C62O28093C65O28060C69O28186C75O28194C80O28216C85O28216C91O28235C93O28242C98O28275C104O28296C110O28323C112O28368C118O28347C122O28382C123O28396C127O28411C128O28433C132O28448C140O28475C145O28489C150O28448C155O28515C161O28533C164O28533C170O28577C176O28596C179O28604C187O28604C193O28659C195O28670,,
code-creation,LazyCompile,10,62666,0x1b9b8816c6b6,135,initSocketHandle node:net:254:26,0x172aed078410,~
code-source-info,0x1b9b8816c6b6,119,6321,6899,C0O6337C5O6337C9O6353C10O6368C14O6454C20O6474C27O6482C32O6496C36O6513C43O6530C45O6528C49O6548C51O6553C57O6591C62O6572C66O6570C70O6620C72O6625C74O6624C78O6639C80O6675C82O6680C84O6679C88O6699C90O6740C94O6758C99O6763C105O6796C106O6803C107O6812C109O6817C114O6826C118O6856C123O6864C128O6864C134O6898,,
code-creation,LazyCompile,10,62708,0x1b9b8816c8f6,120,undestroy node:internal/streams/destroy:160:19,0x38fe558478d0,~
code-source-info,0x1b9b8816c8f6,46,3064,3661,C0O3086C5O3119C10O3138C14O3151C15O3165C19O3177C20O3186C24O3199C25O3214C29O3227C30O3239C34O3252C35O3262C39O3274C40O3289C44O3302C45O3312C49O3325C50O3333C54O3346C55O3359C59O3375C63O3388C64O3402C68O3414C69O3426C73O3439C74O3448C78O3461C79O3476C83O3489C84O3499C88O3511C89O3526C93O3539C94O3547C98O3560C99O3569C103O3582C104O3596C108O3609C109O3623C113O3636C114O3647C119O3660,,
code-creation,LazyCompile,10,62750,0x1b9b8816cb7e,32,getNewAsyncId node:net:156:23,0x172aed078280,~
code-source-info,0x1b9b8816cb7e,119,3982,4098,C0O3995C4O4028C14O4061C17O4061C22O4083C27O4083C31O4096,,
code-creation,LazyCompile,10,62750,0x1b9b8816cc8e,5,get node:internal/bootstrap/pre_execution:314:8,0x3a1583d1c4e0,~
code-source-info,0x1b9b8816cc8e,91,10092,10125,C0O10103C4O10119,,
code-creation,Eval,10,62958,0x1b9b8816d17e,5, /opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js:1:1,0x1b9b8816d028,~
script-source,135,/opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js,'use strict'\n\nconst SOFT_EXIT_SIGNALS = ['SIGINT'\x2C 'SIGTERM']\n\nfor (let i = 0; i < SOFT_EXIT_SIGNALS.length; i++) {\n  process.on(SOFT_EXIT_SIGNALS[i]\x2C process.exit)\n}\n\nmodule.exports = { SOFT_EXIT_SIGNALS }\n
code-source-info,0x1b9b8816d17e,135,0,207,C0O0C4O207,,
code-creation,Function,10,62958,0x1b9b8816d2a6,73, /opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js:1:1,0x1b9b8816d0e8,~
code-source-info,0x1b9b8816d2a6,135,0,207,C0O40C5O76C7O101C11O81C16O118C20O126C27O146C31O151C35O159C40O126C46O110C51O63C54O168C61O187C67O183C72O206,,
code-creation,LazyCompile,10,63041,0x1b9b8816d94e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:464:36,0x311ed227df30,~
code-source-info,0x1b9b8816d94e,91,14945,15167,C0O14952C8O14956C14O15001C17O15009C28O15009C34O15121C40O15121C45O15158C49O15166,,
code-creation,LazyCompile,10,63041,0x1b9b8816da86,80,executeUserEntryPoint node:internal/modules/run_main:72:31,0x172aed04b8c8,~
code-source-info,0x1b9b8816da86,113,2321,2626,C7O2337C14O2341C22O2371C25O2371C30O2417C33O2417C38O2453C40O2477C45O2488C50O2477C56O2589C61O2596C73O2596C79O2625,,
code-creation,LazyCompile,10,63083,0x1b9b8816ded6,68,resolveMainPath node:internal/modules/run_main:11:25,0x172aed04b760,~
code-source-info,0x1b9b8816ded6,113,296,710,C0O468C5O475C12O485C15O490C20O490C30O475C36O520C38O539C39O546C40O579C48O579C53O625C55O656C60O667C65O692C67O708,,
code-creation,LazyCompile,10,63208,0x1b9b8816e246,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0x172aed04b7b0,~
code-source-info,0x1b9b8816e246,113,739,1299,C0O773C8O773C13O816C15O836C16O848C17O891C25O891C30O948C32O980C37O996C38O1008C39O1056C45O1072C51O1072C58O1119C59O1131C60O1134C66O1151C72O1151C79O1198C80O1211C81O1226C86O1226C91O1256C93O1274C98O1279C105O1284C108O1297,,
tick,0x1a3726538,63416,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,63458,0x1b9b8816e68e,5, /Users/carloscalvo/code/Coder/backend/entregas/benchmark.js:1:1,0x1b9b8816e518,~
script-source,136,/Users/carloscalvo/code/Coder/backend/entregas/benchmark.js,const autocannon = require("autocannon");\nconst { PassThrough } = require("stream");\n\nfunction runBenchmark(url) {\n\x09const buffer = [];\n\x09const outputStream = new PassThrough();\n\n\x09const instance = autocannon({\n\x09\x09url\x2C\n\x09\x09connections: 100\x2C\n\x09\x09duration: 20\x2C\n\x09});\n\n\x09autocannon.track(instance\x2C { outputStream });\n\n\x09outputStream.on("data"\x2C (data) => buffer.push(data));\n\n\x09instance.on("done"\x2C () => process.stdout.write(Buffer.concat(buffer)));\n}\n\nrunBenchmark(`http://localhost:8080/info`);\n
code-source-info,0x1b9b8816e68e,136,0,481,C0O0C4O481,,
code-creation,Function,10,63500,0x1b9b8816e796,48, /Users/carloscalvo/code/Coder/backend/entregas/benchmark.js:1:1,0x1b9b8816e5f8,~
code-source-info,0x1b9b8816e796,136,0,481,C0O0C16O19C19O19C23O19C25O66C28O66C33O50C39O437C42O437C47O480,,
code-creation,LazyCompile,10,63583,0x1b9b8816ec56,198,resolveExports node:internal/modules/cjs/loader:472:24,0x3a1583d1f5e8,~
code-source-info,0x1b9b8816ec56,98,13568,14253,C0O13706C7O13736C10O13706C20O13674C27O13683C38O13762C42O13777C43O13784C44O13803C49O13808C54O13808C61O13845C64O13845C69O13869C74O13876C87O13913C92O13942C97O13973C102O13995C106O13973C116O14019C124O14051C130O13942C144O13920C149O14091C161O14116C164O14122C171O14127C176O14163C183O14207C187O14169C192O14163C193O14233C195O14233C197O14252,,
code-creation,LazyCompile,10,63916,0x1b9b8816f626,329,tryPackage node:internal/modules/cjs/loader:338:20,0x3a1583d1f3b8,~
code-source-info,0x1b9b8816f626,98,9458,10716,C0O9516C3O9516C10O9540C18O9551C20O9567C25O9588C28O9593C36O9593C49O9574C54O9638C55O9663C60O9668C65O9668C72O9710C75O9710C94O9743C106O9802C109O9807C117O9807C130O9788C136O9852C137O9863C142O9880C147O9903C150O9908C158O9908C171O9889C177O9958C179O10046C189O10088C202O10102C208O10046C214O10190C216O10199C220O10227C222O10238C225O10243C233O10243C239O10236C243O10287C245O10303C249O10380C251O10380C252O10427C257O10432C265O10432C272O10476C275O10484C285O10533C298O10550C311O10559C321O10484C326O10700C328O10714,,
code-creation,LazyCompile,10,64083,0x1b9b88170256,71,createUnsafeBuffer node:internal/buffer:1059:28,0x30d75bb1a60,~
code-source-info,0x1b9b88170256,19,30321,30430,C0O30332C8O30344C15O30361C22O30368C39O30408C48O30420C70O30429,,
code-creation,Eval,10,64375,0x1b9b88170f56,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/autocannon.js:1:1,0x1b9b88170cc0,~
script-source,137,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/autocannon.js,#! /usr/bin/env node\n\n'use strict'\n\nconst crossArgv = require('cross-argv')\nconst fs = require('fs')\nconst os = require('os')\nconst net = require('net')\nconst path = require('path')\nconst URL = require('url').URL\nconst spawn = require('child_process').spawn\nconst managePath = require('manage-path')\nconst hasAsyncHooks = require('has-async-hooks')\nconst subarg = require('subarg')\nconst help = fs.readFileSync(path.join(__dirname\x2C 'help.txt')\x2C 'utf8')\nconst printResult = require('./lib/printResult')\nconst initJob = require('./lib/init')\nconst track = require('./lib/progressTracker')\nconst generateSubArgAliases = require('./lib/subargAliases')\nconst { checkURL\x2C ofURL } = require('./lib/url')\nconst { parseHAR } = require('./lib/parseHAR')\n\nif (typeof URL !== 'function') {\n  console.error('autocannon requires the WHATWG URL API\x2C but it is not available. Please upgrade to Node 6.13+.')\n  process.exit(1)\n}\n\nmodule.exports = initJob\nmodule.exports.track = track\n\nmodule.exports.start = start\nmodule.exports.printResult = printResult\nmodule.exports.parseArguments = parseArguments\nconst alias = {\n  connections: 'c'\x2C\n  pipelining: 'p'\x2C\n  timeout: 't'\x2C\n  duration: 'd'\x2C\n  amount: 'a'\x2C\n  json: 'j'\x2C\n  renderLatencyTable: ['l'\x2C 'latency']\x2C\n  onPort: 'on-port'\x2C\n  method: 'm'\x2C\n  headers: ['H'\x2C 'header']\x2C\n  body: 'b'\x2C\n  form: 'F'\x2C\n  servername: 's'\x2C\n  bailout: 'B'\x2C\n  input: 'i'\x2C\n  maxConnectionRequests: 'M'\x2C\n  maxOverallRequests: 'O'\x2C\n  connectionRate: 'r'\x2C\n  overallRate: 'R'\x2C\n  ignoreCoordinatedOmission: 'C'\x2C\n  reconnectRate: 'D'\x2C\n  renderProgressBar: 'progress'\x2C\n  renderStatusCodes: 'statusCodes'\x2C\n  title: 'T'\x2C\n  version: 'v'\x2C\n  forever: 'f'\x2C\n  idReplacement: 'I'\x2C\n  socketPath: 'S'\x2C\n  excludeErrorStats: 'x'\x2C\n  expectBody: 'E'\x2C\n  workers: 'w'\x2C\n  warmup: 'W'\x2C\n  help: 'h'\n}\n\nconst defaults = {\n  connections: 10\x2C\n  timeout: 10\x2C\n  pipelining: 1\x2C\n  duration: 10\x2C\n  reconnectRate: 0\x2C\n  renderLatencyTable: false\x2C\n  renderProgressBar: true\x2C\n  renderStatusCodes: false\x2C\n  json: false\x2C\n  forever: false\x2C\n  method: 'GET'\x2C\n  idReplacement: false\x2C\n  excludeErrorStats: false\x2C\n  debug: false\x2C\n  workers: 0\n}\n\nfunction parseArguments (argvs) {\n  let argv = subarg(argvs\x2C {\n    boolean: ['json'\x2C 'n'\x2C 'help'\x2C 'renderLatencyTable'\x2C 'renderProgressBar'\x2C 'renderStatusCodes'\x2C 'forever'\x2C 'idReplacement'\x2C 'excludeErrorStats'\x2C 'onPort'\x2C 'debug'\x2C 'ignoreCoordinatedOmission']\x2C\n    alias\x2C\n    default: defaults\x2C\n    '--': true\n  })\n  // subarg does not convert aliases in sub arguments\n  argv = generateSubArgAliases(argv)\n\n  argv.url = argv._.length > 1 ? argv._ : argv._[0]\n\n  if (argv.onPort) {\n    argv.spawn = argv['--']\n  }\n\n  // support -n to disable the progress bar and results table\n  if (argv.n) {\n    argv.renderProgressBar = false\n    argv.renderResultsTable = false\n    argv.renderStatusCodes = false\n  }\n\n  if (argv.version) {\n    console.log('autocannon'\x2C 'v' + require('./package').version)\n    console.log('node'\x2C process.version)\n    return\n  }\n\n  if (!checkURL(argv.url) || argv.help) {\n    console.error(help)\n    return\n  }\n\n  // if PORT is set (like by `0x`)\x2C target `localhost:PORT/path` by default.\n  // this allows doing:\n  //     0x --on-port 'autocannon /path' -- node server.js\n  if (process.env.PORT) {\n    argv.url = ofURL(argv.url).map(url => new URL(url\x2C `http://localhost:${process.env.PORT}`).href)\n  }\n  // Add http:// if it's not there and this is not a /path\n  argv.url = ofURL(argv.url).map(url => {\n    if (url.indexOf('http') !== 0 && url[0] !== '/') {\n      url = `http://${url}`\n    }\n    return url\n  })\n\n  // check that the URL is valid.\n  ofURL(argv.url).map(url => {\n    try {\n      // If --on-port is given\x2C it's acceptable to not have a hostname\n      if (argv.onPort) {\n        new URL(url\x2C 'http://localhost') // eslint-disable-line no-new\n      } else {\n        new URL(url) // eslint-disable-line no-new\n      }\n    } catch (err) {\n      console.error(err.message)\n      console.error('')\n      console.error('When targeting a path without a hostname\x2C the PORT environment variable must be available.')\n      console.error('Use a full URL or set the PORT variable.')\n      process.exit(1)\n    }\n\n    return null // to make linter happy\n  })\n\n  if (argv.input) {\n    argv.body = fs.readFileSync(argv.input\x2C 'utf8')\n  }\n\n  if (argv.headers) {\n    if (!Array.isArray(argv.headers)) {\n      argv.headers = [argv.headers]\n    }\n\n    argv.headers = argv.headers.reduce((obj\x2C header) => {\n      const colonIndex = header.indexOf(':')\n      const equalIndex = header.indexOf('=')\n      const index = Math.min(colonIndex < 0 ? Infinity : colonIndex\x2C equalIndex < 0 ? Infinity : equalIndex)\n      if (Number.isFinite(index) && index > 0) {\n        obj[header.slice(0\x2C index)] = header.slice(index + 1)\n        return obj\n      } else throw new Error(`An HTTP header was not correctly formatted: ${header}`)\n    }\x2C {})\n  }\n\n  if (argv.har) {\n    try {\n      argv.har = JSON.parse(fs.readFileSync(argv.har))\n      // warn users about skipped HAR requests\n      const requestsByOrigin = parseHAR(argv.har)\n      const allowed = ofURL(argv.url\x2C true).map(url => new URL(url).origin)\n      for (const [origin] of requestsByOrigin) {\n        if (!allowed.includes(origin)) {\n          console.error(`Warning: skipping requests to '${origin}' as the target is ${allowed.join('\x2C ')}`)\n        }\n      }\n    } catch (err) {\n      throw new Error(`Failed to load HAR file content: ${err.message}`)\n    }\n  }\n\n  // This is to distinguish down the line whether it is\n  // run via command-line or programmatically\n  argv[Symbol.for('internal')] = true\n\n  return argv\n}\n\nfunction start (argv) {\n  if (!argv) {\n    // we are printing the help\n    return\n  }\n\n  if (argv.onPort) {\n    if (!hasAsyncHooks()) {\n      console.error('The --on-port flag requires the async_hooks builtin module\x2C but it is not available. Please upgrade to Node 8.1+.')\n      process.exit(1)\n    }\n\n    const { socketPath\x2C server } = createChannel((port) => {\n      const url = new URL(argv.url\x2C `http://localhost:${port}`).href\n      const opts = Object.assign({}\x2C argv\x2C {\n        onPort: false\x2C\n        url: url\n      })\n      const tracker = initJob(opts\x2C () => {\n        proc.kill('SIGINT')\n        server.close()\n      })\n\n      process.once('SIGINT'\x2C () => {\n        tracker.stop()\n      })\n    })\n\n    // manage-path always uses the $PATH variable\x2C but we can pretend\n    // that it is equal to $NODE_PATH\n    const alterPath = managePath({ PATH: process.env.NODE_PATH })\n    alterPath.unshift(path.join(__dirname\x2C 'lib/preload'))\n\n    const proc = spawn(argv.spawn[0]\x2C argv.spawn.slice(1)\x2C {\n      stdio: ['ignore'\x2C 'inherit'\x2C 'inherit']\x2C\n      env: Object.assign({}\x2C process.env\x2C {\n        NODE_OPTIONS: ['-r'\x2C 'autocannonDetectPort'].join(' ') +\n          (process.env.NODE_OPTIONS ? ` ${process.env.NODE_OPTIONS}` : '')\x2C\n        NODE_PATH: alterPath.get()\x2C\n        AUTOCANNON_SOCKET: socketPath\n      })\n    })\n  } else {\n    // if forever is true then a promise is not returned and we need to try ... catch errors\n    try {\n      const tracker = initJob(argv)\n      if (tracker.then) {\n        tracker.catch((err) => {\n          console.error(err.message)\n        })\n      }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n}\n\nfunction createChannel (onport) {\n  const pipeName = `${process.pid}.autocannon`\n  const socketPath = process.platform === 'win32'\n    ? `\\\\\\\\?\\\\pipe\\\\${pipeName}`\n    : path.join(os.tmpdir()\x2C pipeName)\n  const server = net.createServer((socket) => {\n    socket.once('data'\x2C (chunk) => {\n      const port = chunk.toString()\n      onport(port)\n    })\n  })\n  server.listen(socketPath)\n  server.on('close'\x2C () => {\n    try {\n      fs.unlinkSync(socketPath)\n    } catch (err) {}\n  })\n\n  return { socketPath\x2C server }\n}\n\nif (require.main === module) {\n  const argv = crossArgv(process.argv.slice(2))\n  start(parseArguments(argv))\n}\n
code-source-info,0x1b9b88170f56,137,0,7872,C0O0C4O7872,,
code-creation,Function,10,64708,0x1b9b881715ce,491, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/autocannon.js:1:1,0x1b9b88170ec0,~
code-source-info,0x1b9b881715ce
tick,0x100c56644,64750,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,RegExp,3,64833,0x107508760,1896,^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$
code-creation,Eval,10,65333,0x1b9b88172f16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cross-argv/index.js:1:1,0x1b9b88172da0,~
script-source,138,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cross-argv/index.js,const IS_WINDOWS = process.platform === 'win32'\n\nmodule.exports = crossArgv\n\nfunction crossArgv (pargv\x2C force) {\n  if (!pargv) pargv = process.argv\n  const str = pargv.join(` `)\n  if (((!IS_WINDOWS || (str.match(/'/g) || []).length < 2) && !force)) return pargv\n\n  const newStr = str.replace(/'(.+?)'/g\x2C `"$1"`)\n  return splitCommandLine(newStr)\n}\n\n/**\n * @form https://stackoverflow.com/a/56930457/12391660\n * @param {*} commandLine\n * @returns\n */\nfunction splitCommandLine (commandLine) {\n  //  Find a unique marker for pairs of double-quote characters.\n  //  Start with '<DDQ>' and repeatedly append '@' if necessary to make it unique.\n  var doubleDoubleQuote = '<DDQ>'\n  while (commandLine.indexOf(doubleDoubleQuote) > -1) doubleDoubleQuote += '@'\n\n  //  Replace all pairs of double-quotes with above marker.\n  var noDoubleDoubleQuotes = commandLine.replace(/""/g\x2C doubleDoubleQuote)\n\n  //  As above\x2C find a unique marker for spaces.\n  var spaceMarker = '<SP>'\n  while (commandLine.indexOf(spaceMarker) > -1) spaceMarker += '@'\n\n  //  Protect double-quoted strings.\n  //   o  Find strings of non-double-quotes\x2C wrapped in double-quotes.\n  //   o  The final double-quote is optional to allow for an unterminated string.\n  //   o  Replace each double-quoted-string with what's inside the qouble-quotes\x2C\n  //      after each space character has been replaced with the space-marker above;\n  //      and each double-double-quote marker has been replaced with a double-\n  //      quote character.\n  //   o  The outer double-quotes will not be present.\n  var noSpacesInQuotes = noDoubleDoubleQuotes.replace(/"([^"]*)"?/g\x2C (fullMatch\x2C capture) => {\n    return capture.replace(/ /g\x2C spaceMarker)\n      .replace(RegExp(doubleDoubleQuote\x2C 'g')\x2C '"')\n  })\n\n  //  Now that it is safe to do so\x2C split the command-line at one-or-more spaces.\n  var mangledParamArray = noSpacesInQuotes.split(/ +/)\n\n  //  Create a new array by restoring spaces from any space-markers. Also\x2C any\n  //  remaining double-double-quote markers must have been from OUTSIDE a double-\n  //  quoted string and so are removed.\n  var paramArray = mangledParamArray.map((mangledParam) => {\n    return mangledParam.replace(RegExp(spaceMarker\x2C 'g')\x2C ' ')\n      .replace(RegExp(doubleDoubleQuote\x2C 'g')\x2C '')\n  })\n\n  return paramArray\n}\n
code-source-info,0x1b9b88172f16,138,0,2292,C0O0C4O2292,,
code-creation,Function,10,65458,0x1b9b88173076,43, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cross-argv/index.js:1:1,0x1b9b88172e80,~
code-source-info,0x1b9b88173076,138,0,2292,C0O0C19O19C23O27C30O36C33O19C35O49C37O64C42O2291,,
code-creation,LazyCompile,10,65500,0x1b9b88173b0e,11,get ReadStream node:fs:2984:17,0x6a337a1f050,~
code-source-info,0x1b9b88173b0e,76,78936,78990,C0O78945C3O78945C6O78968C10O78986,,
code-creation,LazyCompile,10,65541,0x1b9b88173c4e,71,lazyLoadStreams node:fs:2841:25,0x6a337a1ef18,~
code-source-info,0x1b9b88173c4e,76,76541,76708,C0O76548C6O76571C12O76602C17O76574C30O76586C43O76639C50O76654C56O76672C63O76688C70O76707,,
code-creation,Eval,10,65750,0x1b9b88174476,5, node:internal/fs/streams:1:1,0x1b9b881740e0,~
script-source,139,node:internal/fs/streams,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  MathMin\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst { deprecate } = require('internal/util');\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n} = require('internal/validators');\nconst { errorOrDestroy } = require('internal/streams/destroy');\nconst fs = require('fs');\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\nconst { Buffer } = require('buffer');\nconst {\n  copyObject\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  validatePath\x2C\n} = require('internal/fs/utils');\nconst { Readable\x2C Writable\x2C finished } = require('stream');\nconst { toPathIfFileURL } = require('internal/url');\nconst kIoDone = Symbol('kIoDone');\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\n\nconst kFs = Symbol('kFs');\nconst kHandle = Symbol('kHandle');\n\nfunction _construct(callback) {\n  const stream = this;\n  if (typeof stream.fd === 'number') {\n    callback();\n    return;\n  }\n\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\n    // Backwards compat for monkey patching open().\n    const orgEmit = stream.emit;\n    stream.emit = function(...args) {\n      if (args[0] === 'open') {\n        this.emit = orgEmit;\n        callback();\n        ReflectApply(orgEmit\x2C this\x2C args);\n      } else if (args[0] === 'error') {\n        this.emit = orgEmit;\n        callback(args[1]);\n      } else {\n        ReflectApply(orgEmit\x2C this\x2C args);\n      }\n    };\n    stream.open();\n  } else {\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\n      if (er) {\n        callback(er);\n      } else {\n        stream.fd = fd;\n        callback();\n        stream.emit('open'\x2C stream.fd);\n        stream.emit('ready');\n      }\n    });\n  }\n}\n\n// This generates an fs operations structure for a FileHandle\nconst FileHandleOperations = (handle) => {\n  return {\n    open: (path\x2C flags\x2C mode\x2C cb) => {\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\n    }\x2C\n    close: (fd\x2C cb) => {\n      handle[kUnref]();\n      PromisePrototypeThen(handle.close()\x2C\n                           () => cb()\x2C cb);\n    }\x2C\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\n                           (err) => cb(err\x2C 0\x2C buffers));\n    }\n  };\n};\n\nfunction close(stream\x2C err\x2C cb) {\n  if (!stream.fd) {\n    // TODO(ronag)\n    // stream.closed = true;\n    cb(err);\n  } else {\n    stream[kFs].close(stream.fd\x2C (er) => {\n      stream.closed = true;\n      cb(er || err);\n    });\n    stream.fd = null;\n  }\n}\n\nfunction importFd(stream\x2C options) {\n  stream.fd = null;\n  if (options.fd != null) {\n    if (typeof options.fd === 'number') {\n      // When fd is a raw descriptor\x2C we must keep our fingers crossed\n      // that the descriptor won't get closed\x2C or worse\x2C replaced with\n      // another one\n      // https://github.com/nodejs/node/issues/35862\n      stream.fd = options.fd;\n    } else if (typeof options.fd === 'object' &&\n      options.fd instanceof FileHandle) {\n      // When fd is a FileHandle we can listen for 'close' events\n      if (options.fs)\n        // FileHandle is not supported with custom fs operations\n        throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\n      stream[kHandle] = options.fd;\n      stream.fd = options.fd.fd;\n      stream[kFs] = FileHandleOperations(stream[kHandle]);\n      stream[kHandle][kRef]();\n      options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\n    } else\n      throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\n                                 ['number'\x2C 'FileHandle']\x2C options.fd);\n  }\n}\n\nfunction ReadStream(path\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(path\x2C options);\n\n  // A little bit bigger buffer and water marks by default\n  options = copyObject(getOptions(options\x2C {}));\n  if (options.highWaterMark === undefined)\n    options.highWaterMark = 64 * 1024;\n\n  if (options.autoDestroy === undefined) {\n    options.autoDestroy = false;\n  }\n\n  this[kFs] = options.fs || fs;\n\n  validateFunction(this[kFs].open\x2C 'options.fs.open');\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\n  validateFunction(this[kFs].close\x2C 'options.fs.close');\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  // Path will be ignored when fd is specified\x2C so it can be falsy\n  this.path = toPathIfFileURL(path);\n  this.flags = options.flags === undefined ? 'r' : options.flags;\n  this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n  importFd(this\x2C options);\n\n  this.start = options.start;\n  this.end = options.end;\n  this.pos = undefined;\n  this.bytesRead = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n  // If fd has been set\x2C validate\x2C otherwise validate path.\n  if (this.fd != null) {\n    this.fd = getValidatedFd(this.fd);\n  } else {\n    validatePath(this.path);\n  }\n\n  if (this.end === undefined) {\n    this.end = Infinity;\n  } else if (this.end !== Infinity) {\n    validateInteger(this.end\x2C 'end'\x2C 0);\n\n    if (this.start !== undefined && this.start > this.end) {\n      throw new ERR_OUT_OF_RANGE(\n        'start'\x2C\n        `<= "end" (here: ${this.end})`\x2C\n        this.start\n      );\n    }\n  }\n\n  ReflectApply(Readable\x2C this\x2C [options]);\n}\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(ReadStream\x2C Readable);\n\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\n  get() {\n    return this._readableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._readableState.autoDestroy = val;\n  }\n});\n\nconst openReadFs = deprecate(function() {\n  // Noop.\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\nReadStream.prototype.open = openReadFs;\n\nReadStream.prototype._construct = _construct;\n\nReadStream.prototype._read = function(n) {\n  n = this.pos !== undefined ?\n    MathMin(this.end - this.pos + 1\x2C n) :\n    MathMin(this.end - this.bytesRead + 1\x2C n);\n\n  if (n <= 0) {\n    this.push(null);\n    return;\n  }\n\n  const buf = Buffer.allocUnsafeSlow(n);\n\n  this[kIsPerformingIO] = true;\n  this[kFs]\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\n      this[kIsPerformingIO] = false;\n\n      // Tell ._destroy() that it's safe to close the fd now.\n      if (this.destroyed) {\n        this.emit(kIoDone\x2C er);\n        return;\n      }\n\n      if (er) {\n        errorOrDestroy(this\x2C er);\n      } else if (bytesRead > 0) {\n        if (this.pos !== undefined) {\n          this.pos += bytesRead;\n        }\n\n        this.bytesRead += bytesRead;\n\n        if (bytesRead !== buf.length) {\n          // Slow path. Shrink to fit.\n          // Copy instead of slice so that we don't retain\n          // large backing buffer for small reads.\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\n          buf = dst;\n        }\n\n        this.push(buf);\n      } else {\n        this.push(null);\n      }\n    });\n};\n\nReadStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nReadStream.prototype.close = function(cb) {\n  if (typeof cb === 'function') finished(this\x2C cb);\n  this.destroy();\n};\n\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nfunction WriteStream(path\x2C options) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(path\x2C options);\n\n  options = copyObject(getOptions(options\x2C {}));\n\n  // Only buffers are supported.\n  options.decodeStrings = true;\n\n  this[kFs] = options.fs || fs;\n\n  validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n  if (!this[kFs].write && !this[kFs].writev) {\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\n                                   this[kFs].write);\n  }\n\n  if (this[kFs].write) {\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\n  }\n\n  if (this[kFs].writev) {\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\n  }\n\n  validateFunction(this[kFs].close\x2C 'options.fs.close');\n\n  // It's enough to override either\x2C in which case only one will be used.\n  if (!this[kFs].write) {\n    this._write = null;\n  }\n  if (!this[kFs].writev) {\n    this._writev = null;\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  // Path will be ignored when fd is specified\x2C so it can be falsy\n  this.path = toPathIfFileURL(path);\n  this.flags = options.flags === undefined ? 'w' : options.flags;\n  this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n  importFd(this\x2C options);\n\n  this.start = options.start;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n  // If fd has been set\x2C validate\x2C otherwise validate path.\n  if (this.fd != null) {\n    this.fd = getValidatedFd(this.fd);\n  } else {\n    validatePath(this.path);\n  }\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n\n  if (options.encoding)\n    this.setDefaultEncoding(options.encoding);\n}\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(WriteStream\x2C Writable);\n\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\n  get() {\n    return this._writableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._writableState.autoDestroy = val;\n  }\n});\n\nconst openWriteFs = deprecate(function() {\n  // Noop.\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\nWriteStream.prototype.open = openWriteFs;\n\nWriteStream.prototype._construct = _construct;\n\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\n  this[kIsPerformingIO] = true;\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += data.length;\n};\n\nWriteStream.prototype._writev = function(data\x2C cb) {\n  const len = data.length;\n  const chunks = new Array(len);\n  let size = 0;\n\n  for (let i = 0; i < len; i++) {\n    const chunk = data[i].chunk;\n\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n\n  this[kIsPerformingIO] = true;\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += size;\n};\n\nWriteStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nWriteStream.prototype.close = function(cb) {\n  if (cb) {\n    if (this.closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this.on('close'\x2C cb);\n  }\n\n  // If we are not autoClosing\x2C we should call\n  // destroy on 'finish'.\n  if (!this.autoClose) {\n    this.on('finish'\x2C this.destroy);\n  }\n\n  // We use end() instead of destroy() because of\n  // https://github.com/nodejs/node/issues/2006\n  this.end();\n};\n\n// There is no shutdown() for files.\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\n\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nmodule.exports = {\n  ReadStream\x2C\n  WriteStream\n};\n
code-source-info,0x1b9b88174476,139,0,13325,C0O0C4O13325,,
code-creation,Function,10,66291,0x1b9b8817512e,866, node:internal/fs/streams:1:1,0x1b9b881743e0,~
code-source-info,0x1b9b8817512e
tick,0x1a375c220,66333,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x1b9b88173c5a,0x1b9b88173b11,0x101460594,0x1b9b88158d60,0x1b9b88158c11,0x1b9b88158a70,0x100c999d0,0x1b9b881586fa,0x172aed068f35,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x1b9b8817162f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,66416,0x1b9b88176cae,11,get WriteStream node:fs:2993:18,0x6a337a1f130,~
code-source-info,0x1b9b88176cae,76,79062,79117,C0O79071C3O79071C6O79094C10O79113,,
code-creation,LazyCompile,10,66458,0x1b9b88176dce,11,get FileReadStream node:fs:3004:21,0x6a337a1f210,~
code-source-info,0x1b9b88176dce,76,79327,79385,C0O79336C3O79336C6O79359C10O79381,,
code-creation,LazyCompile,10,66458,0x1b9b88176eee,11,get FileWriteStream node:fs:3013:22,0x6a337a1f300,~
code-source-info,0x1b9b88176eee,76,79469,79528,C0O79478C3O79478C6O79501C10O79524,,
code-creation,LazyCompile,10,66458,0x1b9b88176ff6,35,get node:fs:3039:8,0x6a337a1f3f0,~
code-source-info,0x1b9b88176ff6,76,80024,80146,C0O80035C6O80066C12O80077C17O80108C24O80075C30O80124C34O80140,,
code-creation,Eval,10,66666,0x1b9b88177b46,5, node:os:1:1,0x1b9b881777e0,~
script-source,140,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  SymbolToPrimitive\x2C\n} = primordials;\n\nconst { safeGetenv } = internalBinding('credentials');\nconst constants = internalBinding('constants').os;\nconst isWindows = process.platform === 'win32';\n\nconst {\n  codes: {\n    ERR_SYSTEM_ERROR\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateInt32 } = require('internal/validators');\n\nconst {\n  getCPUs\x2C\n  getFreeMem\x2C\n  getHomeDirectory: _getHomeDirectory\x2C\n  getHostname: _getHostname\x2C\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\n  getLoadAvg\x2C\n  getPriority: _getPriority\x2C\n  getOSInformation: _getOSInformation\x2C\n  getTotalMem\x2C\n  getUserInfo\x2C\n  getUptime\x2C\n  isBigEndian\x2C\n  setPriority: _setPriority\n} = internalBinding('os');\n\nfunction getCheckedFunction(fn) {\n  return hideStackFrames(function checkError(...args) {\n    const ctx = {};\n    const ret = fn(...args\x2C ctx);\n    if (ret === undefined) {\n      throw new ERR_SYSTEM_ERROR(ctx);\n    }\n    return ret;\n  });\n}\n\nconst {\n  0: type\x2C\n  1: version\x2C\n  2: release\x2C\n} = _getOSInformation();\n\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\nconst getHostname = getCheckedFunction(_getHostname);\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\n/**\n * @returns {string}\n */\nconst getOSRelease = () => release;\n/**\n * @returns {string}\n */\nconst getOSType = () => type;\n/**\n * @returns {string}\n */\nconst getOSVersion = () => version;\n\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\ngetHostname[SymbolToPrimitive] = () => getHostname();\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\ngetOSType[SymbolToPrimitive] = () => getOSType();\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\ngetUptime[SymbolToPrimitive] = () => getUptime();\n\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\n\nconst avgValues = new Float64Array(3);\n\n/**\n * @returns {[number\x2C number\x2C number]}\n */\nfunction loadavg() {\n  getLoadAvg(avgValues);\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\n}\n\n/**\n * Returns an array of objects containing information about each\n * logical CPU core.\n *\n * @returns {Array<{\n *  model: string\n *  speed: number\n *  times: {\n *    user: number\n *    nice: number\n *    sys: number\n *    idle: number\n *    irq: number\n *  }\n * }>}\n */\nfunction cpus() {\n  // [] is a bugfix for a regression introduced in 51cea61\n  const data = getCPUs() || [];\n  const result = [];\n  let i = 0;\n  while (i < data.length) {\n    ArrayPrototypePush(result\x2C {\n      model: data[i++]\x2C\n      speed: data[i++]\x2C\n      times: {\n        user: data[i++]\x2C\n        nice: data[i++]\x2C\n        sys: data[i++]\x2C\n        idle: data[i++]\x2C\n        irq: data[i++]\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * @returns {string}\n */\nfunction arch() {\n  return process.arch;\n}\narch[SymbolToPrimitive] = () => process.arch;\n\n/**\n * @returns {string}\n */\nfunction platform() {\n  return process.platform;\n}\nplatform[SymbolToPrimitive] = () => process.platform;\n\n/**\n * @returns {string}\n */\nfunction tmpdir() {\n  var path;\n  if (isWindows) {\n    path = process.env.TEMP ||\n           process.env.TMP ||\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  } else {\n    path = safeGetenv('TMPDIR') ||\n           safeGetenv('TMP') ||\n           safeGetenv('TEMP') ||\n           '/tmp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  }\n\n  return path;\n}\ntmpdir[SymbolToPrimitive] = () => tmpdir();\n\n/**\n * @returns {'BE' | 'LE'}\n */\nfunction endianness() {\n  return kEndianness;\n}\nendianness[SymbolToPrimitive] = () => kEndianness;\n\n// Returns the number of ones in the binary representation of the decimal\n// number.\nfunction countBinaryOnes(n) {\n  // Count the number of bits set in parallel\x2C which is faster than looping\n  n = n - ((n >>> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction getCIDR(address\x2C netmask\x2C family) {\n  let ones = 0;\n  let split = '.';\n  let range = 10;\n  let groupLength = 8;\n  let hasZeros = false;\n\n  if (family === 'IPv6') {\n    split = ':';\n    range = 16;\n    groupLength = 16;\n  }\n\n  const parts = StringPrototypeSplit(netmask\x2C split);\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i] !== '') {\n      const binary = NumberParseInt(parts[i]\x2C range);\n      const tmp = countBinaryOnes(binary);\n      ones += tmp;\n      if (hasZeros) {\n        if (tmp !== 0) {\n          return null;\n        }\n      } else if (tmp !== groupLength) {\n        if ((binary & 1) !== 0) {\n          return null;\n        }\n        hasZeros = true;\n      }\n    }\n  }\n\n  return `${address}/${ones}`;\n}\n\n/**\n * @returns {Record<string\x2C Array<{\n *  address: string\n *  netmask: string\n *  family: 'IPv4' | 'IPv6'\n *  mac: string\n *  internal: boolean\n *  scopeid: number\n *  cidr: string | null\n * }>>}\n */\nfunction networkInterfaces() {\n  const data = getInterfaceAddresses();\n  const result = {};\n\n  if (data === undefined)\n    return result;\n  for (var i = 0; i < data.length; i += 7) {\n    const name = data[i];\n    const entry = {\n      address: data[i + 1]\x2C\n      netmask: data[i + 2]\x2C\n      family: data[i + 3]\x2C\n      mac: data[i + 4]\x2C\n      internal: data[i + 5]\x2C\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\n    };\n    const scopeid = data[i + 6];\n    if (scopeid !== -1)\n      entry.scopeid = scopeid;\n\n    const existing = result[name];\n    if (existing !== undefined)\n      ArrayPrototypePush(existing\x2C entry);\n    else\n      result[name] = [entry];\n  }\n\n  return result;\n}\n\n/**\n * @param {number} [pid=0]\n * @param {number} priority\n * @returns {void}\n */\nfunction setPriority(pid\x2C priority) {\n  if (priority === undefined) {\n    priority = pid;\n    pid = 0;\n  }\n\n  validateInt32(pid\x2C 'pid');\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\n\n  const ctx = {};\n\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\n    throw new ERR_SYSTEM_ERROR(ctx);\n}\n\n/**\n * @param {number} [pid=0]\n * @returns {number}\n */\nfunction getPriority(pid) {\n  if (pid === undefined)\n    pid = 0;\n  else\n    validateInt32(pid\x2C 'pid');\n\n  const ctx = {};\n  const priority = _getPriority(pid\x2C ctx);\n\n  if (priority === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return priority;\n}\n\n/**\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\n * be `Buffer` instances.\n * @returns {{\n *   uid: number\n *   gid: number\n *   username: string\n *   homedir: string\n *   shell: string | null\n * }}\n */\nfunction userInfo(options) {\n  if (typeof options !== 'object')\n    options = null;\n\n  const ctx = {};\n  const user = getUserInfo(options\x2C ctx);\n\n  if (user === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return user;\n}\n\nmodule.exports = {\n  arch\x2C\n  cpus\x2C\n  endianness\x2C\n  freemem: getFreeMem\x2C\n  getPriority\x2C\n  homedir: getHomeDirectory\x2C\n  hostname: getHostname\x2C\n  loadavg\x2C\n  networkInterfaces\x2C\n  platform\x2C\n  release: getOSRelease\x2C\n  setPriority\x2C\n  tmpdir\x2C\n  totalmem: getTotalMem\x2C\n  type: getOSType\x2C\n  userInfo\x2C\n  uptime: getUptime\x2C\n  version: getOSVersion\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  EOL: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\r\\n' : '\\n'\n  }\x2C\n\n  devNull: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\n  }\n});\n
code-source-info,0x1b9b88177b46,140,0,9062,C0O0C4O9062,,
code-creation,Function,10,67041,0x1b9b88178d0e,823, node:os:1:1,0x1b9b88177ab0,~
code-source-info,0x1b9b88178d0e
tick,0x1a36493f4,67083,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x1b9b8817163b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,67166,0x1b9b8817af1e,26,getCheckedFunction node:os:63:28,0x1b9b88177b78,~
code-source-info,0x1b9b8817af1e,140,2035,2249,C0O2035C9O2044C21O2051C25O2247,,
code-creation,LazyCompile,10,67291,0x1b9b8817bcf6,43,hideStackFrames node:internal/errors:382:25,0x1910fc7e4408,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nconst kNoOverride = Symbol('kNoOverride');\nlet userStackTraceLimit;\nconst nodeInternalPrefix = '__node_internal_';\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  const firstFrame = trace[0]?.getFunctionName();\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\n    for (let l = trace.length - 1; l >= 0; l--) {\n      const fn = trace[l]?.getFunctionName();\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\n        break;\n      }\n    }\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\n    // it is updated at every new exception in `captureLargerStackTrace`.\n    if (trace.length > userStackTraceLimit)\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\n  }\n\n  const globalOverride =\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\n  if (globalOverride !== kNoOverride) return globalOverride;\n\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n};\n\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  return kNoOverride;\n};\n\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\n  if (innerError && outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new AggregateError(new SafeArrayIterator([\n      outerError\x2C\n      innerError\x2C\n    ])\x2C outerError.message);\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n});\n\n// Lazily loaded\nlet util;\nlet assert;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  if (!internalUtil) {\n    internalUtil = require('internal/util');\n  }\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  if (buffer === undefined)\n    buffer = require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    super();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    captureLargerStackTrace(this);\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  return function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key\x2C args\x2C error);\n    ObjectDefineProperties(error\x2C {\n      [kIsNodeError]: {\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      toString: {\n        value() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n    captureLargerStackTrace(error);\n    error.code = key;\n    return error;\n  };\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: any[]) => any} T\n * @type {(fn: T) => T}\n */\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name;\n  ObjectDefineProperty(fn\x2C 'name'\x2C { value: hidden });\n  return fn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n  if (def === SystemError) {\n    def = makeSystemErrorWithCode(sym);\n  } else {\n    def = makeNodeErrorWithCode(def\x2C sym);\n  }\n\n  if (otherClasses.length !== 0) {\n    otherClasses.forEach((clazz) => {\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n    });\n  }\n  codes[sym] = def;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (assert === undefined) assert = require('internal/assert');\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength =\n    (StringPrototypeMatch(msg\x2C /%[dfijoOs]/g) || []).length;\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  if (!uvBinding) {\n    uvBinding = internalBinding('uv');\n  }\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  if (!uvBinding.errmap) {\n    uvBinding.errmap = uvBinding.getErrorMap();\n  }\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  function captureLargerStackTrace(err) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Infinity;\n    }\n    ErrorCaptureStackTrace(err);\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return err;\n  });\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n *\n * @param {Object} ctx\n * @returns {Error}\n */\nconst uvException = hideStackFrames(function uvException(ctx) {\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n  let path;\n  let dest;\n  if (ctx.path) {\n    path = ctx.path.toString();\n    message += ` '${path}'`;\n  }\n  if (ctx.dest) {\n    dest = ctx.dest.toString();\n    message += ` -> '${dest}'`;\n  }\n\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // Pass the message to the constructor instead of setting it on the object\n  // to make sure it is the same as the one created in C++\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n\n  for (const prop of ObjectKeys(ctx)) {\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\n      continue;\n    }\n    err[prop] = ctx[prop];\n  }\n\n  err.code = code;\n  if (path) {\n    err.path = path;\n  }\n  if (dest) {\n    err.dest = dest;\n  }\n\n  return captureLargerStackTrace(err);\n});\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @returns {Error}\n */\nconst uvExceptionWithHostPort = hideStackFrames(\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${message}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.code = code;\n    ex.errno = err;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * This used to be util._errnoException().\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} [original]\n * @returns {Error}\n */\nconst errnoException = hideStackFrames(\n  function errnoException(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    if (util === undefined) util = require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(message);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nconst exceptionWithHostPort = hideStackFrames(\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    if (util === undefined) util = require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${syscall} ${code}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * @param {number|string} code - A libuv error number or a c-ares error code\n * @param {string} syscall\n * @param {string} [hostname]\n * @returns {Error}\n */\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\n  let errno;\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n  // c-ares error code.\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n  // make them available in a property that's not error.errno (since they\n  // can be in conflict with libuv error codes). Also make sure\n  // util.getSystemErrorName() can understand them when an being informed that\n  // the number is a c-ares error code.\n  if (typeof code === 'number') {\n    errno = code;\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n    // long enough that it's not practical to remove it.\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n      code = 'ENOTFOUND'; // Fabricated error name.\n    } else {\n      code = lazyInternalUtil().getSystemErrorName(code);\n    }\n  }\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n  ex.errno = errno;\n  ex.code = code;\n  ex.syscall = syscall;\n  if (hostname) {\n    ex.hostname = hostname;\n  }\n\n  return captureLargerStackTrace(ex);\n});\n\nfunction connResetException(msg) {\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(msg);\n  ex.code = 'ECONNRESET';\n  return ex;\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n *\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (process.platform === 'win32') {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\n      }\n    } = lazyInternalUtilInspect();\n    const colors = useColors &&\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\n                   require('internal/tty').hasColors()) ||\n                   defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\n      });\n    } catch {\n      return originalStack;\n    }\n  }\n};\n\n// Ensures the printed error line is from user code.\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\nfunction setArrowMessage(err\x2C arrowMessage) {\n  if (!_kArrowMessagePrivateSymbol) {\n    ({\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\n      setHiddenValue: _setHiddenValue\x2C\n    } = internalBinding('util'));\n  }\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor() {\n    super('The operation was aborted');\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\nmodule.exports = {\n  aggregateTwoErrors\x2C\n  codes\x2C\n  dnsException\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  getMessage\x2C\n  hideStackFrames\x2C\n  hideInternalStackFrames\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  setArrowMessage\x2C\n  connResetException\x2C\n  uvErrmapGet\x2C\n  uvException\x2C\n  uvExceptionWithHostPort\x2C\n  SystemError\x2C\n  AbortError\x2C\n  // This is exported only to facilitate testing.\n  E\x2C\n  kNoOverride\x2C\n  prepareStackTrace\x2C\n  maybeOverridePrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  kEnhanceStackBeforeInspector\x2C\n  fatalExceptionStackEnhancers\x2C\n  kIsNodeError\x2C\n  captureLargerStackTrace\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeTest(classRegExp\x2C value)) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      if (types.length > 2) {\n        const last = ArrayPrototypePop(types);\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}`;\n      } else {\n        msg += `of type ${types[0]}`;\n      }\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      if (instances.length > 2) {\n        const last = ArrayPrototypePop(instances);\n        msg +=\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\n      } else {\n        msg += `an instance of ${instances[0]}`;\n        if (instances.length === 2) {\n          msg += ` or ${instances[1]}`;\n        }\n      }\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 2) {\n        const last = ArrayPrototypePop(other);\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (other.length === 2) {\n        msg += `one of ${other[0]} or ${other[1]}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    if (actual == null) {\n      msg += `. Received ${actual}`;\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`;\n    } else if (typeof actual === 'object') {\n      if (actual.constructor && actual.constructor.name) {\n        msg += `. Received an instance of ${actual.constructor.name}`;\n      } else {\n        const inspected = lazyInternalUtilInspect()\n          .inspect(actual\x2C { depth: -1 });\n        msg += `. Received ${inspected}`;\n      }\n    } else {\n      let inspected = lazyInternalUtilInspect()\n        .inspect(actual\x2C { colors: false });\n      if (inspected.length > 25)\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`;\n      msg += `. Received type ${typeof actual} (${inspected})`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CALLBACK'\x2C\n  'Callback must be a function. Received %O'\x2C TypeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${value}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  let type;\n  if (value && value.constructor && value.constructor.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${type}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  let type;\n  if (value && value.constructor && value.constructor.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input) {\n  this.input = input;\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\n    );\n    switch (len) {\n      case 1:\n        msg += `${args[0]} argument`;\n        break;\n      case 2:\n        msg += `${args[0]} and ${args[1]} arguments`;\n        break;\n      default:\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\n        msg += `\x2C and ${args[len - 1]} arguments`;\n        break;\n    }\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\n  return `Cannot find ${type} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = path.basename(filename) === path.basename(parentPath) ?\n      filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\n}\x2C RangeError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C\n  'Unknown file extension "%s" for %s'\x2C\n  TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s'\x2C RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\n'resolving ES modules imported from %s'\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url) => {\n  let msg = 'Only file and data URLs are supported by the default ESM loader';\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINKING_ERRORED'\x2C\n  'Linking has already failed for the provided module'\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_EXTENSION'\x2C\n  'The worker script extension must be ".js"\x2C ".mjs"\x2C or ".cjs". Received "%s"'\x2C\n  TypeError);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x1b9b8817bcf6,11,10626,10850,C0O10751C5O10775C9O10770C13O10783C21O10804C28O10825C35O10783C40O10838C42O10848,,
tick,0x1a36493f4,69500,0,0x0,3,0x0,0x1b9b8817af33,0x1b9b88178eb0,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x1b9b8817163b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x101496034,69583,0,0x0,0,0x3a1583d0b828,0x3a1583d0757f,0x172aed04fbf3,0x172aed04f8e0,0x172aed04f5a7,0x172aed04e9d9,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x1b9b88171681,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
new,MemoryChunk,0x369989140000,262144
code-creation,Eval,10,70125,0x369989141dd6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/index.js:1:1,0x369989141c40,~
script-source,141,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/index.js,'use strict';\n\nvar getPathVar = require('./get-path-var');\nvar getSeparator = require('./get-separator');\n\nmodule.exports = managePath;\n\nfunction managePath() {\n  var env = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var _ref = arguments.length <= 1 || arguments[1] === undefined ? { platform: process.platform } : arguments[1];\n\n  var _ref$platform = _ref.platform;\n  var platform = _ref$platform === undefined ? process.platform : _ref$platform;\n\n  var pathVar = getPathVar(env\x2C platform);\n  var separator = getSeparator(platform);\n  var originalPath = env[pathVar];\n  return { push: push\x2C unshift: unshift\x2C get: get\x2C restore: restore };\n\n  function push() {\n    for (var _len = arguments.length\x2C paths = Array(_len)\x2C _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return change(true\x2C paths);\n  }\n\n  function unshift() {\n    for (var _len2 = arguments.length\x2C paths = Array(_len2)\x2C _key2 = 0; _key2 < _len2; _key2++) {\n      paths[_key2] = arguments[_key2];\n    }\n\n    return change(false\x2C paths);\n  }\n\n  function get() {\n    return env[pathVar];\n  }\n\n  function restore() {\n    env[pathVar] = originalPath;\n    return get();\n  }\n\n  function change(append\x2C paths) {\n    if (!append) {\n      paths = paths.reverse();\n    }\n    paths.forEach(function (path) {\n      var pathArray = getPathArray(path);\n      addExistingPath(pathArray\x2C env[pathVar]\x2C append);\n      env[pathVar] = pathArray.join(separator);\n    });\n    return get();\n  }\n}\n\nfunction getPathArray(pathToAdd) {\n  if (Array.isArray(pathToAdd)) {\n    return pathToAdd;\n  } else {\n    return [pathToAdd];\n  }\n}\n\nfunction addExistingPath(array\x2C path\x2C appendMode) {\n  if (!path) {\n    return;\n  }\n  if (appendMode) {\n    array.unshift(path);\n  } else {\n    array.push(path);\n  }\n}
code-source-info,0x369989141dd6,141,0,1804,C0O0C4O1804,,
code-creation,Function,10,70208,0x369989141fee,48, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/index.js:1:1,0x369989141d40,~
code-source-info,0x369989141fee,141,0,1804,C0O0C22O32C25O32C29O32C31O78C34O78C38O78C40O107C42O122C47O1803,,
code-creation,Eval,10,70458,0x369989142ae6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-path-var.js:1:1,0x369989142980,~
script-source,142,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-path-var.js,'use strict';\n\nmodule.exports = getPathVar;\nvar PATH_REGEX = /^PATH$/i;\n\nfunction getPathVar(env\x2C platform) {\n  var PATH = 'PATH';\n\n  if (platform === 'win32') {\n    PATH = 'Path';\n    Object.keys(env).some(function (e) {\n      var matches = PATH_REGEX.test(e);\n      if (matches) {\n        PATH = e;\n      }\n      return matches;\n    });\n  }\n  return PATH;\n}
code-source-info,0x369989142ae6,142,0,359,C0O0C4O359,,
code-creation,Function,10,70500,0x369989142c06,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-path-var.js:1:1,0x369989142a50,~
code-source-info,0x369989142c06,142,0,359,C0O0C10O15C12O30C16O61C20O61C23O358,,
code-creation,Eval,10,70708,0x369989143506,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-separator.js:1:1,0x3699891433b0,~
script-source,143,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-separator.js,'use strict';\n\nmodule.exports = getSeparator;\n\nfunction getSeparator(platform) {\n  return platform === 'win32' ? ';' : ':';\n}
code-source-info,0x369989143506,143,0,125,C0O0C4O125,,
code-creation,Function,10,70708,0x3699891435ee,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/manage-path/dist/get-separator.js:1:1,0x369989143470,~
code-source-info,0x3699891435ee,143,0,125,C0O0C5O15C7O30C12O124,,
tick,0x10154dac0,70833,0,0x0,4,0x0,0x3a1583d0757f,0x172aed04fbf3,0x172aed04f8e0,0x172aed04f5a7,0x172aed04e9d9,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x1b9b8817168d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,71708,0x369989143e4e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-async-hooks/index.js:1:1,0x369989143ce8,~
script-source,144,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-async-hooks/index.js,module.exports = function () {\n  try {\n    return typeof require('async_hooks').createHook === 'function'\n  } catch (err) {\n    return false\n  }\n}\n
code-source-info,0x369989143e4e,144,0,147,C0O0C4O147,,
code-creation,Function,10,71750,0x369989143f76,19, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-async-hooks/index.js:1:1,0x369989143db8,~
code-source-info,0x369989143f76,144,0,147,C0O0C9O0C13O15C18O146,,
tick,0x1a37263d4,72125,1,0x100cd0724,6,0x0,0x172aed06021d,0x172aed05fb4e,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b88171699,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,72250,0x369989145386,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/subarg/index.js:1:1,0x369989145220,~
script-source,145,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/subarg/index.js,var minimist = require('minimist');\n\nmodule.exports = function parse (args\x2C opts) {\n    var level = 0\x2C index;\n    var args_ = [];\n    \n    for (var i = 0; i < args.length; i++) {\n        if (typeof args[i] === 'string' && /^\\[/.test(args[i])) {\n            if (level ++ === 0) {\n                index = i;\n            }\n        }\n        if (typeof args[i] === 'string' && /\\]$/.test(args[i])) {\n            if (-- level > 0) continue;\n            \n            var sub = args.slice(index\x2C i + 1);\n            if (typeof sub[0] === 'string') {\n                sub[0] = sub[0].replace(/^\\[/\x2C '');\n            }\n            if (sub[0] === '') sub.shift();\n            \n            var n = sub.length - 1;\n            if (typeof sub[n] === 'string') {\n                sub[n] = sub[n].replace(/\\]$/\x2C '');\n            }\n            if (sub[n] === '') sub.pop();\n            \n            args_.push(parse(sub));\n        }\n        else if (level === 0) args_.push(args[i]);\n    }\n    \n    var argv = minimist(args_\x2C opts);\n    return argv;\n};\n
code-source-info,0x369989145386,145,0,1035,C0O0C4O1035,,
code-creation,Function,10,72333,0x36998914547e,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/subarg/index.js:1:1,0x3699891452f0,~
code-source-info,0x36998914547e,145,0,1035,C0O0C5O15C8O15C12O15C14O37C18O52C23O1034,,
code-creation,Eval,10,72708,0x36998914614e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/minimist/index.js:1:1,0x369989145fd8,~
script-source,146,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/minimist/index.js,module.exports = function (args\x2C opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}\x2C strings : {}\x2C unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key\x2C defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0\x2C args.indexOf('--'));\n    }\n\n    function argDefined(key\x2C arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key\x2C val\x2C arg) {\n        if (arg && flags.unknownFn && !argDefined(key\x2C arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv\x2C key.split('.')\x2C value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv\x2C x.split('.')\x2C value);\n        });\n    }\n\n    function setKey (obj\x2C keys\x2C value) {\n        var o = obj;\n        for (var i = 0; i < keys.length-1; i++) {\n            var key = keys[i];\n            if (key === '__proto__') return;\n            if (o[key] === undefined) o[key] = {};\n            if (o[key] === Object.prototype || o[key] === Number.prototype\n                || o[key] === String.prototype) o[key] = {};\n            if (o[key] === Array.prototype) o[key] = [];\n            o = o[key];\n        }\n\n        var key = keys[keys.length - 1];\n        if (key === '__proto__') return;\n        if (o === Object.prototype || o === Number.prototype\n            || o === String.prototype) o = {};\n        if (o === Array.prototype) o = [];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key]\x2C value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key\x2C value\x2C arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key\x2C false\x2C arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key\x2C next\x2C arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key\x2C next === 'true'\x2C arg);\n                i++;\n            }\n            else {\n                setArg(key\x2C flags.strings[key] ? '' : true\x2C arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1\x2C-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j]\x2C next\x2C arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j]\x2C next.split('=')[1]\x2C arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j]\x2C next\x2C arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j]\x2C arg.slice(j+2)\x2C arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j]\x2C flags.strings[letters[j]] ? '' : true\x2C arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key\x2C args[i+1]\x2C arg);\n                    i++;\n                }\n                else if (args[i+1] && /^(true|false)$/.test(args[i+1])) {\n                    setArg(key\x2C args[i+1] === 'true'\x2C arg);\n                    i++;\n                }\n                else {\n                    setArg(key\x2C flags.strings[key] ? '' : true\x2C arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._\x2C args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv\x2C key.split('.'))) {\n            setKey(argv\x2C key.split('.')\x2C defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv\x2C x.split('.')\x2C defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj\x2C keys) {\n    var o = obj;\n    keys.slice(0\x2C-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n
code-source-info,0x36998914614e,146,0,7652,C0O0C4O7652,,
code-creation,Function,10,73000,0x369989146486,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/minimist/index.js:1:1,0x3699891460b8,~
code-source-info,0x369989146486,146,0,7652,C0O0C17O0C21O15C26O7651,,
tick,0x1a37298d4,73333,0,0x0,4,0x0,0x3a1583d109c5,0x172aed065b31,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989145486,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b88171699,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,73916,0x107508f40,1720,normalizeString node:path:66:25,0xe898a5e8160,*
code-source-info,0x107508f40,35,2161,4085,C0O2161C56O2341C160O2333C172O2366C184O2443C216O2394C396O2530C440O2581C444O2575C456O2593C464O3110C472O2640C484O3787C488O3750C528O3713C540O3827C544O3750C552O3827C572O3738C588O3750C720O3903C732O3915C768O2672C776O2697C784O2881C792O2923C860O2998C880O3110C928O3210C932O3217C936O3223C1008O3221C1096O4006C1108O4022C1144O2351C1148O2315C1164O4083C1220O2760C1224O3384C1228O2161C1276O2394C1404O2998C1416O3110C1444O3221C1456O2315,,
code-creation,LazyCompile,10,74000,0x36998914761e,118,join node:path:1166:7,0xe898a5e8738,~
code-source-info,0x36998914761e,35,35667,36077,C0O35667C3O35692C9O35699C14O35712C16O35723C17O35732C19O35757C21O35769C25O35762C30O35802C32O35806C36O35817C44O35817C49O35860C55O35867C60O35882C64O35918C71O35955C76O35969C87O35779C92O35744C95O35994C99O36026C101O36037C102O36042C107O36055C112O36055C117O36073,,
code-creation,LazyCompile,10,74041,0x36998914781e,159,normalize node:path:1127:12,0xe898a5e8698,~
code-source-info,0x36998914781e,35,34767,35371,C0O34780C8O34780C13O34824C19O34831C24O34844C26O34855C27O34886C34O34886C42O34925C44O34921C48O34981C53O35018C57O35025C61O34981C69O35034C71O35030C75O35085C80O35115C91O35092C98O35169C104O35176C109O35191C113O35215C115O35226C116O35233C126O35271C127O35282C131O35311C141O35329C150O35353C158O35367,,
code-creation,Eval,10,74583,0x3699891489ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:1:1,0x369989148788,~
script-source,147,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js,'use strict'\n\nconst Table = require('cli-table3')\nconst Chalk = require('chalk')\nconst testColorSupport = require('color-support')\nconst prettyBytes = require('pretty-bytes')\nconst { percentiles } = require('./histUtil')\nconst format = require('./format')\n\nconst defaults = {\n  // use stderr as its progressBar's default\n  outputStream: process.stderr\x2C\n  renderResultsTable: true\x2C\n  renderLatencyTable: false\n}\n\nconst printResult = (result\x2C opts) => {\n  opts = Object.assign({}\x2C defaults\x2C opts)\n  let strResult = ''\n\n  const chalk = new Chalk.Instance(testColorSupport({ stream: opts.outputStream\x2C alwaysReturn: true }))\n\n  const shortLatency = new Table({\n    head: asColor(chalk.cyan\x2C ['Stat'\x2C '2.5%'\x2C '50%'\x2C '97.5%'\x2C '99%'\x2C 'Avg'\x2C 'Stdev'\x2C 'Max'])\n  })\n  shortLatency.push(asLowRow(chalk.bold('Latency')\x2C asMs(result.latency)))\n  logToLocalStr(shortLatency.toString())\n\n  const requests = new Table({\n    head: asColor(chalk.cyan\x2C ['Stat'\x2C '1%'\x2C '2.5%'\x2C '50%'\x2C '97.5%'\x2C 'Avg'\x2C 'Stdev'\x2C 'Min'])\n  })\n\n  requests.push(asHighRow(chalk.bold('Req/Sec')\x2C result.requests))\n  requests.push(asHighRow(chalk.bold('Bytes/Sec')\x2C asBytes(result.throughput)))\n  logToLocalStr(requests.toString())\n\n  if (opts.renderStatusCodes === true) {\n    const statusCodeStats = new Table({\n      head: asColor(chalk.cyan\x2C ['Code'\x2C 'Count'])\n    })\n    Object.keys(result.statusCodeStats).forEach(statusCode => {\n      const stats = result.statusCodeStats[statusCode]\n      const colorize = colorizeByStatusCode(chalk\x2C statusCode)\n      statusCodeStats.push([colorize(statusCode)\x2C stats.count])\n    })\n    logToLocalStr(statusCodeStats.toString())\n  }\n\n  logToLocalStr('')\n  logToLocalStr('Req/Bytes counts sampled once per second.\\n')\n\n  if (opts.renderLatencyTable) {\n    const latencies = new Table({\n      head: asColor(chalk.cyan\x2C ['Percentile'\x2C 'Latency (ms)'])\n    })\n    percentiles.map((perc) => {\n      const key = `p${perc}`.replace('.'\x2C '_')\n      return [\n        chalk.bold('' + perc)\x2C\n        result.latency[key]\n      ]\n    }).forEach(row => {\n      latencies.push(row)\n    })\n    logToLocalStr(latencies.toString())\n    logToLocalStr('')\n  }\n\n  if (result.non2xx) {\n    logToLocalStr(`${result['2xx']} 2xx responses\x2C ${result.non2xx} non 2xx responses`)\n  }\n  logToLocalStr(`${format(result.requests.sent)} requests in ${result.duration}s\x2C ${prettyBytes(result.throughput.total)} read`)\n  if (result.errors) {\n    logToLocalStr(`${format(result.errors)} errors (${format(result.timeouts)} timeouts)`)\n  }\n  if (result.mismatches) {\n    logToLocalStr(`${format(result.mismatches)} requests with mismatched body`)\n  }\n  if (result.resets) {\n    logToLocalStr(`request pipeline was resetted ${format(result.resets)} ${result.resets === 1 ? 'time' : 'times'}`)\n  }\n\n  function logToLocalStr (msg) {\n    strResult += msg + '\\n'\n  }\n\n  return strResult\n}\n\n// create a table row for stats where low values is better\nfunction asLowRow (name\x2C stat) {\n  return [\n    name\x2C\n    stat.p2_5\x2C\n    stat.p50\x2C\n    stat.p97_5\x2C\n    stat.p99\x2C\n    stat.average\x2C\n    stat.stddev\x2C\n    typeof stat.max === 'string' ? stat.max : Math.floor(stat.max * 100) / 100\n  ]\n}\n\n// create a table row for stats where high values is better\nfunction asHighRow (name\x2C stat) {\n  return [\n    name\x2C\n    stat.p1\x2C\n    stat.p2_5\x2C\n    stat.p50\x2C\n    stat.p97_5\x2C\n    stat.average\x2C\n    stat.stddev\x2C\n    typeof stat.min === 'string' ? stat.min : Math.floor(stat.min * 100) / 100\n  ]\n}\n\nfunction asColor (colorise\x2C row) {\n  return row.map((entry) => colorise(entry))\n}\n\nfunction asMs (stat) {\n  const result = Object.create(null)\n  for (const k of Object.keys(stat)) {\n    result[k] = `${stat[k]} ms`\n  }\n  result.max = typeof stat.max === 'string' ? stat.max : `${Math.floor(stat.max * 100) / 100} ms`\n\n  return result\n}\n\nfunction asBytes (stat) {\n  const result = Object.create(stat)\n\n  for (const p of percentiles) {\n    const key = `p${p}`.replace('.'\x2C '_')\n    result[key] = prettyBytes(stat[key])\n  }\n\n  result.average = prettyBytes(stat.average)\n  result.stddev = prettyBytes(stat.stddev)\n  result.max = prettyBytes(stat.max)\n  result.min = prettyBytes(stat.min)\n  return result\n}\n\nfunction colorizeByStatusCode (chalk\x2C statusCode) {\n  const codeClass = Math.floor(parseInt(statusCode) / 100) - 1\n  return [chalk.cyan\x2C chalk.cyan\x2C chalk.cyan\x2C chalk.redBright\x2C chalk.redBright][codeClass]\n}\n\nmodule.exports = printResult\n
code-source-info,0x3699891489ae,147,0,4372,C0O0C4O4372,,
code-creation,Function,10,74750,0x369989148d4e,155, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:1:1,0x369989148918,~
code-source-info,0x369989148d4e,147,0,4372,C0O0C62O28C65O28C69O28C71O64C74O64C78O64C80O106C83O106C87O106C89O151C92O151C96O151C98O199C101O199C106O183C112O236C115O236C119O236C121O274C126O337C130O345C140O274C142O432C147O4343C149O4358C154O4371,,
tick,0x1a36493b0,74791,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,75208,0x36998914a47e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/index.js:1:1,0x36998914a328,~
script-source,148,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/index.js,module.exports = require('./src/table');
code-source-info,0x36998914a47e,148,0,40,C0O0C4O40,,
code-creation,Function,10,75250,0x36998914a516,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/index.js:1:1,0x36998914a3e8,~
code-source-info,0x36998914a516,148,0,40,C0O0C3O17C7O15C12O39,,
code-creation,LazyCompile,10,75333,0x36998914a93e,70,createPool node:buffer:150:20,0x30d75ba4618,~
code-source-info,0x36998914a93e,18,3824,3964,C0O3831C3O3849C10O3840C16O3861C23O3892C26O3873C31O3901C38O3871C44O3912C51O3933C54O3912C58O3947C62O3958C69O3963,,
code-creation,LazyCompile,10,75375,0x36998914aa8e,40,markAsUntransferable node:internal/buffer:1048:30,0x30d75bb19c0,~
code-source-info,0x36998914aa8e,19,29781,30016,C0O29791C16O29871C17O29878C18O29950C25O29970C33O29950C39O30015,,
code-creation,Eval,10,75625,0x36998914aece,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:1:1,0x36998914ad20,~
script-source,149,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js,const utils = require('./utils');\nconst tableLayout = require('./layout-manager');\n\nclass Table extends Array {\n  constructor(options) {\n    super();\n\n    this.options = utils.mergeOptions(options);\n  }\n\n  toString() {\n    let array = this;\n    let headersPresent = this.options.head && this.options.head.length;\n    if (headersPresent) {\n      array = [this.options.head];\n      if (this.length) {\n        array.push.apply(array\x2C this);\n      }\n    } else {\n      this.options.style.head = [];\n    }\n\n    let cells = tableLayout.makeTableLayout(array);\n\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.mergeTableOptions(this.options\x2C cells);\n      }\x2C this);\n    }\x2C this);\n\n    tableLayout.computeWidths(this.options.colWidths\x2C cells);\n    tableLayout.computeHeights(this.options.rowHeights\x2C cells);\n\n    cells.forEach(function (row) {\n      row.forEach(function (cell) {\n        cell.init(this.options);\n      }\x2C this);\n    }\x2C this);\n\n    let result = [];\n\n    for (let rowIndex = 0; rowIndex < cells.length; rowIndex++) {\n      let row = cells[rowIndex];\n      let heightOfRow = this.options.rowHeights[rowIndex];\n\n      if (rowIndex === 0 || !this.options.style.compact || (rowIndex == 1 && headersPresent)) {\n        doDraw(row\x2C 'top'\x2C result);\n      }\n\n      for (let lineNum = 0; lineNum < heightOfRow; lineNum++) {\n        doDraw(row\x2C lineNum\x2C result);\n      }\n\n      if (rowIndex + 1 == cells.length) {\n        doDraw(row\x2C 'bottom'\x2C result);\n      }\n    }\n\n    return result.join('\\n');\n  }\n\n  get width() {\n    let str = this.toString().split('\\n');\n    return str[0].length;\n  }\n}\n\nfunction doDraw(row\x2C lineNum\x2C result) {\n  let line = [];\n  row.forEach(function (cell) {\n    line.push(cell.draw(lineNum));\n  });\n  let str = line.join('');\n  if (str.length) result.push(str);\n}\n\nmodule.exports = Table;\n
code-source-info,0x36998914aece,149,0,1848,C0O0C4O1848,,
code-creation,Function,10,75708,0x36998914b336,83, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:1:1,0x36998914ae38,~
code-source-info,0x36998914b336,149,0,1848,C0O0C17O14C20O14C24O14C26O54C29O54C33O54C39O104C75O1824C77O1839C82O1847,,
new,MemoryChunk,0x2f7333e00000,262144
tick,0x1a3726538,75958,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914b34a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914a519,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d8f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,76125,0x36998914c0b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:1:1,0x36998914be90,~
script-source,150,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js,const stringWidth = require('string-width');\n\nfunction codeRegex(capture) {\n  return capture ? /\\u001b\\[((?:\\d*;){0\x2C5}\\d*)m/g : /\\u001b\\[(?:\\d*;){0\x2C5}\\d*m/g;\n}\n\nfunction strlen(str) {\n  let code = codeRegex();\n  let stripped = ('' + str).replace(code\x2C '');\n  let split = stripped.split('\\n');\n  return split.reduce(function (memo\x2C s) {\n    return stringWidth(s) > memo ? stringWidth(s) : memo;\n  }\x2C 0);\n}\n\nfunction repeat(str\x2C times) {\n  return Array(times + 1).join(str);\n}\n\nfunction pad(str\x2C len\x2C pad\x2C dir) {\n  let length = strlen(str);\n  if (len + 1 >= length) {\n    let padlen = len - length;\n    switch (dir) {\n      case 'right': {\n        str = repeat(pad\x2C padlen) + str;\n        break;\n      }\n      case 'center': {\n        let right = Math.ceil(padlen / 2);\n        let left = padlen - right;\n        str = repeat(pad\x2C left) + str + repeat(pad\x2C right);\n        break;\n      }\n      default: {\n        str = str + repeat(pad\x2C padlen);\n        break;\n      }\n    }\n  }\n  return str;\n}\n\nlet codeCache = {};\n\nfunction addToCodeCache(name\x2C on\x2C off) {\n  on = '\\u001b[' + on + 'm';\n  off = '\\u001b[' + off + 'm';\n  codeCache[on] = { set: name\x2C to: true };\n  codeCache[off] = { set: name\x2C to: false };\n  codeCache[name] = { on: on\x2C off: off };\n}\n\n//https://github.com/Marak/colors.js/blob/master/lib/styles.js\naddToCodeCache('bold'\x2C 1\x2C 22);\naddToCodeCache('italics'\x2C 3\x2C 23);\naddToCodeCache('underline'\x2C 4\x2C 24);\naddToCodeCache('inverse'\x2C 7\x2C 27);\naddToCodeCache('strikethrough'\x2C 9\x2C 29);\n\nfunction updateState(state\x2C controlChars) {\n  let controlCode = controlChars[1] ? parseInt(controlChars[1].split(';')[0]) : 0;\n  if ((controlCode >= 30 && controlCode <= 39) || (controlCode >= 90 && controlCode <= 97)) {\n    state.lastForegroundAdded = controlChars[0];\n    return;\n  }\n  if ((controlCode >= 40 && controlCode <= 49) || (controlCode >= 100 && controlCode <= 107)) {\n    state.lastBackgroundAdded = controlChars[0];\n    return;\n  }\n  if (controlCode === 0) {\n    for (let i in state) {\n      /* istanbul ignore else */\n      if (Object.prototype.hasOwnProperty.call(state\x2C i)) {\n        delete state[i];\n      }\n    }\n    return;\n  }\n  let info = codeCache[controlChars[0]];\n  if (info) {\n    state[info.set] = info.to;\n  }\n}\n\nfunction readState(line) {\n  let code = codeRegex(true);\n  let controlChars = code.exec(line);\n  let state = {};\n  while (controlChars !== null) {\n    updateState(state\x2C controlChars);\n    controlChars = code.exec(line);\n  }\n  return state;\n}\n\nfunction unwindState(state\x2C ret) {\n  let lastBackgroundAdded = state.lastBackgroundAdded;\n  let lastForegroundAdded = state.lastForegroundAdded;\n\n  delete state.lastBackgroundAdded;\n  delete state.lastForegroundAdded;\n\n  Object.keys(state).forEach(function (key) {\n    if (state[key]) {\n      ret += codeCache[key].off;\n    }\n  });\n\n  if (lastBackgroundAdded && lastBackgroundAdded != '\\u001b[49m') {\n    ret += '\\u001b[49m';\n  }\n  if (lastForegroundAdded && lastForegroundAdded != '\\u001b[39m') {\n    ret += '\\u001b[39m';\n  }\n\n  return ret;\n}\n\nfunction rewindState(state\x2C ret) {\n  let lastBackgroundAdded = state.lastBackgroundAdded;\n  let lastForegroundAdded = state.lastForegroundAdded;\n\n  delete state.lastBackgroundAdded;\n  delete state.lastForegroundAdded;\n\n  Object.keys(state).forEach(function (key) {\n    if (state[key]) {\n      ret = codeCache[key].on + ret;\n    }\n  });\n\n  if (lastBackgroundAdded && lastBackgroundAdded != '\\u001b[49m') {\n    ret = lastBackgroundAdded + ret;\n  }\n  if (lastForegroundAdded && lastForegroundAdded != '\\u001b[39m') {\n    ret = lastForegroundAdded + ret;\n  }\n\n  return ret;\n}\n\nfunction truncateWidth(str\x2C desiredLength) {\n  if (str.length === strlen(str)) {\n    return str.substr(0\x2C desiredLength);\n  }\n\n  while (strlen(str) > desiredLength) {\n    str = str.slice(0\x2C -1);\n  }\n\n  return str;\n}\n\nfunction truncateWidthWithAnsi(str\x2C desiredLength) {\n  let code = codeRegex(true);\n  let split = str.split(codeRegex());\n  let splitIndex = 0;\n  let retLen = 0;\n  let ret = '';\n  let myArray;\n  let state = {};\n\n  while (retLen < desiredLength) {\n    myArray = code.exec(str);\n    let toAdd = split[splitIndex];\n    splitIndex++;\n    if (retLen + strlen(toAdd) > desiredLength) {\n      toAdd = truncateWidth(toAdd\x2C desiredLength - retLen);\n    }\n    ret += toAdd;\n    retLen += strlen(toAdd);\n\n    if (retLen < desiredLength) {\n      if (!myArray) {\n        break;\n      } // full-width chars may cause a whitespace which cannot be filled\n      ret += myArray[0];\n      updateState(state\x2C myArray);\n    }\n  }\n\n  return unwindState(state\x2C ret);\n}\n\nfunction truncate(str\x2C desiredLength\x2C truncateChar) {\n  truncateChar = truncateChar || '\u2026';\n  let lengthOfStr = strlen(str);\n  if (lengthOfStr <= desiredLength) {\n    return str;\n  }\n  desiredLength -= strlen(truncateChar);\n\n  let ret = truncateWidthWithAnsi(str\x2C desiredLength);\n\n  return ret + truncateChar;\n}\n\nfunction defaultOptions() {\n  return {\n    chars: {\n      top: '\u2500'\x2C\n      'top-mid': '\u252c'\x2C\n      'top-left': '\u250c'\x2C\n      'top-right': '\u2510'\x2C\n      bottom: '\u2500'\x2C\n      'bottom-mid': '\u2534'\x2C\n      'bottom-left': '\u2514'\x2C\n      'bottom-right': '\u2518'\x2C\n      left: '\u2502'\x2C\n      'left-mid': '\u251c'\x2C\n      mid: '\u2500'\x2C\n      'mid-mid': '\u253c'\x2C\n      right: '\u2502'\x2C\n      'right-mid': '\u2524'\x2C\n      middle: '\u2502'\x2C\n    }\x2C\n    truncate: '\u2026'\x2C\n    colWidths: []\x2C\n    rowHeights: []\x2C\n    colAligns: []\x2C\n    rowAligns: []\x2C\n    style: {\n      'padding-left': 1\x2C\n      'padding-right': 1\x2C\n      head: ['red']\x2C\n      border: ['grey']\x2C\n      compact: false\x2C\n    }\x2C\n    head: []\x2C\n  };\n}\n\nfunction mergeOptions(options\x2C defaults) {\n  options = options || {};\n  defaults = defaults || defaultOptions();\n  let ret = Object.assign({}\x2C defaults\x2C options);\n  ret.chars = Object.assign({}\x2C defaults.chars\x2C options.chars);\n  ret.style = Object.assign({}\x2C defaults.style\x2C options.style);\n  return ret;\n}\n\nfunction wordWrap(maxLength\x2C input) {\n  let lines = [];\n  let split = input.split(/(\\s+)/g);\n  let line = [];\n  let lineLength = 0;\n  let whitespace;\n  for (let i = 0; i < split.length; i += 2) {\n    let word = split[i];\n    let newLength = lineLength + strlen(word);\n    if (lineLength > 0 && whitespace) {\n      newLength += whitespace.length;\n    }\n    if (newLength > maxLength) {\n      if (lineLength !== 0) {\n        lines.push(line.join(''));\n      }\n      line = [word];\n      lineLength = strlen(word);\n    } else {\n      line.push(whitespace || ''\x2C word);\n      lineLength = newLength;\n    }\n    whitespace = split[i + 1];\n  }\n  if (lineLength) {\n    lines.push(line.join(''));\n  }\n  return lines;\n}\n\nfunction multiLineWordWrap(maxLength\x2C input) {\n  let output = [];\n  input = input.split('\\n');\n  for (let i = 0; i < input.length; i++) {\n    output.push.apply(output\x2C wordWrap(maxLength\x2C input[i]));\n  }\n  return output;\n}\n\nfunction colorizeLines(input) {\n  let state = {};\n  let output = [];\n  for (let i = 0; i < input.length; i++) {\n    let line = rewindState(state\x2C input[i]);\n    state = readState(line);\n    let temp = Object.assign({}\x2C state);\n    output.push(unwindState(temp\x2C line));\n  }\n  return output;\n}\n\nmodule.exports = {\n  strlen: strlen\x2C\n  repeat: repeat\x2C\n  pad: pad\x2C\n  truncate: truncate\x2C\n  mergeOptions: mergeOptions\x2C\n  wordWrap: multiLineWordWrap\x2C\n  colorizeLines: colorizeLines\x2C\n};\n
code-source-info,0x36998914c0b6,150,0,7225,C0O0C4O7225,,
code-creation,Function,10,76416,0x36998914c896,244, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:1:1,0x36998914c020,~
code-source-info,0x36998914c896,150,0,7225,C0O0C107O20C110O20C114O20C116O1010C117O1010C119O1312C128O1312C133O1343C142O1343C147O1377C156O1377C161O1413C170O1413C175O1447C184O1447C189O7040C196O7069C202O7087C208O7102C214O7119C220O7145C226O7171C232O7207C238O7055C243O7224,,
tick,0x1a3726538,77166,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914c904,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914b34a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914a519,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d8f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,77208,0x36998914df5e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/string-width/index.js:1:1,0x36998914ddd8,~
script-source,151,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/string-width/index.js,'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\x09if (typeof string !== 'string' || string.length === 0) {\n\x09\x09return 0;\n\x09}\n\n\x09string = stripAnsi(string);\n\n\x09if (string.length === 0) {\n\x09\x09return 0;\n\x09}\n\n\x09string = string.replace(emojiRegex()\x2C '  ');\n\n\x09let width = 0;\n\n\x09for (let i = 0; i < string.length; i++) {\n\x09\x09const code = string.codePointAt(i);\n\n\x09\x09// Ignore control characters\n\x09\x09if (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\x09\x09\x09continue;\n\x09\x09}\n\n\x09\x09// Ignore combining characters\n\x09\x09if (code >= 0x300 && code <= 0x36F) {\n\x09\x09\x09continue;\n\x09\x09}\n\n\x09\x09// Surrogates\n\x09\x09if (code > 0xFFFF) {\n\x09\x09\x09i++;\n\x09\x09}\n\n\x09\x09width += isFullwidthCodePoint(code) ? 2 : 1;\n\x09}\n\n\x09return width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n
code-source-info,0x36998914df5e,151,0,923,C0O0C4O923,,
code-creation,Function,10,77250,0x36998914e06e,65, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/string-width/index.js:1:1,0x36998914dec8,~
code-source-info,0x36998914e06e,151,0,923,C0O0C14O32C17O32C21O32C23O84C26O84C30O84C32O139C35O139C39O139C41O184C46O808C48O823C52O892C59O908C64O922,,
code-creation,Eval,10,77541,0x36998914ea26,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/strip-ansi/index.js:1:1,0x36998914e8c0,~
script-source,152,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/strip-ansi/index.js,'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex()\x2C '') : string;\n
code-source-info,0x36998914ea26,152,0,154,C0O0C4O154,,
code-creation,Function,10,77583,0x36998914eb56,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/strip-ansi/index.js:1:1,0x36998914e990,~
code-source-info,0x36998914eb56,152,0,154,C0O0C8O32C11O32C15O32C17O56C21O71C26O153,,
code-creation,Eval,10,77791,0x36998914f466,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/ansi-regex/index.js:1:1,0x36998914f310,~
script-source,153,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/ansi-regex/index.js,'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\x09const pattern = [\n\x09\x09'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)'\x2C\n\x09\x09'(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\x09].join('|');\n\n\x09return new RegExp(pattern\x2C onlyFirst ? undefined : 'g');\n};\n
code-source-info,0x36998914f466,153,0,350,C0O0C4O350,,
code-creation,Function,10,77791,0x36998914f586,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/ansi-regex/index.js:1:1,0x36998914f3d0,~
code-source-info,0x36998914f586,153,0,350,C0O15C4O30C9O349,,
code-creation,Eval,10,78083,0x36998914ffe6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/is-fullwidth-code-point/index.js:1:1,0x36998914fe90,~
script-source,154,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/is-fullwidth-code-point/index.js,/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\x09if (Number.isNaN(codePoint)) {\n\x09\x09return false;\n\x09}\n\n\x09// Code points are derived from:\n\x09// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\x09if (\n\x09\x09codePoint >= 0x1100 && (\n\x09\x09\x09codePoint <= 0x115F || // Hangul Jamo\n\x09\x09\x09codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\x09\x09\x09codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\x09\x09\x09// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\x09\x09\x09(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\x09\x09\x09// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\x09\x09\x09(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\x09\x09\x09// CJK Unified Ideographs .. Yi Radicals\n\x09\x09\x09(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\x09\x09\x09// Hangul Jamo Extended-A\n\x09\x09\x09(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\x09\x09\x09// Hangul Syllables\n\x09\x09\x09(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\x09\x09\x09// CJK Compatibility Ideographs\n\x09\x09\x09(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\x09\x09\x09// Vertical Forms\n\x09\x09\x09(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\x09\x09\x09// CJK Compatibility Forms .. Small Form Variants\n\x09\x09\x09(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\x09\x09\x09// Halfwidth and Fullwidth Forms\n\x09\x09\x09(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\x09\x09\x09(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\x09\x09\x09// Kana Supplement\n\x09\x09\x09(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\x09\x09\x09// Enclosed Ideographic Supplement\n\x09\x09\x09(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\x09\x09\x09// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\x09\x09\x09(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\x09\x09)\n\x09) {\n\x09\x09return true;\n\x09}\n\n\x09return false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n
code-source-info,0x36998914ffe6,154,0,1756,C0O0C4O1756,,
code-creation,Function,10,78166,0x3699891500d6,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/is-fullwidth-code-point/index.js:1:1,0x36998914ff50,~
code-source-info,0x3699891500d6,154,0,1756,C0O70C5O1670C7O1685C11O1716C18O1732C23O1755,,
tick,0x101162eac,78375,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914e091,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914c904,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914b34a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914a519,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d8f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,78416,0x369989150f76,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/emoji-regex/index.js:1:1,0x369989150e20,~
script-source,155,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/emoji-regex/index.js,"use strict";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n
code-source-info,0x369989150f76,155,0,10286,C0O0C4O10286,,
code-creation,Function,10,78875,0x369989151096,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/emoji-regex/index.js:1:1,0x369989150ee0,~
code-source-info,0x369989151096,155,0,10286,C0O15C4O30C9O10285,,
code-creation,LazyCompile,10,78916,0x36998915147e,106,addToCodeCache /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:46:24,0x36998914c250,~
code-source-info,0x36998915147e,150,1038,1247,C0O1058C5O1073C11O1078C16O1087C21O1103C27O1109C32O1118C37O1128C44O1141C50O1132C54O1161C59O1171C66O1185C72O1176C76O1206C81O1216C88O1230C94O1239C100O1222C105O1246,,
code-creation,Eval,10,79291,0x369989152446,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:1:1,0x3699891521a0,~
script-source,156,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js,const Cell = require('./cell');\nconst { ColSpanCell\x2C RowSpanCell } = Cell;\n\n(function () {\n  function layoutTable(table) {\n    table.forEach(function (row\x2C rowIndex) {\n      let prevCell = null;\n      row.forEach(function (cell\x2C columnIndex) {\n        cell.y = rowIndex;\n        cell.x = prevCell ? prevCell.x + 1 : columnIndex;\n        for (let y = rowIndex; y >= 0; y--) {\n          let row2 = table[y];\n          let xMax = y === rowIndex ? columnIndex : row2.length;\n          for (let x = 0; x < xMax; x++) {\n            let cell2 = row2[x];\n            while (cellsConflict(cell\x2C cell2)) {\n              cell.x++;\n            }\n          }\n          prevCell = cell;\n        }\n      });\n    });\n  }\n\n  function maxWidth(table) {\n    let mw = 0;\n    table.forEach(function (row) {\n      row.forEach(function (cell) {\n        mw = Math.max(mw\x2C cell.x + (cell.colSpan || 1));\n      });\n    });\n    return mw;\n  }\n\n  function maxHeight(table) {\n    return table.length;\n  }\n\n  function cellsConflict(cell1\x2C cell2) {\n    let yMin1 = cell1.y;\n    let yMax1 = cell1.y - 1 + (cell1.rowSpan || 1);\n    let yMin2 = cell2.y;\n    let yMax2 = cell2.y - 1 + (cell2.rowSpan || 1);\n    let yConflict = !(yMin1 > yMax2 || yMin2 > yMax1);\n\n    let xMin1 = cell1.x;\n    let xMax1 = cell1.x - 1 + (cell1.colSpan || 1);\n    let xMin2 = cell2.x;\n    let xMax2 = cell2.x - 1 + (cell2.colSpan || 1);\n    let xConflict = !(xMin1 > xMax2 || xMin2 > xMax1);\n\n    return yConflict && xConflict;\n  }\n\n  function conflictExists(rows\x2C x\x2C y) {\n    let i_max = Math.min(rows.length - 1\x2C y);\n    let cell = { x: x\x2C y: y };\n    for (let i = 0; i <= i_max; i++) {\n      let row = rows[i];\n      for (let j = 0; j < row.length; j++) {\n        if (cellsConflict(cell\x2C row[j])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  function allBlank(rows\x2C y\x2C xMin\x2C xMax) {\n    for (let x = xMin; x < xMax; x++) {\n      if (conflictExists(rows\x2C x\x2C y)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function addRowSpanCells(table) {\n    table.forEach(function (row\x2C rowIndex) {\n      row.forEach(function (cell) {\n        for (let i = 1; i < cell.rowSpan; i++) {\n          let rowSpanCell = new RowSpanCell(cell);\n          rowSpanCell.x = cell.x;\n          rowSpanCell.y = cell.y + i;\n          rowSpanCell.colSpan = cell.colSpan;\n          insertCell(rowSpanCell\x2C table[rowIndex + i]);\n        }\n      });\n    });\n  }\n\n  function addColSpanCells(cellRows) {\n    for (let rowIndex = cellRows.length - 1; rowIndex >= 0; rowIndex--) {\n      let cellColumns = cellRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < cellColumns.length; columnIndex++) {\n        let cell = cellColumns[columnIndex];\n        for (let k = 1; k < cell.colSpan; k++) {\n          let colSpanCell = new ColSpanCell();\n          colSpanCell.x = cell.x + k;\n          colSpanCell.y = cell.y;\n          cellColumns.splice(columnIndex + 1\x2C 0\x2C colSpanCell);\n        }\n      }\n    }\n  }\n\n  function insertCell(cell\x2C row) {\n    let x = 0;\n    while (x < row.length && row[x].x < cell.x) {\n      x++;\n    }\n    row.splice(x\x2C 0\x2C cell);\n  }\n\n  function fillInTable(table) {\n    let h_max = maxHeight(table);\n    let w_max = maxWidth(table);\n    for (let y = 0; y < h_max; y++) {\n      for (let x = 0; x < w_max; x++) {\n        if (!conflictExists(table\x2C x\x2C y)) {\n          let opts = { x: x\x2C y: y\x2C colSpan: 1\x2C rowSpan: 1 };\n          x++;\n          while (x < w_max && !conflictExists(table\x2C x\x2C y)) {\n            opts.colSpan++;\n            x++;\n          }\n          let y2 = y + 1;\n          while (y2 < h_max && allBlank(table\x2C y2\x2C opts.x\x2C opts.x + opts.colSpan)) {\n            opts.rowSpan++;\n            y2++;\n          }\n\n          let cell = new Cell(opts);\n          cell.x = opts.x;\n          cell.y = opts.y;\n          insertCell(cell\x2C table[y]);\n        }\n      }\n    }\n  }\n\n  function generateCells(rows) {\n    return rows.map(function (row) {\n      if (!Array.isArray(row)) {\n        let key = Object.keys(row)[0];\n        row = row[key];\n        if (Array.isArray(row)) {\n          row = row.slice();\n          row.unshift(key);\n        } else {\n          row = [key\x2C row];\n        }\n      }\n      return row.map(function (cell) {\n        return new Cell(cell);\n      });\n    });\n  }\n\n  function makeTableLayout(rows) {\n    let cellRows = generateCells(rows);\n    layoutTable(cellRows);\n    fillInTable(cellRows);\n    addRowSpanCells(cellRows);\n    addColSpanCells(cellRows);\n    return cellRows;\n  }\n\n  module.exports = {\n    makeTableLayout: makeTableLayout\x2C\n    layoutTable: layoutTable\x2C\n    addRowSpanCells: addRowSpanCells\x2C\n    maxWidth: maxWidth\x2C\n    fillInTable: fillInTable\x2C\n    computeWidths: makeComputeWidths('colSpan'\x2C 'desiredWidth'\x2C 'x'\x2C 1)\x2C\n    computeHeights: makeComputeWidths('rowSpan'\x2C 'desiredHeight'\x2C 'y'\x2C 1)\x2C\n  };\n})();\n\nfunction makeComputeWidths(colSpan\x2C desiredWidth\x2C x\x2C forcedMin) {\n  return function (vals\x2C table) {\n    let result = [];\n    let spanners = [];\n    table.forEach(function (row) {\n      row.forEach(function (cell) {\n        if ((cell[colSpan] || 1) > 1) {\n          spanners.push(cell);\n        } else {\n          result[cell[x]] = Math.max(result[cell[x]] || 0\x2C cell[desiredWidth] || 0\x2C forcedMin);\n        }\n      });\n    });\n\n    vals.forEach(function (val\x2C index) {\n      if (typeof val === 'number') {\n        result[index] = val;\n      }\n    });\n\n    //spanners.forEach(function(cell){\n    for (let k = spanners.length - 1; k >= 0; k--) {\n      let cell = spanners[k];\n      let span = cell[colSpan];\n      let col = cell[x];\n      let existingWidth = result[col];\n      let editableCols = typeof vals[col] === 'number' ? 0 : 1;\n      for (let i = 1; i < span; i++) {\n        existingWidth += 1 + result[col + i];\n        if (typeof vals[col + i] !== 'number') {\n          editableCols++;\n        }\n      }\n      if (cell[desiredWidth] > existingWidth) {\n        let i = 0;\n        while (editableCols > 0 && cell[desiredWidth] > existingWidth) {\n          if (typeof vals[col + i] !== 'number') {\n            let dif = Math.round((cell[desiredWidth] - existingWidth) / editableCols);\n            existingWidth += dif;\n            result[col + i] += dif;\n            editableCols--;\n          }\n          i++;\n        }\n      }\n    }\n\n    Object.assign(vals\x2C result);\n    for (let j = 0; j < vals.length; j++) {\n      vals[j] = Math.max(forcedMin\x2C vals[j] || 0);\n    }\n  };\n}\n
code-source-info,0x369989152446,156,0,6413,C0O0C4O6413,,
code-creation,Function,10,79541,0x36998915260e,58, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:1:1,0x3699891523b0,~
code-source-info,0x36998915260e,156,0,6413,C0O0C24O13C27O13C31O13C33O69C36O40C42O53C48O76C53O4827C57O6412,,
code-creation,Function,10,79583,0x369989152d4e,176, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:4:11,0x369989152550,~
code-source-info,0x369989152d4e,156,86,4826,C0O86C76O4493C88O4533C94O4567C100O4601C106O4632C112O4659C133O4691C159O4765C170O4508C175O4825,,
tick,0x1a373068c,79625,1,0x100cd50c4,6,0x0,0x172aed051007,0x172aed051281,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x369989152629,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914b353,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998914a519,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d8f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
new,MemoryChunk,0x39b827f00000,262144
new,MemoryChunk,0x37590e7c0000,262144
new,MemoryChunk,0x1ce0a9080000,262144
new,MemoryChunk,0x36b6c2d40000,262144
scavenge,begin,0,81041,1643426345563
scavenge,end,0,81362,1643426345563
code-creation,Eval,10,80291,0x36998915419e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:1:1,0x369989153f40,~
script-source,157,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js,const utils = require('./utils');\n\nclass Cell {\n  /**\n   * A representation of a cell within the table.\n   * Implementations must have `init` and `draw` methods\x2C\n   * as well as `colSpan`\x2C `rowSpan`\x2C `desiredHeight` and `desiredWidth` properties.\n   * @param options\n   * @constructor\n   */\n  constructor(options) {\n    this.setOptions(options);\n\n    /**\n     * Each cell will have it's `x` and `y` values set by the `layout-manager` prior to\n     * `init` being called;\n     * @type {Number}\n     */\n    this.x = null;\n    this.y = null;\n  }\n\n  setOptions(options) {\n    if (['boolean'\x2C 'number'\x2C 'string'].indexOf(typeof options) !== -1) {\n      options = { content: '' + options };\n    }\n    options = options || {};\n    this.options = options;\n    let content = options.content;\n    if (['boolean'\x2C 'number'\x2C 'string'].indexOf(typeof content) !== -1) {\n      this.content = String(content);\n    } else if (!content) {\n      this.content = '';\n    } else {\n      throw new Error('Content needs to be a primitive\x2C got: ' + typeof content);\n    }\n    this.colSpan = options.colSpan || 1;\n    this.rowSpan = options.rowSpan || 1;\n  }\n\n  mergeTableOptions(tableOptions\x2C cells) {\n    this.cells = cells;\n\n    let optionsChars = this.options.chars || {};\n    let tableChars = tableOptions.chars;\n    let chars = (this.chars = {});\n    CHAR_NAMES.forEach(function (name) {\n      setOption(optionsChars\x2C tableChars\x2C name\x2C chars);\n    });\n\n    this.truncate = this.options.truncate || tableOptions.truncate;\n\n    let style = (this.options.style = this.options.style || {});\n    let tableStyle = tableOptions.style;\n    setOption(style\x2C tableStyle\x2C 'padding-left'\x2C this);\n    setOption(style\x2C tableStyle\x2C 'padding-right'\x2C this);\n    this.head = style.head || tableStyle.head;\n    this.border = style.border || tableStyle.border;\n\n    let fixedWidth = tableOptions.colWidths[this.x];\n    if (tableOptions.wordWrap && fixedWidth) {\n      fixedWidth -= this.paddingLeft + this.paddingRight;\n      if (this.colSpan) {\n        let i = 1;\n        while (i < this.colSpan) {\n          fixedWidth += tableOptions.colWidths[this.x + i];\n          i++;\n        }\n      }\n      this.lines = utils.colorizeLines(utils.wordWrap(fixedWidth\x2C this.content));\n    } else {\n      this.lines = utils.colorizeLines(this.content.split('\\n'));\n    }\n\n    this.desiredWidth = utils.strlen(this.content) + this.paddingLeft + this.paddingRight;\n    this.desiredHeight = this.lines.length;\n  }\n\n  /**\n   * Initializes the Cells data structure.\n   *\n   * @param tableOptions - A fully populated set of tableOptions.\n   * In addition to the standard default values\x2C tableOptions must have fully populated the\n   * `colWidths` and `rowWidths` arrays. Those arrays must have lengths equal to the number\n   * of columns or rows (respectively) in this table\x2C and each array item must be a Number.\n   *\n   */\n  init(tableOptions) {\n    let x = this.x;\n    let y = this.y;\n    this.widths = tableOptions.colWidths.slice(x\x2C x + this.colSpan);\n    this.heights = tableOptions.rowHeights.slice(y\x2C y + this.rowSpan);\n    this.width = this.widths.reduce(sumPlusOne\x2C -1);\n    this.height = this.heights.reduce(sumPlusOne\x2C -1);\n\n    this.hAlign = this.options.hAlign || tableOptions.colAligns[x];\n    this.vAlign = this.options.vAlign || tableOptions.rowAligns[y];\n\n    this.drawRight = x + this.colSpan == tableOptions.colWidths.length;\n  }\n\n  /**\n   * Draws the given line of the cell.\n   * This default implementation defers to methods `drawTop`\x2C `drawBottom`\x2C `drawLine` and `drawEmpty`.\n   * @param lineNum - can be `top`\x2C `bottom` or a numerical line number.\n   * @param spanningCell - will be a number if being called from a RowSpanCell\x2C and will represent how\n   * many rows below it's being called from. Otherwise it's undefined.\n   * @returns {String} The representation of this line.\n   */\n  draw(lineNum\x2C spanningCell) {\n    if (lineNum == 'top') return this.drawTop(this.drawRight);\n    if (lineNum == 'bottom') return this.drawBottom(this.drawRight);\n    let padLen = Math.max(this.height - this.lines.length\x2C 0);\n    let padTop;\n    switch (this.vAlign) {\n      case 'center':\n        padTop = Math.ceil(padLen / 2);\n        break;\n      case 'bottom':\n        padTop = padLen;\n        break;\n      default:\n        padTop = 0;\n    }\n    if (lineNum < padTop || lineNum >= padTop + this.lines.length) {\n      return this.drawEmpty(this.drawRight\x2C spanningCell);\n    }\n    let forceTruncation = this.lines.length > this.height && lineNum + 1 >= this.height;\n    return this.drawLine(lineNum - padTop\x2C this.drawRight\x2C forceTruncation\x2C spanningCell);\n  }\n\n  /**\n   * Renders the top line of the cell.\n   * @param drawRight - true if this method should render the right edge of the cell.\n   * @returns {String}\n   */\n  drawTop(drawRight) {\n    let content = [];\n    if (this.cells) {\n      //TODO: cells should always exist - some tests don't fill it in though\n      this.widths.forEach(function (width\x2C index) {\n        content.push(this._topLeftChar(index));\n        content.push(utils.repeat(this.chars[this.y == 0 ? 'top' : 'mid']\x2C width));\n      }\x2C this);\n    } else {\n      content.push(this._topLeftChar(0));\n      content.push(utils.repeat(this.chars[this.y == 0 ? 'top' : 'mid']\x2C this.width));\n    }\n    if (drawRight) {\n      content.push(this.chars[this.y == 0 ? 'topRight' : 'rightMid']);\n    }\n    return this.wrapWithStyleColors('border'\x2C content.join(''));\n  }\n\n  _topLeftChar(offset) {\n    let x = this.x + offset;\n    let leftChar;\n    if (this.y == 0) {\n      leftChar = x == 0 ? 'topLeft' : offset == 0 ? 'topMid' : 'top';\n    } else {\n      if (x == 0) {\n        leftChar = 'leftMid';\n      } else {\n        leftChar = offset == 0 ? 'midMid' : 'bottomMid';\n        if (this.cells) {\n          //TODO: cells should always exist - some tests don't fill it in though\n          let spanAbove = this.cells[this.y - 1][x] instanceof Cell.ColSpanCell;\n          if (spanAbove) {\n            leftChar = offset == 0 ? 'topMid' : 'mid';\n          }\n          if (offset == 0) {\n            let i = 1;\n            while (this.cells[this.y][x - i] instanceof Cell.ColSpanCell) {\n              i++;\n            }\n            if (this.cells[this.y][x - i] instanceof Cell.RowSpanCell) {\n              leftChar = 'leftMid';\n            }\n          }\n        }\n      }\n    }\n    return this.chars[leftChar];\n  }\n\n  wrapWithStyleColors(styleProperty\x2C content) {\n    if (this[styleProperty] && this[styleProperty].length) {\n      try {\n        let colors = require('colors/safe');\n        for (let i = this[styleProperty].length - 1; i >= 0; i--) {\n          colors = colors[this[styleProperty][i]];\n        }\n        return colors(content);\n      } catch (e) {\n        return content;\n      }\n    } else {\n      return content;\n    }\n  }\n\n  /**\n   * Renders a line of text.\n   * @param lineNum - Which line of text to render. This is not necessarily the line within the cell.\n   * There may be top-padding above the first line of text.\n   * @param drawRight - true if this method should render the right edge of the cell.\n   * @param forceTruncationSymbol - `true` if the rendered text should end with the truncation symbol even\n   * if the text fits. This is used when the cell is vertically truncated. If `false` the text should\n   * only include the truncation symbol if the text will not fit horizontally within the cell width.\n   * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.\n   * @returns {String}\n   */\n  drawLine(lineNum\x2C drawRight\x2C forceTruncationSymbol\x2C spanningCell) {\n    let left = this.chars[this.x == 0 ? 'left' : 'middle'];\n    if (this.x && spanningCell && this.cells) {\n      let cellLeft = this.cells[this.y + spanningCell][this.x - 1];\n      while (cellLeft instanceof ColSpanCell) {\n        cellLeft = this.cells[cellLeft.y][cellLeft.x - 1];\n      }\n      if (!(cellLeft instanceof RowSpanCell)) {\n        left = this.chars['rightMid'];\n      }\n    }\n    let leftPadding = utils.repeat(' '\x2C this.paddingLeft);\n    let right = drawRight ? this.chars['right'] : '';\n    let rightPadding = utils.repeat(' '\x2C this.paddingRight);\n    let line = this.lines[lineNum];\n    let len = this.width - (this.paddingLeft + this.paddingRight);\n    if (forceTruncationSymbol) line += this.truncate || '\u2026';\n    let content = utils.truncate(line\x2C len\x2C this.truncate);\n    content = utils.pad(content\x2C len\x2C ' '\x2C this.hAlign);\n    content = leftPadding + content + rightPadding;\n    return this.stylizeLine(left\x2C content\x2C right);\n  }\n\n  stylizeLine(left\x2C content\x2C right) {\n    left = this.wrapWithStyleColors('border'\x2C left);\n    right = this.wrapWithStyleColors('border'\x2C right);\n    if (this.y === 0) {\n      content = this.wrapWithStyleColors('head'\x2C content);\n    }\n    return left + content + right;\n  }\n\n  /**\n   * Renders the bottom line of the cell.\n   * @param drawRight - true if this method should render the right edge of the cell.\n   * @returns {String}\n   */\n  drawBottom(drawRight) {\n    let left = this.chars[this.x == 0 ? 'bottomLeft' : 'bottomMid'];\n    let content = utils.repeat(this.chars.bottom\x2C this.width);\n    let right = drawRight ? this.chars['bottomRight'] : '';\n    return this.wrapWithStyleColors('border'\x2C left + content + right);\n  }\n\n  /**\n   * Renders a blank line of text within the cell. Used for top and/or bottom padding.\n   * @param drawRight - true if this method should render the right edge of the cell.\n   * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.\n   * @returns {String}\n   */\n  drawEmpty(drawRight\x2C spanningCell) {\n    let left = this.chars[this.x == 0 ? 'left' : 'middle'];\n    if (this.x && spanningCell && this.cells) {\n      let cellLeft = this.cells[this.y + spanningCell][this.x - 1];\n      while (cellLeft instanceof ColSpanCell) {\n        cellLeft = this.cells[cellLeft.y][cellLeft.x - 1];\n      }\n      if (!(cellLeft instanceof RowSpanCell)) {\n        left = this.chars['rightMid'];\n      }\n    }\n    let right = drawRight ? this.chars['right'] : '';\n    let content = utils.repeat(' '\x2C this.width);\n    return this.stylizeLine(left\x2C content\x2C right);\n  }\n}\n\nclass ColSpanCell {\n  /**\n   * A Cell that doesn't do anything. It just draws empty lines.\n   * Used as a placeholder in column spanning.\n   * @constructor\n   */\n  constructor() {}\n\n  draw() {\n    return '';\n  }\n\n  init() {}\n\n  mergeTableOptions() {}\n}\n\nclass RowSpanCell {\n  /**\n   * A placeholder Cell for a Cell that spans multiple rows.\n   * It delegates rendering to the original cell\x2C but adds the appropriate offset.\n   * @param originalCell\n   * @constructor\n   */\n  constructor(originalCell) {\n    this.originalCell = originalCell;\n  }\n\n  init(tableOptions) {\n    let y = this.y;\n    let originalY = this.originalCell.y;\n    this.cellOffset = y - originalY;\n    this.offset = findDimension(tableOptions.rowHeights\x2C originalY\x2C this.cellOffset);\n  }\n\n  draw(lineNum) {\n    if (lineNum == 'top') {\n      return this.originalCell.draw(this.offset\x2C this.cellOffset);\n    }\n    if (lineNum == 'bottom') {\n      return this.originalCell.draw('bottom');\n    }\n    return this.originalCell.draw(this.offset + 1 + lineNum);\n  }\n\n  mergeTableOptions() {}\n}\n\n// HELPER FUNCTIONS\nfunction setOption(objA\x2C objB\x2C nameB\x2C targetObj) {\n  let nameA = nameB.split('-');\n  if (nameA.length > 1) {\n    nameA[1] = nameA[1].charAt(0).toUpperCase() + nameA[1].substr(1);\n    nameA = nameA.join('');\n    targetObj[nameA] = objA[nameA] || objA[nameB] || objB[nameA] || objB[nameB];\n  } else {\n    targetObj[nameB] = objA[nameB] || objB[nameB];\n  }\n}\n\nfunction findDimension(dimensionTable\x2C startingIndex\x2C span) {\n  let ret = dimensionTable[startingIndex];\n  for (let i = 1; i < span; i++) {\n    ret += 1 + dimensionTable[startingIndex + i];\n  }\n  return ret;\n}\n\nfunction sumPlusOne(a\x2C b) {\n  return a + b + 1;\n}\n\nlet CHAR_NAMES = [\n  'top'\x2C\n  'top-mid'\x2C\n  'top-left'\x2C\n  'top-right'\x2C\n  'bottom'\x2C\n  'bottom-mid'\x2C\n  'bottom-left'\x2C\n  'bottom-right'\x2C\n  'left'\x2C\n  'left-mid'\x2C\n  'mid'\x2C\n  'mid-mid'\x2C\n  'right'\x2C\n  'right-mid'\x2C\n  'middle'\x2C\n];\nmodule.exports = Cell;\nmodule.exports.ColSpanCell = ColSpanCell;\nmodule.exports.RowSpanCell = RowSpanCell;\n
code-source-info,0x36998915419e,157,0,12244,C0O0C4O12244,,
code-creation,Function,10,80750,0x36998915509e,265, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:1:1,0x369989154108,~
code-source-info,0x36998915509e,157,0,12244,C0O0C39O14C45O14C49O14C141O35C183O10222C227O10476C229O11934C233O11934C235O12137C237O12152C241O12167C248O12187C252O12209C259O12229C264O12243,,
code-creation,LazyCompile,10,80791,0x3699891563ce,26,makeComputeWidths /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:181:27,0x369989152478,~
code-source-info,0x3699891563ce,156,4858,6412,C0O4858C21O4900C25O6410,,
tick,0x1a37263d4,80875,1,0x100cd4c94,6,0x0,0x172aed04ff2e,0x172aed04fc19,0x1b9b8816ec96,0x172aed050aa8,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x369989148d98,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,81291,0x369989157c0e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:1:1,0x3699891578f0,~
script-source,158,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js,'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor\x2C stderr: stderrColor} = require('supports-color');\nconst {\n\x09stringReplaceAll\x2C\n\x09stringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\x09'ansi'\x2C\n\x09'ansi'\x2C\n\x09'ansi256'\x2C\n\x09'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object\x2C options = {}) => {\n\x09if (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\x09\x09throw new Error('The `level` option should be an integer from 0 to 3');\n\x09}\n\n\x09// Detect level if not set manually\n\x09const colorLevel = stdoutColor ? stdoutColor.level : 0;\n\x09object.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\x09constructor(options) {\n\x09\x09// eslint-disable-next-line no-constructor-return\n\x09\x09return chalkFactory(options);\n\x09}\n}\n\nconst chalkFactory = options => {\n\x09const chalk = {};\n\x09applyOptions(chalk\x2C options);\n\n\x09chalk.template = (...arguments_) => chalkTag(chalk.template\x2C ...arguments_);\n\n\x09Object.setPrototypeOf(chalk\x2C Chalk.prototype);\n\x09Object.setPrototypeOf(chalk.template\x2C chalk);\n\n\x09chalk.template.constructor = () => {\n\x09\x09throw new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\x09};\n\n\x09chalk.template.Instance = ChalkClass;\n\n\x09return chalk.template;\n};\n\nfunction Chalk(options) {\n\x09return chalkFactory(options);\n}\n\nfor (const [styleName\x2C style] of Object.entries(ansiStyles)) {\n\x09styles[styleName] = {\n\x09\x09get() {\n\x09\x09\x09const builder = createBuilder(this\x2C createStyler(style.open\x2C style.close\x2C this._styler)\x2C this._isEmpty);\n\x09\x09\x09Object.defineProperty(this\x2C styleName\x2C {value: builder});\n\x09\x09\x09return builder;\n\x09\x09}\n\x09};\n}\n\nstyles.visible = {\n\x09get() {\n\x09\x09const builder = createBuilder(this\x2C this._styler\x2C true);\n\x09\x09Object.defineProperty(this\x2C 'visible'\x2C {value: builder});\n\x09\x09return builder;\n\x09}\n};\n\nconst usedModels = ['rgb'\x2C 'hex'\x2C 'keyword'\x2C 'hsl'\x2C 'hsv'\x2C 'hwb'\x2C 'ansi'\x2C 'ansi256'];\n\nfor (const model of usedModels) {\n\x09styles[model] = {\n\x09\x09get() {\n\x09\x09\x09const {level} = this;\n\x09\x09\x09return function (...arguments_) {\n\x09\x09\x09\x09const styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_)\x2C ansiStyles.color.close\x2C this._styler);\n\x09\x09\x09\x09return createBuilder(this\x2C styler\x2C this._isEmpty);\n\x09\x09\x09};\n\x09\x09}\n\x09};\n}\n\nfor (const model of usedModels) {\n\x09const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\x09styles[bgModel] = {\n\x09\x09get() {\n\x09\x09\x09const {level} = this;\n\x09\x09\x09return function (...arguments_) {\n\x09\x09\x09\x09const styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_)\x2C ansiStyles.bgColor.close\x2C this._styler);\n\x09\x09\x09\x09return createBuilder(this\x2C styler\x2C this._isEmpty);\n\x09\x09\x09};\n\x09\x09}\n\x09};\n}\n\nconst proto = Object.defineProperties(() => {}\x2C {\n\x09...styles\x2C\n\x09level: {\n\x09\x09enumerable: true\x2C\n\x09\x09get() {\n\x09\x09\x09return this._generator.level;\n\x09\x09}\x2C\n\x09\x09set(level) {\n\x09\x09\x09this._generator.level = level;\n\x09\x09}\n\x09}\n});\n\nconst createStyler = (open\x2C close\x2C parent) => {\n\x09let openAll;\n\x09let closeAll;\n\x09if (parent === undefined) {\n\x09\x09openAll = open;\n\x09\x09closeAll = close;\n\x09} else {\n\x09\x09openAll = parent.openAll + open;\n\x09\x09closeAll = close + parent.closeAll;\n\x09}\n\n\x09return {\n\x09\x09open\x2C\n\x09\x09close\x2C\n\x09\x09openAll\x2C\n\x09\x09closeAll\x2C\n\x09\x09parent\n\x09};\n};\n\nconst createBuilder = (self\x2C _styler\x2C _isEmpty) => {\n\x09const builder = (...arguments_) => {\n\x09\x09if (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\x09\x09\x09// Called as a template literal\x2C for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\x09\x09\x09return applyStyle(builder\x2C chalkTag(builder\x2C ...arguments_));\n\x09\x09}\n\n\x09\x09// Single argument is hot path\x2C implicit coercion is faster than anything\n\x09\x09// eslint-disable-next-line no-implicit-coercion\n\x09\x09return applyStyle(builder\x2C (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\x09};\n\n\x09// We alter the prototype because we must return a function\x2C but there is\n\x09// no way to create a function with a different prototype\n\x09Object.setPrototypeOf(builder\x2C proto);\n\n\x09builder._generator = self;\n\x09builder._styler = _styler;\n\x09builder._isEmpty = _isEmpty;\n\n\x09return builder;\n};\n\nconst applyStyle = (self\x2C string) => {\n\x09if (self.level <= 0 || !string) {\n\x09\x09return self._isEmpty ? '' : string;\n\x09}\n\n\x09let styler = self._styler;\n\n\x09if (styler === undefined) {\n\x09\x09return string;\n\x09}\n\n\x09const {openAll\x2C closeAll} = styler;\n\x09if (string.indexOf('\\u001B') !== -1) {\n\x09\x09while (styler !== undefined) {\n\x09\x09\x09// Replace any instances already present with a re-opening code\n\x09\x09\x09// otherwise only the part of the string until said closing code\n\x09\x09\x09// will be colored\x2C and the rest will simply be 'plain'.\n\x09\x09\x09string = stringReplaceAll(string\x2C styler.close\x2C styler.open);\n\n\x09\x09\x09styler = styler.parent;\n\x09\x09}\n\x09}\n\n\x09// We can move both next actions out of loop\x2C because remaining actions in loop won't have\n\x09// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\x09// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\x09const lfIndex = string.indexOf('\\n');\n\x09if (lfIndex !== -1) {\n\x09\x09string = stringEncaseCRLFWithFirstIndex(string\x2C closeAll\x2C openAll\x2C lfIndex);\n\x09}\n\n\x09return openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk\x2C ...strings) => {\n\x09const [firstString] = strings;\n\n\x09if (!isArray(firstString) || !isArray(firstString.raw)) {\n\x09\x09// If chalk() was called by itself or with a string\x2C\n\x09\x09// return the string itself as a string.\n\x09\x09return strings.join(' ');\n\x09}\n\n\x09const arguments_ = strings.slice(1);\n\x09const parts = [firstString.raw[0]];\n\n\x09for (let i = 1; i < firstString.length; i++) {\n\x09\x09parts.push(\n\x09\x09\x09String(arguments_[i - 1]).replace(/[{}\\\\]/g\x2C '\\\\$&')\x2C\n\x09\x09\x09String(firstString.raw[i])\n\x09\x09);\n\x09}\n\n\x09if (template === undefined) {\n\x09\x09template = require('./templates');\n\x09}\n\n\x09return template(chalk\x2C parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype\x2C styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n
code-source-info,0x369989157c0e,158,0,6073,C0O0C4O6073,,
code-creation,Function,10,81583,0x369989158706,1132, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:1:1,0x369989157b78,~
code-source-info,0x
code-creation,Eval,10,81958,0x36998915a126,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/ansi-styles/index.js:1:1,0x369989159f40,~
script-source,159,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/ansi-styles/index.js,'use strict';\n\nconst wrapAnsi16 = (fn\x2C offset) => (...args) => {\n\x09const code = fn(...args);\n\x09return `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn\x2C offset) => (...args) => {\n\x09const code = fn(...args);\n\x09return `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn\x2C offset) => (...args) => {\n\x09const rgb = fn(...args);\n\x09return `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r\x2C g\x2C b) => [r\x2C g\x2C b];\n\nconst setLazyProperty = (object\x2C property\x2C get) => {\n\x09Object.defineProperty(object\x2C property\x2C {\n\x09\x09get: () => {\n\x09\x09\x09const value = get();\n\n\x09\x09\x09Object.defineProperty(object\x2C property\x2C {\n\x09\x09\x09\x09value\x2C\n\x09\x09\x09\x09enumerable: true\x2C\n\x09\x09\x09\x09configurable: true\n\x09\x09\x09});\n\n\x09\x09\x09return value;\n\x09\x09}\x2C\n\x09\x09enumerable: true\x2C\n\x09\x09configurable: true\n\x09});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap\x2C targetSpace\x2C identity\x2C isBackground) => {\n\x09if (colorConvert === undefined) {\n\x09\x09colorConvert = require('color-convert');\n\x09}\n\n\x09const offset = isBackground ? 10 : 0;\n\x09const styles = {};\n\n\x09for (const [sourceSpace\x2C suite] of Object.entries(colorConvert)) {\n\x09\x09const name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\x09\x09if (sourceSpace === targetSpace) {\n\x09\x09\x09styles[name] = wrap(identity\x2C offset);\n\x09\x09} else if (typeof suite === 'object') {\n\x09\x09\x09styles[name] = wrap(suite[targetSpace]\x2C offset);\n\x09\x09}\n\x09}\n\n\x09return styles;\n};\n\nfunction assembleStyles() {\n\x09const codes = new Map();\n\x09const styles = {\n\x09\x09modifier: {\n\x09\x09\x09reset: [0\x2C 0]\x2C\n\x09\x09\x09// 21 isn't widely supported and 22 does the same thing\n\x09\x09\x09bold: [1\x2C 22]\x2C\n\x09\x09\x09dim: [2\x2C 22]\x2C\n\x09\x09\x09italic: [3\x2C 23]\x2C\n\x09\x09\x09underline: [4\x2C 24]\x2C\n\x09\x09\x09inverse: [7\x2C 27]\x2C\n\x09\x09\x09hidden: [8\x2C 28]\x2C\n\x09\x09\x09strikethrough: [9\x2C 29]\n\x09\x09}\x2C\n\x09\x09color: {\n\x09\x09\x09black: [30\x2C 39]\x2C\n\x09\x09\x09red: [31\x2C 39]\x2C\n\x09\x09\x09green: [32\x2C 39]\x2C\n\x09\x09\x09yellow: [33\x2C 39]\x2C\n\x09\x09\x09blue: [34\x2C 39]\x2C\n\x09\x09\x09magenta: [35\x2C 39]\x2C\n\x09\x09\x09cyan: [36\x2C 39]\x2C\n\x09\x09\x09white: [37\x2C 39]\x2C\n\n\x09\x09\x09// Bright color\n\x09\x09\x09blackBright: [90\x2C 39]\x2C\n\x09\x09\x09redBright: [91\x2C 39]\x2C\n\x09\x09\x09greenBright: [92\x2C 39]\x2C\n\x09\x09\x09yellowBright: [93\x2C 39]\x2C\n\x09\x09\x09blueBright: [94\x2C 39]\x2C\n\x09\x09\x09magentaBright: [95\x2C 39]\x2C\n\x09\x09\x09cyanBright: [96\x2C 39]\x2C\n\x09\x09\x09whiteBright: [97\x2C 39]\n\x09\x09}\x2C\n\x09\x09bgColor: {\n\x09\x09\x09bgBlack: [40\x2C 49]\x2C\n\x09\x09\x09bgRed: [41\x2C 49]\x2C\n\x09\x09\x09bgGreen: [42\x2C 49]\x2C\n\x09\x09\x09bgYellow: [43\x2C 49]\x2C\n\x09\x09\x09bgBlue: [44\x2C 49]\x2C\n\x09\x09\x09bgMagenta: [45\x2C 49]\x2C\n\x09\x09\x09bgCyan: [46\x2C 49]\x2C\n\x09\x09\x09bgWhite: [47\x2C 49]\x2C\n\n\x09\x09\x09// Bright color\n\x09\x09\x09bgBlackBright: [100\x2C 49]\x2C\n\x09\x09\x09bgRedBright: [101\x2C 49]\x2C\n\x09\x09\x09bgGreenBright: [102\x2C 49]\x2C\n\x09\x09\x09bgYellowBright: [103\x2C 49]\x2C\n\x09\x09\x09bgBlueBright: [104\x2C 49]\x2C\n\x09\x09\x09bgMagentaBright: [105\x2C 49]\x2C\n\x09\x09\x09bgCyanBright: [106\x2C 49]\x2C\n\x09\x09\x09bgWhiteBright: [107\x2C 49]\n\x09\x09}\n\x09};\n\n\x09// Alias bright black as gray (and grey)\n\x09styles.color.gray = styles.color.blackBright;\n\x09styles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\x09styles.color.grey = styles.color.blackBright;\n\x09styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\x09for (const [groupName\x2C group] of Object.entries(styles)) {\n\x09\x09for (const [styleName\x2C style] of Object.entries(group)) {\n\x09\x09\x09styles[styleName] = {\n\x09\x09\x09\x09open: `\\u001B[${style[0]}m`\x2C\n\x09\x09\x09\x09close: `\\u001B[${style[1]}m`\n\x09\x09\x09};\n\n\x09\x09\x09group[styleName] = styles[styleName];\n\n\x09\x09\x09codes.set(style[0]\x2C style[1]);\n\x09\x09}\n\n\x09\x09Object.defineProperty(styles\x2C groupName\x2C {\n\x09\x09\x09value: group\x2C\n\x09\x09\x09enumerable: false\n\x09\x09});\n\x09}\n\n\x09Object.defineProperty(styles\x2C 'codes'\x2C {\n\x09\x09value: codes\x2C\n\x09\x09enumerable: false\n\x09});\n\n\x09styles.color.close = '\\u001B[39m';\n\x09styles.bgColor.close = '\\u001B[49m';\n\n\x09setLazyProperty(styles.color\x2C 'ansi'\x2C () => makeDynamicStyles(wrapAnsi16\x2C 'ansi16'\x2C ansi2ansi\x2C false));\n\x09setLazyProperty(styles.color\x2C 'ansi256'\x2C () => makeDynamicStyles(wrapAnsi256\x2C 'ansi256'\x2C ansi2ansi\x2C false));\n\x09setLazyProperty(styles.color\x2C 'ansi16m'\x2C () => makeDynamicStyles(wrapAnsi16m\x2C 'rgb'\x2C rgb2rgb\x2C false));\n\x09setLazyProperty(styles.bgColor\x2C 'ansi'\x2C () => makeDynamicStyles(wrapAnsi16\x2C 'ansi16'\x2C ansi2ansi\x2C true));\n\x09setLazyProperty(styles.bgColor\x2C 'ansi256'\x2C () => makeDynamicStyles(wrapAnsi256\x2C 'ansi256'\x2C ansi2ansi\x2C true));\n\x09setLazyProperty(styles.bgColor\x2C 'ansi16m'\x2C () => makeDynamicStyles(wrapAnsi16m\x2C 'rgb'\x2C rgb2rgb\x2C true));\n\n\x09return styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module\x2C 'exports'\x2C {\n\x09enumerable: true\x2C\n\x09get: assembleStyles\n});\n
code-source-info,0x36998915a126,159,0,4139,C0O0C4O4139,,
code-creation,Function,10,82208,0x36998915a4d6,116, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/ansi-styles/index.js:1:1,0x36998915a090,~
code-source-info,0x36998915a4d6,159,0,4139,C0O0C38O34C42O34C44O152C48O152C50O278C54O278C56O423C60O423C62O447C66O447C68O496C72O496C74O839C75O839C77O879C81O879C83O4052C87O4059C95O4074C102O4120C109O4059C115O4138,,
tick,0x1a3726358,82250,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989158748,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d98,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,82333,0x36998915bd8e,1070,assembleStyles /Users/carloscalvo/code/Coder/backend/entregas/node_modules/ansi-styles/index.js:61:24,0x36998915a158,~
code-source-info,0x36998915bd8e
code-creation,LazyCompile,10,82500,0x36998915d61e,52,setLazyProperty /Users/carloscalvo/code/Coder/backend/entregas/node_modules/ansi-styles/index.js:21:25,0x36998915a338,~
code-source-info,0x36998915d61e,159,496,786,C0O496C17O526C21O533C32O556C37O575C45O533C51O785,,
code-creation,Eval,10,82833,0x36998915f35e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/supports-color/index.js:1:1,0x36998915f1a8,~
script-source,160,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/supports-color/index.js,'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\x09hasFlag('no-colors') ||\n\x09hasFlag('color=false') ||\n\x09hasFlag('color=never')) {\n\x09forceColor = 0;\n} else if (hasFlag('color') ||\n\x09hasFlag('colors') ||\n\x09hasFlag('color=true') ||\n\x09hasFlag('color=always')) {\n\x09forceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\x09if (env.FORCE_COLOR === 'true') {\n\x09\x09forceColor = 1;\n\x09} else if (env.FORCE_COLOR === 'false') {\n\x09\x09forceColor = 0;\n\x09} else {\n\x09\x09forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR\x2C 10)\x2C 3);\n\x09}\n}\n\nfunction translateLevel(level) {\n\x09if (level === 0) {\n\x09\x09return false;\n\x09}\n\n\x09return {\n\x09\x09level\x2C\n\x09\x09hasBasic: true\x2C\n\x09\x09has256: level >= 2\x2C\n\x09\x09has16m: level >= 3\n\x09};\n}\n\nfunction supportsColor(haveStream\x2C streamIsTTY) {\n\x09if (forceColor === 0) {\n\x09\x09return 0;\n\x09}\n\n\x09if (hasFlag('color=16m') ||\n\x09\x09hasFlag('color=full') ||\n\x09\x09hasFlag('color=truecolor')) {\n\x09\x09return 3;\n\x09}\n\n\x09if (hasFlag('color=256')) {\n\x09\x09return 2;\n\x09}\n\n\x09if (haveStream && !streamIsTTY && forceColor === undefined) {\n\x09\x09return 0;\n\x09}\n\n\x09const min = forceColor || 0;\n\n\x09if (env.TERM === 'dumb') {\n\x09\x09return min;\n\x09}\n\n\x09if (process.platform === 'win32') {\n\x09\x09// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\x09\x09// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\x09\x09const osRelease = os.release().split('.');\n\x09\x09if (\n\x09\x09\x09Number(osRelease[0]) >= 10 &&\n\x09\x09\x09Number(osRelease[2]) >= 10586\n\x09\x09) {\n\x09\x09\x09return Number(osRelease[2]) >= 14931 ? 3 : 2;\n\x09\x09}\n\n\x09\x09return 1;\n\x09}\n\n\x09if ('CI' in env) {\n\x09\x09if (['TRAVIS'\x2C 'CIRCLECI'\x2C 'APPVEYOR'\x2C 'GITLAB_CI'\x2C 'GITHUB_ACTIONS'\x2C 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\x09\x09\x09return 1;\n\x09\x09}\n\n\x09\x09return min;\n\x09}\n\n\x09if ('TEAMCITY_VERSION' in env) {\n\x09\x09return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\x09}\n\n\x09if (env.COLORTERM === 'truecolor') {\n\x09\x09return 3;\n\x09}\n\n\x09if ('TERM_PROGRAM' in env) {\n\x09\x09const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0]\x2C 10);\n\n\x09\x09switch (env.TERM_PROGRAM) {\n\x09\x09\x09case 'iTerm.app':\n\x09\x09\x09\x09return version >= 3 ? 3 : 2;\n\x09\x09\x09case 'Apple_Terminal':\n\x09\x09\x09\x09return 2;\n\x09\x09\x09// No default\n\x09\x09}\n\x09}\n\n\x09if (/-256(color)?$/i.test(env.TERM)) {\n\x09\x09return 2;\n\x09}\n\n\x09if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\x09\x09return 1;\n\x09}\n\n\x09if ('COLORTERM' in env) {\n\x09\x09return 1;\n\x09}\n\n\x09return min;\n}\n\nfunction getSupportLevel(stream) {\n\x09const level = supportsColor(stream\x2C stream && stream.isTTY);\n\x09return translateLevel(level);\n}\n\nmodule.exports = {\n\x09supportsColor: getSupportLevel\x2C\n\x09stdout: translateLevel(supportsColor(true\x2C tty.isatty(1)))\x2C\n\x09stderr: translateLevel(supportsColor(true\x2C tty.isatty(2)))\n};\n
code-source-info,0x36998915f35e,160,0,2748,C0O0C4O2748,,
code-creation,Function,10,83000,0x36998915f60e,384, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/supports-color/index.js:1:1,0x36998915f2c8,~
code-source-info,0x36998915f60e,160,0,2748,C0O0C34O25C37O25C41O25C43O52C46O52C51O84C54O84C58O84C60O120C64O113C70O134C71O134C73O146C79O150C91O174C103O199C115O226C121O253C122O264C126O276C132O280C144O301C156O323C168O349C174O377C176O388C178O396C183O414C188O425C191O433C198O445C203O461C205O472C209O485C212O493C219O505C224O522C225O533C229O550C232O567C237O579C243O586C252O598C256O603C268O620C276O607C285O603C291O561C293O2572C300O2607C312O2672C320O2672C326O2648C332O2633C348O2733C356O2733C362O2709C368O2694C378O2587C383O2747,,
code-creation,Eval,10,83125,0x3699891602de,5, node:tty:1:1,0x3699891600c8,~
script-source,161,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  NumberIsInteger\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst net = require('net');\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\nconst errors = require('internal/errors');\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\nconst {\n  getColorDepth\x2C\n  hasColors\n} = require('internal/tty');\n\n// Lazy loaded for startup performance.\nlet readline;\n\nfunction isatty(fd) {\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\n         isTTY(fd);\n}\n\nfunction ReadStream(fd\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(fd\x2C options);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C true\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    highWaterMark: 0\x2C\n    readable: true\x2C\n    writable: false\x2C\n    handle: tty\x2C\n    ...options\n  });\n\n  this.isRaw = false;\n  this.isTTY = true;\n}\n\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\n\nReadStream.prototype.setRawMode = function(flag) {\n  flag = !!flag;\n  const err = this._handle.setRawMode(flag);\n  if (err) {\n    this.emit('error'\x2C errors.errnoException(err\x2C 'setRawMode'));\n    return this;\n  }\n  this.isRaw = flag;\n  return this;\n};\n\nfunction WriteStream(fd) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(fd);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C false\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    handle: tty\x2C\n    readable: false\x2C\n    writable: true\n  });\n\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\n  // this behavior has become expected due historical functionality on OS X\x2C\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\n  this._handle.setBlocking(true);\n\n  const winSize = new Array(2);\n  const err = this._handle.getWindowSize(winSize);\n  if (!err) {\n    this.columns = winSize[0];\n    this.rows = winSize[1];\n  }\n}\n\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\n\nWriteStream.prototype.isTTY = true;\n\nWriteStream.prototype.getColorDepth = getColorDepth;\n\nWriteStream.prototype.hasColors = hasColors;\n\nWriteStream.prototype._refreshSize = function() {\n  const oldCols = this.columns;\n  const oldRows = this.rows;\n  const winSize = new Array(2);\n  const err = this._handle.getWindowSize(winSize);\n  if (err) {\n    this.emit('error'\x2C errors.errnoException(err\x2C 'getWindowSize'));\n    return;\n  }\n  const { 0: newCols\x2C 1: newRows } = winSize;\n  if (oldCols !== newCols || oldRows !== newRows) {\n    this.columns = newCols;\n    this.rows = newRows;\n    this.emit('resize');\n  }\n};\n\n// Backwards-compat\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\n};\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\n};\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearLine(this\x2C dir\x2C callback);\n};\nWriteStream.prototype.clearScreenDown = function(callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearScreenDown(this\x2C callback);\n};\nWriteStream.prototype.getWindowSize = function() {\n  return [this.columns\x2C this.rows];\n};\n\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\n
code-source-info,0x3699891602de,161,0,5065,C0O0C4O5065,,
code-creation,Function,10,83291,0x3699891609c6,426, node:tty:1:1,0x369989160248,~
code-source-info,0x3699891609c6,161,0,5065,C0O0C53O1159C59O1168C65O1187C70O1239C76O1239C80O1239C82O1278C85O1278C90O1263C96O1268C102O1322C108O1322C112O1322C114O1398C117O1405C122O1358C128O1374C134O1453C140O1453C145O1422C150O1439C155O1523C156O1523C158O2128C161O2160C169O2175C174O2182C179O2128C184O2194C190O2231C195O2194C200O2241C203O2252C212O2273C216O3462C219O3495C227O3510C232O3517C237O3462C242O3529C248O3567C253O3529C258O3577C261O3589C267O3605C271O3614C274O3626C281O3650C285O3668C288O3680C295O3700C299O3714C302O3726C311O3749C315O4210C318O4222C327O4241C331O4385C334O4397C343O4418C347O4568C350O4580C359O4600C363O4743C366O4755C375O4781C379O4920C382O4932C391O4956C395O5011C402O5030C408O5038C414O5050C420O5026C425O5064,,
tick,0x1011ea584,83375,1,0x100d097b0,6,0x0,0x311ed227c8ec,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x36998915f63c,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989158754,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d98,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,83458,0x3699891619a6,5, node:internal/tty:1:1,0x369989161740,~
script-source,162,node:internal/tty,// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the "Software")\x2C to deal\n// in the Software without restriction\x2C including without limitation the rights\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\n// copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\n\nlet OSRelease;\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\n\n// Some entries were taken from `dircolors`\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\n// support more than 16 colors\x2C but this was not tested for.\n//\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\n// distribution of this file\x2C with or without modification\x2C are permitted\n// provided the copyright notice and this notice are preserved.\nconst TERM_ENVS = {\n  'eterm': COLORS_16\x2C\n  'cons25': COLORS_16\x2C\n  'console': COLORS_16\x2C\n  'cygwin': COLORS_16\x2C\n  'dtterm': COLORS_16\x2C\n  'gnome': COLORS_16\x2C\n  'hurd': COLORS_16\x2C\n  'jfbterm': COLORS_16\x2C\n  'konsole': COLORS_16\x2C\n  'kterm': COLORS_16\x2C\n  'mlterm': COLORS_16\x2C\n  'mosh': COLORS_16m\x2C\n  'putty': COLORS_16\x2C\n  'st': COLORS_16\x2C\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\n  'rxvt-unicode-24bit': COLORS_16m\x2C\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\n  'terminator': COLORS_16m\n};\n\nconst TERM_ENVS_REG_EXP = [\n  /ansi/\x2C\n  /color/\x2C\n  /linux/\x2C\n  /^con[0-9]*x[0-9]/\x2C\n  /^rxvt/\x2C\n  /^screen/\x2C\n  /^xterm/\x2C\n  /^vt100/\x2C\n];\n\nlet warned = false;\nfunction warnOnDeactivatedColors(env) {\n  if (warned)\n    return;\n  let name = '';\n  if (env.NODE_DISABLE_COLORS !== undefined)\n    name = 'NODE_DISABLE_COLORS';\n  if (env.NO_COLOR !== undefined) {\n    if (name !== '') {\n      name += "' and '";\n    }\n    name += 'NO_COLOR';\n  }\n\n  if (name !== '') {\n    process.emitWarning(\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\n      'Warning'\n    );\n    warned = true;\n  }\n}\n\n// The `getColorDepth` API got inspired by multiple sources such as\n// https://github.com/chalk/supports-color\x2C\n// https://github.com/isaacs/color-support.\nfunction getColorDepth(env = process.env) {\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\n  // consistency throughout the ecosystem.\n  if (env.FORCE_COLOR !== undefined) {\n    switch (env.FORCE_COLOR) {\n      case '':\n      case '1':\n      case 'true':\n        warnOnDeactivatedColors(env);\n        return COLORS_16;\n      case '2':\n        warnOnDeactivatedColors(env);\n        return COLORS_256;\n      case '3':\n        warnOnDeactivatedColors(env);\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n\n  if (env.NODE_DISABLE_COLORS !== undefined ||\n      // See https://no-color.org/\n      env.NO_COLOR !== undefined ||\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\n      // ANSI color control codes.\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n      env.TERM === 'dumb') {\n    return COLORS_2;\n  }\n\n  if (process.platform === 'win32') {\n    // Lazy load for startup performance.\n    if (OSRelease === undefined) {\n      const { release } = require('os');\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\n    }\n    // Windows 10 build 10586 is the first Windows release that supports 256\n    // colors. Windows 10 build 14931 is the first release that supports\n    // 16m/TrueColor.\n    if (+OSRelease[0] >= 10) {\n      const build = +OSRelease[2];\n      if (build >= 14931)\n        return COLORS_16m;\n      if (build >= 10586)\n        return COLORS_256;\n    }\n\n    return COLORS_16;\n  }\n\n  if (env.TMUX) {\n    return COLORS_256;\n  }\n\n  if (env.CI) {\n    if ('TRAVIS' in env || 'CIRCLECI' in env || 'APPVEYOR' in env ||\n      'GITLAB_CI' in env || env.CI_NAME === 'codeship') {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return RegExpPrototypeTest(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) ?\n      COLORS_16 : COLORS_2;\n  }\n\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      if (!env.TERM_PROGRAM_VERSION ||\n        RegExpPrototypeTest(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION)\n      ) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case 'HyperTerm':\n    case 'MacTerm':\n      return COLORS_16m;\n    case 'Apple_Terminal':\n      return COLORS_256;\n  }\n\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\n    return COLORS_16m;\n  }\n\n  if (env.TERM) {\n    if (RegExpPrototypeTest(/^xterm-256/\x2C env.TERM)) {\n      return COLORS_256;\n    }\n\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\n\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\n                           (term) => RegExpPrototypeTest(term\x2C termEnv))) {\n      return COLORS_16;\n    }\n  }\n  // Move 16 color COLORTERM below 16m and 256\n  if (env.COLORTERM) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nfunction hasColors(count\x2C env) {\n  if (env === undefined &&\n      (count === undefined || (typeof count === 'object' && count !== null))) {\n    env = count;\n    count = 16;\n  } else {\n    validateInteger(count\x2C 'count'\x2C 2);\n  }\n\n  return count <= 2 ** getColorDepth(env);\n}\n\nmodule.exports = {\n  getColorDepth\x2C\n  hasColors\n};\n
code-source-info,0x3699891619a6,162,0,6367,C0O0C4O6367,,
code-creation,Function,10,83708,0x369989161e16,358, node:internal/tty:1:1,0x369989161910,~
code-source-info,0x369989161e16,162,0,6367,C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2287C226O2379C232O1877C234O2420C328O2420C330O2541C331O2541C333O6316C340O6337C346O6354C352O6331C357O6366,,
code-creation,Eval,10,83916,0x36998916326e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-flag/index.js:1:1,0x369989163118,~
script-source,163,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-flag/index.js,'use strict';\n\nmodule.exports = (flag\x2C argv = process.argv) => {\n\x09const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\x09const position = argv.indexOf(prefix + flag);\n\x09const terminatorPosition = argv.indexOf('--');\n\x09return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n
code-source-info,0x36998916326e,163,0,330,C0O0C4O330,,
code-creation,Function,10,83958,0x36998916338e,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-flag/index.js:1:1,0x3699891631d8,~
code-source-info,0x36998916338e,163,0,330,C0O15C4O30C9O329,,
code-creation,LazyCompile,10,84000,0x369989163586,110,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/has-flag/index.js:3:18,0x3699891632a0,~
code-source-info,0x369989163586,163,32,328,C7O46C11O54C20O86C28O86C39O115C46O122C58O166C65O181C69O166C75O223C83O223C89O239C91O255C99O285C106O304C109O326,,
code-creation,LazyCompile,10,84041,0x369989163736,38,isatty node:tty:42:16,0x369989160310,~
code-source-info,0x369989163736,161,1549,1640,C0O1558C5O1565C12O1591C23O1602C30O1628C33O1628C37O1638,,
code-creation,LazyCompile,10,84083,0x369989164256,544,supportsColor /Users/carloscalvo/code/Coder/backend/entregas/node_modules/supports-color/index.js:44:23,0x36998915f3e0,~
code-source-info,0x
code-creation,LazyCompile,10,84166,0x3699891648ae,40,translateLevel /Users/carloscalvo/code/Coder/backend/entregas/node_modules/supports-color/index.js:31:24,0x36998915f390,~
code-source-info,0x3699891648ae,160,671,806,C0O682C1O692C6O703C7O716C8O722C15O733C21O774C30O796C39O804,,
code-creation,Eval,10,84416,0x369989164d2e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/util.js:1:1,0x369989164bd8,~
script-source,164,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/util.js,'use strict';\n\nconst stringReplaceAll = (string\x2C substring\x2C replacer) => {\n\x09let index = string.indexOf(substring);\n\x09if (index === -1) {\n\x09\x09return string;\n\x09}\n\n\x09const substringLength = substring.length;\n\x09let endIndex = 0;\n\x09let returnValue = '';\n\x09do {\n\x09\x09returnValue += string.substr(endIndex\x2C index - endIndex) + substring + replacer;\n\x09\x09endIndex = index + substringLength;\n\x09\x09index = string.indexOf(substring\x2C endIndex);\n\x09} while (index !== -1);\n\n\x09returnValue += string.substr(endIndex);\n\x09return returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string\x2C prefix\x2C postfix\x2C index) => {\n\x09let endIndex = 0;\n\x09let returnValue = '';\n\x09do {\n\x09\x09const gotCR = string[index - 1] === '\\r';\n\x09\x09returnValue += string.substr(endIndex\x2C (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\x09\x09endIndex = index + 1;\n\x09\x09index = string.indexOf('\\n'\x2C endIndex);\n\x09} while (index !== -1);\n\n\x09returnValue += string.substr(endIndex);\n\x09return returnValue;\n};\n\nmodule.exports = {\n\x09stringReplaceAll\x2C\n\x09stringEncaseCRLFWithFirstIndex\n};\n
code-source-info,0x369989164d2e,164,0,1035,C0O0C4O1035,,
code-creation,Function,10,84500,0x369989164ebe,35, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/util.js:1:1,0x369989164c98,~
code-source-info,0x369989164ebe,164,0,1035,C0O40C5O547C10O962C17O982C23O1001C29O977C34O1034,,
tick,0x101124b38,84625,0,0x0,0,0x0,0x369989158af6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148d98,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,84666,0x369989166696,10,Chalk /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:56:15,0x369989157c40,~
code-source-info,0x369989166696,158,1425,1469,C0O1438C5O1445C9O1467,,
code-creation,LazyCompile,10,84708,0x369989166946,133,chalkFactory /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:38:22,0x369989157d30,~
code-source-info,0x369989166946,158,966,1408,C0O966C8O994C9O994C11O999C21O999C26O1031C33O1046C37O1110C41O1117C54O1145C59O1117C65O1158C69O1165C77O1186C85O1165C91O1206C94O1212C103O1233C107O1344C110O1350C119O1370C121O1368C125O1384C128O1397C132O1406,,
code-creation,LazyCompile,10,84750,0x369989166b66,120,applyOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:21:22,0x369989157c90,~
code-source-info,0x369989166b66,158,430,809,C7O430C13O471C19O482C23O489C28O507C33O489C40O525C46O531C51O547C58O553C63O564C72O570C77O564C78O697C86O711C89O723C97O758C110O801C114O748C119O808,,
code-creation,Eval,10,84958,0x369989167856,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/color-support/index.js:1:1,0x3699891676c0,~
script-source,165,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/color-support/index.js,// call it on itself so we can test the export val for basic stuff\nmodule.exports = colorSupport({ alwaysReturn: true }\x2C colorSupport)\n\nfunction hasNone (obj\x2C options) {\n  obj.level = 0\n  obj.hasBasic = false\n  obj.has256 = false\n  obj.has16m = false\n  if (!options.alwaysReturn) {\n    return false\n  }\n  return obj\n}\n\nfunction hasBasic (obj) {\n  obj.hasBasic = true\n  obj.has256 = false\n  obj.has16m = false\n  obj.level = 1\n  return obj\n}\n\nfunction has256 (obj) {\n  obj.hasBasic = true\n  obj.has256 = true\n  obj.has16m = false\n  obj.level = 2\n  return obj\n}\n\nfunction has16m (obj) {\n  obj.hasBasic = true\n  obj.has256 = true\n  obj.has16m = true\n  obj.level = 3\n  return obj\n}\n\nfunction colorSupport (options\x2C obj) {\n  options = options || {}\n\n  obj = obj || {}\n\n  // if just requesting a specific level\x2C then return that.\n  if (typeof options.level === 'number') {\n    switch (options.level) {\n      case 0:\n        return hasNone(obj\x2C options)\n      case 1:\n        return hasBasic(obj)\n      case 2:\n        return has256(obj)\n      case 3:\n        return has16m(obj)\n    }\n  }\n\n  obj.level = 0\n  obj.hasBasic = false\n  obj.has256 = false\n  obj.has16m = false\n\n  if (typeof process === 'undefined' ||\n      !process ||\n      !process.stdout ||\n      !process.env ||\n      !process.platform) {\n    return hasNone(obj\x2C options)\n  }\n\n  var env = options.env || process.env\n  var stream = options.stream || process.stdout\n  var term = options.term || env.TERM || ''\n  var platform = options.platform || process.platform\n\n  if (!options.ignoreTTY && !stream.isTTY) {\n    return hasNone(obj\x2C options)\n  }\n\n  if (!options.ignoreDumb && term === 'dumb' && !env.COLORTERM) {\n    return hasNone(obj\x2C options)\n  }\n\n  if (platform === 'win32') {\n    return hasBasic(obj)\n  }\n\n  if (env.TMUX) {\n    return has256(obj)\n  }\n\n  if (!options.ignoreCI && (env.CI || env.TEAMCITY_VERSION)) {\n    if (env.TRAVIS) {\n      return has256(obj)\n    } else {\n      return hasNone(obj\x2C options)\n    }\n  }\n\n  // TODO: add more term programs\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      var ver = env.TERM_PROGRAM_VERSION || '0.'\n      if (/^[0-2]\\./.test(ver)) {\n        return has256(obj)\n      } else {\n        return has16m(obj)\n      }\n\n    case 'HyperTerm':\n    case 'Hyper':\n      return has16m(obj)\n\n    case 'MacTerm':\n      return has16m(obj)\n\n    case 'Apple_Terminal':\n      return has256(obj)\n  }\n\n  if (/^xterm-256/.test(term)) {\n    return has256(obj)\n  }\n\n  if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(term)) {\n    return hasBasic(obj)\n  }\n\n  if (env.COLORTERM) {\n    return hasBasic(obj)\n  }\n\n  return hasNone(obj\x2C options)\n}\n
code-source-info,0x369989167856,165,0,2644,C0O0C4O2644,,
code-creation,Function,10,85083,0x369989167ad6,50, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/color-support/index.js:1:1,0x3699891677c0,~
code-source-info,0x369989167ad6,165,0,2644,C0O0C34O84C39O84C44O82C49O2643,,
code-creation,LazyCompile,10,85166,0x3699891683ae,520,colorSupport /Users/carloscalvo/code/Coder/backend/entregas/node_modules/color-support/index.js:39:23,0x3699891679c8,~
code-source-info,0x3699891683ae,165,700,2643,C0O719C7O746C14O844C22O886C56O917C59O924C64O945C65O968C68O975C72O988C73O1011C76O1018C80O1029C81O1052C84O1059C88O1070C89O1084C90O1094C94O1100C95O1113C99O1123C100O1134C104O1144C105O1155C109O1166C116O1211C121O1229C125O1237C131O1254C135O1262C141O1276C145O1284C151O1300C154O1307C159O1328C160O1354C166O1361C170O1369C175O1396C181O1406C185O1414C190O1442C196O1454C205O1490C211O1502C215O1510C220O1535C226O1556C232O1569C235O1576C240O1597C241O1618C249O1637C254O1656C260O1673C263O1680C268O1701C269O1709C271O1722C276O1741C279O1748C283O1761C284O1777C290O1789C293O1796C297O1807C298O1828C304O1845C310O1855C316O1888C322O1904C325O1911C329O1922C330O1942C333O1949C338O1970C339O2030C381O2088C390O2123C395O2138C400O2138C407O2159C410O2166C414O2177C415O2201C418O2208C422O2219C423O2275C426O2282C430O2293C431O2321C434O2328C438O2339C439O2374C442O2381C446O2392C447O2400C452O2417C457O2417C464O2435C467O2442C471O2453C472O2461C477O2514C482O2514C489O2532C492O2539C496O2552C497O2568C503O2585C506O2592C510O2605C511O2613C514O2620C519O2641,,
code-creation,LazyCompile,10,85208,0x36998916880e,5,get /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10,0x1b9b88159410,~
code-source-info,0x36998916880e,129,392,404,C0O398C4O404,,
code-creation,LazyCompile,10,85250,0x3699891688fe,31,hasNone /Users/carloscalvo/code/Coder/backend/entregas/node_modules/color-support/index.js:4:18,0x369989167888,~
code-source-info,0x3699891688fe,165,153,317,C0O172C1O182C5O188C6O201C10O211C11O222C15O232C16O243C20O266C26O286C27O298C28O305C30O315,,
code-creation,Eval,10,85500,0x36998916964e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pretty-bytes/index.js:1:1,0x3699891694a8,~
script-source,166,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pretty-bytes/index.js,'use strict';\n\nconst BYTE_UNITS = [\n\x09'B'\x2C\n\x09'kB'\x2C\n\x09'MB'\x2C\n\x09'GB'\x2C\n\x09'TB'\x2C\n\x09'PB'\x2C\n\x09'EB'\x2C\n\x09'ZB'\x2C\n\x09'YB'\n];\n\nconst BIBYTE_UNITS = [\n\x09'B'\x2C\n\x09'kiB'\x2C\n\x09'MiB'\x2C\n\x09'GiB'\x2C\n\x09'TiB'\x2C\n\x09'PiB'\x2C\n\x09'EiB'\x2C\n\x09'ZiB'\x2C\n\x09'YiB'\n];\n\nconst BIT_UNITS = [\n\x09'b'\x2C\n\x09'kbit'\x2C\n\x09'Mbit'\x2C\n\x09'Gbit'\x2C\n\x09'Tbit'\x2C\n\x09'Pbit'\x2C\n\x09'Ebit'\x2C\n\x09'Zbit'\x2C\n\x09'Ybit'\n];\n\nconst BIBIT_UNITS = [\n\x09'b'\x2C\n\x09'kibit'\x2C\n\x09'Mibit'\x2C\n\x09'Gibit'\x2C\n\x09'Tibit'\x2C\n\x09'Pibit'\x2C\n\x09'Eibit'\x2C\n\x09'Zibit'\x2C\n\x09'Yibit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string\x2C the value is expected to be a locale-key (for example: `de`).\n- If locale is true\x2C the system default locale is used for translation.\n- If no value for locale is specified\x2C the number is returned unmodified.\n*/\nconst toLocaleString = (number\x2C locale\x2C options) => {\n\x09let result = number;\n\x09if (typeof locale === 'string' || Array.isArray(locale)) {\n\x09\x09result = number.toLocaleString(locale\x2C options);\n\x09} else if (locale === true || options !== undefined) {\n\x09\x09result = number.toLocaleString(undefined\x2C options);\n\x09}\n\n\x09return result;\n};\n\nmodule.exports = (number\x2C options) => {\n\x09if (!Number.isFinite(number)) {\n\x09\x09throw new TypeError(`Expected a finite number\x2C got ${typeof number}: ${number}`);\n\x09}\n\n\x09options = Object.assign({bits: false\x2C binary: false}\x2C options);\n\n\x09const UNITS = options.bits ?\n\x09\x09(options.binary ? BIBIT_UNITS : BIT_UNITS) :\n\x09\x09(options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\x09if (options.signed && number === 0) {\n\x09\x09return ` 0 ${UNITS[0]}`;\n\x09}\n\n\x09const isNegative = number < 0;\n\x09const prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\x09if (isNegative) {\n\x09\x09number = -number;\n\x09}\n\n\x09let localeOptions;\n\n\x09if (options.minimumFractionDigits !== undefined) {\n\x09\x09localeOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\x09}\n\n\x09if (options.maximumFractionDigits !== undefined) {\n\x09\x09localeOptions = Object.assign({maximumFractionDigits: options.maximumFractionDigits}\x2C localeOptions);\n\x09}\n\n\x09if (number < 1) {\n\x09\x09const numberString = toLocaleString(number\x2C options.locale\x2C localeOptions);\n\x09\x09return prefix + numberString + ' ' + UNITS[0];\n\x09}\n\n\x09const exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3)\x2C UNITS.length - 1);\n\x09// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\x09number /= Math.pow(options.binary ? 1024 : 1000\x2C exponent);\n\n\x09if (!localeOptions) {\n\x09\x09number = number.toPrecision(3);\n\x09}\n\n\x09const numberString = toLocaleString(Number(number)\x2C options.locale\x2C localeOptions);\n\n\x09const unit = UNITS[exponent];\n\n\x09return prefix + numberString + ' ' + unit;\n};\n
code-source-info,0x36998916964e,166,0,2540,C0O0C4O2540,,
code-creation,Function,10,85625,0x3699891699ae,60, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pretty-bytes/index.js:1:1,0x3699891695b8,~
code-source-info,0x3699891699ae,166,0,2540,C0O0C20O34C24O34C26O122C30O122C32O215C36O215C38O318C42O318C44O727C48O727C50O1025C54O1040C59O2539,,
code-creation,Eval,10,85875,0x36998916a3f6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js:1:1,0x36998916a290,~
script-source,167,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js,const hdr = require('hdr-histogram-js')\nconst histUtil = require('hdr-histogram-percentiles-obj')\n\nhdr.initWebAssemblySync()\n\nconst getHistograms = ({\n  latencies = hdr.build({\n    useWebAssembly: true\x2C\n    bitBucketSize: 64\x2C\n    autoResize: true\x2C\n    lowestDiscernibleValue: 1\x2C\n    highestTrackableValue: 10000\x2C\n    numberOfSignificantValueDigits: 5\n  })\x2C\n  requests = hdr.build({\n    useWebAssembly: true\x2C\n    bitBucketSize: 64\x2C\n    autoResize: true\x2C\n    lowestDiscernibleValue: 1\x2C\n    highestTrackableValue: 1000000\x2C\n    numberOfSignificantValueDigits: 3\n  })\x2C\n  throughput = hdr.build({\n    useWebAssembly: true\x2C\n    bitBucketSize: 64\x2C\n    autoResize: true\x2C\n    lowestDiscernibleValue: 1\x2C\n    highestTrackableValue: 100000000000\x2C\n    numberOfSignificantValueDigits: 3\n  })\n} = {}) => ({\n  latencies\x2C\n  requests\x2C\n  throughput\n})\n\nfunction encodeHist (h) {\n  if (h.__custom) return null\n\n  return hdr.encodeIntoCompressedBase64(h)\n}\n\nfunction decodeHist (str) {\n  if (!str) return null\n\n  return hdr.decodeFromCompressedBase64(str)\n}\n\nexports.getHistograms = getHistograms\nexports.encodeHist = encodeHist\nexports.decodeHist = decodeHist\nexports.histAsObj = histUtil.histAsObj\nexports.addPercentiles = histUtil.addPercentiles\nexports.percentiles = histUtil.percentiles\n
code-source-info,0x36998916a3f6,167,0,1270,C0O0C4O1270,,
code-creation,Function,10,85958,0x36998916a5d6,96, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js:1:1,0x36998916a360,~
code-source-info,0x36998916a5d6,167,0,1270,C0O0C18O12C21O12C25O12C27O57C30O57C35O99C38O103C43O103C47O148C52O1037C54O1059C58O1075C60O1094C64O1107C66O1126C70O1168C74O1157C78O1212C82O1201C86O1258C90O1247C95O1269,,
tick,0x1a37782bc,85958,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
scavenge,begin,0,86193,1643426345569
new,MemoryChunk,0x2f0e4e600000,262144
new,MemoryChunk,0x3a1dfed40000,262144
scavenge,end,0,86577,1643426345570
code-creation,Eval,10,86666,0x36998916bcee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:1:1,0x36998916bb58,~
script-source,168,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.JsHistogram = exports.WasmHistogram = exports.Recorder = exports.HistogramLogWriter = exports.encodeIntoCompressedBase64 = exports.decodeFromCompressedBase64 = exports.ByteBuffer = exports.build = exports.listTags = exports.HistogramLogReader = exports.PackedHistogram = exports.Float64Histogram = exports.Int32Histogram = exports.Int16Histogram = exports.Int8Histogram = exports.initWebAssemblySync = exports.initWebAssembly = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst ByteBuffer_1 = require("./ByteBuffer");\nexports.ByteBuffer = ByteBuffer_1.default;\nconst encoding_1 = require("./encoding");\nObject.defineProperty(exports\x2C "decodeFromCompressedBase64"\x2C { enumerable: true\x2C get: function () { return encoding_1.decodeFromCompressedBase64; } });\nObject.defineProperty(exports\x2C "encodeIntoCompressedBase64"\x2C { enumerable: true\x2C get: function () { return encoding_1.encodeIntoCompressedBase64; } });\nconst Float64Histogram_1 = require("./Float64Histogram");\nexports.Float64Histogram = Float64Histogram_1.default;\nconst HistogramLogReader_1 = require("./HistogramLogReader");\nexports.HistogramLogReader = HistogramLogReader_1.default;\nObject.defineProperty(exports\x2C "listTags"\x2C { enumerable: true\x2C get: function () { return HistogramLogReader_1.listTags; } });\nconst HistogramLogWriter_1 = require("./HistogramLogWriter");\nexports.HistogramLogWriter = HistogramLogWriter_1.default;\nconst Int16Histogram_1 = require("./Int16Histogram");\nexports.Int16Histogram = Int16Histogram_1.default;\nconst Int32Histogram_1 = require("./Int32Histogram");\nexports.Int32Histogram = Int32Histogram_1.default;\nconst Int8Histogram_1 = require("./Int8Histogram");\nexports.Int8Histogram = Int8Histogram_1.default;\nconst JsHistogram_1 = require("./JsHistogram");\nexports.JsHistogram = JsHistogram_1.default;\nconst PackedHistogram_1 = require("./PackedHistogram");\nexports.PackedHistogram = PackedHistogram_1.default;\nconst Recorder_1 = require("./Recorder");\nexports.Recorder = Recorder_1.default;\nconst wasm_1 = require("./wasm");\nObject.defineProperty(exports\x2C "initWebAssembly"\x2C { enumerable: true\x2C get: function () { return wasm_1.initWebAssembly; } });\nObject.defineProperty(exports\x2C "initWebAssemblySync"\x2C { enumerable: true\x2C get: function () { return wasm_1.initWebAssemblySync; } });\nObject.defineProperty(exports\x2C "WasmHistogram"\x2C { enumerable: true\x2C get: function () { return wasm_1.WasmHistogram; } });\nconst HistogramBuilder_1 = require("./HistogramBuilder");\nObject.defineProperty(exports\x2C "build"\x2C { enumerable: true\x2C get: function () { return HistogramBuilder_1.build; } });\n//# sourceMappingURL=index.js.map
code-source-info,0x36998916bcee,168,0,2926,C0O0C4O2926,,
code-creation,Function,10,86791,0x36998916c636,569, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:1:1,0x36998916bc58,~
code-source-info,0x36998916c
code-creation,Eval,10,87083,0x36998916d186,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:1:1,0x36998916cfd8,~
script-source,169,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst { pow\x2C floor } = Math;\nconst TWO_POW_32 = pow(2\x2C 32);\n/**\n * Mimic Java's ByteBufffer with big endian order\n */\nclass ByteBuffer {\n    constructor(data) {\n        this.position = 0;\n        this.data = data;\n        this.int32ArrayForConvert = new Uint32Array(1);\n        this.int8ArrayForConvert = new Uint8Array(this.int32ArrayForConvert.buffer);\n    }\n    static allocate(size = 16) {\n        return new ByteBuffer(new Uint8Array(size));\n    }\n    put(value) {\n        if (this.position === this.data.length) {\n            const oldArray = this.data;\n            this.data = new Uint8Array(this.data.length * 2);\n            this.data.set(oldArray);\n        }\n        this.data[this.position] = value;\n        this.position++;\n    }\n    putInt32(value) {\n        if (this.data.length - this.position < 4) {\n            const oldArray = this.data;\n            this.data = new Uint8Array(this.data.length * 2 + 4);\n            this.data.set(oldArray);\n        }\n        this.int32ArrayForConvert[0] = value;\n        this.data.set(this.int8ArrayForConvert.reverse()\x2C this.position);\n        this.position += 4;\n    }\n    putInt64(value) {\n        this.putInt32(floor(value / TWO_POW_32));\n        this.putInt32(value);\n    }\n    putArray(array) {\n        if (this.data.length - this.position < array.byteLength) {\n            const oldArray = this.data;\n            this.data = new Uint8Array(this.position + array.byteLength);\n            this.data.set(oldArray);\n        }\n        this.data.set(array\x2C this.position);\n        this.position += array.byteLength;\n    }\n    get() {\n        const value = this.data[this.position];\n        this.position++;\n        return value;\n    }\n    getInt32() {\n        this.int8ArrayForConvert.set(this.data.slice(this.position\x2C this.position + 4).reverse());\n        const value = this.int32ArrayForConvert[0];\n        this.position += 4;\n        return value;\n    }\n    getInt64() {\n        const high = this.getInt32();\n        const low = this.getInt32();\n        return high * TWO_POW_32 + low;\n    }\n    resetPosition() {\n        this.position = 0;\n    }\n}\nexports.default = ByteBuffer;\n//# sourceMappingURL=ByteBuffer.js.map
code-source-info,0x36998916d186,169,0,2252,C0O0C4O2252,,
code-creation,Function,10,87208,0x36998916d80e,151, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:1:1,0x36998916d0f0,~
code-source-info,0x36998916d80e,169,0,2252,C0O0C11O14C15O21C23O36C31O21C36O100C40O85C45O90C51O125C57O125C62O125C143O2184C145O2200C150O2251,,
tick,0x1a375c180,87208,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6ca,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,87458,0x36998916e416,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:1:1,0x36998916e240,~
script-source,170,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.encodeIntoCompressedBase64 = exports.decodeFromCompressedBase64 = exports.decompress = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst JsHistogram_1 = require("./JsHistogram");\nconst ByteBuffer_1 = require("./ByteBuffer");\nconst wasm_1 = require("./wasm");\n// @ts-ignore\nconst base64 = require("base64-js");\nconst JsHistogram_encoding_1 = require("./JsHistogram.encoding");\nconst V2CompressedEncodingCookieBase = 0x1c849304;\nconst compressedEncodingCookie = V2CompressedEncodingCookieBase | 0x10; // LSBit of wordsize byte indicates TLZE Encoding\nfunction decompress(data) {\n    const buffer = new ByteBuffer_1.default(data);\n    const initialTargetPosition = buffer.position;\n    const cookie = buffer.getInt32();\n    if ((cookie & ~0xf0) !== V2CompressedEncodingCookieBase) {\n        throw new Error("Encoding not supported\x2C only V2 is supported");\n    }\n    const lengthOfCompressedContents = buffer.getInt32();\n    const uncompressedBuffer = JsHistogram_encoding_1.inflate(buffer.data.slice(initialTargetPosition + 8\x2C initialTargetPosition + 8 + lengthOfCompressedContents));\n    return uncompressedBuffer;\n}\nexports.decompress = decompress;\nexports.decodeFromCompressedBase64 = (base64String\x2C bitBucketSize = 32\x2C useWebAssembly = false\x2C minBarForHighestTrackableValue = 0) => {\n    const data = base64.toByteArray(base64String.trim());\n    const uncompressedData = decompress(data);\n    if (useWebAssembly) {\n        return wasm_1.WasmHistogram.decode(uncompressedData\x2C bitBucketSize\x2C minBarForHighestTrackableValue);\n    }\n    return JsHistogram_1.JsHistogram.decode(uncompressedData\x2C bitBucketSize\x2C minBarForHighestTrackableValue);\n};\nfunction encodeWasmIntoCompressedBase64(compressionLevel) {\n    const compressionOptions = compressionLevel\n        ? { level: compressionLevel }\n        : {};\n    const self = this;\n    const targetBuffer = ByteBuffer_1.default.allocate();\n    targetBuffer.putInt32(compressedEncodingCookie);\n    const uncompressedData = self.encode();\n    const compressedData = JsHistogram_encoding_1.deflate(uncompressedData\x2C compressionOptions);\n    targetBuffer.putInt32(compressedData.byteLength);\n    targetBuffer.putArray(compressedData);\n    return base64.fromByteArray(targetBuffer.data);\n}\nwasm_1.WasmHistogram.prototype.encodeIntoCompressedBase64 = encodeWasmIntoCompressedBase64;\nexports.encodeIntoCompressedBase64 = (histogram\x2C compressionLevel) => {\n    if (histogram instanceof wasm_1.WasmHistogram) {\n        return histogram.encodeIntoCompressedBase64(compressionLevel);\n    }\n    if (histogram instanceof JsHistogram_1.JsHistogram) {\n        return histogram.encodeIntoCompressedBase64(compressionLevel);\n    }\n    throw new Error("Unsupported Histogram implementation");\n};\n//# sourceMappingURL=encoding.js.map
code-source-info,0x36998916e416,170,0,3078,C0O0C4O3078,,
code-creation,Function,10,87583,0x36998916e71e,183, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:1:1,0x36998916e380,~
code-source-info,0x36998916e71e,170,0,3078,C0O0C37O14C41O21C49O36C57O21C62O77C64O170C70O149C76O112C80O472C83O472C87O472C89O519C92O519C96O519C98O559C101O559C105O559C107O607C110O607C114O607C116O660C119O660C123O660C125O734C131O734C133O779C135O810C138O779C140O1434C142O1453C146O1467C150O1502C154O2549C157O2556C162O2570C169O2607C173O2641C177O2676C182O3077,,
code-creation,Eval,10,88125,0x3699891700a6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:1:1,0x36998916fe68,~
script-source,171,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.default = exports.JsHistogram = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst RecordedValuesIterator_1 = require("./RecordedValuesIterator");\nconst PercentileIterator_1 = require("./PercentileIterator");\nconst formatters_1 = require("./formatters");\nconst ulp_1 = require("./ulp");\nconst Histogram_1 = require("./Histogram");\nconst { pow\x2C floor\x2C ceil\x2C log2\x2C max\x2C min } = Math;\nclass JsHistogram {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        this.autoResize = false;\n        this.startTimeStampMsec = Number.MAX_SAFE_INTEGER;\n        this.endTimeStampMsec = 0;\n        this.tag = Histogram_1.NO_TAG;\n        this.maxValue = 0;\n        this.minNonZeroValue = Number.MAX_SAFE_INTEGER;\n        this.identity = 0;\n        this.highestTrackableValue = 0;\n        this.lowestDiscernibleValue = 0;\n        this.numberOfSignificantValueDigits = 0;\n        this.bucketCount = 0;\n        this.subBucketCount = 0;\n        this.countsArrayLength = 0;\n        this.wordSizeInBytes = 0;\n        // Verify argument validity\n        if (lowestDiscernibleValue < 1) {\n            throw new Error("lowestDiscernibleValue must be >= 1");\n        }\n        if (highestTrackableValue < 2 * lowestDiscernibleValue) {\n            throw new Error(`highestTrackableValue must be >= 2 * lowestDiscernibleValue ( 2 * ${lowestDiscernibleValue} )`);\n        }\n        if (numberOfSignificantValueDigits < 0 ||\n            numberOfSignificantValueDigits > 5) {\n            throw new Error("numberOfSignificantValueDigits must be between 0 and 5");\n        }\n        this.identity = JsHistogram.identityBuilder++;\n        this.init(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    }\n    incrementTotalCount() {\n        this._totalCount++;\n    }\n    addToTotalCount(value) {\n        this._totalCount += value;\n    }\n    setTotalCount(value) {\n        this._totalCount = value;\n    }\n    /**\n     * Get the total count of all recorded values in the histogram\n     * @return the total count of all recorded values in the histogram\n     */\n    get totalCount() {\n        return this._totalCount;\n    }\n    updatedMaxValue(value) {\n        const internalValue = value + this.unitMagnitudeMask;\n        this.maxValue = internalValue;\n    }\n    updateMinNonZeroValue(value) {\n        if (value <= this.unitMagnitudeMask) {\n            return;\n        }\n        const internalValue = floor(value / this.lowestDiscernibleValueRounded) *\n            this.lowestDiscernibleValueRounded;\n        this.minNonZeroValue = internalValue;\n    }\n    init(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        this.lowestDiscernibleValue = lowestDiscernibleValue;\n        this.highestTrackableValue = highestTrackableValue;\n        this.numberOfSignificantValueDigits = numberOfSignificantValueDigits;\n        /*\n         * Given a 3 decimal point accuracy\x2C the expectation is obviously for "+/- 1 unit at 1000". It also means that\n         * it's "ok to be +/- 2 units at 2000". The "tricky" thing is that it is NOT ok to be +/- 2 units at 1999. Only\n         * starting at 2000. So internally\x2C we need to maintain single unit resolution to 2x 10^decimalPoints.\n         */\n        const largestValueWithSingleUnitResolution = 2 * floor(pow(10\x2C numberOfSignificantValueDigits));\n        this.unitMagnitude = floor(log2(lowestDiscernibleValue));\n        this.lowestDiscernibleValueRounded = pow(2\x2C this.unitMagnitude);\n        this.unitMagnitudeMask = this.lowestDiscernibleValueRounded - 1;\n        // We need to maintain power-of-two subBucketCount (for clean direct indexing) that is large enough to\n        // provide unit resolution to at least largestValueWithSingleUnitResolution. So figure out\n        // largestValueWithSingleUnitResolution's nearest power-of-two (rounded up)\x2C and use that:\n        const subBucketCountMagnitude = ceil(log2(largestValueWithSingleUnitResolution));\n        this.subBucketHalfCountMagnitude =\n            (subBucketCountMagnitude > 1 ? subBucketCountMagnitude : 1) - 1;\n        this.subBucketCount = pow(2\x2C this.subBucketHalfCountMagnitude + 1);\n        this.subBucketHalfCount = this.subBucketCount / 2;\n        this.subBucketMask =\n            (floor(this.subBucketCount) - 1) * pow(2\x2C this.unitMagnitude);\n        this.establishSize(highestTrackableValue);\n        this.leadingZeroCountBase =\n            53 - this.unitMagnitude - this.subBucketHalfCountMagnitude - 1;\n        this.percentileIterator = new PercentileIterator_1.default(this\x2C 1);\n        this.recordedValuesIterator = new RecordedValuesIterator_1.default(this);\n    }\n    /**\n     * The buckets (each of which has subBucketCount sub-buckets\x2C here assumed to be 2048 as an example) overlap:\n     *\n     * <pre>\n     * The 0'th bucket covers from 0...2047 in multiples of 1\x2C using all 2048 sub-buckets\n     * The 1'th bucket covers from 2048..4097 in multiples of 2\x2C using only the top 1024 sub-buckets\n     * The 2'th bucket covers from 4096..8191 in multiple of 4\x2C using only the top 1024 sub-buckets\n     * ...\n     * </pre>\n     *\n     * Bucket 0 is "special" here. It is the only one that has 2048 entries. All the rest have 1024 entries (because\n     * their bottom half overlaps with and is already covered by the all of the previous buckets put together). In other\n     * words\x2C the k'th bucket could represent 0 * 2^k to 2048 * 2^k in 2048 buckets with 2^k precision\x2C but the midpoint\n     * of 1024 * 2^k = 2048 * 2^(k-1) = the k-1'th bucket's end\x2C so we would use the previous bucket for those lower\n     * values as it has better precision.\n     */\n    establishSize(newHighestTrackableValue) {\n        // establish counts array length:\n        this.countsArrayLength = this.determineArrayLengthNeeded(newHighestTrackableValue);\n        // establish exponent range needed to support the trackable value with no overflow:\n        this.bucketCount = this.getBucketsNeededToCoverValue(newHighestTrackableValue);\n        // establish the new highest trackable value:\n        this.highestTrackableValue = newHighestTrackableValue;\n    }\n    determineArrayLengthNeeded(highestTrackableValue) {\n        if (highestTrackableValue < 2 * this.lowestDiscernibleValue) {\n            throw new Error("highestTrackableValue (" +\n                highestTrackableValue +\n                ") cannot be < (2 * lowestDiscernibleValue)");\n        }\n        //determine counts array length needed:\n        const countsArrayLength = this.getLengthForNumberOfBuckets(this.getBucketsNeededToCoverValue(highestTrackableValue));\n        return countsArrayLength;\n    }\n    /**\n     * If we have N such that subBucketCount * 2^N > max value\x2C we need storage for N+1 buckets\x2C each with enough\n     * slots to hold the top half of the subBucketCount (the lower half is covered by previous buckets)\x2C and the +1\n     * being used for the lower half of the 0'th bucket. Or\x2C equivalently\x2C we need 1 more bucket to capture the max\n     * value if we consider the sub-bucket length to be halved.\n     */\n    getLengthForNumberOfBuckets(numberOfBuckets) {\n        const lengthNeeded = (numberOfBuckets + 1) * (this.subBucketCount / 2);\n        return lengthNeeded;\n    }\n    getBucketsNeededToCoverValue(value) {\n        // the k'th bucket can express from 0 * 2^k to subBucketCount * 2^k in units of 2^k\n        let smallestUntrackableValue = this.subBucketCount * pow(2\x2C this.unitMagnitude);\n        // always have at least 1 bucket\n        let bucketsNeeded = 1;\n        while (smallestUntrackableValue <= value) {\n            if (smallestUntrackableValue > Number.MAX_SAFE_INTEGER / 2) {\n                // TODO check array max size in JavaScript\n                // next shift will overflow\x2C meaning that bucket could represent values up to ones greater than\n                // Number.MAX_SAFE_INTEGER\x2C so it's the last bucket\n                return bucketsNeeded + 1;\n            }\n            smallestUntrackableValue = smallestUntrackableValue * 2;\n            bucketsNeeded++;\n        }\n        return bucketsNeeded;\n    }\n    /**\n     * Record a value in the histogram\n     *\n     * @param value The value to be recorded\n     * @throws may throw Error if value is exceeds highestTrackableValue\n     */\n    recordValue(value) {\n        this.recordSingleValue(value);\n    }\n    recordSingleValue(value) {\n        const countsIndex = this.countsArrayIndex(value);\n        if (countsIndex >= this.countsArrayLength) {\n            this.handleRecordException(1\x2C value);\n        }\n        else {\n            this.incrementCountAtIndex(countsIndex);\n        }\n        this.updateMinAndMax(value);\n        this.incrementTotalCount();\n    }\n    handleRecordException(count\x2C value) {\n        if (!this.autoResize) {\n            throw new Error("Value " + value + " is outside of histogram covered range");\n        }\n        this.resize(value);\n        var countsIndex = this.countsArrayIndex(value);\n        this.addToCountAtIndex(countsIndex\x2C count);\n        this.highestTrackableValue = this.highestEquivalentValue(this.valueFromIndex(this.countsArrayLength - 1));\n    }\n    countsArrayIndex(value) {\n        if (value < 0) {\n            throw new Error("Histogram recorded value cannot be negative.");\n        }\n        const bucketIndex = this.getBucketIndex(value);\n        const subBucketIndex = this.getSubBucketIndex(value\x2C bucketIndex);\n        return this.computeCountsArrayIndex(bucketIndex\x2C subBucketIndex);\n    }\n    computeCountsArrayIndex(bucketIndex\x2C subBucketIndex) {\n        // TODO\n        //assert(subBucketIndex < subBucketCount);\n        //assert(bucketIndex == 0 || (subBucketIndex >= subBucketHalfCount));\n        // Calculate the index for the first entry that will be used in the bucket (halfway through subBucketCount).\n        // For bucketIndex 0\x2C all subBucketCount entries may be used\x2C but bucketBaseIndex is still set in the middle.\n        const bucketBaseIndex = (bucketIndex + 1) * pow(2\x2C this.subBucketHalfCountMagnitude);\n        // Calculate the offset in the bucket. This subtraction will result in a positive value in all buckets except\n        // the 0th bucket (since a value in that bucket may be less than half the bucket's 0 to subBucketCount range).\n        // However\x2C this works out since we give bucket 0 twice as much space.\n        const offsetInBucket = subBucketIndex - this.subBucketHalfCount;\n        // The following is the equivalent of ((subBucketIndex  - subBucketHalfCount) + bucketBaseIndex;\n        return bucketBaseIndex + offsetInBucket;\n    }\n    /**\n     * @return the lowest (and therefore highest precision) bucket index that can represent the value\n     */\n    getBucketIndex(value) {\n        // Calculates the number of powers of two by which the value is greater than the biggest value that fits in\n        // bucket 0. This is the bucket index since each successive bucket can hold a value 2x greater.\n        // The mask maps small values to bucket 0.\n        // return this.leadingZeroCountBase - Long.numberOfLeadingZeros(value | subBucketMask);\n        return max(floor(log2(value)) -\n            this.subBucketHalfCountMagnitude -\n            this.unitMagnitude\x2C 0);\n    }\n    getSubBucketIndex(value\x2C bucketIndex) {\n        // For bucketIndex 0\x2C this is just value\x2C so it may be anywhere in 0 to subBucketCount.\n        // For other bucketIndex\x2C this will always end up in the top half of subBucketCount: assume that for some bucket\n        // k > 0\x2C this calculation will yield a value in the bottom half of 0 to subBucketCount. Then\x2C because of how\n        // buckets overlap\x2C it would have also been in the top half of bucket k-1\x2C and therefore would have\n        // returned k-1 in getBucketIndex(). Since we would then shift it one fewer bits here\x2C it would be twice as big\x2C\n        // and therefore in the top half of subBucketCount.\n        return floor(value / pow(2\x2C bucketIndex + this.unitMagnitude));\n    }\n    updateMinAndMax(value) {\n        if (value > this.maxValue) {\n            this.updatedMaxValue(value);\n        }\n        if (value < this.minNonZeroValue && value !== 0) {\n            this.updateMinNonZeroValue(value);\n        }\n    }\n    /**\n     * Get the value at a given percentile.\n     * When the given percentile is &gt; 0.0\x2C the value returned is the value that the given\n     * percentage of the overall recorded value entries in the histogram are either smaller than\n     * or equivalent to. When the given percentile is 0.0\x2C the value returned is the value that all value\n     * entries in the histogram are either larger than or equivalent to.\n     * <p>\n     * Note that two values are "equivalent" in this statement if\n     * {@link org.HdrHistogram.JsHistogram#valuesAreEquivalent} would return true.\n     *\n     * @param percentile  The percentile for which to return the associated value\n     * @return The value that the given percentage of the overall recorded value entries in the\n     * histogram are either smaller than or equivalent to. When the percentile is 0.0\x2C returns the\n     * value that all value entries in the histogram are either larger than or equivalent to.\n     */\n    getValueAtPercentile(percentile) {\n        const requestedPercentile = min(percentile\x2C 100); // Truncate down to 100%\n        // round count up to nearest integer\x2C to ensure that the largest value that the requested percentile\n        // of overall recorded values is actually included. However\x2C this must be done with care:\n        //\n        // First\x2C Compute fp value for count at the requested percentile. Note that fp result end up\n        // being 1 ulp larger than the correct integer count for this percentile:\n        const fpCountAtPercentile = (requestedPercentile / 100.0) * this.totalCount;\n        // Next\x2C round up\x2C but make sure to prevent <= 1 ulp inaccurancies in the above fp math from\n        // making us skip a count:\n        const countAtPercentile = max(ceil(fpCountAtPercentile - ulp_1.default(fpCountAtPercentile))\x2C // round up\n        1 // Make sure we at least reach the first recorded entry\n        );\n        let totalToCurrentIndex = 0;\n        for (let i = 0; i < this.countsArrayLength; i++) {\n            totalToCurrentIndex += this.getCountAtIndex(i);\n            if (totalToCurrentIndex >= countAtPercentile) {\n                var valueAtIndex = this.valueFromIndex(i);\n                return percentile === 0.0\n                    ? this.lowestEquivalentValue(valueAtIndex)\n                    : this.highestEquivalentValue(valueAtIndex);\n            }\n        }\n        return 0;\n    }\n    valueFromIndexes(bucketIndex\x2C subBucketIndex) {\n        return subBucketIndex * pow(2\x2C bucketIndex + this.unitMagnitude);\n    }\n    valueFromIndex(index) {\n        let bucketIndex = floor(index / this.subBucketHalfCount) - 1;\n        let subBucketIndex = (index % this.subBucketHalfCount) + this.subBucketHalfCount;\n        if (bucketIndex < 0) {\n            subBucketIndex -= this.subBucketHalfCount;\n            bucketIndex = 0;\n        }\n        return this.valueFromIndexes(bucketIndex\x2C subBucketIndex);\n    }\n    /**\n     * Get the lowest value that is equivalent to the given value within the histogram's resolution.\n     * Where "equivalent" means that value samples recorded for any two\n     * equivalent values are counted in a common total count.\n     *\n     * @param value The given value\n     * @return The lowest value that is equivalent to the given value within the histogram's resolution.\n     */\n    lowestEquivalentValue(value) {\n        const bucketIndex = this.getBucketIndex(value);\n        const subBucketIndex = this.getSubBucketIndex(value\x2C bucketIndex);\n        const thisValueBaseLevel = this.valueFromIndexes(bucketIndex\x2C subBucketIndex);\n        return thisValueBaseLevel;\n    }\n    /**\n     * Get the highest value that is equivalent to the given value within the histogram's resolution.\n     * Where "equivalent" means that value samples recorded for any two\n     * equivalent values are counted in a common total count.\n     *\n     * @param value The given value\n     * @return The highest value that is equivalent to the given value within the histogram's resolution.\n     */\n    highestEquivalentValue(value) {\n        return this.nextNonEquivalentValue(value) - 1;\n    }\n    /**\n     * Get the next value that is not equivalent to the given value within the histogram's resolution.\n     * Where "equivalent" means that value samples recorded for any two\n     * equivalent values are counted in a common total count.\n     *\n     * @param value The given value\n     * @return The next value that is not equivalent to the given value within the histogram's resolution.\n     */\n    nextNonEquivalentValue(value) {\n        return (this.lowestEquivalentValue(value) + this.sizeOfEquivalentValueRange(value));\n    }\n    /**\n     * Get the size (in value units) of the range of values that are equivalent to the given value within the\n     * histogram's resolution. Where "equivalent" means that value samples recorded for any two\n     * equivalent values are counted in a common total count.\n     *\n     * @param value The given value\n     * @return The size of the range of values equivalent to the given value.\n     */\n    sizeOfEquivalentValueRange(value) {\n        const bucketIndex = this.getBucketIndex(value);\n        const subBucketIndex = this.getSubBucketIndex(value\x2C bucketIndex);\n        const distanceToNextValue = pow(2\x2C this.unitMagnitude +\n            (subBucketIndex >= this.subBucketCount ? bucketIndex + 1 : bucketIndex));\n        return distanceToNextValue;\n    }\n    /**\n     * Get a value that lies in the middle (rounded up) of the range of values equivalent the given value.\n     * Where "equivalent" means that value samples recorded for any two\n     * equivalent values are counted in a common total count.\n     *\n     * @param value The given value\n     * @return The value lies in the middle (rounded up) of the range of values equivalent the given value.\n     */\n    medianEquivalentValue(value) {\n        return (this.lowestEquivalentValue(value) +\n            floor(this.sizeOfEquivalentValueRange(value) / 2));\n    }\n    /**\n     * Get the computed mean value of all recorded values in the histogram\n     *\n     * @return the mean value (in value units) of the histogram data\n     */\n    get mean() {\n        if (this.totalCount === 0) {\n            return 0;\n        }\n        this.recordedValuesIterator.reset();\n        let totalValue = 0;\n        while (this.recordedValuesIterator.hasNext()) {\n            const iterationValue = this.recordedValuesIterator.next();\n            totalValue +=\n                this.medianEquivalentValue(iterationValue.valueIteratedTo) *\n                    iterationValue.countAtValueIteratedTo;\n        }\n        return totalValue / this.totalCount;\n    }\n    getStdDeviation(mean = this.mean) {\n        if (this.totalCount === 0) {\n            return 0;\n        }\n        let geometric_deviation_total = 0.0;\n        this.recordedValuesIterator.reset();\n        while (this.recordedValuesIterator.hasNext()) {\n            const iterationValue = this.recordedValuesIterator.next();\n            const deviation = this.medianEquivalentValue(iterationValue.valueIteratedTo) - mean;\n            geometric_deviation_total +=\n                deviation * deviation * iterationValue.countAddedInThisIterationStep;\n        }\n        const std_deviation = Math.sqrt(geometric_deviation_total / this.totalCount);\n        return std_deviation;\n    }\n    /**\n     * Get the computed standard deviation of all recorded values in the histogram\n     *\n     * @return the standard deviation (in value units) of the histogram data\n     */\n    get stdDeviation() {\n        if (this.totalCount === 0) {\n            return 0;\n        }\n        const mean = this.mean;\n        let geometric_deviation_total = 0.0;\n        this.recordedValuesIterator.reset();\n        while (this.recordedValuesIterator.hasNext()) {\n            const iterationValue = this.recordedValuesIterator.next();\n            const deviation = this.medianEquivalentValue(iterationValue.valueIteratedTo) - mean;\n            geometric_deviation_total +=\n                deviation * deviation * iterationValue.countAddedInThisIterationStep;\n        }\n        const std_deviation = Math.sqrt(geometric_deviation_total / this.totalCount);\n        return std_deviation;\n    }\n    /**\n     * Produce textual representation of the value distribution of histogram data by percentile. The distribution is\n     * output with exponentially increasing resolution\x2C with each exponentially decreasing half-distance containing\n     * <i>dumpTicksPerHalf</i> percentile reporting tick points.\n     *\n     * @param printStream    Stream into which the distribution will be output\n     * <p>\n     * @param percentileTicksPerHalfDistance  The number of reporting points per exponentially decreasing half-distance\n     * <p>\n     * @param outputValueUnitScalingRatio    The scaling factor by which to divide histogram recorded values units in\n     *                                     output\n     * @param useCsvFormat  Output in CSV format if true. Otherwise use plain text form.\n     */\n    outputPercentileDistribution(percentileTicksPerHalfDistance = 5\x2C outputValueUnitScalingRatio = 1\x2C useCsvFormat = false) {\n        let result = "";\n        if (useCsvFormat) {\n            result += '"Value"\x2C"Percentile"\x2C"TotalCount"\x2C"1/(1-Percentile)"\\n';\n        }\n        else {\n            result += "       Value     Percentile TotalCount 1/(1-Percentile)\\n\\n";\n        }\n        const iterator = this.percentileIterator;\n        iterator.reset(percentileTicksPerHalfDistance);\n        let lineFormatter;\n        let lastLineFormatter;\n        if (useCsvFormat) {\n            const valueFormatter = formatters_1.floatFormatter(0\x2C this.numberOfSignificantValueDigits);\n            const percentileFormatter = formatters_1.floatFormatter(0\x2C 12);\n            const lastFormatter = formatters_1.floatFormatter(0\x2C 2);\n            lineFormatter = (iterationValue) => valueFormatter(iterationValue.valueIteratedTo / outputValueUnitScalingRatio) +\n                "\x2C" +\n                percentileFormatter(iterationValue.percentileLevelIteratedTo / 100) +\n                "\x2C" +\n                iterationValue.totalCountToThisValue +\n                "\x2C" +\n                lastFormatter(1 / (1 - iterationValue.percentileLevelIteratedTo / 100)) +\n                "\\n";\n            lastLineFormatter = (iterationValue) => valueFormatter(iterationValue.valueIteratedTo / outputValueUnitScalingRatio) +\n                "\x2C" +\n                percentileFormatter(iterationValue.percentileLevelIteratedTo / 100) +\n                "\x2C" +\n                iterationValue.totalCountToThisValue +\n                "\x2CInfinity\\n";\n        }\n        else {\n            const valueFormatter = formatters_1.floatFormatter(12\x2C this.numberOfSignificantValueDigits);\n            const percentileFormatter = formatters_1.floatFormatter(2\x2C 12);\n            const totalCountFormatter = formatters_1.integerFormatter(10);\n            const lastFormatter = formatters_1.floatFormatter(14\x2C 2);\n            lineFormatter = (iterationValue) => valueFormatter(iterationValue.valueIteratedTo / outputValueUnitScalingRatio) +\n                " " +\n                percentileFormatter(iterationValue.percentileLevelIteratedTo / 100) +\n                " " +\n                totalCountFormatter(iterationValue.totalCountToThisValue) +\n                " " +\n                lastFormatter(1 / (1 - iterationValue.percentileLevelIteratedTo / 100)) +\n                "\\n";\n            lastLineFormatter = (iterationValue) => valueFormatter(iterationValue.valueIteratedTo / outputValueUnitScalingRatio) +\n                " " +\n                percentileFormatter(iterationValue.percentileLevelIteratedTo / 100) +\n                " " +\n                totalCountFormatter(iterationValue.totalCountToThisValue) +\n                "\\n";\n        }\n        while (iterator.hasNext()) {\n            const iterationValue = iterator.next();\n            if (iterationValue.percentileLevelIteratedTo < 100) {\n                result += lineFormatter(iterationValue);\n            }\n            else {\n                result += lastLineFormatter(iterationValue);\n            }\n        }\n        if (!useCsvFormat) {\n            // Calculate and output mean and std. deviation.\n            // Note: mean/std. deviation numbers are very often completely irrelevant when\n            // data is extremely non-normal in distribution (e.g. in cases of strong multi-modal\n            // response time distribution associated with GC pauses). However\x2C reporting these numbers\n            // can be very useful for contrasting with the detailed percentile distribution\n            // reported by outputPercentileDistribution(). It is not at all surprising to find\n            // percentile distributions where results fall many tens or even hundreds of standard\n            // deviations away from the mean - such results simply indicate that the data sampled\n            // exhibits a very non-normal distribution\x2C highlighting situations for which the std.\n            // deviation metric is a useless indicator.\n            //\n            const formatter = formatters_1.floatFormatter(12\x2C this.numberOfSignificantValueDigits);\n            const _mean = this.mean;\n            const mean = formatter(_mean / outputValueUnitScalingRatio);\n            const std_deviation = formatter(this.getStdDeviation(_mean) / outputValueUnitScalingRatio);\n            const max = formatter(this.maxValue / outputValueUnitScalingRatio);\n            const intFormatter = formatters_1.integerFormatter(12);\n            const totalCount = intFormatter(this.totalCount);\n            const bucketCount = intFormatter(this.bucketCount);\n            const subBucketCount = intFormatter(this.subBucketCount);\n            result += `#[Mean    = ${mean}\x2C StdDeviation   = ${std_deviation}]\n#[Max     = ${max}\x2C Total count    = ${totalCount}]\n#[Buckets = ${bucketCount}\x2C SubBuckets     = ${subBucketCount}]\n`;\n        }\n        return result;\n    }\n    get summary() {\n        return Histogram_1.toSummary(this);\n    }\n    toJSON() {\n        return this.summary;\n    }\n    inspect() {\n        return this.toString();\n    }\n    [Symbol.for("nodejs.util.inspect.custom")]() {\n        return this.toString();\n    }\n    /**\n     * Provide a (conservatively high) estimate of the Histogram's total footprint in bytes\n     *\n     * @return a (conservatively high) estimate of the Histogram's total footprint in bytes\n     */\n    get estimatedFootprintInBytes() {\n        return this._getEstimatedFootprintInBytes();\n    }\n    recordSingleValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples) {\n        this.recordSingleValue(value);\n        if (expectedIntervalBetweenValueSamples <= 0) {\n            return;\n        }\n        for (let missingValue = value - expectedIntervalBetweenValueSamples; missingValue >= expectedIntervalBetweenValueSamples; missingValue -= expectedIntervalBetweenValueSamples) {\n            this.recordSingleValue(missingValue);\n        }\n    }\n    recordCountAtValue(count\x2C value) {\n        const countsIndex = this.countsArrayIndex(value);\n        if (countsIndex >= this.countsArrayLength) {\n            this.handleRecordException(count\x2C value);\n        }\n        else {\n            this.addToCountAtIndex(countsIndex\x2C count);\n        }\n        this.updateMinAndMax(value);\n        this.addToTotalCount(count);\n    }\n    /**\n     * Record a value in the histogram (adding to the value's current count)\n     *\n     * @param value The value to be recorded\n     * @param count The number of occurrences of this value to record\n     * @throws ArrayIndexOutOfBoundsException (may throw) if value is exceeds highestTrackableValue\n     */\n    recordValueWithCount(value\x2C count) {\n        this.recordCountAtValue(count\x2C value);\n    }\n    /**\n     * Record a value in the histogram.\n     * <p>\n     * To compensate for the loss of sampled values when a recorded value is larger than the expected\n     * interval between value samples\x2C Histogram will auto-generate an additional series of decreasingly-smaller\n     * (down to the expectedIntervalBetweenValueSamples) value records.\n     * <p>\n     * Note: This is a at-recording correction method\x2C as opposed to the post-recording correction method provided\n     * by {@link #copyCorrectedForCoordinatedOmission(long)}.\n     * The two methods are mutually exclusive\x2C and only one of the two should be be used on a given data set to correct\n     * for the same coordinated omission issue.\n     * <p>\n     * See notes in the description of the Histogram calls for an illustration of why this corrective behavior is\n     * important.\n     *\n     * @param value The value to record\n     * @param expectedIntervalBetweenValueSamples If expectedIntervalBetweenValueSamples is larger than 0\x2C add\n     *                                           auto-generated value records as appropriate if value is larger\n     *                                           than expectedIntervalBetweenValueSamples\n     * @throws ArrayIndexOutOfBoundsException (may throw) if value is exceeds highestTrackableValue\n     */\n    recordValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples) {\n        this.recordSingleValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples);\n    }\n    recordValueWithCountAndExpectedInterval(value\x2C count\x2C expectedIntervalBetweenValueSamples) {\n        this.recordCountAtValue(count\x2C value);\n        if (expectedIntervalBetweenValueSamples <= 0) {\n            return;\n        }\n        for (let missingValue = value - expectedIntervalBetweenValueSamples; missingValue >= expectedIntervalBetweenValueSamples; missingValue -= expectedIntervalBetweenValueSamples) {\n            this.recordCountAtValue(count\x2C missingValue);\n        }\n    }\n    /**\n     * Add the contents of another histogram to this one\x2C while correcting the incoming data for coordinated omission.\n     * <p>\n     * To compensate for the loss of sampled values when a recorded value is larger than the expected\n     * interval between value samples\x2C the values added will include an auto-generated additional series of\n     * decreasingly-smaller (down to the expectedIntervalBetweenValueSamples) value records for each count found\n     * in the current histogram that is larger than the expectedIntervalBetweenValueSamples.\n     *\n     * Note: This is a post-recording correction method\x2C as opposed to the at-recording correction method provided\n     * by {@link #recordValueWithExpectedInterval(long\x2C long) recordValueWithExpectedInterval}. The two\n     * methods are mutually exclusive\x2C and only one of the two should be be used on a given data set to correct\n     * for the same coordinated omission issue.\n     * by\n     * <p>\n     * See notes in the description of the Histogram calls for an illustration of why this corrective behavior is\n     * important.\n     *\n     * @param otherHistogram The other histogram. highestTrackableValue and largestValueWithSingleUnitResolution must match.\n     * @param expectedIntervalBetweenValueSamples If expectedIntervalBetweenValueSamples is larger than 0\x2C add\n     *                                           auto-generated value records as appropriate if value is larger\n     *                                           than expectedIntervalBetweenValueSamples\n     * @throws ArrayIndexOutOfBoundsException (may throw) if values exceed highestTrackableValue\n     */\n    addWhileCorrectingForCoordinatedOmission(otherHistogram\x2C expectedIntervalBetweenValueSamples) {\n        const toHistogram = this;\n        const otherValues = new RecordedValuesIterator_1.default(otherHistogram);\n        while (otherValues.hasNext()) {\n            const v = otherValues.next();\n            toHistogram.recordValueWithCountAndExpectedInterval(v.valueIteratedTo\x2C v.countAtValueIteratedTo\x2C expectedIntervalBetweenValueSamples);\n        }\n    }\n    /**\n     * Add the contents of another histogram to this one.\n     * <p>\n     * As part of adding the contents\x2C the start/end timestamp range of this histogram will be\n     * extended to include the start/end timestamp range of the other histogram.\n     *\n     * @param otherHistogram The other histogram.\n     * @throws (may throw) if values in fromHistogram's are\n     * higher than highestTrackableValue.\n     */\n    add(otherHistogram) {\n        if (!(otherHistogram instanceof JsHistogram)) {\n            // should be impossible to be in this situation but actually\n            // TypeScript has some flaws...\n            throw new Error("Cannot add a WASM histogram to a regular JS histogram");\n        }\n        const highestRecordableValue = this.highestEquivalentValue(this.valueFromIndex(this.countsArrayLength - 1));\n        if (highestRecordableValue < otherHistogram.maxValue) {\n            if (!this.autoResize) {\n                throw new Error("The other histogram includes values that do not fit in this histogram's range.");\n            }\n            this.resize(otherHistogram.maxValue);\n        }\n        if (this.bucketCount === otherHistogram.bucketCount &&\n            this.subBucketCount === otherHistogram.subBucketCount &&\n            this.unitMagnitude === otherHistogram.unitMagnitude) {\n            // Counts arrays are of the same length and meaning\x2C so we can just iterate and add directly:\n            let observedOtherTotalCount = 0;\n            for (let i = 0; i < otherHistogram.countsArrayLength; i++) {\n                const otherCount = otherHistogram.getCountAtIndex(i);\n                if (otherCount > 0) {\n                    this.addToCountAtIndex(i\x2C otherCount);\n                    observedOtherTotalCount += otherCount;\n                }\n            }\n            this.setTotalCount(this.totalCount + observedOtherTotalCount);\n            this.updatedMaxValue(max(this.maxValue\x2C otherHistogram.maxValue));\n            this.updateMinNonZeroValue(min(this.minNonZeroValue\x2C otherHistogram.minNonZeroValue));\n        }\n        else {\n            // Arrays are not a direct match (or the other could change on the fly in some valid way)\x2C\n            // so we can't just stream through and add them. Instead\x2C go through the array and add each\n            // non-zero value found at it's proper value:\n            // Do max value first\x2C to avoid max value updates on each iteration:\n            const otherMaxIndex = otherHistogram.countsArrayIndex(otherHistogram.maxValue);\n            let otherCount = otherHistogram.getCountAtIndex(otherMaxIndex);\n            this.recordCountAtValue(otherCount\x2C otherHistogram.valueFromIndex(otherMaxIndex));\n            // Record the remaining values\x2C up to but not including the max value:\n            for (let i = 0; i < otherMaxIndex; i++) {\n                otherCount = otherHistogram.getCountAtIndex(i);\n                if (otherCount > 0) {\n                    this.recordCountAtValue(otherCount\x2C otherHistogram.valueFromIndex(i));\n                }\n            }\n        }\n        this.startTimeStampMsec = min(this.startTimeStampMsec\x2C otherHistogram.startTimeStampMsec);\n        this.endTimeStampMsec = max(this.endTimeStampMsec\x2C otherHistogram.endTimeStampMsec);\n    }\n    /**\n     * Get the count of recorded values at a specific value (to within the histogram resolution at the value level).\n     *\n     * @param value The value for which to provide the recorded count\n     * @return The total count of values recorded in the histogram within the value range that is\n     * {@literal >=} lowestEquivalentValue(<i>value</i>) and {@literal <=} highestEquivalentValue(<i>value</i>)\n     */\n    getCountAtValue(value) {\n        const index = min(max(0\x2C this.countsArrayIndex(value))\x2C this.countsArrayLength - 1);\n        return this.getCountAtIndex(index);\n    }\n    /**\n     * Subtract the contents of another histogram from this one.\n     * <p>\n     * The start/end timestamps of this histogram will remain unchanged.\n     *\n     * @param otherHistogram The other histogram.\n     * @throws ArrayIndexOutOfBoundsException (may throw) if values in otherHistogram's are higher than highestTrackableValue.\n     *\n     */\n    subtract(otherHistogram) {\n        const highestRecordableValue = this.valueFromIndex(this.countsArrayLength - 1);\n        if (!(otherHistogram instanceof JsHistogram)) {\n            // should be impossible to be in this situation but actually\n            // TypeScript has some flaws...\n            throw new Error("Cannot subtract a WASM histogram to a regular JS histogram");\n        }\n        if (highestRecordableValue < otherHistogram.maxValue) {\n            if (!this.autoResize) {\n                throw new Error("The other histogram includes values that do not fit in this histogram's range.");\n            }\n            this.resize(otherHistogram.maxValue);\n        }\n        if (this.bucketCount === otherHistogram.bucketCount &&\n            this.subBucketCount === otherHistogram.subBucketCount &&\n            this.unitMagnitude === otherHistogram.unitMagnitude) {\n            // optim\n            // Counts arrays are of the same length and meaning\x2C so we can just iterate and add directly:\n            let observedOtherTotalCount = 0;\n            for (let i = 0; i < otherHistogram.countsArrayLength; i++) {\n                const otherCount = otherHistogram.getCountAtIndex(i);\n                if (otherCount > 0) {\n                    this.addToCountAtIndex(i\x2C -otherCount);\n                    observedOtherTotalCount += otherCount;\n                }\n            }\n            this.setTotalCount(this.totalCount - observedOtherTotalCount);\n        }\n        else {\n            for (let i = 0; i < otherHistogram.countsArrayLength; i++) {\n                const otherCount = otherHistogram.getCountAtIndex(i);\n                if (otherCount > 0) {\n                    const otherValue = otherHistogram.valueFromIndex(i);\n                    if (this.getCountAtValue(otherValue) < otherCount) {\n                        throw new Error("otherHistogram count (" +\n                            otherCount +\n                            ") at value " +\n                            otherValue +\n                            " is larger than this one's (" +\n                            this.getCountAtValue(otherValue) +\n                            ")");\n                    }\n                    this.recordCountAtValue(-otherCount\x2C otherValue);\n                }\n            }\n        }\n        // With subtraction\x2C the max and minNonZero values could have changed:\n        if (this.getCountAtValue(this.maxValue) <= 0 ||\n            this.getCountAtValue(this.minNonZeroValue) <= 0) {\n            this.establishInternalTackingValues();\n        }\n    }\n    establishInternalTackingValues(lengthToCover = this.countsArrayLength) {\n        this.maxValue = 0;\n        this.minNonZeroValue = Number.MAX_VALUE;\n        let maxIndex = -1;\n        let minNonZeroIndex = -1;\n        let observedTotalCount = 0;\n        for (let index = 0; index < lengthToCover; index++) {\n            const countAtIndex = this.getCountAtIndex(index);\n            if (countAtIndex > 0) {\n                observedTotalCount += countAtIndex;\n                maxIndex = index;\n                if (minNonZeroIndex == -1 && index != 0) {\n                    minNonZeroIndex = index;\n                }\n            }\n        }\n        if (maxIndex >= 0) {\n            this.updatedMaxValue(this.highestEquivalentValue(this.valueFromIndex(maxIndex)));\n        }\n        if (minNonZeroIndex >= 0) {\n            this.updateMinNonZeroValue(this.valueFromIndex(minNonZeroIndex));\n        }\n        this.setTotalCount(observedTotalCount);\n    }\n    reset() {\n        this.clearCounts();\n        this.setTotalCount(0);\n        this.startTimeStampMsec = 0;\n        this.endTimeStampMsec = 0;\n        this.tag = Histogram_1.NO_TAG;\n        this.maxValue = 0;\n        this.minNonZeroValue = Number.MAX_SAFE_INTEGER;\n    }\n    destroy() {\n        // no op - not needed here\n    }\n}\nexports.JsHistogram = JsHistogram;\nexports.default = JsHistogram;\n//# sourceMappingURL=JsHistogram.js.map
code-source-info,0x3699891700a6,171,0,40556,C0O0C4O40556,,
code-creation,Function,10,89541,0x3699891721f6,508, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:1:1,0x369989170010,~
code-source-info,0x3699891721f6,171,0,40556,C0O0C38O14C42O21C50O36C58O21C63O77C65O115C71O93C75O428C78O428C82O428C84O494C87O494C91O494C93O548C96O548C100O548C102O587C105O587C109O587C111O625C114O625C118O625C120O694C124O657C130O662C136O669C142O675C148O681C154O686C372O26681C377O26678C387O26681C494O40451C496O40471C500O40486C502O40502C507O40555,,
tick,0x1a37782c4,89583,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e771,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1013dbee8,89625,0,0x0,0,0x172aed05ecb8,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989172244,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e771,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,89833,0x369989174916,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:1:1,0x369989174780,~
script-source,172,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js,"use strict";\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst JsHistogramIterator_1 = require("./JsHistogramIterator");\n/**\n * Used for iterating through all recorded histogram values using the finest granularity steps supported by the\n * underlying representation. The iteration steps through all non-zero recorded value counts\x2C and terminates when\n * all recorded histogram values are exhausted.\n */\nclass RecordedValuesIterator extends JsHistogramIterator_1.default {\n    /**\n     * @param histogram The histogram this iterator will operate on\n     */\n    constructor(histogram) {\n        super();\n        this.doReset(histogram);\n    }\n    /**\n     * Reset iterator for re-use in a fresh iteration over the same histogram data set.\n     */\n    reset() {\n        this.doReset(this.histogram);\n    }\n    doReset(histogram) {\n        super.resetIterator(histogram);\n        this.visitedIndex = -1;\n    }\n    incrementIterationLevel() {\n        this.visitedIndex = this.currentIndex;\n    }\n    reachedIterationLevel() {\n        const currentCount = this.histogram.getCountAtIndex(this.currentIndex);\n        return currentCount != 0 && this.visitedIndex !== this.currentIndex;\n    }\n}\nexports.default = RecordedValuesIterator;\n//# sourceMappingURL=RecordedValuesIterator.js.map
code-source-info,0x369989174916,172,0,1568,C0O0C4O1568,,
code-creation,Function,10,89875,0x369989174d56,96, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:1:1,0x369989174880,~
code-source-info,0x369989174d56,172,0,1568,C0O284C4O291C12O306C20O291C25O377C28O377C33O377C37O752C88O1476C90O1492C95O1567,,
code-creation,Eval,10,90208,0x3699891755ee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:1:1,0x369989175488,~
script-source,173,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst HistogramIterationValue_1 = require("./HistogramIterationValue");\n/**\n * Used for iterating through histogram values.\n */\nclass JsHistogramIterator /* implements Iterator<HistogramIterationValue> */ {\n    constructor() {\n        this.currentIterationValue = new HistogramIterationValue_1.default();\n    }\n    resetIterator(histogram) {\n        this.histogram = histogram;\n        this.savedHistogramTotalRawCount = histogram.totalCount;\n        this.arrayTotalCount = histogram.totalCount;\n        this.currentIndex = 0;\n        this.currentValueAtIndex = 0;\n        this.nextValueAtIndex = Math.pow(2\x2C histogram.unitMagnitude);\n        this.prevValueIteratedTo = 0;\n        this.totalCountToPrevIndex = 0;\n        this.totalCountToCurrentIndex = 0;\n        this.totalValueToCurrentIndex = 0;\n        this.countAtThisValue = 0;\n        this.freshSubBucket = true;\n        this.currentIterationValue.reset();\n    }\n    /**\n     * Returns true if the iteration has more elements. (In other words\x2C returns true if next would return an\n     * element rather than throwing an exception.)\n     *\n     * @return true if the iterator has more elements.\n     */\n    hasNext() {\n        if (this.histogram.totalCount !== this.savedHistogramTotalRawCount) {\n            throw "Concurrent Modification Exception";\n        }\n        return this.totalCountToCurrentIndex < this.arrayTotalCount;\n    }\n    /**\n     * Returns the next element in the iteration.\n     *\n     * @return the {@link HistogramIterationValue} associated with the next element in the iteration.\n     */\n    next() {\n        // Move through the sub buckets and buckets until we hit the next reporting level:\n        while (!this.exhaustedSubBuckets()) {\n            this.countAtThisValue = this.histogram.getCountAtIndex(this.currentIndex);\n            if (this.freshSubBucket) {\n                // Don't add unless we've incremented since last bucket...\n                this.totalCountToCurrentIndex += this.countAtThisValue;\n                this.totalValueToCurrentIndex +=\n                    this.countAtThisValue *\n                        this.histogram.highestEquivalentValue(this.currentValueAtIndex);\n                this.freshSubBucket = false;\n            }\n            if (this.reachedIterationLevel()) {\n                const valueIteratedTo = this.getValueIteratedTo();\n                Object.assign(this.currentIterationValue\x2C {\n                    valueIteratedTo\x2C\n                    valueIteratedFrom: this.prevValueIteratedTo\x2C\n                    countAtValueIteratedTo: this.countAtThisValue\x2C\n                    countAddedInThisIterationStep: this.totalCountToCurrentIndex - this.totalCountToPrevIndex\x2C\n                    totalCountToThisValue: this.totalCountToCurrentIndex\x2C\n                    totalValueToThisValue: this.totalValueToCurrentIndex\x2C\n                    percentile: (100 * this.totalCountToCurrentIndex) / this.arrayTotalCount\x2C\n                    percentileLevelIteratedTo: this.getPercentileIteratedTo()\x2C\n                });\n                this.prevValueIteratedTo = valueIteratedTo;\n                this.totalCountToPrevIndex = this.totalCountToCurrentIndex;\n                this.incrementIterationLevel();\n                if (this.histogram.totalCount !== this.savedHistogramTotalRawCount) {\n                    throw new Error("Concurrent Modification Exception");\n                }\n                return this.currentIterationValue;\n            }\n            this.incrementSubBucket();\n        }\n        throw new Error("Index Out Of Bounds Exception");\n    }\n    getPercentileIteratedTo() {\n        return (100 * this.totalCountToCurrentIndex) / this.arrayTotalCount;\n    }\n    getPercentileIteratedFrom() {\n        return (100 * this.totalCountToPrevIndex) / this.arrayTotalCount;\n    }\n    getValueIteratedTo() {\n        return this.histogram.highestEquivalentValue(this.currentValueAtIndex);\n    }\n    exhaustedSubBuckets() {\n        return this.currentIndex >= this.histogram.countsArrayLength;\n    }\n    incrementSubBucket() {\n        this.freshSubBucket = true;\n        this.currentIndex++;\n        this.currentValueAtIndex = this.histogram.valueFromIndex(this.currentIndex);\n        this.nextValueAtIndex = this.histogram.valueFromIndex(this.currentIndex + 1);\n    }\n}\nexports.default = JsHistogramIterator;\n//# sourceMappingURL=JsHistogramIterator.js.map
code-source-info,0x3699891755ee,173,0,4448,C0O0C4O4448,,
code-creation,Function,10,90375,0x369989175bee,112, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:1:1,0x369989175558,~
code-source-info,0x369989175bee,173,0,4448,C0O0C8O14C12O21C20O36C28O21C33O111C36O111C40O111C104O4362C106O4378C111O4447,,
code-creation,Eval,10,90583,0x369989176516,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramIterationValue.js:1:1,0x3699891763c0,~
script-source,174,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramIterationValue.js,"use strict";\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/**\n * Represents a value point iterated through in a Histogram\x2C with associated stats.\n * <ul>\n * <li><b><code>valueIteratedTo</code></b> :<br> The actual value level that was iterated to by the iterator</li>\n * <li><b><code>prevValueIteratedTo</code></b> :<br> The actual value level that was iterated from by the iterator</li>\n * <li><b><code>countAtValueIteratedTo</code></b> :<br> The count of recorded values in the histogram that\n * exactly match this [lowestEquivalentValue(valueIteratedTo)...highestEquivalentValue(valueIteratedTo)] value\n * range.</li>\n * <li><b><code>countAddedInThisIterationStep</code></b> :<br> The count of recorded values in the histogram that\n * were added to the totalCountToThisValue (below) as a result on this iteration step. Since multiple iteration\n * steps may occur with overlapping equivalent value ranges\x2C the count may be lower than the count found at\n * the value (e.g. multiple linear steps or percentile levels can occur within a single equivalent value range)</li>\n * <li><b><code>totalCountToThisValue</code></b> :<br> The total count of all recorded values in the histogram at\n * values equal or smaller than valueIteratedTo.</li>\n * <li><b><code>totalValueToThisValue</code></b> :<br> The sum of all recorded values in the histogram at values\n * equal or smaller than valueIteratedTo.</li>\n * <li><b><code>percentile</code></b> :<br> The percentile of recorded values in the histogram at values equal\n * or smaller than valueIteratedTo.</li>\n * <li><b><code>percentileLevelIteratedTo</code></b> :<br> The percentile level that the iterator returning this\n * HistogramIterationValue had iterated to. Generally\x2C percentileLevelIteratedTo will be equal to or smaller than\n * percentile\x2C but the same value point can contain multiple iteration levels for some iterators. E.g. a\n * PercentileIterator can stop multiple times in the exact same value point (if the count at that value covers a\n * range of multiple percentiles in the requested percentile iteration points).</li>\n * </ul>\n */\nclass HistogramIterationValue {\n    constructor() {\n        this.reset();\n    }\n    reset() {\n        this.valueIteratedTo = 0;\n        this.valueIteratedFrom = 0;\n        this.countAtValueIteratedTo = 0;\n        this.countAddedInThisIterationStep = 0;\n        this.totalCountToThisValue = 0;\n        this.totalValueToThisValue = 0;\n        this.percentile = 0.0;\n        this.percentileLevelIteratedTo = 0.0;\n    }\n}\nexports.default = HistogramIterationValue;\n//# sourceMappingURL=HistogramIterationValue.js.map
code-source-info,0x369989176516,174,0,2896,C0O0C4O2896,,
code-creation,Function,10,90708,0x3699891767f6,60, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramIterationValue.js:1:1,0x369989176480,~
code-source-info,0x3699891767f6,174,0,2896,C0O284C4O291C12O306C20O291C52O2802C54O2818C59O2895,,
tick,0x101135e04,90875,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917224d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e771,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,90916,0x369989176f9e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PercentileIterator.js:1:1,0x369989176dd0,~
script-source,175,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PercentileIterator.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst JsHistogramIterator_1 = require("./JsHistogramIterator");\nconst { pow\x2C floor\x2C log2 } = Math;\n/**\n * Used for iterating through histogram values according to percentile levels. The iteration is\n * performed in steps that start at 0% and reduce their distance to 100% according to the\n * <i>percentileTicksPerHalfDistance</i> parameter\x2C ultimately reaching 100% when all recorded histogram\n * values are exhausted.\n */\nclass PercentileIterator extends JsHistogramIterator_1.default {\n    /**\n     * @param histogram The histogram this iterator will operate on\n     * @param percentileTicksPerHalfDistance The number of equal-sized iteration steps per half-distance to 100%.\n     */\n    constructor(histogram\x2C percentileTicksPerHalfDistance) {\n        super();\n        this.percentileTicksPerHalfDistance = 0;\n        this.percentileLevelToIterateTo = 0;\n        this.percentileLevelToIterateFrom = 0;\n        this.reachedLastRecordedValue = false;\n        this.doReset(histogram\x2C percentileTicksPerHalfDistance);\n    }\n    /**\n     * Reset iterator for re-use in a fresh iteration over the same histogram data set.\n     *\n     * @param percentileTicksPerHalfDistance The number of iteration steps per half-distance to 100%.\n     */\n    reset(percentileTicksPerHalfDistance) {\n        this.doReset(this.histogram\x2C percentileTicksPerHalfDistance);\n    }\n    doReset(histogram\x2C percentileTicksPerHalfDistance) {\n        super.resetIterator(histogram);\n        this.percentileTicksPerHalfDistance = percentileTicksPerHalfDistance;\n        this.percentileLevelToIterateTo = 0;\n        this.percentileLevelToIterateFrom = 0;\n        this.reachedLastRecordedValue = false;\n    }\n    hasNext() {\n        if (super.hasNext())\n            return true;\n        if (!this.reachedLastRecordedValue && this.arrayTotalCount > 0) {\n            this.percentileLevelToIterateTo = 100;\n            this.reachedLastRecordedValue = true;\n            return true;\n        }\n        return false;\n    }\n    incrementIterationLevel() {\n        this.percentileLevelToIterateFrom = this.percentileLevelToIterateTo;\n        // The choice to maintain fixed-sized "ticks" in each half-distance to 100% [starting\n        // from 0%]\x2C as opposed to a "tick" size that varies with each interval\x2C was made to\n        // make the steps easily comprehensible and readable to humans. The resulting percentile\n        // steps are much easier to browse through in a percentile distribution output\x2C for example.\n        //\n        // We calculate the number of equal-sized "ticks" that the 0-100 range will be divided\n        // by at the current scale. The scale is detemined by the percentile level we are\n        // iterating to. The following math determines the tick size for the current scale\x2C\n        // and maintain a fixed tick size for the remaining "half the distance to 100%"\n        // [from either 0% or from the previous half-distance]. When that half-distance is\n        // crossed\x2C the scale changes and the tick size is effectively cut in half.\n        // percentileTicksPerHalfDistance = 5\n        // percentileReportingTicks = 10\x2C\n        const percentileReportingTicks = this.percentileTicksPerHalfDistance *\n            pow(2\x2C floor(log2(100 / (100 - this.percentileLevelToIterateTo))) + 1);\n        this.percentileLevelToIterateTo += 100 / percentileReportingTicks;\n    }\n    reachedIterationLevel() {\n        if (this.countAtThisValue === 0) {\n            return false;\n        }\n        const currentPercentile = (100 * this.totalCountToCurrentIndex) / this.arrayTotalCount;\n        return currentPercentile >= this.percentileLevelToIterateTo;\n    }\n    getPercentileIteratedTo() {\n        return this.percentileLevelToIterateTo;\n    }\n    getPercentileIteratedFrom() {\n        return this.percentileLevelToIterateFrom;\n    }\n}\nexports.default = PercentileIterator;\n//# sourceMappingURL=PercentileIterator.js.map
code-source-info,0x369989176f9e,175,0,3980,C0O0C4O3980,,
code-creation,Function,10,91083,0x369989177556,147, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PercentileIterator.js:1:1,0x369989176f08,~
code-source-info,0x369989177556,175,0,3980,C0O0C14O14C18O21C26O36C34O21C39O107C42O107C47O170C51O149C57O154C63O161C73O555C139O3896C141O3912C146O3979,,
code-creation,Eval,10,91333,0x369989178066,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/formatters.js:1:1,0x369989177ec0,~
script-source,176,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/formatters.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.floatFormatter = exports.keepSignificantDigits = exports.integerFormatter = void 0;\nconst leftPadding = (size) => {\n    return (input) => {\n        if (input.length < size) {\n            return " ".repeat(size - input.length) + input;\n        }\n        return input;\n    };\n};\nexports.integerFormatter = (size) => {\n    const padding = leftPadding(size);\n    return (integer) => padding("" + integer);\n};\nconst { floor\x2C log10\x2C pow } = Math;\nconst numberOfDigits = (n) => floor(log10(n) + 1);\nexports.keepSignificantDigits = (digits) => (value) => {\n    const valueDigits = numberOfDigits(value);\n    if (valueDigits > digits) {\n        const extraDigits = valueDigits - digits;\n        const magnitude = pow(10\x2C extraDigits);\n        return value - (value % magnitude);\n    }\n    return value;\n};\nexports.floatFormatter = (size\x2C fractionDigits) => {\n    const numberFormatter = new Intl.NumberFormat("en-US"\x2C {\n        maximumFractionDigits: fractionDigits\x2C\n        minimumFractionDigits: fractionDigits\x2C\n        useGrouping: false\x2C\n    });\n    const padding = leftPadding(size);\n    return (float) => padding(numberFormatter.format(float));\n};\n//# sourceMappingURL=formatters.js.map
code-source-info,0x369989178066,176,0,1268,C0O0C4O1268,,
code-creation,Function,10,91375,0x3699891783ee,123, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/formatters.js:1:1,0x369989177fd0,~
code-source-info,0x3699891783ee,176,0,1268,C0O0C20O14C24O21C32O36C40O21C45O77C47O159C53O132C59O100C63O189C67O189C69O362C73O387C77O520C81O498C87O505C93O512C99O549C103O549C105O577C109O607C113O882C117O905C122O1267,,
code-creation,Eval,10,91583,0x369989178b8e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ulp.js:1:1,0x369989178a38,~
script-source,177,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ulp.js,"use strict";\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst ulp = (x) => Math.pow(2\x2C Math.floor(Math.log2(x)) - 52);\nexports.default = ulp;\n//# sourceMappingURL=ulp.js.map
code-source-info,0x369989178b8e,177,0,464,C0O0C4O464,,
code-creation,Function,10,91625,0x369989178cbe,38, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ulp.js:1:1,0x369989178af8,~
code-source-info,0x369989178cbe,177,0,464,C0O284C4O291C12O306C20O291C25O359C30O410C32O426C37O463,,
code-creation,Eval,10,91791,0x36998917a0ce,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Histogram.js:1:1,0x369989179f68,~
script-source,178,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Histogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.toSummary = exports.NO_TAG = void 0;\nconst formatters_1 = require("./formatters");\nexports.NO_TAG = "NO TAG";\nexports.toSummary = (histogram) => {\n    const { totalCount\x2C maxValue\x2C numberOfSignificantValueDigits } = histogram;\n    const round = formatters_1.keepSignificantDigits(numberOfSignificantValueDigits);\n    return {\n        p50: round(histogram.getValueAtPercentile(50))\x2C\n        p75: round(histogram.getValueAtPercentile(75))\x2C\n        p90: round(histogram.getValueAtPercentile(90))\x2C\n        p97_5: round(histogram.getValueAtPercentile(97.5))\x2C\n        p99: round(histogram.getValueAtPercentile(99))\x2C\n        p99_9: round(histogram.getValueAtPercentile(99.9))\x2C\n        p99_99: round(histogram.getValueAtPercentile(99.99))\x2C\n        p99_999: round(histogram.getValueAtPercentile(99.999))\x2C\n        max: maxValue\x2C\n        totalCount\x2C\n    };\n};\n//# sourceMappingURL=Histogram.js.map
code-source-info,0x36998917a0ce,178,0,971,C0O0C4O971,,
code-creation,Function,10,91875,0x36998917a25e,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Histogram.js:1:1,0x36998917a038,~
code-source-info,0x36998917a25e,178,0,971,C0O0C8O14C12O21C20O36C28O21C33O77C35O112C41O95C45O143C48O143C52O143C54O168C56O183C60O195C64O213C69O970,,
tick,0x100ff0118,92125,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,92166,0x36998917b3ee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:1:1,0x36998917b138,~
script-source,179,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js,"use strict";\nvar __awaiter = (this && this.__awaiter) || function (thisArg\x2C _arguments\x2C P\x2C generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve\x2C reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled\x2C rejected); }\n        step((generator = generator.apply(thisArg\x2C _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.WasmHistogram = exports.webAssemblyReady = exports.initWebAssemblySync = exports.initWebAssembly = exports.webAssemblyAvailable = void 0;\nconst generated_wasm_1 = require("./generated-wasm");\nconst Histogram_1 = require("../Histogram");\n// @ts-ignore\nconst base64 = require("base64-js");\n// @ts-ignore\nconst pako = require("pako");\n// @ts-ignore\nconst loader_1 = require("@assemblyscript/loader");\nconst isNode = typeof process !== "undefined" && process.version;\n// @ts-ignore\nconst isWorker = typeof importScripts === "function";\nexports.webAssemblyAvailable = (() => {\n    let available = false;\n    if (isNode) {\n        // nodejs\n        available = "WebAssembly" in global;\n    }\n    else {\n        // browser\n        // @ts-ignore\n        available = isWorker || "WebAssembly" in window;\n    }\n    return available;\n})();\nlet wasm = undefined;\nexports.initWebAssembly = () => __awaiter(void 0\x2C void 0\x2C void 0\x2C function* () {\n    if (!exports.webAssemblyAvailable) {\n        throw new Error("WebAssembly not available here!");\n    }\n    if (!!wasm) {\n        return;\n    }\n    return loader_1.instantiate(pako.inflate(base64.toByteArray(generated_wasm_1.BINARY)))\n        .then((w) => (wasm = w.exports || w));\n});\nexports.initWebAssemblySync = () => {\n    if (!!wasm) {\n        return;\n    }\n    const w = loader_1.instantiateSync(pako.inflate(base64.toByteArray(generated_wasm_1.BINARY)));\n    wasm = w.exports || w;\n};\nexports.webAssemblyReady = () => !!wasm;\nconst defaultRequest = {\n    bitBucketSize: 32\x2C\n    autoResize: true\x2C\n    lowestDiscernibleValue: 1\x2C\n    highestTrackableValue: 2\x2C\n    numberOfSignificantValueDigits: 3\n};\nconst remoteHistogramClassFor = (size) => size === "packed" ? "PackedHistogram" : `Histogram${size}`;\nconst destroyedWasmHistogram = new Proxy({}\x2C {\n    get: function (obj\x2C prop) {\n        throw new Error("Cannot use a destroyed histogram");\n    }\n});\nclass WasmHistogram {\n    constructor(_wasmHistogram\x2C _remoteHistogramClass) {\n        this._wasmHistogram = _wasmHistogram;\n        this._remoteHistogramClass = _remoteHistogramClass;\n        this.tag = Histogram_1.NO_TAG;\n        wasm.__pin(this._wasmHistogram);\n    }\n    static build(request = defaultRequest) {\n        if (!exports.webAssemblyReady()) {\n            throw new Error("WebAssembly is not ready yet!");\n        }\n        const parameters = Object.assign({}\x2C defaultRequest\x2C request);\n        const remoteHistogramClass = remoteHistogramClassFor(parameters.bitBucketSize);\n        return new WasmHistogram(new wasm[remoteHistogramClass](parameters.lowestDiscernibleValue\x2C parameters.highestTrackableValue\x2C parameters.numberOfSignificantValueDigits\x2C parameters.autoResize)\x2C remoteHistogramClass);\n    }\n    static decode(data\x2C bitBucketSize = 32\x2C minBarForHighestTrackableValue = 0) {\n        if (!exports.webAssemblyReady()) {\n            throw new Error("WebAssembly is not ready yet!");\n        }\n        const remoteHistogramClass = remoteHistogramClassFor(bitBucketSize);\n        const decodeFunc = `decode${remoteHistogramClass}`;\n        const ptrArr = wasm.__newArray(wasm.UINT8ARRAY_ID\x2C data);\n        const wasmHistogram = new WasmHistogram(wasm[remoteHistogramClass].wrap(wasm[decodeFunc](ptrArr\x2C minBarForHighestTrackableValue))\x2C remoteHistogramClass);\n        return wasmHistogram;\n    }\n    get numberOfSignificantValueDigits() {\n        return this._wasmHistogram.numberOfSignificantValueDigits;\n    }\n    get autoResize() {\n        return !!this._wasmHistogram.autoResize;\n    }\n    set autoResize(resize) {\n        this._wasmHistogram.autoResize = resize;\n    }\n    get highestTrackableValue() {\n        return this._wasmHistogram.highestTrackableValue;\n    }\n    set highestTrackableValue(value) {\n        this._wasmHistogram.highestTrackableValue = value;\n    }\n    get startTimeStampMsec() {\n        return this._wasmHistogram.startTimeStampMsec;\n    }\n    set startTimeStampMsec(value) {\n        this._wasmHistogram.startTimeStampMsec = value;\n    }\n    get endTimeStampMsec() {\n        return this._wasmHistogram.endTimeStampMsec;\n    }\n    set endTimeStampMsec(value) {\n        this._wasmHistogram.endTimeStampMsec = value;\n    }\n    get totalCount() {\n        return this._wasmHistogram.totalCount;\n    }\n    get stdDeviation() {\n        return this._wasmHistogram.stdDeviation;\n    }\n    get mean() {\n        return this._wasmHistogram.mean;\n    }\n    get estimatedFootprintInBytes() {\n        return 192 + this._wasmHistogram.estimatedFootprintInBytes;\n    }\n    get minNonZeroValue() {\n        return this._wasmHistogram.minNonZeroValue;\n    }\n    get maxValue() {\n        return this._wasmHistogram.maxValue;\n    }\n    recordValue(value) {\n        this._wasmHistogram.recordValue(value);\n    }\n    recordValueWithCount(value\x2C count) {\n        this._wasmHistogram.recordValueWithCount(value\x2C count);\n    }\n    recordValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples) {\n        this._wasmHistogram.recordValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples);\n    }\n    getValueAtPercentile(percentile) {\n        return this._wasmHistogram.getValueAtPercentile(percentile);\n    }\n    outputPercentileDistribution(percentileTicksPerHalfDistance = 5\x2C outputValueUnitScalingRatio = 1\x2C useCsvFormat = false) {\n        // TODO csv\n        if (useCsvFormat) {\n            throw new Error("CSV output not supported by wasm histograms");\n        }\n        return wasm.__getString(this._wasmHistogram.outputPercentileDistribution(percentileTicksPerHalfDistance\x2C outputValueUnitScalingRatio));\n    }\n    isDestroyed() {\n        return this._wasmHistogram === destroyedWasmHistogram;\n    }\n    get summary() {\n        return Histogram_1.toSummary(this);\n    }\n    toJSON() {\n        return this.summary;\n    }\n    toString() {\n        if (this.isDestroyed()) {\n            return "Destroyed WASM histogram";\n        }\n        return `WASM ${this._remoteHistogramClass} ${JSON.stringify(this\x2C null\x2C 2)}`;\n    }\n    inspect() {\n        return this.toString();\n    }\n    [Symbol.for("nodejs.util.inspect.custom")]() {\n        return this.toString();\n    }\n    addWhileCorrectingForCoordinatedOmission(otherHistogram\x2C expectedIntervalBetweenValueSamples) {\n        this._wasmHistogram.addWhileCorrectingForCoordinatedOmission(otherHistogram\x2C expectedIntervalBetweenValueSamples);\n    }\n    copyCorrectedForCoordinatedOmission(expectedIntervalBetweenValueSamples) {\n        return new WasmHistogram(wasm[this._remoteHistogramClass].wrap(this._wasmHistogram.copyCorrectedForCoordinatedOmission(expectedIntervalBetweenValueSamples))\x2C this._remoteHistogramClass);\n    }\n    add(otherHistogram) {\n        if (!(otherHistogram instanceof WasmHistogram)) {\n            // should be impossible to be in this situation but actually\n            // TypeScript has some flaws...\n            throw new Error("Cannot add a regular JS histogram to a WASM histogram");\n        }\n        this._wasmHistogram[`add${otherHistogram._remoteHistogramClass}`](otherHistogram._wasmHistogram);\n    }\n    subtract(otherHistogram) {\n        if (!(otherHistogram instanceof WasmHistogram)) {\n            // should be impossible to be in this situation but actually\n            // TypeScript has some flaws...\n            throw new Error("Cannot subtract a regular JS histogram to a WASM histogram");\n        }\n        this._wasmHistogram[`subtract${otherHistogram._remoteHistogramClass}`](otherHistogram._wasmHistogram);\n    }\n    encode() {\n        const ptrArray = wasm.__pin(this._wasmHistogram.encode());\n        const array = wasm.__getUint8Array(ptrArray);\n        wasm.__unpin(ptrArray);\n        return array;\n    }\n    reset() {\n        this.tag = Histogram_1.NO_TAG;\n        this._wasmHistogram.reset();\n    }\n    destroy() {\n        wasm.__unpin(this._wasmHistogram);\n        this._wasmHistogram = destroyedWasmHistogram;\n    }\n}\nexports.WasmHistogram = WasmHistogram;\n//# sourceMappingURL=index.js.map
code-source-info,0x36998917b3ee,179,0,8704,C0O0C4O8704,,
code-creation,Function,10,92500,0x36998917d1d6,556, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:1:1,0x36998917b358,~
code-source-info,0x36998917d1d
code-creation,Function,10,92541,0x36998917d566,39, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:24:33,0x36998917b4f0,~
code-source-info,0x36998917d566,179,1330,1590,C0O1358C2O1369C8O1409C11O1438C14O1435C20O1512C29O1553C32O1550C36O1571C38O1588,,
code-creation,Eval,10,92958,0x3a1dfed6fea6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/generated-wasm.js:1:1,0x3a1dfed6fd50,~
script-source,180,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/generated-wasm.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.BINARY = void 0;\n/** @internal */\nexports.BINARY = "";\n//# sourceMappingURL=generated-wasm.js.map
code-source-info,0x3a1dfed6fea6,180,0,38830,C0O0C4O38830,,
code-creation,Function,10,94250,0x3a1dfed6ff86,38, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/generated-wasm.js:1:1,0x3a1dfed6fe10,~
code-source-info,0x3a1dfed6ff86,180,0,38830,C0O14C4O21C12O36C20O21C25O77C26O92C30O119C32O134C37O38829,,
tick,0x10100ae30,94291,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d259,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a3726538,94708,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d26b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,94791,0x3a1dfed70c06,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:1:1,0x3a1dfed70a40,~
script-source,181,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js,'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0\x2C len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings\x2C as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen\x2C placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64\x2C validLen\x2C placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64\x2C validLen\x2C placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders\x2C only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8\x2C start\x2C end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left\x2C pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes\x2C we'll deal with trailing stuff later\n  for (var i = 0\x2C len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8\x2C i\x2C (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros\x2C but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n
code-source-info,0x3a1dfed70c06,181,0,3932,C0O0C4O3932,,
code-creation,Function,10,94958,0x3a1dfed70f4e,196, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:1:1,0x3a1dfed70b70,~
code-source-info,0x3a1dfed70f4e,181,0,3932,C0O0C44O14C46O33C50O46C52O66C56O80C58O102C62O132C64O132C66O151C68O151C70O164C77O200C82O213C85O164C87O231C90O311C92O325C97O335C99O335C104O351C109O367C112O361C116O373C119O388C124O388C132O403C136O344C141O298C144O534C150O548C157O548C165O563C169O568C175O582C182O582C190O597C195O3931,,
code-creation,Eval,10,95375,0x3a1dfed721ce,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/index.js:1:1,0x3a1dfed72078,~
script-source,182,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/index.js,// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako\x2C deflate\x2C inflate\x2C constants);\n\nmodule.exports = pako;\n
code-source-info,0x3a1dfed721ce,182,0,347,C0O0C4O347,,
code-creation,Function,10,95416,0x3a1dfed72286,64, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/index.js:1:1,0x3a1dfed72138,~
code-source-info,0x3a1dfed72286,182,0,347,C0O91C3O91C8O120C13O146C16O146C21O188C24O188C29O230C32O230C37O275C39O280C51O280C56O324C58O339C63O346,,
code-creation,Eval,10,95666,0x3a1dfed7296e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:1:1,0x3a1dfed727d8,~
script-source,183,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js,'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj\x2C key) {\n  return Object.prototype.hasOwnProperty.call(obj\x2C key);\n}\n\nexports.assign = function (obj /*from1\x2C from2\x2C from3\x2C ...*/) {\n  var sources = Array.prototype.slice.call(arguments\x2C 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source\x2C p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size\x2C avoiding mem copy\nexports.shrinkBuf = function (buf\x2C size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0\x2C size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest\x2C src\x2C src_offs\x2C len\x2C dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs\x2C src_offs + len)\x2C dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  }\x2C\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i\x2C l\x2C len\x2C pos\x2C chunk\x2C result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0\x2C l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0\x2C l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk\x2C pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest\x2C src\x2C src_offs\x2C len\x2C dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  }\x2C\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([]\x2C chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use\x2C for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports\x2C fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports\x2C fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n
code-source-info,0x3a1dfed7296e,183,0,2444,C0O0C4O2444,,
code-creation,Function,10,95791,0x3a1dfed72f36,136, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:1:1,0x3a1dfed728d8,~
code-source-info,0x3a1dfed72f36,183,0,2444,C0O0C15O32C20O51C28O107C36O162C38O267C45O282C49O748C56O766C60O942C65O956C73O1321C83O942C85O1757C90O1771C98O1974C108O1757C110O2094C117O2111C121O2416C124O2424C129O2424C135O2443,,
code-creation,LazyCompile,10,95833,0x3a1dfed736ae,108,exports.setTyped /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:91:29,0x3a1dfed72d48,~
code-source-info,0x3a1dfed736ae,183,2122,2413,C0O2131C4O2145C7O2161C10O2159C14O2177C17O2193C20O2191C24O2210C27O2226C30O2224C34O2242C37O2250C48O2250C56O2291C59O2307C62O2305C66O2318C69O2334C72O2332C76O2345C79O2361C82O2359C86O2372C89O2380C100O2380C107O2412,,
code-creation,LazyCompile,10,95875,0x3a1dfed7389e,133,exports.assign /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:12:27,0x3a1dfed729f0,~
code-source-info,0x3a1dfed7389e,183,293,703,C0O293C2O346C6O352C11O362C16O368C24O368C31O405C37O440C42O440C47O453C49O468C51O485C57O525C63O552C69O531C74O525C75O602C88O597C101O597C102O618C105O622C112O649C114O664C117O656C124O588C127O390C130O690C132O701,,
tick,0x101490d4c,95916,0,0x0,0,0x3a1dfed736de,0x3a1dfed72fb7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72289,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,95916,0x3a1dfed73a86,26,_has /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:8:14,0x3a1dfed729a0,~
code-source-info,0x3a1dfed73a86,183,194,265,C0O209C4O223C9O233C14O248C19O248C25O263,,
code-creation,Eval,10,96250,0x3a1dfed7413e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/deflate.js:1:1,0x3a1dfed73ee8,~
script-source,184,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/deflate.js,'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]]\x2C\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data\x2C if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result\x2C generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life\x2C because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message\x2C if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options\x2C for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string'\x2C then result will be "binary string"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time\x2C unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   \x2C chunk1 = Uint8Array([1\x2C2\x2C3\x2C4\x2C5\x2C6\x2C7\x2C8\x2C9])\n *   \x2C chunk2 = Uint8Array([10\x2C11\x2C12\x2C13\x2C14\x2C15\x2C16\x2C17\x2C18\x2C19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1\x2C false);\n * deflate.push(chunk2\x2C true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION\x2C\n    method: Z_DEFLATED\x2C\n    chunkSize: 16384\x2C\n    windowBits: 15\x2C\n    memLevel: 8\x2C\n    strategy: Z_DEFAULT_STRATEGY\x2C\n    to: ''\n  }\x2C options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code\x2C if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm\x2C\n    opt.level\x2C\n    opt.method\x2C\n    opt.windowBits\x2C\n    opt.memLevel\x2C\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm\x2C opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text\x2C change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm\x2C dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[\x2C mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH\x2C `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe\x2C generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH\x2C keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also\x2C don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk\x2C false); // push one of data chunks\n * ...\n * push(chunk\x2C true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data\x2C mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status\x2C _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text\x2C change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm\x2C _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output\x2C strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output\x2C strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested\x2C each chunk\n *   will be string.\n *\n * By default\x2C stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler\x2C if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success\x2C\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks\x2C\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream\x2C if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string'\x2C then result will be "binary string"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   \x2C data = Uint8Array([1\x2C2\x2C3\x2C4\x2C5\x2C6\x2C7\x2C8\x2C9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input\x2C options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input\x2C true);\n\n  // That will never happens\x2C if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]]\x2C but creates raw data\x2C without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input\x2C options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input\x2C options);\n}\n\n\n/**\n * gzip(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]]\x2C but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input\x2C options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input\x2C options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n
code-source-info,0x3a1dfed7413e,184,0,11074,C0O0C4O11074,,
code-creation,Function,10,96666,0x3a1dfed74556,190, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/deflate.js:1:1,0x3a1dfed740a8,~
code-source-info,0x3a1dfed74556,184,0,11074,C0O0C27O35C30O35C34O35C36O81C39O81C43O81C45O127C48O127C52O127C54O174C57O174C61O174C63O221C66O221C70O221C72O264C76O271C81O281C85O264C87O477C88O477C90O502C92O502C94O528C95O528C97O553C99O553C101O578C103O578C105O610C107O610C109O643C110O643C112O665C114O665C116O6189C119O6197C128O6212C132O8292C135O8300C144O8317C148O8733C151O8741C160O8757C164O10966C166O10982C170O10993C172O11009C176O11020C178O11039C182O11053C184O11066C189O11073,,
tick,0x101153d78,97166,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74574,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,97500,0x3a1dfed7681e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/deflate.js:1:1,0x3a1dfed762b8,~
script-source,185,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/deflate.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors\x2C positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes\x2C not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes\x2C including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed\x2C need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started\x2C need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done\x2C accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect\x2C use this default.\n\nfunction err(strm\x2C errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output\x2C s.pending_buf\x2C s.pending_out\x2C len\x2C strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s\x2C last) {\n  trees._tr_flush_block(s\x2C (s.block_start >= 0 ? s.block_start : -1)\x2C s.strstart - s.block_start\x2C last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s\x2C b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s\x2C b) {\n//  put_byte(s\x2C (Byte)(b >> 8));\n//  put_byte(s\x2C (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream\x2C update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm\x2C buf\x2C start\x2C size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf\x2C strm->next_in\x2C len);\n  utils.arraySet(buf\x2C strm.input\x2C strm.next_in\x2C len\x2C start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler\x2C buf\x2C len\x2C start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler\x2C buf\x2C len\x2C start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded\x2C\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST\x2C and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s\x2C cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code\x2C\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258\x2C "Code too clever");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD\x2C "need lookahead");\n\n  do {\n    // Assert(cur_match < s->strstart\x2C "no future");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed\x2C and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead\x2C so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match\x2C given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match\x2C "match[2]?");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1)\x2C "wild scan");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read\x2C or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p\x2C n\x2C m\x2C more\x2C str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD\x2C "already enough lookahead");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit\x2C block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely\x2C but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead\x2C\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window\x2C s.window\x2C _w_size\x2C _w_size\x2C 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib\x2C so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain\x2C prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported)\x2C\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise\x2C window_size == 2*WSIZE so more >= 2.\n     * If there was sliding\x2C more >= WSIZE. So in all cases\x2C more >= 2.\n     */\n    //Assert(more >= 2\x2C "more < 2");\n    n = read_buf(s.strm\x2C s.window\x2C s.strstart + s.lookahead\x2C more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s\x2C s->ins_h\x2C s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s\x2C s->ins_h\x2C s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes\x2C ins_h is garbage\x2C\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written\x2C then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH\x2C ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window\x2C whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr\x2C (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data\x2C but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT\x2C or up\n//       * to end of window\x2C whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water\x2C (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD\x2C\n//    "not enough room for search");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream\x2C return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s\x2C flush) {\n  /* Stored blocks are limited to 0xffff bytes\x2C pending_buf is limited\n   * to pending_buf_size\x2C and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size\x2C "slide too late");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error("slide too late");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L\x2C "block gone");\n//    if (s.block_start < 0) throw new Error("block gone");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s\x2C 0); ***/\n      flush_block_only(s\x2C false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide\x2C otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s\x2C 0); ***/\n      flush_block_only(s\x2C false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s\x2C 1); ***/\n    flush_block_only(s\x2C true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s\x2C 0); ***/\n    flush_block_only(s\x2C false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream\x2C return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s\x2C flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead\x2C except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match\x2C plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary\x2C and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s\x2C s.strstart\x2C hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match\x2C discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code\x2C we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s\x2C hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s\x2C s.strstart\x2C s.match_start\x2C s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s\x2C s.strstart - s.match_start\x2C\n                     s.match_length - MIN_MATCH\x2C bflush); ***/\n      bflush = trees._tr_tally(s\x2C s.strstart - s.match_start\x2C s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s\x2C s.strstart\x2C hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH\x2C so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s\x2C s.ins_h\x2C s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH\x2C ins_h is garbage\x2C but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match\x2C output a literal byte */\n      //Tracevv((stderr\x2C"%c"\x2C s.window[s.strstart]));\n      /*** _tr_tally_lit(s\x2C s.window[s.strstart]\x2C bflush); ***/\n      bflush = trees._tr_tally(s\x2C 0\x2C s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s\x2C 0); ***/\n      flush_block_only(s\x2C false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s\x2C 1); ***/\n    flush_block_only(s\x2C true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s\x2C 0); ***/\n    flush_block_only(s\x2C false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above\x2C but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s\x2C flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead\x2C except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match\x2C plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary\x2C and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s\x2C s.strstart\x2C hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match\x2C discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code\x2C we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s\x2C hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH\x2C match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better\x2C output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s\x2C s.strstart-1\x2C s.prev_match\x2C s.prev_length);\n\n      /***_tr_tally_dist(s\x2C s.strstart - 1 - s.prev_match\x2C\n                     s.prev_length - MIN_MATCH\x2C bflush);***/\n      bflush = trees._tr_tally(s\x2C s.strstart - 1 - s.prev_match\x2C s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead\x2C the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s\x2C s.strstart\x2C hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s\x2C 0); ***/\n        flush_block_only(s\x2C false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position\x2C output a\n       * single literal. If there was a match but the current match\n       * is longer\x2C truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr\x2C"%c"\x2C s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s\x2C s.window[s.strstart-1]\x2C bflush); ***/\n      bflush = trees._tr_tally(s\x2C 0\x2C s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s\x2C 0) ***/\n        flush_block_only(s\x2C false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with\x2C wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH\x2C "no flush?");\n  if (s.match_available) {\n    //Tracevv((stderr\x2C"%c"\x2C s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s\x2C s.window[s.strstart-1]\x2C bflush); ***/\n    bflush = trees._tr_tally(s\x2C 0\x2C s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s\x2C 1); ***/\n    flush_block_only(s\x2C true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s\x2C 0); ***/\n    flush_block_only(s\x2C false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE\x2C simply look for runs of bytes\x2C generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s\x2C flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan\x2C strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead\x2C except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run\x2C plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1)\x2C "wild scan");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer\x2C else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s\x2C s.strstart\x2C s.strstart - 1\x2C s.match_length);\n\n      /*** _tr_tally_dist(s\x2C 1\x2C s.match_length - MIN_MATCH\x2C bflush); ***/\n      bflush = trees._tr_tally(s\x2C 1\x2C s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match\x2C output a literal byte */\n      //Tracevv((stderr\x2C"%c"\x2C s->window[s->strstart]));\n      /*** _tr_tally_lit(s\x2C s.window[s.strstart]\x2C bflush); ***/\n      bflush = trees._tr_tally(s\x2C 0\x2C s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s\x2C 0); ***/\n      flush_block_only(s\x2C false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s\x2C 1); ***/\n    flush_block_only(s\x2C true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s\x2C 0); ***/\n    flush_block_only(s\x2C false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY\x2C do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s\x2C flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr\x2C"%c"\x2C s->window[s->strstart]));\n    /*** _tr_tally_lit(s\x2C s.window[s.strstart]\x2C bflush); ***/\n    bflush = trees._tr_tally(s\x2C 0\x2C s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s\x2C 0); ***/\n      flush_block_only(s\x2C false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s\x2C 1); ***/\n    flush_block_only(s\x2C true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s\x2C 0); ***/\n    flush_block_only(s\x2C false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match\x2C good_match and max_chain_length\x2C depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length\x2C max_lazy\x2C nice_length\x2C max_chain\x2C func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0\x2C 0\x2C 0\x2C 0\x2C deflate_stored)\x2C          /* 0 store only */\n  new Config(4\x2C 4\x2C 8\x2C 4\x2C deflate_fast)\x2C            /* 1 max speed\x2C no lazy matches */\n  new Config(4\x2C 5\x2C 16\x2C 8\x2C deflate_fast)\x2C           /* 2 */\n  new Config(4\x2C 6\x2C 32\x2C 32\x2C deflate_fast)\x2C          /* 3 */\n\n  new Config(4\x2C 4\x2C 16\x2C 16\x2C deflate_slow)\x2C          /* 4 lazy matches */\n  new Config(8\x2C 16\x2C 32\x2C 32\x2C deflate_slow)\x2C         /* 5 */\n  new Config(8\x2C 16\x2C 128\x2C 128\x2C deflate_slow)\x2C       /* 6 */\n  new Config(8\x2C 32\x2C 128\x2C 256\x2C deflate_slow)\x2C       /* 7 */\n  new Config(32\x2C 128\x2C 258\x2C 1024\x2C deflate_slow)\x2C    /* 8 */\n  new Config(32\x2C 258\x2C 258\x2C 4096\x2C deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the "longest match" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib\x2C bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra\x2C name\x2C or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window\x2C\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization\x2C matches are limited to a distance of\n   * wSize-MAX_MATCH bytes\x2C but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize\x2C except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K\x2C this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps\x2C the oldest\n   * byte no longer takes part in the hash key\x2C that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation\x2C hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match\x2C don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size\x2C with interleaved fata\x2C\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block\x2C all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K\x2C we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code\x2C d_buf and l_buf have\n   * the same number of elements. To use different lengths\x2C an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm\x2C Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(...\x2C Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0\x2C Z_NULL\x2C 0)\n  :\n    1; // adler32(0\x2C Z_NULL\x2C 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm\x2C head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm\x2C level\x2C method\x2C windowBits\x2C memLevel\x2C strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm\x2C Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm\x2C s->lit_bufsize\x2C sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm\x2C level) {\n  return deflateInit2(strm\x2C level\x2C Z_DEFLATED\x2C MAX_WBITS\x2C DEF_MEM_LEVEL\x2C Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm\x2C flush) {\n  var old_flush\x2C s;\n  var beg\x2C val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm\x2C Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm\x2C (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L\x2C Z_NULL\x2C 0);\n      put_byte(s\x2C 31);\n      put_byte(s\x2C 139);\n      put_byte(s\x2C 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s\x2C 0);\n        put_byte(s\x2C 0);\n        put_byte(s\x2C 0);\n        put_byte(s\x2C 0);\n        put_byte(s\x2C 0);\n        put_byte(s\x2C s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s\x2C OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s\x2C (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s\x2C s.gzhead.time & 0xff);\n        put_byte(s\x2C (s.gzhead.time >> 8) & 0xff);\n        put_byte(s\x2C (s.gzhead.time >> 16) & 0xff);\n        put_byte(s\x2C (s.gzhead.time >> 24) & 0xff);\n        put_byte(s\x2C s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s\x2C s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s\x2C s.gzhead.extra.length & 0xff);\n          put_byte(s\x2C (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending\x2C 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s\x2C header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s\x2C strm.adler >>> 16);\n        putShortMSB(s\x2C strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L\x2C Z_NULL\x2C 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s\x2C s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s\x2C val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s\x2C val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler\x2C s.pending_buf\x2C s.pending - beg\x2C beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s\x2C strm.adler & 0xff);\n        put_byte(s\x2C (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L\x2C Z_NULL\x2C 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0\x2C deflate will be called again with\n       * more output space\x2C but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do\x2C\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH\x2C we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm\x2C Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm\x2C Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s\x2C flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s\x2C flush) :\n        configuration_table[s.level].func(s\x2C flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call\x2C see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0\x2C the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here\x2C this will be done at next call. This also\n       * ensures that for a very small output buffer\x2C we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s\x2C 0\x2C 0\x2C false);\n        /* For a full flush\x2C this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call\x2C see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0\x2C "bug2");\n  //if (strm.avail_out <= 0) { throw new Error("bug2");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s\x2C strm.adler & 0xff);\n    put_byte(s\x2C (strm.adler >> 8) & 0xff);\n    put_byte(s\x2C (strm.adler >> 16) & 0xff);\n    put_byte(s\x2C (strm.adler >> 24) & 0xff);\n    put_byte(s\x2C strm.total_in & 0xff);\n    put_byte(s\x2C (strm.total_in >> 8) & 0xff);\n    put_byte(s\x2C (strm.total_in >> 16) & 0xff);\n    put_byte(s\x2C (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s\x2C strm.adler >>> 16);\n    putShortMSB(s\x2C strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero\x2C the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm\x2C Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm\x2C Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm\x2C dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str\x2C n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers\x2C compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler\x2C dictionary\x2C dictLength); */\n    strm.adler = adler32(strm.adler\x2C dictionary\x2C dictLength\x2C 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window\x2C just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict\x2C dictionary\x2C dictLength - s.w_size\x2C s.w_size\x2C 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s\x2C s->ins_h\x2C s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n
code-source-info,0x3a1dfed7681e,185,0,61184,C0O0C4O61184,,
code-creation,Function,10,99750,0x3a1dfed77296,796, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/deflate.js:1:1,0x3a1dfed76788,~
code-source-info,0x3a1dfed
tick,0x1a375c0e8,99791,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74574,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x100c56610,99791,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74574,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
new,MemoryChunk,0x93fa3240000,262144
code-creation,Eval,10,100416,0x3a1dfed7c83e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/trees.js:1:1,0x3a1dfed7c338,~
script-source,186,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/trees.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes\x2C not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes\x2C including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing\x2Carray-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C1\x2C1\x2C1\x2C1\x2C2\x2C2\x2C2\x2C2\x2C3\x2C3\x2C3\x2C3\x2C4\x2C4\x2C4\x2C4\x2C5\x2C5\x2C5\x2C5\x2C0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0\x2C0\x2C0\x2C0\x2C1\x2C1\x2C2\x2C2\x2C3\x2C3\x2C4\x2C4\x2C5\x2C5\x2C6\x2C6\x2C7\x2C7\x2C8\x2C8\x2C9\x2C9\x2C10\x2C10\x2C11\x2C11\x2C12\x2C12\x2C13\x2C13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C2\x2C3\x2C7];\n\nvar bl_order =\n  [16\x2C17\x2C18\x2C0\x2C8\x2C7\x2C9\x2C6\x2C10\x2C5\x2C11\x2C4\x2C12\x2C3\x2C13\x2C2\x2C14\x2C1\x2C15];\n/* eslint-enable comma-spacing\x2Carray-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability\x2C to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure\x2C Freq = i*2\x2C Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed\x2C there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258\x2C the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree\x2C extra_bits\x2C extra_base\x2C elems\x2C max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree\x2C stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s\x2C w) {\n//    put_byte(s\x2C (uch)((w) & 0xff));\n//    put_byte(s\x2C (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s\x2C value\x2C length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s\x2C s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s\x2C c\x2C tree) {\n  send_bits(s\x2C tree[c * 2]/*.Code*/\x2C tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code\x2C using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code\x2C len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer\x2C keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s\x2C s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set\x2C heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length\x2C the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s\x2C desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n\x2C m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass\x2C compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr\x2C"\\nbit length overflow\\n"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up\x2C\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths\x2C scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr\x2C"code %d bits %d->%d\\n"\x2C m\x2C tree[m].Len\x2C bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree\x2C max_code\x2C bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1\x2C\n  //        "inconsistent bit counts");\n  //Tracev((stderr\x2C"\\ngen_codes: max_code %d "\x2C max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++\x2C len);\n\n    //Tracecv(tree != static_ltree\x2C (stderr\x2C"\\nn %3d %c l %2d c %4x (%x) "\x2C\n    //     n\x2C (isgraph(n) ? n : ' ')\x2C len\x2C tree[n].Code\x2C next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets\x2C global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256\x2C "tr_static_init: length != 256");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285\x2C so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256\x2C "tr_static_init: dist != 256");\n  dist >>= 7; /* from now on\x2C all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256\x2C "tr_static_init: 256+dist != 512");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist\x2C but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree\x2C L_CODES + 1\x2C bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n\x2C 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree\x2C extra_lbits\x2C LITERALS + 1\x2C L_CODES\x2C MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree\x2C extra_dbits\x2C 0\x2C          D_CODES\x2C MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0)\x2C extra_blbits\x2C 0\x2C         BL_CODES\x2C MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s\x2C s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s\x2C (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block\x2C storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s\x2C buf\x2C len\x2C header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s\x2C len);\n    put_short(s\x2C ~len);\n  }\n//  while (len--) {\n//    put_byte(s\x2C *buf++);\n//  }\n  utils.arraySet(s.pending_buf\x2C s.window\x2C buf\x2C len\x2C s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees\x2C using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree\x2C n\x2C m\x2C depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k\x2C\n * exchanging a node with the smallest of its two sons if necessary\x2C stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s\x2C tree\x2C k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree\x2C s.heap[j + 1]\x2C s.heap[j]\x2C s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree\x2C v\x2C s.heap[j]\x2C s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree\x2C setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s\x2C ltree\x2C dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s\x2C lc\x2C ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc)\x2C (stderr\x2C" '%c' "\x2C lc));\n      } else {\n        /* Here\x2C lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s\x2C code + LITERALS + 1\x2C ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s\x2C lc\x2C extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES\x2C "bad d_code");\n\n        send_code(s\x2C code\x2C dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s\x2C dist\x2C extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx\x2C\n      //       "pendingBuf overflow");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s\x2C END_BLOCK\x2C ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s\x2C desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n\x2C m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap\x2C with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists\x2C\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree\x2C\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s\x2C tree\x2C n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s\x2C tree\x2C n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s\x2C tree\x2C 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s\x2C tree\x2C 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point\x2C the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s\x2C desc);\n\n  /* The field len is now set\x2C we can generate the bit codes */\n  gen_codes(tree\x2C max_code\x2C s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s\x2C tree\x2C max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form\x2C using the codes in\n * bl_tree.\n */\nfunction send_tree(s\x2C tree\x2C max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s\x2C curlen\x2C s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s\x2C curlen\x2C s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6\x2C " 3_6?");\n      send_code(s\x2C REP_3_6\x2C s.bl_tree);\n      send_bits(s\x2C count - 3\x2C 2);\n\n    } else if (count <= 10) {\n      send_code(s\x2C REPZ_3_10\x2C s.bl_tree);\n      send_bits(s\x2C count - 3\x2C 3);\n\n    } else {\n      send_code(s\x2C REPZ_11_138\x2C s.bl_tree);\n      send_bits(s\x2C count - 11\x2C 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s\x2C s.dyn_ltree\x2C s.l_desc.max_code);\n  scan_tree(s\x2C s.dyn_dtree\x2C s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s\x2C s.bl_desc);\n  /* opt_len now includes the length of the tree representations\x2C except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr\x2C "\\ndyn trees: dyn %ld\x2C stat %ld"\x2C\n  //        s->opt_len\x2C s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts\x2C the\n * lengths of the bit length codes\x2C the literal tree and the distance tree.\n * IN assertion: lcodes >= 257\x2C dcodes >= 1\x2C blcodes >= 4.\n */\nfunction send_all_trees(s\x2C lcodes\x2C dcodes\x2C blcodes)\n//    deflate_state *s;\n//    int lcodes\x2C dcodes\x2C blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4\x2C "not enough codes");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES\x2C\n  //        "too many codes");\n  //Tracev((stderr\x2C "\\nbl counts: "));\n  send_bits(s\x2C lcodes - 257\x2C 5); /* not +255 as stated in appnote.txt */\n  send_bits(s\x2C dcodes - 1\x2C   5);\n  send_bits(s\x2C blcodes - 4\x2C  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr\x2C "\\nbl code %2d "\x2C bl_order[rank]));\n    send_bits(s\x2C s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/\x2C 3);\n  }\n  //Tracev((stderr\x2C "\\nbl tree: sent %ld"\x2C s->bits_sent));\n\n  send_tree(s\x2C s.dyn_ltree\x2C lcodes - 1); /* literal tree */\n  //Tracev((stderr\x2C "\\nlit tree: sent %ld"\x2C s->bits_sent));\n\n  send_tree(s\x2C s.dyn_dtree\x2C dcodes - 1); /* distance tree */\n  //Tracev((stderr\x2C "\\ndist tree: sent %ld"\x2C s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY\x2C using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       "black list" (0..6\x2C 14..25\x2C 28..31).\n *    b) There is at least one printable character belonging to the\n *       "white list" (9 {TAB}\x2C 10 {LF}\x2C 13 {CR}\x2C 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   "gray list" that is ignored in this detection algorithm:\n *   (7 {BEL}\x2C 8 {BS}\x2C 11 {VT}\x2C 12 {FF}\x2C 26 {SUB}\x2C 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6\x2C 14..25\x2C and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual ("black-listed") bytes. */\n  for (n = 0; n <= 31; n++\x2C black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual ("white-listed") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no "black-listed" or "white-listed" bytes:\n   * this stream either is empty or has tolerated ("gray-listed") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree\x2C static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree\x2C static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree\x2C static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s\x2C buf\x2C stored_len\x2C last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s\x2C (STORED_BLOCK << 1) + (last ? 1 : 0)\x2C 3);    /* send block type */\n  copy_block(s\x2C buf\x2C stored_len\x2C true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits\x2C of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s\x2C STATIC_TREES << 1\x2C 3);\n  send_code(s\x2C END_BLOCK\x2C static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees\x2C static\n * trees or store\x2C and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s\x2C buf\x2C stored_len\x2C last)\n//DeflateState *s;\n//charf *buf;       /* input block\x2C or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb\x2C static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s\x2C s.l_desc);\n    // Tracev((stderr\x2C "\\nlit data: dyn %ld\x2C stat %ld"\x2C s->opt_len\x2C\n    //        s->static_len));\n\n    build_tree(s\x2C s.d_desc);\n    // Tracev((stderr\x2C "\\ndist data: dyn %ld\x2C stat %ld"\x2C s->opt_len\x2C\n    //        s->static_len));\n    /* At this point\x2C opt_len and static_len are the total bit lengths of\n     * the compressed block data\x2C excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees\x2C and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr\x2C "\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u "\x2C\n    //        opt_lenb\x2C s->opt_len\x2C static_lenb\x2C s->static_len\x2C stored_len\x2C\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0\x2C "lost buf");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush\x2C because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE\x2C it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s\x2C buf\x2C stored_len\x2C last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s\x2C (STATIC_TREES << 1) + (last ? 1 : 0)\x2C 3);\n    compress_block(s\x2C static_ltree\x2C static_dtree);\n\n  } else {\n    send_bits(s\x2C (DYN_TREES << 1) + (last ? 1 : 0)\x2C 3);\n    send_all_trees(s\x2C s.l_desc.max_code + 1\x2C s.d_desc.max_code + 1\x2C max_blindex + 1);\n    compress_block(s\x2C s.dyn_ltree\x2C s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent\x2C "bad compressed size");\n  /* The above check is made mod 2^32\x2C for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr\x2C"\\ncomprlen %lu(%lu) "\x2C s->compressed_len>>3\x2C\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s\x2C dist\x2C lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length\x2C in_length\x2C dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here\x2C lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES\x2C  "_tr_tally: bad match");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults\x2C\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr\x2C"\\nlast_lit %u\x2C in %ld\x2C out ~%ld(%ld%%) "\x2C\n//    //       s->last_lit\x2C in_length\x2C out_length\x2C\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n
code-source-info,0x3a1dfed7c83e,186,0,39879,C0O0C4O39879,,
code-creation,Function,10,101875,0x3a1dfed7d6c6,502, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/trees.js:1:1,0x3a1dfed7c7a8,~
code-source-info,0x3a1dfed7d6c
tick,0x1a36493f4,101916,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7733a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74574,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,101958,0x93fa3243bd6,26,zero /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/trees.js:45:14,0x3a1dfed7c870,~
code-source-info,0x93fa3243bd6,186,1676,1744,C0O1698C5O1719C11O1719C16O1727C17O1736C21O1706C25O1743,,
tick,0x100e22078,102166,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed77343,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74574,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,102208,0x93fa3244186,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:1:1,0x93fa3244030,~
script-source,187,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js,'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler\x2C buf\x2C len\x2C pos) {\n  var s1 = (adler & 0xffff) |0\x2C\n      s2 = ((adler >>> 16) & 0xffff) |0\x2C\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552\x2C to keep\n    // s2 in 31-bits\x2C because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n
code-source-info,0x93fa3244186,187,0,1656,C0O0C4O1656,,
code-creation,Function,10,102291,0x93fa324426e,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:1:1,0x93fa32440f0,~
code-source-info,0x93fa324426e,187,0,1656,C0O0C5O1630C7O1645C12O1655,,
code-creation,Eval,10,102500,0x93fa324492e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/crc32.js:1:1,0x93fa32447c8,~
script-source,188,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/crc32.js,'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array\x2C since untyped makes no boost here\nfunction makeTable() {\n  var c\x2C table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc\x2C buf\x2C len\x2C pos) {\n  var t = crcTable\x2C\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n
code-source-info,0x93fa324492e,188,0,1750,C0O0C4O1750,,
code-creation,Function,10,102541,0x93fa3244a76,28, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/crc32.js:1:1,0x93fa3244898,~
code-source-info,0x93fa3244a76,188,0,1750,C0O0C15O1488C18O1488C20O1726C22O1741C27O1749,,
code-creation,LazyCompile,10,102583,0x93fa3244de6,77,makeTable /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/crc32.js:27:19,0x93fa3244960,~
code-source-info,0x93fa3244de6,188,1196,1408,C0O1218C3O1238C5O1243C9O1243C14O1261C17O1285C19O1290C21O1290C26O1308C28O1316C38O1340C41O1335C48O1353C52O1296C57O1272C60O1372C62O1381C66O1251C71O1225C74O1393C76O1406,,
code-creation,Eval,10,102875,0x93fa3245426,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/messages.js:1:1,0x93fa32452d0,~
script-source,189,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/messages.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary'\x2C     /* Z_NEED_DICT       2  */\n  1:      'stream end'\x2C          /* Z_STREAM_END      1  */\n  0:      ''\x2C                    /* Z_OK              0  */\n  '-1':   'file error'\x2C          /* Z_ERRNO         (-1) */\n  '-2':   'stream error'\x2C        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error'\x2C          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory'\x2C /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error'\x2C        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n
code-source-info,0x93fa3245426,189,0,1538,C0O0C4O1538,,
code-creation,Function,10,102958,0x93fa324556e,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/messages.js:1:1,0x93fa3245390,~
code-source-info,0x93fa324556e,189,0,1538,C0O976C4O991C9O1537,,
code-creation,LazyCompile,10,103000,0x93fa32457b6,32,Config /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/deflate.js:1040:16,0x3a1dfed76d00,~
code-source-info,0x93fa32457b6,185,34765,34968,C0O34823C2O34840C6O34857C8O34871C12O34885C14O34902C18O34919C20O34934C24O34949C26O34959C31O34967,,
code-creation,Eval,10,103291,0x93fa3245fae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/strings.js:1:1,0x93fa3245d98,~
script-source,190,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/strings.js,// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null\x2C [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null\x2C new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note\x2C that 5 & 6-byte values and some 4-byte values can not be represented in JS\x2C\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed\x2C when possible)\nexports.string2buf = function (str) {\n  var buf\x2C c\x2C c2\x2C m_pos\x2C i\x2C str_len = str.length\x2C buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0\x2C m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf\x2C len) {\n  // On Chrome\x2C the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that\x2C we can use this optimization\x2C\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null\x2C utils.shrinkBuf(buf\x2C len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf\x2C buf.length);\n};\n\n\n// Convert binary string (typed\x2C when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0\x2C len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf\x2C max) {\n  var i\x2C out\x2C c\x2C c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons\x2C Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0\x2C i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf\x2C out);\n};\n\n\n// Calculate max possible position in utf8 buffer\x2C\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf\x2C max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position\x2C until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence\x2C\n  // return max\x2C because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small\x2C\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n
code-source-info,0x93fa3245fae,190,0,5293,C0O0C4O5293,,
code-creation,Function,10,103500,0x93fa324644e,325, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/strings.js:1:1,0x93fa3245f18,~
code-source-info,0x93fa324644e,190,0,5293,C0O0C11O60C14O60C18O60C20O265C21O265C23O294C24O294C29O307C33O314C38O327C50O327C69O362C70O375C79O392C83O399C88O412C95O428C104O424C110O412C129O459C130O476C136O701C139O711C151O701C156O701C158O735C160O740C164O740C169O756C176O773C192O788C205O803C218O818C231O833C242O768C246O748C251O722C254O852C273O882C279O866C283O965C287O984C291O3029C295O3051C299O3164C303O3186C307O3379C311O3398C315O4712C319O4731C324O5292,,
tick,0x1a375be7c,103541,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed74586,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed72296,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,103791,0x93fa32474fe,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/zstream.js:1:1,0x93fa32473a8,~
script-source,191,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/zstream.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific\x2C because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific\x2C because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message\x2C NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n
code-source-info,0x93fa32474fe,191,0,1811,C0O0C4O1811,,
code-creation,Function,10,103875,0x93fa32475e6,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/zstream.js:1:1,0x93fa3247468,~
code-source-info,0x93fa32475e6,191,0,1811,C0O0C5O1785C7O1800C12O1810,,
code-creation,Eval,10,104208,0x93fa32481e6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:1:1,0x93fa3247ff0,~
script-source,192,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js,'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data\x2C if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result\x2C generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message\x2C if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options\x2C for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string'\x2C then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested\x2C\n *   chunk length can differ from `chunkSize`\x2C depending on content.\n *\n * By default\x2C when no options set\x2C autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   \x2C chunk1 = Uint8Array([1\x2C2\x2C3\x2C4\x2C5\x2C6\x2C7\x2C8\x2C9])\n *   \x2C chunk2 = Uint8Array([10\x2C11\x2C12\x2C13\x2C14\x2C15\x2C16\x2C17\x2C18\x2C19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1\x2C false);\n * inflate.push(chunk2\x2C true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384\x2C\n    windowBits: 0\x2C\n    to: ''\n  }\x2C options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data\x2C if not set directly\x2C\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size\x2C we can do autodetect only\n  // for deflate. So\x2C if window size not set\x2C force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code\x2C if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm\x2C\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm\x2C this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm\x2C opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[\x2C mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH\x2C `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe\x2C generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH\x2C keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also\x2C don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk\x2C false); // push one of data chunks\n * ...\n * push(chunk\x2C true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data\x2C mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status\x2C _mode;\n  var next_out_utf8\x2C tail\x2C utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm\x2C c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm\x2C dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output\x2C strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output\x2C next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output\x2C strm.output\x2C next_out_utf8\x2C tail\x2C 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output\x2C strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data\x2C we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists\x2C inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested\x2C each chunk\n *   will be string.\n *\n * By default\x2C stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler\x2C if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success\x2C\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks\x2C\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here\x2C until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream\x2C if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string'\x2C then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested\x2C\n *   chunk length can differ from `chunkSize`\x2C depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   \x2C input = pako.deflate([1\x2C2\x2C3\x2C4\x2C5\x2C6\x2C7\x2C8\x2C9])\n *   \x2C output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input\x2C options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input\x2C true);\n\n  // That will never happens\x2C if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]]\x2C but creates raw data\x2C without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input\x2C options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input\x2C options);\n}\n\n\n/**\n * ungzip(data[\x2C options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]]\x2C because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n
code-source-info,0x93fa32481e6,192,0,12412,C0O0C4O12412,,
code-creation,Function,10,104666,0x93fa32485b6,174, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:1:1,0x93fa3248150,~
code-source-info,0x93fa32485b6,192,0,12412,C0O0C22O35C25O35C29O35C31O81C34O81C38O81C40O127C43O127C47O127C49O174C52O174C56O174C58O222C61O222C65O222C67O269C70O269C74O269C76O315C79O315C83O315C85O359C89O366C94O376C98O359C100O5820C103O5828C112O5843C116O9381C119O9389C128O9406C132O9824C135O9832C144O9848C148O12298C150O12314C154O12325C156O12341C160O12352C162O12371C166O12385C168O12401C173O12411,,
tick,0x1a3627100,104708,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7229e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
scavenge,begin,0,100643,1643426345588
new,MemoryChunk,0x12ae91280000,262144
new,MemoryChunk,0x17d305500000,262144
scavenge,end,0,100870,1643426345588
code-creation,Eval,10,105625,0x93fa324a4ee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:1:1,0x93fa3249f88,~
script-source,193,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors\x2C positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits\x2C including last-flag bit */\nvar        TYPEDO = 13;    /* i: same\x2C but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below\x2C but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below\x2C but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check\x2C done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib\x2C bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window\x2C if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in "in" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js\x2C we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false\x2C allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr\x2C "inflate: reset\\n"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm\x2C windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits\x2C free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm\x2C windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr\x2C "inflate: allocated\\n"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm\x2C windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm\x2C DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined\x2C then instead this routine builds the tables the\n first time it's called\x2C and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes\x2C in\n exchange for a little execution time.  However\x2C BUILDFIXED should not be\n used for threaded applications\x2C since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix\x2C distfix; // We have no pointers in JS\x2C so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS\x2C  state.lens\x2C 0\x2C 288\x2C lenfix\x2C   0\x2C state.work\x2C { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS\x2C state.lens\x2C 0\x2C 32\x2C   distfix\x2C 0\x2C state.work\x2C { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet\x2C create it.  This is only called\n when a window is already in use\x2C or when output has been written during this\n inflate call\x2C but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage\x2C since only the last 32K of output is copied to the sliding window\n upon return from inflate()\x2C and since all distances after the first 32K of\n output will fall in the output data\x2C making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm\x2C src\x2C end\x2C copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already\x2C allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window\x2C src\x2C end - state.wsize\x2C state.wsize\x2C 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext\x2C end - copy\x2C dist);\n    utils.arraySet(state.window\x2C src\x2C end - copy\x2C dist\x2C state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window\x2C end - copy\x2C copy);\n      utils.arraySet(state.window\x2C src\x2C end - copy\x2C copy\x2C 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm\x2C flush) {\n  var state;\n  var input\x2C output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have\x2C left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in\x2C _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits\x2C here_op\x2C here_val; // paked "here" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits\x2C last_op\x2C last_val; // paked "last" denormalized (JS specific)\n  var len;                    /* length to copy for repeats\x2C bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16\x2C 17\x2C 18\x2C 0\x2C 8\x2C 7\x2C 9\x2C 6\x2C 10\x2C 5\x2C 11\x2C 4\x2C 12\x2C 3\x2C 13\x2C 2\x2C 14\x2C 1\x2C 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L\x2C Z_NULL\x2C 0)*/;\n          //=== CRC2(state.check\x2C hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check\x2C hbuf\x2C 2\x2C 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr\x2C "inflate:   zlib header ok\\n"));\n        strm.adler = state.check = 1/*adler32(0L\x2C Z_NULL\x2C 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check\x2C hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check\x2C hbuf\x2C 2\x2C 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check\x2C hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check\x2C hbuf\x2C 4\x2C 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check\x2C hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check\x2C hbuf\x2C 2\x2C 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check\x2C hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check\x2C hbuf\x2C 2\x2C 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra\x2C\n                input\x2C\n                next\x2C\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy\x2C\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy\x2C*/\n                len\n              );\n              //zmemcpy(state.head.extra + len\x2C next\x2C\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check\x2C input\x2C copy\x2C next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check\x2C input\x2C copy\x2C next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check\x2C input\x2C copy\x2C next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L\x2C Z_NULL\x2C 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr\x2C "inflate:     stored block%s\\n"\x2C\n            //        state.last ? " (last)" : ""));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr\x2C "inflate:     fixed codes block%s\\n"\x2C\n            //        state.last ? " (last)" : ""));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr\x2C "inflate:     dynamic codes block%s\\n"\x2C\n            //        state.last ? " (last)" : ""));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr\x2C "inflate:       stored length %u\\n"\x2C\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put\x2C next\x2C copy); ---\n          utils.arraySet(output\x2C input\x2C next\x2C copy\x2C put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr\x2C "inflate:       stored end\\n"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr\x2C "inflate:       table sizes ok\\n"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES\x2C state.lens\x2C 0\x2C 19\x2C state.lencode\x2C 0\x2C state.work\x2C opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr\x2C "inflate:       code lengths ok\\n"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants\x2C which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS\x2C state.lens\x2C 0\x2C state.nlen\x2C state.lencode\x2C 0\x2C state.work\x2C opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS\x2C state.lens\x2C state.nlen\x2C state.ndist\x2C state.distcode\x2C 0\x2C state.work\x2C opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr\x2C 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm\x2C _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr\x2C here.val >= 0x20 && here.val < 0x7f ?\n          //        "inflate:         literal '%c'\\n" :\n          //        "inflate:         literal 0x%02x\\n"\x2C here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr\x2C "inflate:         end of block\\n"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr\x2C "inflate:         length %u\\n"\x2C state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr\x2C "inflate:         distance %u\\n"\x2C state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults\x2C\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr\x2C "inflate.c too far\\n"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check\x2C put - _out\x2C _out);*/\n                (state.flags ? crc32(state.check\x2C output\x2C _out\x2C put - _out) : adler32(state.check\x2C output\x2C _out\x2C put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int\x2C zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr\x2C "inflate:   check matches trailer\\n"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr\x2C "inflate:   length matches trailer\\n"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for "goto inf_leave"\x2C emulated via "break inf_leave"\n\n  /*\n     Return from inflate()\x2C updating the total counts and the check value.\n     If there was no progress during the inflate() call\x2C return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm\x2C strm.output\x2C strm.next_out\x2C _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check\x2C strm.next_out - _out\x2C _out);*/\n      (state.flags ? crc32(state.check\x2C output\x2C _out\x2C strm.next_out - _out) : adler32(state.check\x2C output\x2C _out\x2C strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm\x2C head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm\x2C dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0\x2C null\x2C 0)*/\n    /* dictid = adler32(dictid\x2C dictionary\x2C dictLength); */\n    dictid = adler32(dictid\x2C dictionary\x2C dictLength\x2C 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow()\x2C which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm\x2C dictionary\x2C dictLength\x2C dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr\x2C "inflate:   dictionary set\\n"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n
code-source-info,0x93fa324a4ee,193,0,50284,C0O0C4O50284,,
code-creation,Function,10,107458,0x93fa324aa76,387, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:1:1,0x93fa324a458,~
code-source-info,0x93fa324aa
tick,0x100e1c848,107500,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa32485cf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7229e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x100e1c95c,107541,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa32485cf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7229e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,107875,0x93fa324e496,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js:1:1,0x93fa324e320,~
script-source,194,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits\x2C including last-flag bit */\n\n/*\n   Decode literal\x2C length\x2C and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available\x2C an end-of-block is encountered\x2C or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate()\x2C for\n   example\x2C a 16K input buffer and a 64K output buffer\x2C more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return\x2C state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code\x2C inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code\x2C 5 bits for the length extra\x2C 15 bits for the distance code\x2C\n      and 13 bits for the distance extra.  This totals 48 bits\x2C or six bytes.\n      Therefore if strm.avail_in >= 6\x2C then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes\x2C which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm\x2C start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end\x2C enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`\x2C avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window\x2C if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits\x2C operation\x2C extra bits\x2C or */\n                              /*  window position\x2C window bytes to copy */\n  var len;                    /* match length\x2C unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input\x2C output; // JS specific\x2C because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr\x2C here.val >= 0x20 && here.val < 0x7f ?\n        //        "inflate:         literal '%c'\\n" :\n        //        "inflate:         literal 0x%02x\\n"\x2C here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr\x2C "inflate:         length %u\\n"\x2C len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr\x2C "inflate:         distance %u\\n"\x2C dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults\x2C\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via "continue"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr\x2C "inflate:         end of block\\n"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via "continue"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry\x2C bits < 8\x2C so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n
code-source-info,0x93fa324e496,194,0,12668,C0O0C4O12668,,
code-creation,Function,10,108333,0x93fa324e586,23, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js:1:1,0x93fa324e400,~
code-source-info,0x93fa324e586,194,0,12668,C0O0C5O1020C7O1020C9O1091C11O1091C13O2598C17O2613C22O12667,,
tick,0x1a3726538,108500,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa324aaeb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa32485cf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7229e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,108625,0x93fa324f706,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inftrees.js:1:1,0x93fa324f500,~
script-source,195,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inftrees.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C 10\x2C 11\x2C 13\x2C 15\x2C 17\x2C 19\x2C 23\x2C 27\x2C 31\x2C\n  35\x2C 43\x2C 51\x2C 59\x2C 67\x2C 83\x2C 99\x2C 115\x2C 131\x2C 163\x2C 195\x2C 227\x2C 258\x2C 0\x2C 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16\x2C 16\x2C 16\x2C 16\x2C 16\x2C 16\x2C 16\x2C 16\x2C 17\x2C 17\x2C 17\x2C 17\x2C 18\x2C 18\x2C 18\x2C 18\x2C\n  19\x2C 19\x2C 19\x2C 19\x2C 20\x2C 20\x2C 20\x2C 20\x2C 21\x2C 21\x2C 21\x2C 21\x2C 16\x2C 72\x2C 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 7\x2C 9\x2C 13\x2C 17\x2C 25\x2C 33\x2C 49\x2C 65\x2C 97\x2C 129\x2C 193\x2C\n  257\x2C 385\x2C 513\x2C 769\x2C 1025\x2C 1537\x2C 2049\x2C 3073\x2C 4097\x2C 6145\x2C\n  8193\x2C 12289\x2C 16385\x2C 24577\x2C 0\x2C 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16\x2C 16\x2C 16\x2C 16\x2C 17\x2C 17\x2C 18\x2C 18\x2C 19\x2C 19\x2C 20\x2C 20\x2C 21\x2C 21\x2C 22\x2C 22\x2C\n  23\x2C 23\x2C 24\x2C 24\x2C 25\x2C 25\x2C 26\x2C 26\x2C 27\x2C 27\x2C\n  28\x2C 28\x2C 29\x2C 29\x2C 64\x2C 64\n];\n\nmodule.exports = function inflate_table(type\x2C lens\x2C lens_index\x2C codes\x2C table\x2C table_index\x2C work\x2C opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0\x2C max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code\x2C index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits\x2C here_op\x2C here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long\x2C and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length\x2C and the codes are integer\n   increments for the same length\x2C and zeros are appended as the length\n   increases.  For the deflate format\x2C these bits are stored backwards\n   from their more natural integer increment ordering\x2C and so when the\n   decoding tables are built in the large loop below\x2C the integer codes\n   are incremented backwards.\n\n   This routine assumes\x2C but does not check\x2C that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length\x2C\n   creating from that a table of starting indices for each length in the\n   sorted table\x2C and then entering the symbols in order in the sorted\n   table.  The sorted table is work[]\x2C with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well\x2C i.e. finding\n   the minimum and maximum length codes\x2C determining if there are any\n   codes at all\x2C checking for a valid set of lengths\x2C and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths\x2C force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols\x2C but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length\x2C by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop\x2C the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr\x2C\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root\x2C sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled\x2C and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed\x2C it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this\x2C and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols\x2C and the loop terminates when\n   all codes of length max\x2C i.e. all codes\x2C have been processed.  This\n   routine permits incomplete codes\x2C so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch\x2C\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol\x2C update count\x2C len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time\x2C transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry\x2C since if the code is incomplete\x2C the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n
code-source-info,0x93fa324f706,195,0,12500,C0O0C4O12500,,
code-creation,Function,10,109125,0x93fa324fcae,75, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inftrees.js:1:1,0x93fa324f670,~
code-source-info,0x93fa324fcae,195,0,12500,C0O0C5O988C8O988C12O988C14O1031C16O1031C18O1053C22O1053C24O1077C28O1077C30O1138C31O1138C33O1152C35O1152C37O1167C39O1167C41O1183C45O1183C47O1357C51O1357C53O1536C57O1536C59O1738C63O1738C65O1910C69O1925C74O12499,,
code-creation,Eval,10,109333,0x93fa3250c16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/constants.js:1:1,0x93fa3250ac0,~
script-source,196,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/constants.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0\x2C\n  Z_PARTIAL_FLUSH:    1\x2C\n  Z_SYNC_FLUSH:       2\x2C\n  Z_FULL_FLUSH:       3\x2C\n  Z_FINISH:           4\x2C\n  Z_BLOCK:            5\x2C\n  Z_TREES:            6\x2C\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors\x2C positive values are used for special but normal events.\n  */\n  Z_OK:               0\x2C\n  Z_STREAM_END:       1\x2C\n  Z_NEED_DICT:        2\x2C\n  Z_ERRNO:           -1\x2C\n  Z_STREAM_ERROR:    -2\x2C\n  Z_DATA_ERROR:      -3\x2C\n  //Z_MEM_ERROR:     -4\x2C\n  Z_BUF_ERROR:       -5\x2C\n  //Z_VERSION_ERROR: -6\x2C\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0\x2C\n  Z_BEST_SPEED:             1\x2C\n  Z_BEST_COMPRESSION:       9\x2C\n  Z_DEFAULT_COMPRESSION:   -1\x2C\n\n\n  Z_FILTERED:               1\x2C\n  Z_HUFFMAN_ONLY:           2\x2C\n  Z_RLE:                    3\x2C\n  Z_FIXED:                  4\x2C\n  Z_DEFAULT_STRATEGY:       0\x2C\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0\x2C\n  Z_TEXT:                   1\x2C\n  //Z_ASCII:                1\x2C // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2\x2C\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline\x2C depending on var type\n};\n
code-source-info,0x93fa3250c16,196,0,2312,C0O0C4O2312,,
code-creation,Function,10,109458,0x93fa3250e76,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/constants.js:1:1,0x93fa3250b80,~
code-source-info,0x93fa3250e76,196,0,2312,C0O976C4O991C9O2311,,
code-creation,Eval,10,109666,0x93fa325149e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/gzheader.js:1:1,0x93fa3251348,~
script-source,197,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/gzheader.js,'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is'\x2C without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose\x2C\n// including commercial applications\x2C and to alter it and redistribute it\n// freely\x2C subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product\x2C an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such\x2C and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually\x2C we don't need it in JS\x2C\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n
code-source-info,0x93fa325149e,197,0,2240,C0O0C4O2240,,
code-creation,Function,10,109791,0x93fa3251586,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/gzheader.js:1:1,0x93fa3251408,~
code-source-info,0x93fa3251586,197,0,2240,C0O0C5O2213C7O2228C12O2239,,
tick,0x1a369eb88,109791,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa3248605,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x3a1dfed7229e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d274,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,110000,0x93fa3252216,283,pathToFileURL node:internal/url:1455:23,0xe898a5db260,~
code-source-info,0x93fa3252216,33,40073,41302,C0O40103C10O40103C16O40125C24O40142C30O40142C37O40255C45O40255C51O40307C58O40314C63O40328C79O40334C84O40328C85O40471C87O40476C91O40498C97O40505C102O40520C118O40526C123O40520C124O40641C127O40659C131O40657C135O40688C140O40729C145O40748C151O40748C160O40729C166O40706C170O40704C176O40816C181O40821C186O40821C192O40934C197O41030C201O41037C205O40934C211O41047C213O41069C215O41065C222O41101C228O41131C230O41127C235O41182C239O41189C242O41172C248O41198C251O41203C255O41194C260O41214C269O41235C272O41253C276O41251C280O41286C282O41300,,
code-creation,LazyCompile,10,110041,0x93fa32524f6,105,URL node:internal/url:620:14,0xe898a5da078,~
code-source-info,0x93fa32524f6,33,16989,17324,C0O17043C5O17071C7O17089C11O17121C18O17136C28O17150C30O17149C34O17170C38O17175C45O17190C48O17186C53O17184C57O17208C73O17260C81O17260C98O17208C104O17323,,
code-creation,LazyCompile,10,110041,0x93fa32526c6,51,URLContext node:internal/url:160:14,0xe898a5d9800,~
code-source-info,0x93fa32526c6,33,3700,3912,C0O3709C1O3720C5O3729C7O3741C11O3752C13O3766C17O3776C19O3790C23O3800C24O3810C28O3822C29O3832C33O3844C35O3854C39O3864C40O3875C44O3887C45O3901C50O3911,,
code-creation,LazyCompile,10,110125,0x93fa325291e,190,onParseComplete node:internal/url:532:25,0xe898a5d9da8,~
code-source-info,0x93fa325291e,33,14195,14864,C0O14309C2O14314C4O14313C8O14326C10O14336C14O14347C16O14358C20O14372C22O14396C24O14394C29O14420C43O14385C47O14445C49O14469C51O14467C56O14493C70O14458C74O14518C76O14527C80O14537C82O14557C84O14555C89O14577C101O14585C103O14546C107O14598C109O14608C113O14619C115O14632C119O14646C121O14655C125O14665C127O14675C129O14674C134O14728C136O14733C141O14753C144O14749C149O14747C153O14776C155O14781C157O14780C163O14795C168O14804C172O14818C177O14840C179O14839C183O14818C189O14863,,
code-creation,LazyCompile,10,110208,0x93fa3252d8e,889,URLSearchParams node:internal/url:182:14,0xe898a5d98a0,~
code-source-info,0x93fa3252d8e
code-creation,LazyCompile,10,110250,0x93fa3253376,35,initSearchParams node:internal/url:1016:26,0xe898a5dadc0,~
code-source-info,0x93fa3253376,33,27037,27152,C0O27053C4O27070C6O27074C11O27088C15O27098C16O27105C17O27112C19O27116C25O27132C29O27130C34O27151,,
code-creation,LazyCompile,10,110291,0x93fa3253536,199,encodePathChars node:internal/url:1440:25,0xe898a5db210,~
code-source-info,0x93fa3253536,33,39357,40049,C0O39372C8O39376C15O39420C22O39464C31O39431C38O39544C46O39562C52O39562C59O39607C66O39651C75O39618C82O39677C90O39681C97O39726C104O39770C113O39737C120O39794C128O39798C135O39843C142O39887C151O39854C158O39918C166O39922C173O39967C180O40011C189O39978C196O40031C198O40047,,
code-creation,LazyCompile,10,110333,0x93fa3253776,70,set pathname node:internal/url:884:15,0xe898a5da9b0,~
code-source-info,0x93fa3253776,33,23613,23815,C0O23660C5O23682C9O23691C11O23690C16O23712C17O23719C18O23724C29O23736C38O23759C40O23758C49O23799C54O23799C63O23724C69O23814,,
code-creation,LazyCompile,10,110333,0x93fa32538d6,31, node:internal/url:636:21,0xe898a5da150,~
code-source-info,0x93fa32538d6,33,17431,17506,C0O17440C4O17453C6O17452C10O17462C19O17470C21O17468C26O17496C30O17502,,
code-creation,LazyCompile,10,110375,0x93fa3253a16,108,onParsePathComplete node:internal/url:591:29,0xe898a5d9f88,~
code-source-info,0x93fa3253a16,33,16154,16620,C0O16272C2O16277C4O16276C8O16289C10O16302C12O16300C17O16322C22O16335C24O16344C28O16356C35O16369C40O16366C46O16404C48O16413C52O16423C59O16437C61O16436C66O16433C70O16515C72O16528C74O16526C79O16548C84O16561C86O16570C90O16582C97O16595C102O16592C107O16619,,
code-creation,LazyCompile,10,110500,0x93fa3253cb6,477,packageExportsResolve node:internal/modules/esm/resolve:604:31,0x3a1583d2c270,~
code-source-info,0x93fa3253cb
code-creation,LazyCompile,10,110541,0x93fa32561ce,161,isConditionalExportsMainSugar node:internal/modules/esm/resolve:573:39,0x3a1583d2c220,~
code-source-info,0x93fa32561ce,104,18197,19094,C0O18233C8O18268C11O18268C17O18291C18O18303C19O18306C29O18359C30O18372C31O18389C36O18389C41O18452C43O18469C45O18487C47O18499C51O18492C56O18530C58O18534C62O18573C64O18577C70O18590C76O18594C81O18607C90O18615C95O18630C102O18685C104O18708C109O18743C116O18789C119O18789C129O18905C135O18986C144O18749C149O18743C150O18508C155O18474C158O19066C160O19092,,
code-creation,LazyCompile,10,110583,0x93fa325649e,403,resolvePackageTarget node:internal/modules/esm/resolve:501:30,0x3a1583d2c1d0,~
code-source-info,0x93fa325649e
code-creation,LazyCompile,10,110625,0x93fa3256806,28,isArrayIndex node:internal/modules/esm/resolve:495:22,0x3a1583d2c180,~
code-source-info,0x93fa3256806,104,15780,15899,C0O15805C2O15805C5O15813C9O15829C14O15838C15O15851C16O15854C17O15868C24O15883C27O15897,,
new,MemoryChunk,0x3f19539c0000,278528
code-creation,LazyCompile,10,110750,0x93fa32569c6,451,resolvePackageTargetString node:internal/modules/esm/resolve:447:36,0x3a1583d2c130,~
code-source-info,0x93fa32569c
code-creation,LazyCompile,10,110875,0x93fa3256dc6,18,toString node:internal/url:730:11,0xe898a5da290,~
code-source-info,0x93fa3256dc6,33,20046,20084,C0O20055C4O20067C6O20066C12O20075C17O20080,,
code-creation,LazyCompile,10,110916,0x93fa3257076,393, node:internal/url:682:12,0xe898a5da240,~
code-source-info,0x93fa
tick,0x100fe3b50,110958,0,0x0,3,0x0,0x93fa3257084,0x93fa3256dd2,0x93fa32524f8,0x93fa3252508,0x93fa3256ad5,0x93fa32564bf,0x93fa32565fb,0x93fa3253d0b,0x1b9b8816ecd8,0x172aed050aa8,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x36998917d27d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,110958,0x93fa32573f6,103, node:internal/validators:144:3,0x30d75b99ed8,~
code-source-info,0x93fa32573f6,17,4197,4570,C10O4197C16O4217C24O4239C32O4263C40O4305C50O4352C54O4366C57O4366C71O4441C79O4506C95O4512C100O4506C102O4569,,
code-creation,LazyCompile,10,111000,0x93fa3257756,78,get pathname node:internal/url:875:15,0xe898a5da940,~
code-source-info,0x93fa3257756,33,23404,23597,C0O23425C4O23430C6O23429C10O23444C14O23453C16O23452C21O23485C27O23489C30O23493C31O23506C36O23511C42O23518C47O23531C49O23541C50O23546C57O23557C60O23580C68O23557C77O23593,,
code-creation,LazyCompile,10,111083,0x93fa325794e,168,finalizeEsmResolution node:internal/modules/cjs/loader:939:31,0x3a1583d1f6d8,~
code-source-info,0x93fa325794e,98,29193,29876,C0O29243C5O29253C10O29272C17O29296C20O29276C27O29328C43O29334C48O29328C49O29467C54O29467C59O29507C62O29507C67O29528C73O29543C75O29570C83O29588C88O29570C93O29606C104O29615C125O29661C131O29711C135O29727C137O29741C138O29756C143O29822C146O29827C154O29827C161O29756C167O29864,,
code-creation,LazyCompile,10,111125,0x93fa3257c2e,106,fileURLToPath node:internal/url:1413:23,0xe898a5db1c0,~
code-source-info,0x93fa3257c2e,33,38248,38573,C0O38259C6O38293C13O38300C22O38322C25O38327C31O38352C49O38358C54O38352C55O38428C62O38437C67O38454C77O38460C82O38454C83O38498C92O38517C101O38545C105O38571,,
code-creation,LazyCompile,10,111166,0x93fa3257de6,18,get href node:internal/url:734:11,0xe898a5da2e0,~
code-source-info,0x93fa3257de6,33,20096,20134,C0O20105C4O20117C6O20116C12O20125C17O20130,,
code-creation,LazyCompile,10,111166,0x93fa3257fbe,150,get origin node:internal/url:746:13,0xe898a5da3b0,~
code-source-info,0x93fa3257fbe,33,20359,20918,C0O20441C4O20446C6O20445C10O20472C59O20518C64O20523C70O20530C78O20565C83O20585C89O20589C95O20573C101O20595C105O20602C110O20695C116O20716C117O20822C122O20854C127O20866C132O20876C137O20829C142O20882C143O20893C149O20914,,
code-creation,LazyCompile,10,111208,0x93fa32581a6,15,get protocol node:internal/url:769:15,0xe898a5da420,~
code-source-info,0x93fa32581a6,33,20934,20975,C0O20943C4O20955C6O20954C10O20964C14O20971,,
code-creation,LazyCompile,10,111208,0x93fa3258346,136,getPathFromURLPosix node:internal/url:1395:29,0xe898a5db170,~
code-source-info,0x93fa3258346,33,37748,38224,C0O37766C7O37775C12O37789C19O37825C24O37795C29O37789C30O37863C35O37888C37O37904C41O37893C46O37923C48O37935C54O37939C59O37979C66O37993C70O37979C75O37998C79O38012C81O38027C84O38024C90O38032C97O38049C102O38068C112O38074C117O38068C118O37913C123O37875C126O38186C131O38193C135O38222,,
code-creation,LazyCompile,10,111250,0x93fa3258536,19,get hostname node:internal/url:841:15,0xe898a5da790,~
code-source-info,0x93fa3258536,33,22614,22659,C0O22623C4O22635C6O22634C10O22644C18O22655,,
code-creation,Eval,10,111916,0x93fa32599b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:1:1,0x93fa32595f0,~
script-source,198,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js,// GENERATED FILE. DO NOT EDIT.\nvar loader = (function(exports) {\n  "use strict";\n  \n  Object.defineProperty(exports\x2C "__esModule"\x2C {\n    value: true\n  });\n  exports.default = void 0;\n  exports.demangle = demangle;\n  exports.instantiate = instantiate;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.instantiateSync = instantiateSync;\n  // Runtime header offsets\n  const ID_OFFSET = -8;\n  const SIZE_OFFSET = -4; // Runtime ids\n  \n  const ARRAYBUFFER_ID = 0;\n  const STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n  \n  const ARRAYBUFFERVIEW = 1 << 0;\n  const ARRAY = 1 << 1;\n  const STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n  \n  const VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n  \n  const VAL_SIGNED = 1 << 11;\n  const VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n  \n  const VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n  \n  const ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  const ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  const ARRAYBUFFERVIEW_BYTELENGTH_OFFSET = 8;\n  const ARRAYBUFFERVIEW_SIZE = 12;\n  const ARRAY_LENGTH_OFFSET = 12;\n  const ARRAY_SIZE = 16;\n  const E_NO_EXPORT_TABLE = "Operation requires compiling with --exportTable";\n  const E_NO_EXPORT_RUNTIME = "Operation requires compiling with --exportRuntime";\n  \n  const F_NO_EXPORT_RUNTIME = () => {\n    throw Error(E_NO_EXPORT_RUNTIME);\n  };\n  \n  const BIGINT = typeof BigUint64Array !== "undefined";\n  const THIS = Symbol();\n  const STRING_SMALLSIZE = 192; // break-even point in V8\n  \n  const STRING_CHUNKSIZE = 1024; // mitigate stack overflow\n  \n  const utf16 = new TextDecoder("utf-16le"\x2C {\n    fatal: true\n  }); // != wtf16\n  \n  /** polyfill for Object.hasOwn */\n  \n  Object.hasOwn = Object.hasOwn || function (obj\x2C prop) {\n    return Object.prototype.hasOwnProperty.call(obj\x2C prop);\n  };\n  /** Gets a string from memory. */\n  \n  \n  function getStringImpl(buffer\x2C ptr) {\n    let len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    const wtf16 = new Uint16Array(buffer\x2C ptr\x2C len);\n    if (len <= STRING_SMALLSIZE) return String.fromCharCode(...wtf16);\n  \n    try {\n      return utf16.decode(wtf16);\n    } catch {\n      let str = ""\x2C\n          off = 0;\n  \n      while (len - off > STRING_CHUNKSIZE) {\n        str += String.fromCharCode(...wtf16.subarray(off\x2C off += STRING_CHUNKSIZE));\n      }\n  \n      return str + String.fromCharCode(...wtf16.subarray(off));\n    }\n  }\n  /** Prepares the base module prior to instantiation. */\n  \n  \n  function preInstantiate(imports) {\n    const extendedExports = {};\n  \n    function getString(memory\x2C ptr) {\n      if (!memory) return "<yet unknown>";\n      return getStringImpl(memory.buffer\x2C ptr);\n    } // add common imports used by stdlib for convenience\n  \n  \n    const env = imports.env = imports.env || {};\n  \n    env.abort = env.abort || function abort(msg\x2C file\x2C line\x2C colm) {\n      const memory = extendedExports.memory || env.memory; // prefer exported\x2C otherwise try imported\n  \n      throw Error(`abort: ${getString(memory\x2C msg)} at ${getString(memory\x2C file)}:${line}:${colm}`);\n    };\n  \n    env.trace = env.trace || function trace(msg\x2C n\x2C ...args) {\n      const memory = extendedExports.memory || env.memory;\n      console.log(`trace: ${getString(memory\x2C msg)}${n ? " " : ""}${args.slice(0\x2C n).join("\x2C ")}`);\n    };\n  \n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n  /** Prepares the final module once instantiation is complete. */\n  \n  \n  function postInstantiate(extendedExports\x2C instance) {\n    const exports = instance.exports;\n    const memory = exports.memory;\n    const table = exports.table;\n  \n    const __new = exports.__new || F_NO_EXPORT_RUNTIME;\n  \n    const __pin = exports.__pin || F_NO_EXPORT_RUNTIME;\n  \n    const __unpin = exports.__unpin || F_NO_EXPORT_RUNTIME;\n  \n    const __collect = exports.__collect || F_NO_EXPORT_RUNTIME;\n  \n    const __rtti_base = exports.__rtti_base;\n    const getRttiCount = __rtti_base ? arr => arr[__rtti_base >>> 2] : F_NO_EXPORT_RUNTIME;\n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n  \n    function getRttInfo(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      if ((id >>>= 0) >= getRttiCount(U32)) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + (id << 1)];\n    }\n    /** Gets the runtime base id for the given id. */\n  \n  \n    function getRttBase(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      if ((id >>>= 0) >= getRttiCount(U32)) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + (id << 1) + 1];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n  \n  \n    function getArrayInfo(id) {\n      const info = getRttInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}\x2C flags=${info}`);\n      return info;\n    }\n    /** Gets the runtime alignment of a collection's values. */\n  \n  \n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n  \n    /** Allocates a new string in the module's memory and returns its pointer. */\n  \n  \n    function __newString(str) {\n      if (str == null) return 0;\n      const length = str.length;\n  \n      const ptr = __new(length << 1\x2C STRING_ID);\n  \n      const U16 = new Uint16Array(memory.buffer);\n  \n      for (var i = 0\x2C p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n  \n      return ptr;\n    }\n  \n    extendedExports.__newString = __newString;\n    /** Allocates a new ArrayBuffer in the module's memory and returns its pointer. */\n  \n    function __newArrayBuffer(buf) {\n      if (buf == null) return 0;\n      const bufview = new Uint8Array(buf);\n  \n      const ptr = __new(bufview.length\x2C ARRAYBUFFER_ID);\n  \n      const U8 = new Uint8Array(memory.buffer);\n      U8.set(bufview\x2C ptr);\n      return ptr;\n    }\n  \n    extendedExports.__newArrayBuffer = __newArrayBuffer;\n    /** Reads a string from the module's memory by its pointer. */\n  \n    function __getString(ptr) {\n      if (!ptr) return null;\n      const buffer = memory.buffer;\n      const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n      return getStringImpl(buffer\x2C ptr);\n    }\n  \n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment\x2C signedness and floatness. */\n  \n    function getView(alignLog2\x2C signed\x2C float) {\n      const buffer = memory.buffer;\n  \n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n  \n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n  \n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n  \n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n  \n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n  \n      throw Error(`unsupported align: ${alignLog2}`);\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n  \n  \n    function __newArray(id\x2C valuesOrCapacity = 0) {\n      const input = valuesOrCapacity;\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      const isArrayLike = typeof input !== "number";\n      const length = isArrayLike ? input.length : input;\n  \n      const buf = __new(length << align\x2C info & STATICARRAY ? id : ARRAYBUFFER_ID);\n  \n      let result;\n  \n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n  \n        const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE\x2C id);\n  \n        __unpin(buf);\n  \n        const U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_BYTELENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n  \n      if (isArrayLike) {\n        const view = getView(align\x2C info & VAL_SIGNED\x2C info & VAL_FLOAT);\n        const start = buf >>> align;\n  \n        if (info & VAL_MANAGED) {\n          for (let i = 0; i < length; ++i) {\n            view[start + i] = input[i];\n          }\n        } else {\n          view.set(input\x2C start);\n        }\n      }\n  \n      return result;\n    }\n  \n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  \n    function __getArrayView(arr) {\n      const U32 = new Uint32Array(memory.buffer);\n      const id = U32[arr + ID_OFFSET >>> 2];\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      let buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      const length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align\x2C info & VAL_SIGNED\x2C info & VAL_FLOAT).subarray(buf >>>= align\x2C buf + length);\n    }\n  \n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  \n    function __getArray(arr) {\n      const input = __getArrayView(arr);\n  \n      const len = input.length;\n      const out = new Array(len);\n  \n      for (let i = 0; i < len; i++) out[i] = input[i];\n  \n      return out;\n    }\n  \n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n  \n    function __getArrayBuffer(ptr) {\n      const buffer = memory.buffer;\n      const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr\x2C ptr + length);\n    }\n  \n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Gets a function from poiner which contain table's index. */\n  \n    function __getFunction(ptr) {\n      if (!table) throw Error(E_NO_EXPORT_TABLE);\n      const index = new Uint32Array(memory.buffer)[ptr >>> 2];\n      return table.get(index);\n    }\n  \n    extendedExports.__getFunction = __getFunction;\n    /** Copies a typed array's values from the module's memory. */\n  \n    function getTypedArray(Type\x2C alignLog2\x2C ptr) {\n      return new Type(getTypedArrayView(Type\x2C alignLog2\x2C ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n  \n  \n    function getTypedArrayView(Type\x2C alignLog2\x2C ptr) {\n      const buffer = memory.buffer;\n      const U32 = new Uint32Array(buffer);\n      return new Type(buffer\x2C U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2]\x2C U32[ptr + ARRAYBUFFERVIEW_BYTELENGTH_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n  \n  \n    function attachTypedArrayFunctions(ctor\x2C name\x2C align) {\n      extendedExports[`__get${name}`] = getTypedArray.bind(null\x2C ctor\x2C align);\n      extendedExports[`__get${name}View`] = getTypedArrayView.bind(null\x2C ctor\x2C align);\n    }\n  \n    [Int8Array\x2C Uint8Array\x2C Uint8ClampedArray\x2C Int16Array\x2C Uint16Array\x2C Int32Array\x2C Uint32Array\x2C Float32Array\x2C Float64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor\x2C ctor.name\x2C 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n  \n    if (BIGINT) {\n      [BigUint64Array\x2C BigInt64Array].forEach(ctor => {\n        attachTypedArrayFunctions(ctor\x2C ctor.name.slice(3)\x2C 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n  \n  \n    function __instanceof(ptr\x2C baseId) {\n      const U32 = new Uint32Array(memory.buffer);\n      let id = U32[ptr + ID_OFFSET >>> 2];\n  \n      if (id <= getRttiCount(U32)) {\n        do {\n          if (id == baseId) return true;\n          id = getRttBase(id);\n        } while (id);\n      }\n  \n      return false;\n    }\n  \n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n  \n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n  \n    return demangle(exports\x2C extendedExports);\n  }\n  \n  function isResponse(src) {\n    return typeof Response !== "undefined" && src instanceof Response;\n  }\n  \n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n  \n  \n  async function instantiate(source\x2C imports = {}) {\n    if (isResponse(source = await source)) return instantiateStreaming(source\x2C imports);\n    const module = isModule(source) ? source : await WebAssembly.compile(source);\n    const extended = preInstantiate(imports);\n    const instance = await WebAssembly.instantiate(module\x2C imports);\n    const exports = postInstantiate(extended\x2C instance);\n    return {\n      module\x2C\n      instance\x2C\n      exports\n    };\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n  \n  \n  function instantiateSync(source\x2C imports = {}) {\n    const module = isModule(source) ? source : new WebAssembly.Module(source);\n    const extended = preInstantiate(imports);\n    const instance = new WebAssembly.Instance(module\x2C imports);\n    const exports = postInstantiate(extended\x2C instance);\n    return {\n      module\x2C\n      instance\x2C\n      exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response\x2C i.e. as obtained by `fetch`. */\n  \n  \n  async function instantiateStreaming(source\x2C imports = {}) {\n    if (!WebAssembly.instantiateStreaming) {\n      return instantiate(isResponse(source = await source) ? source.arrayBuffer() : source\x2C imports);\n    }\n  \n    const extended = preInstantiate(imports);\n    const result = await WebAssembly.instantiateStreaming(source\x2C imports);\n    const exports = postInstantiate(extended\x2C result.instance);\n    return { ...result\x2C\n      exports\n    };\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n  \n  \n  function demangle(exports\x2C extendedExports = {}) {\n    const setArgumentsLength = exports["__argumentsLength"] ? length => {\n      exports["__argumentsLength"].value = length;\n    } : exports["__setArgumentsLength"] || exports["__setargc"] || (() => {\n      /* nop */\n    });\n  \n    for (let internalName of Object.keys(exports)) {\n      const elem = exports[internalName];\n      let parts = internalName.split(".");\n      let curr = extendedExports;\n  \n      while (parts.length > 1) {\n        let part = parts.shift();\n        if (!Object.hasOwn(curr\x2C part)) curr[part] = {};\n        curr = curr[part];\n      }\n  \n      let name = parts[0];\n      let hash = name.indexOf("#");\n  \n      if (hash >= 0) {\n        const className = name.substring(0\x2C hash);\n        const classElem = curr[className];\n  \n        if (typeof classElem === "undefined" || !classElem.prototype) {\n          const ctor = function (...args) {\n            return ctor.wrap(ctor.prototype.constructor(0\x2C ...args));\n          };\n  \n          ctor.prototype = {\n            valueOf() {\n              return this[THIS];\n            }\n  \n          };\n  \n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype\x2C {\n              [THIS]: {\n                value: thisValue\x2C\n                writable: false\n              }\n            });\n          };\n  \n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(name => Object.defineProperty(ctor\x2C name\x2C Object.getOwnPropertyDescriptor(classElem\x2C name)));\n          curr[className] = ctor;\n        }\n  \n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n  \n        if (/^(get|set):/.test(name)) {\n          if (!Object.hasOwn(curr\x2C name = name.substring(4))) {\n            let getter = exports[internalName.replace("set:"\x2C "get:")];\n            let setter = exports[internalName.replace("get:"\x2C "set:")];\n            Object.defineProperty(curr\x2C name\x2C {\n              get() {\n                return getter(this[THIS]);\n              }\x2C\n  \n              set(value) {\n                setter(this[THIS]\x2C value);\n              }\x2C\n  \n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = function (...args) {\n              setArgumentsLength(args.length);\n              return elem(...args);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function (...args) {\n              // !\n              setArgumentsLength(args.length);\n              return elem(this[THIS]\x2C ...args);\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.hasOwn(curr\x2C name = name.substring(4))) {\n            Object.defineProperty(curr\x2C name\x2C {\n              get: exports[internalName.replace("set:"\x2C "get:")]\x2C\n              set: exports[internalName.replace("get:"\x2C "set:")]\x2C\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === "function" && elem !== setArgumentsLength) {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    }\n  \n    return extendedExports;\n  }\n  \n  var _default = {\n    instantiate\x2C\n    instantiateSync\x2C\n    instantiateStreaming\x2C\n    demangle\n  };\n  exports.default = _default;\n  return "default" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([]\x2C function() { return loader; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = loader;\n
code-source-info,0x93fa32599b6,198,0,18738,C0O0C4O18738,,
code-creation,Function,10,112625,0x93fa3259af6,74, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:1:1,0x93fa3259920,~
code-source-info,0x93fa3259af6,198,0,18738,C0O0C5O45C12O18550C16O45C18O18556C25O18592C29O18599C35O18604C47O18604C54O18652C66O18713C68O18728C73O18737,,
code-creation,Function,10,112625,0x93fa325a26e,402, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:2:23,0x93fa32599e8,~
code-source-info,0x93fa325a26e
tick,0x100c56610,112666,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998917d27d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,112750,0x93fa325ba26,206,TextDecoder node:internal/encoding:379:16,0x30d75bb9a10,~
script-source,21,node:internal/encoding,'use strict';\n\n// An implementation of the WHATWG Encoding Standard\n// https://encoding.spec.whatwg.org\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  SafeMap\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\n  ERR_ENCODING_NOT_SUPPORTED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_NO_ICU\n} = require('internal/errors').codes;\nconst kHandle = Symbol('handle');\nconst kFlags = Symbol('flags');\nconst kEncoding = Symbol('encoding');\nconst kDecoder = Symbol('decoder');\nconst kEncoder = Symbol('encoder');\n\nconst {\n  getConstructorOf\x2C\n  customInspectSymbol: inspect\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\n\nconst {\n  validateString\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst {\n  encodeInto\x2C\n  encodeUtf8String\n} = internalBinding('buffer');\n\nlet Buffer;\nfunction lazyBuffer() {\n  if (Buffer === undefined)\n    Buffer = require('buffer').Buffer;\n  return Buffer;\n}\n\nfunction validateEncoder(obj) {\n  if (obj == null || obj[kEncoder] !== true)\n    throw new ERR_INVALID_THIS('TextEncoder');\n}\n\nfunction validateDecoder(obj) {\n  if (obj == null || obj[kDecoder] !== true)\n    throw new ERR_INVALID_THIS('TextDecoder');\n}\n\nconst CONVERTER_FLAGS_FLUSH = 0x1;\nconst CONVERTER_FLAGS_FATAL = 0x2;\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\n\nconst empty = new Uint8Array(0);\n\nconst encodings = new SafeMap([\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\n  ['utf8'\x2C 'utf-8']\x2C\n  ['utf-8'\x2C 'utf-8']\x2C\n  ['866'\x2C 'ibm866']\x2C\n  ['cp866'\x2C 'ibm866']\x2C\n  ['csibm866'\x2C 'ibm866']\x2C\n  ['ibm866'\x2C 'ibm866']\x2C\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso88592'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\n  ['l2'\x2C 'iso-8859-2']\x2C\n  ['latin2'\x2C 'iso-8859-2']\x2C\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso88593'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\n  ['l3'\x2C 'iso-8859-3']\x2C\n  ['latin3'\x2C 'iso-8859-3']\x2C\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso88594'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\n  ['l4'\x2C 'iso-8859-4']\x2C\n  ['latin4'\x2C 'iso-8859-4']\x2C\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso88595'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\n  ['arabic'\x2C 'iso-8859-6']\x2C\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso88596'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\n  ['elot_928'\x2C 'iso-8859-7']\x2C\n  ['greek'\x2C 'iso-8859-7']\x2C\n  ['greek8'\x2C 'iso-8859-7']\x2C\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso88597'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\n  ['hebrew'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso88598'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\n  ['visual'\x2C 'iso-8859-8']\x2C\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\n  ['logical'\x2C 'iso-8859-8-i']\x2C\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso885910'\x2C 'iso-8859-10']\x2C\n  ['l6'\x2C 'iso-8859-10']\x2C\n  ['latin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso885913'\x2C 'iso-8859-13']\x2C\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso885914'\x2C 'iso-8859-14']\x2C\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso885915'\x2C 'iso-8859-15']\x2C\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\n  ['l9'\x2C 'iso-8859-15']\x2C\n  ['cskoi8r'\x2C 'koi8-r']\x2C\n  ['koi'\x2C 'koi8-r']\x2C\n  ['koi8'\x2C 'koi8-r']\x2C\n  ['koi8-r'\x2C 'koi8-r']\x2C\n  ['koi8_r'\x2C 'koi8-r']\x2C\n  ['koi8-ru'\x2C 'koi8-u']\x2C\n  ['koi8-u'\x2C 'koi8-u']\x2C\n  ['csmacintosh'\x2C 'macintosh']\x2C\n  ['mac'\x2C 'macintosh']\x2C\n  ['macintosh'\x2C 'macintosh']\x2C\n  ['x-mac-roman'\x2C 'macintosh']\x2C\n  ['dos-874'\x2C 'windows-874']\x2C\n  ['iso-8859-11'\x2C 'windows-874']\x2C\n  ['iso8859-11'\x2C 'windows-874']\x2C\n  ['iso885911'\x2C 'windows-874']\x2C\n  ['tis-620'\x2C 'windows-874']\x2C\n  ['windows-874'\x2C 'windows-874']\x2C\n  ['cp1250'\x2C 'windows-1250']\x2C\n  ['windows-1250'\x2C 'windows-1250']\x2C\n  ['x-cp1250'\x2C 'windows-1250']\x2C\n  ['cp1251'\x2C 'windows-1251']\x2C\n  ['windows-1251'\x2C 'windows-1251']\x2C\n  ['x-cp1251'\x2C 'windows-1251']\x2C\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\n  ['ascii'\x2C 'windows-1252']\x2C\n  ['cp1252'\x2C 'windows-1252']\x2C\n  ['cp819'\x2C 'windows-1252']\x2C\n  ['csisolatin1'\x2C 'windows-1252']\x2C\n  ['ibm819'\x2C 'windows-1252']\x2C\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\n  ['iso8859-1'\x2C 'windows-1252']\x2C\n  ['iso88591'\x2C 'windows-1252']\x2C\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\n  ['l1'\x2C 'windows-1252']\x2C\n  ['latin1'\x2C 'windows-1252']\x2C\n  ['us-ascii'\x2C 'windows-1252']\x2C\n  ['windows-1252'\x2C 'windows-1252']\x2C\n  ['x-cp1252'\x2C 'windows-1252']\x2C\n  ['cp1253'\x2C 'windows-1253']\x2C\n  ['windows-1253'\x2C 'windows-1253']\x2C\n  ['x-cp1253'\x2C 'windows-1253']\x2C\n  ['cp1254'\x2C 'windows-1254']\x2C\n  ['csisolatin5'\x2C 'windows-1254']\x2C\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\n  ['iso8859-9'\x2C 'windows-1254']\x2C\n  ['iso88599'\x2C 'windows-1254']\x2C\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\n  ['l5'\x2C 'windows-1254']\x2C\n  ['latin5'\x2C 'windows-1254']\x2C\n  ['windows-1254'\x2C 'windows-1254']\x2C\n  ['x-cp1254'\x2C 'windows-1254']\x2C\n  ['cp1255'\x2C 'windows-1255']\x2C\n  ['windows-1255'\x2C 'windows-1255']\x2C\n  ['x-cp1255'\x2C 'windows-1255']\x2C\n  ['cp1256'\x2C 'windows-1256']\x2C\n  ['windows-1256'\x2C 'windows-1256']\x2C\n  ['x-cp1256'\x2C 'windows-1256']\x2C\n  ['cp1257'\x2C 'windows-1257']\x2C\n  ['windows-1257'\x2C 'windows-1257']\x2C\n  ['x-cp1257'\x2C 'windows-1257']\x2C\n  ['cp1258'\x2C 'windows-1258']\x2C\n  ['windows-1258'\x2C 'windows-1258']\x2C\n  ['x-cp1258'\x2C 'windows-1258']\x2C\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\n  ['chinese'\x2C 'gbk']\x2C\n  ['csgb2312'\x2C 'gbk']\x2C\n  ['csiso58gb231280'\x2C 'gbk']\x2C\n  ['gb2312'\x2C 'gbk']\x2C\n  ['gb_2312'\x2C 'gbk']\x2C\n  ['gb_2312-80'\x2C 'gbk']\x2C\n  ['gbk'\x2C 'gbk']\x2C\n  ['iso-ir-58'\x2C 'gbk']\x2C\n  ['x-gbk'\x2C 'gbk']\x2C\n  ['gb18030'\x2C 'gb18030']\x2C\n  ['big5'\x2C 'big5']\x2C\n  ['big5-hkscs'\x2C 'big5']\x2C\n  ['cn-big5'\x2C 'big5']\x2C\n  ['csbig5'\x2C 'big5']\x2C\n  ['x-x-big5'\x2C 'big5']\x2C\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\n  ['euc-jp'\x2C 'euc-jp']\x2C\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\n  ['csshiftjis'\x2C 'shift_jis']\x2C\n  ['ms932'\x2C 'shift_jis']\x2C\n  ['ms_kanji'\x2C 'shift_jis']\x2C\n  ['shift-jis'\x2C 'shift_jis']\x2C\n  ['shift_jis'\x2C 'shift_jis']\x2C\n  ['sjis'\x2C 'shift_jis']\x2C\n  ['windows-31j'\x2C 'shift_jis']\x2C\n  ['x-sjis'\x2C 'shift_jis']\x2C\n  ['cseuckr'\x2C 'euc-kr']\x2C\n  ['csksc56011987'\x2C 'euc-kr']\x2C\n  ['euc-kr'\x2C 'euc-kr']\x2C\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\n  ['korean'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\n  ['ksc5601'\x2C 'euc-kr']\x2C\n  ['ksc_5601'\x2C 'euc-kr']\x2C\n  ['windows-949'\x2C 'euc-kr']\x2C\n  ['utf-16be'\x2C 'utf-16be']\x2C\n  ['utf-16le'\x2C 'utf-16le']\x2C\n  ['utf-16'\x2C 'utf-16le']\x2C\n]);\n\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\n// so we have to do this manually\nfunction trimAsciiWhitespace(label) {\n  let s = 0;\n  let e = label.length;\n  while (s < e && (\n    label[s] === '\\u0009' ||\n    label[s] === '\\u000a' ||\n    label[s] === '\\u000c' ||\n    label[s] === '\\u000d' ||\n    label[s] === '\\u0020')) {\n    s++;\n  }\n  while (e > s && (\n    label[e - 1] === '\\u0009' ||\n    label[e - 1] === '\\u000a' ||\n    label[e - 1] === '\\u000c' ||\n    label[e - 1] === '\\u000d' ||\n    label[e - 1] === '\\u0020')) {\n    e--;\n  }\n  return StringPrototypeSlice(label\x2C s\x2C e);\n}\n\nfunction getEncodingFromLabel(label) {\n  const enc = encodings.get(label);\n  if (enc !== undefined) return enc;\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\n}\n\nconst encodeIntoResults = new Uint32Array(2);\n\nclass TextEncoder {\n  constructor() {\n    this[kEncoder] = true;\n  }\n\n  get encoding() {\n    validateEncoder(this);\n    return 'utf-8';\n  }\n\n  encode(input = '') {\n    validateEncoder(this);\n    return encodeUtf8String(`${input}`);\n  }\n\n  encodeInto(src\x2C dest) {\n    validateEncoder(this);\n    validateString(src\x2C 'src');\n    if (!dest || !isUint8Array(dest))\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\n  }\n\n  [inspect](depth\x2C opts) {\n    validateEncoder(this);\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n    const ctor = getConstructorOf(this);\n    const obj = ObjectCreate({\n      constructor: ctor === null ? TextEncoder : ctor\n    });\n    obj.encoding = this.encoding;\n    // Lazy to avoid circular dependency\n    return require('internal/util/inspect').inspect(obj\x2C opts);\n  }\n}\n\nObjectDefineProperties(\n  TextEncoder.prototype\x2C {\n    'encode': { enumerable: true }\x2C\n    'encodeInto': { enumerable: true }\x2C\n    'encoding': { enumerable: true }\x2C\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\n  });\n\nconst TextDecoder =\n  internalBinding('config').hasIntl ?\n    makeTextDecoderICU() :\n    makeTextDecoderJS();\n\nfunction makeTextDecoderICU() {\n  const {\n    decode: _decode\x2C\n    getConverter\x2C\n  } = internalBinding('icu');\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = {}) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      const handle = getConverter(enc\x2C flags);\n      if (handle === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      this[kDecoder] = true;\n      this[kHandle] = handle;\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n    }\n\n\n    decode(input = empty\x2C options = {}) {\n      validateDecoder(this);\n      if (isAnyArrayBuffer(input)) {\n        input = lazyBuffer().from(input);\n      } else if (!isArrayBufferView(input)) {\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n                                       input);\n      }\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      let flags = 0;\n      if (options !== null)\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\n\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\n      if (typeof ret === 'number') {\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\n      }\n      return ret.toString('ucs2');\n    }\n  }\n\n  return TextDecoder;\n}\n\nfunction makeTextDecoderJS() {\n  let StringDecoder;\n  function lazyStringDecoder() {\n    if (StringDecoder === undefined)\n      ({ StringDecoder } = require('string_decoder'));\n    return StringDecoder;\n  }\n\n  const kBOMSeen = Symbol('BOM seen');\n\n  function hasConverter(encoding) {\n    return encoding === 'utf-8' || encoding === 'utf-16le';\n  }\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = {}) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined || !hasConverter(enc))\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        if (options.fatal) {\n          throw new ERR_NO_ICU('"fatal" option');\n        }\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      this[kDecoder] = true;\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\n      this[kHandle] = new (lazyStringDecoder())(enc);\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n      this[kBOMSeen] = false;\n    }\n\n    decode(input = empty\x2C options = {}) {\n      validateDecoder(this);\n      if (isAnyArrayBuffer(input)) {\n        input = lazyBuffer().from(input);\n      } else if (isArrayBufferView(input)) {\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\n                                  input.byteLength);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n                                       input);\n      }\n      validateObject(options\x2C 'options'\x2C {\n        nullable: true\x2C\n        allowArray: true\x2C\n        allowFunction: true\x2C\n      });\n\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\n        this[kBOMSeen] = false;\n      }\n\n      if (options !== null && options.stream) {\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\n      } else {\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\n      }\n\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\n        this[kHandle].end(input) :\n        this[kHandle].write(input);\n\n      if (result.length > 0 &&\n          !this[kBOMSeen] &&\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\n        // If the very first result in the stream is a BOM\x2C and we are not\n        // explicitly told to ignore it\x2C then we discard it.\n        if (result[0] === '\\ufeff') {\n          result = StringPrototypeSlice(result\x2C 1);\n        }\n        this[kBOMSeen] = true;\n      }\n\n      return result;\n    }\n  }\n\n  return TextDecoder;\n}\n\n// Mix in some shared properties.\nObjectDefineProperties(\n  TextDecoder.prototype\x2C\n  ObjectGetOwnPropertyDescriptors({\n    get encoding() {\n      validateDecoder(this);\n      return this[kEncoding];\n    }\x2C\n\n    get fatal() {\n      validateDecoder(this);\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\n    }\x2C\n\n    get ignoreBOM() {\n      validateDecoder(this);\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\n              CONVERTER_FLAGS_IGNORE_BOM;\n    }\x2C\n\n    [inspect](depth\x2C opts) {\n      validateDecoder(this);\n      if (typeof depth === 'number' && depth < 0)\n        return this;\n      const constructor = getConstructorOf(this) || TextDecoder;\n      const obj = ObjectCreate({ constructor });\n      obj.encoding = this.encoding;\n      obj.fatal = this.fatal;\n      obj.ignoreBOM = this.ignoreBOM;\n      if (opts.showHidden) {\n        obj[kFlags] = this[kFlags];\n        obj[kHandle] = this[kHandle];\n      }\n      // Lazy to avoid circular dependency\n      const { inspect } = require('internal/util/inspect');\n      return `${constructor.name} ${inspect(obj)}`;\n    }\n  })\n);\n\nObjectDefineProperties(TextDecoder.prototype\x2C {\n  decode: { enumerable: true }\x2C\n  [inspect]: { enumerable: false }\x2C\n  [SymbolToStringTag]: {\n    configurable: true\x2C\n    value: 'TextDecoder'\n  }\n});\n\nmodule.exports = {\n  getEncodingFromLabel\x2C\n  TextDecoder\x2C\n  TextEncoder\n};\n
code-source-info,0x93fa325ba26,21,10299,11083,C15O10299C21O10342C25O10374C35O10389C43O10374C48O10519C53O10519C58O10557C60O10588C69O10594C74O10588C75O10655C77O10664C81O10713C94O10721C103O10773C116O10785C125O10847C130O10847C136O10879C138O10913C147O10919C152O10913C153O10968C157O10973C161O10983C165O10997C169O11002C174O11011C178O11027C182O11032C187O11040C191O11055C195O11060C200O11071C205O11082,,
code-creation,LazyCompile,10,113416,0x93fa325ceb6,55,getEncodingFromLabel node:internal/encoding:313:30,0x30d75bb9748,~
code-source-info,0x93fa325ceb6,21,8645,8795,C0O8669C5O8679C10O8679C16O8693C18O8716C20O8727C21O8730C26O8747C34O8777C39O8777C44O8751C49O8747C54O8793,,
tick,0x1010dcc78,113458,0,0x0,0,0x0,0x36998917d2e1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e783,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,113833,0x93fa325e256,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:1:1,0x93fa325df18,~
script-source,199,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.doDecode = exports.decompress = exports.inflate = exports.deflate = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\n// @ts-ignore\nconst base64 = require("base64-js");\n// @ts-ignore\nconst pako = require("pako");\nconst JsHistogram_1 = require("./JsHistogram");\nconst ByteBuffer_1 = require("./ByteBuffer");\nconst JsHistogramFactory_1 = require("./JsHistogramFactory");\nconst ZigZagEncoding_1 = require("./ZigZagEncoding");\nconst { max } = Math;\nconst V2EncodingCookieBase = 0x1c849303;\nconst V2CompressedEncodingCookieBase = 0x1c849304;\nconst V2maxWordSizeInBytes = 9; // LEB128-64b9B + ZigZag require up to 9 bytes per word\nconst encodingCookie = V2EncodingCookieBase | 0x10; // LSBit of wordsize byte indicates TLZE Encoding\nconst compressedEncodingCookie = V2CompressedEncodingCookieBase | 0x10; // LSBit of wordsize byte indicates TLZE Encoding\nfunction fillBufferFromCountsArray(self\x2C buffer) {\n    const countsLimit = self.countsArrayIndex(self.maxValue) + 1;\n    let srcIndex = 0;\n    while (srcIndex < countsLimit) {\n        // V2 encoding format uses a ZigZag LEB128-64b9B encoded long. Positive values are counts\x2C\n        // while negative values indicate a repeat zero counts.\n        const count = self.getCountAtIndex(srcIndex++);\n        if (count < 0) {\n            throw new Error("Cannot encode histogram containing negative counts (" +\n                count +\n                ") at index " +\n                srcIndex +\n                "\x2C corresponding the value range [" +\n                self.lowestEquivalentValue(self.valueFromIndex(srcIndex)) +\n                "\x2C" +\n                self.nextNonEquivalentValue(self.valueFromIndex(srcIndex)) +\n                ")");\n        }\n        // Count trailing 0s (which follow this count):\n        let zerosCount = 0;\n        if (count == 0) {\n            zerosCount = 1;\n            while (srcIndex < countsLimit && self.getCountAtIndex(srcIndex) == 0) {\n                zerosCount++;\n                srcIndex++;\n            }\n        }\n        if (zerosCount > 1) {\n            ZigZagEncoding_1.default.encode(buffer\x2C -zerosCount);\n        }\n        else {\n            ZigZagEncoding_1.default.encode(buffer\x2C count);\n        }\n    }\n}\n/**\n * Encode this histogram into a ByteBuffer\n * @param self this histogram\n * @param buffer The buffer to encode into\n * @return The number of bytes written to the buffer\n */\nfunction encodeIntoByteBuffer(self\x2C buffer) {\n    const initialPosition = buffer.position;\n    buffer.putInt32(encodingCookie);\n    buffer.putInt32(0); // Placeholder for payload length in bytes.\n    buffer.putInt32(1);\n    buffer.putInt32(self.numberOfSignificantValueDigits);\n    buffer.putInt64(self.lowestDiscernibleValue);\n    buffer.putInt64(self.highestTrackableValue);\n    buffer.putInt64(1);\n    const payloadStartPosition = buffer.position;\n    fillBufferFromCountsArray(self\x2C buffer);\n    const backupIndex = buffer.position;\n    buffer.position = initialPosition + 4;\n    buffer.putInt32(backupIndex - payloadStartPosition); // Record the payload length\n    buffer.position = backupIndex;\n    return backupIndex - initialPosition;\n}\nfunction fillCountsArrayFromSourceBuffer(self\x2C sourceBuffer\x2C lengthInBytes\x2C wordSizeInBytes) {\n    if (wordSizeInBytes != 2 &&\n        wordSizeInBytes != 4 &&\n        wordSizeInBytes != 8 &&\n        wordSizeInBytes != V2maxWordSizeInBytes) {\n        throw new Error("word size must be 2\x2C 4\x2C 8\x2C or V2maxWordSizeInBytes (" +\n            V2maxWordSizeInBytes +\n            ") bytes");\n    }\n    let dstIndex = 0;\n    const endPosition = sourceBuffer.position + lengthInBytes;\n    while (sourceBuffer.position < endPosition) {\n        let zerosCount = 0;\n        let count = ZigZagEncoding_1.default.decode(sourceBuffer);\n        if (count < 0) {\n            zerosCount = -count;\n            dstIndex += zerosCount; // No need to set zeros in array. Just skip them.\n        }\n        else {\n            self.setCountAtIndex(dstIndex++\x2C count);\n        }\n    }\n    return dstIndex; // this is the destination length\n}\nfunction getCookieBase(cookie) {\n    return cookie & ~0xf0;\n}\nfunction getWordSizeInBytesFromCookie(cookie) {\n    if (getCookieBase(cookie) == V2EncodingCookieBase ||\n        getCookieBase(cookie) == V2CompressedEncodingCookieBase) {\n        return V2maxWordSizeInBytes;\n    }\n    const sizeByte = (cookie & 0xf0) >> 4;\n    return sizeByte & 0xe;\n}\nfunction findDeflateFunction() {\n    try {\n        return eval('require("zlib").deflateSync');\n    }\n    catch (error) {\n        return !!pako ? pako.deflate : () => { throw new Error('pako library is mandatory for encoding/deconding on the browser side'); };\n    }\n}\nfunction findInflateFunction() {\n    try {\n        return eval('require("zlib").inflateSync');\n    }\n    catch (error) {\n        return !!pako ? pako.inflate : () => { throw new Error('pako library is mandatory for encoding/deconding on the browser side'); };\n    }\n}\nexports.deflate = findDeflateFunction();\nexports.inflate = findInflateFunction();\nfunction decompress(data) {\n    const buffer = new ByteBuffer_1.default(data);\n    const initialTargetPosition = buffer.position;\n    const cookie = buffer.getInt32();\n    if ((cookie & ~0xf0) !== V2CompressedEncodingCookieBase) {\n        throw new Error("Encoding not supported\x2C only V2 is supported");\n    }\n    const lengthOfCompressedContents = buffer.getInt32();\n    const uncompressedBuffer = exports.inflate(buffer.data.slice(initialTargetPosition + 8\x2C initialTargetPosition + 8 + lengthOfCompressedContents));\n    return uncompressedBuffer;\n}\nexports.decompress = decompress;\nfunction doDecode(data\x2C bitBucketSize = 32\x2C minBarForHighestTrackableValue = 0) {\n    const buffer = new ByteBuffer_1.default(data);\n    const cookie = buffer.getInt32();\n    let payloadLengthInBytes;\n    let numberOfSignificantValueDigits;\n    let lowestTrackableUnitValue;\n    let highestTrackableValue;\n    if (getCookieBase(cookie) === V2EncodingCookieBase) {\n        if (getWordSizeInBytesFromCookie(cookie) != V2maxWordSizeInBytes) {\n            throw new Error("The buffer does not contain a Histogram (no valid cookie found)");\n        }\n        payloadLengthInBytes = buffer.getInt32();\n        buffer.getInt32(); // normalizingIndexOffset not used\n        numberOfSignificantValueDigits = buffer.getInt32();\n        lowestTrackableUnitValue = buffer.getInt64();\n        highestTrackableValue = buffer.getInt64();\n        buffer.getInt64(); // integerToDoubleValueConversionRatio not used\n    }\n    else {\n        throw new Error("The buffer does not contain a Histogram (no valid V2 encoding cookie found)");\n    }\n    highestTrackableValue = max(highestTrackableValue\x2C minBarForHighestTrackableValue);\n    const histogramConstr = JsHistogramFactory_1.constructorFromBucketSize(bitBucketSize);\n    const histogram = new histogramConstr(lowestTrackableUnitValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    const filledLength = fillCountsArrayFromSourceBuffer(histogram\x2C buffer\x2C payloadLengthInBytes\x2C V2maxWordSizeInBytes);\n    histogram.establishInternalTackingValues(filledLength);\n    return histogram;\n}\nexports.doDecode = doDecode;\nfunction doEncodeIntoCompressedBase64(compressionLevel) {\n    const compressionOptions = compressionLevel\n        ? { level: compressionLevel }\n        : {};\n    const self = this;\n    const targetBuffer = ByteBuffer_1.default.allocate();\n    targetBuffer.putInt32(compressedEncodingCookie);\n    const intermediateUncompressedByteBuffer = ByteBuffer_1.default.allocate();\n    const uncompressedLength = encodeIntoByteBuffer(self\x2C intermediateUncompressedByteBuffer);\n    const data = intermediateUncompressedByteBuffer.data.slice(0\x2C uncompressedLength);\n    const compressedData = exports.deflate(data\x2C compressionOptions);\n    targetBuffer.putInt32(compressedData.byteLength);\n    targetBuffer.putArray(compressedData);\n    return base64.fromByteArray(targetBuffer.data);\n}\nJsHistogram_1.JsHistogram.decode = doDecode;\nJsHistogram_1.JsHistogram.prototype.encodeIntoCompressedBase64 = doEncodeIntoCompressedBase64;\n//# sourceMappingURL=JsHistogram.encoding.js.map
code-source-info,0x93fa325e256,199,0,8425,C0O0C4O8425,,
code-creation,Function,10,114166,0x93fa325e71e,388, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:1:1,0x93fa325e1c0,~
code-source-info,0x93fa325e71e,199,0,8425,C0O0C132O14C136O21C147O36C152O21C157O77C171O151C177O133C183O115C189O94C193O460C199O460C203O460C205O509C211O509C215O509C217O548C223O548C227O548C229O595C235O595C239O595C241O649C247O649C251O649C253O707C259O707C263O707C265O752C269O744C275O787C281O787C283O838C289O838C291O879C293O879C295O961C297O982C300O961C302O1073C304O1104C307O1073C309O5234C315O5252C318O5250C322O5275C328O5293C331O5291C335O5867C340O5886C344O7433C349O7450C353O8237C356O8251C363O8270C367O8282C370O8296C375O8308C382O8345C387O8424,,
code-creation,Eval,10,114416,0x93fa325f8ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramFactory.js:1:1,0x93fa325f708,~
script-source,200,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramFactory.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.constructorFromBucketSize = void 0;\nconst PackedHistogram_1 = require("./PackedHistogram");\nconst Int8Histogram_1 = require("./Int8Histogram");\nconst Int16Histogram_1 = require("./Int16Histogram");\nconst Int32Histogram_1 = require("./Int32Histogram");\nconst Float64Histogram_1 = require("./Float64Histogram");\nfunction constructorFromBucketSize(bitBucketSize) {\n    switch (bitBucketSize) {\n        case "packed":\n            return PackedHistogram_1.default;\n        case 8:\n            return Int8Histogram_1.default;\n        case 16:\n            return Int16Histogram_1.default;\n        case 32:\n            return Int32Histogram_1.default;\n        case 64:\n            return Float64Histogram_1.default;\n        default:\n            throw new Error("Incorrect parameter bitBucketSize");\n    }\n}\nexports.constructorFromBucketSize = constructorFromBucketSize;\n//# sourceMappingURL=JsHistogramFactory.js.map
code-source-info,0x93fa325f8ae,200,0,993,C0O0C4O993,,
code-creation,Function,10,114500,0x93fa325fa0e,108, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramFactory.js:1:1,0x93fa325f818,~
code-source-info,0x93fa325fa0e,200,0,993,C0O0C25O14C29O21C37O36C45O21C50O77C51O111C55O147C58O147C62O147C64O201C67O201C71O201C73O254C76O254C80O254C82O308C85O308C89O308C91O364C94O364C98O364C100O884C102O918C107O992,,
code-creation,Eval,10,114666,0x93fa3260186,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PackedHistogram.js:1:1,0x93fa325ffe8,~
script-source,201,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PackedHistogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst JsHistogram_1 = require("./JsHistogram");\nconst PackedArray_1 = require("./packedarray/PackedArray");\n/**\n * <h3>A High Dynamic Range (HDR) Histogram that uses a packed internal representation</h3>\n * <p>\n * {@link PackedHistogram} supports the recording and analyzing sampled data value counts across a configurable\n * integer value range with configurable value precision within the range. Value precision is expressed as the\n * number of significant digits in the value recording\x2C and provides control over value quantization behavior\n * across the value range and the subsequent value resolution at any given level.\n * <p>\n * {@link PackedHistogram} tracks value counts in a packed internal representation optimized\n * for typical histogram recoded values are sparse in the value range and tend to be incremented in small unit counts.\n * This packed representation tends to require significantly smaller amounts of stoarge when compared to unpacked\n * representations\x2C but can incur additional recording cost due to resizing and repacking operations that may\n * occur as previously unrecorded values are encountered.\n * <p>\n * For example\x2C a {@link PackedHistogram} could be configured to track the counts of observed integer values between 0 and\n * 3\x2C600\x2C000\x2C000\x2C000 while maintaining a value precision of 3 significant digits across that range. Value quantization\n * within the range will thus be no larger than 1/1\x2C000th (or 0.1%) of any value. This example Histogram could\n * be used to track and analyze the counts of observed response times ranging between 1 nanosecond and 1 hour\n * in magnitude\x2C while maintaining a value resolution of 1 microsecond up to 1 millisecond\x2C a resolution of\n * 1 millisecond (or better) up to one second\x2C and a resolution of 1 second (or better) up to 1\x2C000 seconds. At its\n * maximum tracked value (1 hour)\x2C it would still maintain a resolution of 3.6 seconds (or better).\n * <p>\n * Auto-resizing: When constructed with no specified value range range (or when auto-resize is turned on with {@link\n * Histogram#setAutoResize}) a {@link PackedHistogram} will auto-resize its dynamic range to include recorded values as\n * they are encountered. Note that recording calls that cause auto-resizing may take longer to execute\x2C as resizing\n * incurs allocation and copying of internal data structures.\n * <p>\n */\nclass PackedHistogram extends JsHistogram_1.default {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n        this._totalCount = 0;\n        this.packedCounts = new PackedArray_1.PackedArray(this.countsArrayLength);\n    }\n    clearCounts() {\n        this.packedCounts.clear();\n    }\n    incrementCountAtIndex(index) {\n        this.packedCounts.increment(index);\n    }\n    addToCountAtIndex(index\x2C value) {\n        this.packedCounts.add(index\x2C value);\n    }\n    setCountAtIndex(index\x2C value) {\n        this.packedCounts.set(index\x2C value);\n    }\n    resize(newHighestTrackableValue) {\n        this.establishSize(newHighestTrackableValue);\n        this.packedCounts.setVirtualLength(this.countsArrayLength);\n    }\n    getCountAtIndex(index) {\n        return this.packedCounts.get(index);\n    }\n    _getEstimatedFootprintInBytes() {\n        return 192 + 8 * this.packedCounts.getPhysicalLength();\n    }\n    copyCorrectedForCoordinatedOmission(expectedIntervalBetweenValueSamples) {\n        const copy = new PackedHistogram(this.lowestDiscernibleValue\x2C this.highestTrackableValue\x2C this.numberOfSignificantValueDigits);\n        copy.addWhileCorrectingForCoordinatedOmission(this\x2C expectedIntervalBetweenValueSamples);\n        return copy;\n    }\n    toString() {\n        return `PackedHistogram ${JSON.stringify(this\x2C null\x2C 2)}`;\n    }\n}\nexports.default = PackedHistogram;\n//# sourceMappingURL=PackedHistogram.js.map
code-source-info,0x93fa3260186,201,0,4252,C0O0C4O4252,,
code-creation,Function,10,114833,0x93fa3260806,140, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PackedHistogram.js:1:1,0x93fa32600f0,~
code-source-info,0x93fa3260806,201,0,4252,C0O0C8O14C12O21C20O36C28O21C33O369C36O369C41O417C44O417C48O417C57O2745C132O4174C134O4190C139O4251,,
tick,0x1a362a3a4,114833,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325fa48,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325e815,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e795,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,115041,0x93fa32614f6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArray.js:1:1,0x93fa3261360,~
script-source,202,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArray.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.PackedArray = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst PackedArrayContext_1 = require("./PackedArrayContext");\nconst NUMBER_OF_SETS = 8;\nconst { pow\x2C floor } = Math;\n/**\n * A Packed array of signed 64 bit values\x2C and supports {@link #get get()}\x2C {@link #set set()}\x2C\n * {@link #add add()} and {@link #increment increment()} operations on the logical contents of the array.\n *\n * An {@link PackedLongArray} Uses {@link PackedArrayContext} to track\n * the array's logical contents. Contexts may be switched when a context requires resizing\n * to complete logical array operations (get\x2C set\x2C add\x2C increment). Contexts are\n * established and used within critical sections in order to facilitate concurrent\n * implementors.\n *\n */\nclass PackedArray {\n    constructor(virtualLength\x2C initialPhysicalLength = PackedArrayContext_1.MINIMUM_INITIAL_PACKED_ARRAY_CAPACITY) {\n        this.arrayContext = new PackedArrayContext_1.PackedArrayContext(virtualLength\x2C initialPhysicalLength);\n    }\n    setVirtualLength(newVirtualArrayLength) {\n        if (newVirtualArrayLength < this.length()) {\n            throw new Error("Cannot set virtual length\x2C as requested length " +\n                newVirtualArrayLength +\n                " is smaller than the current virtual length " +\n                this.length());\n        }\n        const currentArrayContext = this.arrayContext;\n        if (currentArrayContext.isPacked &&\n            currentArrayContext.determineTopLevelShiftForVirtualLength(newVirtualArrayLength) == currentArrayContext.getTopLevelShift()) {\n            // No changes to the array context contents is needed. Just change the virtual length.\n            currentArrayContext.setVirtualLength(newVirtualArrayLength);\n            return;\n        }\n        this.arrayContext = currentArrayContext.copyAndIncreaseSize(this.getPhysicalLength()\x2C newVirtualArrayLength);\n    }\n    /**\n     * Get value at virtual index in the array\n     * @param index the virtual array index\n     * @return the array value at the virtual index given\n     */\n    get(index) {\n        let value = 0;\n        for (let byteNum = 0; byteNum < NUMBER_OF_SETS; byteNum++) {\n            let byteValueAtPackedIndex = 0;\n            // Deal with unpacked context:\n            if (!this.arrayContext.isPacked) {\n                return this.arrayContext.getAtUnpackedIndex(index);\n            }\n            // Context is packed:\n            const packedIndex = this.arrayContext.getPackedIndex(byteNum\x2C index\x2C false);\n            if (packedIndex < 0) {\n                return value;\n            }\n            byteValueAtPackedIndex =\n                this.arrayContext.getAtByteIndex(packedIndex) * pow(2\x2C byteNum << 3);\n            value += byteValueAtPackedIndex;\n        }\n        return value;\n    }\n    /**\n     * Increment value at a virrual index in the array\n     * @param index virtual index of value to increment\n     */\n    increment(index) {\n        this.add(index\x2C 1);\n    }\n    safeGetPackedIndexgetPackedIndex(setNumber\x2C virtualIndex) {\n        //do {\n        //try {\n        return this.arrayContext.getPackedIndex(setNumber\x2C virtualIndex\x2C true);\n        /*} catch (ex) {\n            if (ex instanceof ResizeError) {\n              this.arrayContext.resizeArray(ex.newSize);\n            } else {\n              throw ex;\n            }\n          }*/\n        //} while (true);\n    }\n    /**\n     * Add to a value at a virtual index in the array\n     * @param index the virtual index of the value to be added to\n     * @param value the value to add\n     */\n    add(index\x2C value) {\n        let remainingValueToAdd = value;\n        for (let byteNum = 0\x2C byteShift = 0; byteNum < NUMBER_OF_SETS; byteNum++\x2C byteShift += 8) {\n            // Deal with unpacked context:\n            if (!this.arrayContext.isPacked) {\n                this.arrayContext.addAndGetAtUnpackedIndex(index\x2C value);\n                return;\n            }\n            // Context is packed:\n            const packedIndex = this.safeGetPackedIndexgetPackedIndex(byteNum\x2C index);\n            const byteToAdd = remainingValueToAdd & 0xff;\n            const afterAddByteValue = this.arrayContext.addAtByteIndex(packedIndex\x2C byteToAdd);\n            // Reduce remaining value to add by amount just added:\n            remainingValueToAdd -= byteToAdd;\n            remainingValueToAdd = remainingValueToAdd / pow(2\x2C 8);\n            // Account for carry:\n            remainingValueToAdd += floor(afterAddByteValue / pow(2\x2C 8));\n            if (remainingValueToAdd == 0) {\n                return; // nothing to add to higher magnitudes\n            }\n        }\n    }\n    /**\n     * Set the value at a virtual index in the array\n     * @param index the virtual index of the value to set\n     * @param value the value to set\n     */\n    set(index\x2C value) {\n        let bytesAlreadySet = 0;\n        let valueForNextLevels = value;\n        for (let byteNum = 0; byteNum < NUMBER_OF_SETS; byteNum++) {\n            // Establish context within: critical section\n            // Deal with unpacked context:\n            if (!this.arrayContext.isPacked) {\n                this.arrayContext.setAtUnpackedIndex(index\x2C value);\n                return;\n            }\n            // Context is packed:\n            if (valueForNextLevels == 0) {\n                // Special-case zeros to avoid inflating packed array for no reason\n                const packedIndex = this.arrayContext.getPackedIndex(byteNum\x2C index\x2C false);\n                if (packedIndex < 0) {\n                    return; // no need to create entries for zero values if they don't already exist\n                }\n            }\n            // Make sure byte is populated:\n            const packedIndex = this.arrayContext.getPackedIndex(byteNum\x2C index\x2C true);\n            // Determine value to write\x2C and prepare for next levels\n            const byteToWrite = valueForNextLevels & 0xff;\n            valueForNextLevels = floor(valueForNextLevels / pow(2\x2C 8));\n            if (byteNum < bytesAlreadySet) {\n                // We want to avoid writing to the same byte twice when not doing so for the\n                // entire 64 bit value atomically\x2C as doing so opens a race with e.g. concurrent\n                // adders. So dobn't actually write the byte if has been written before.\n                continue;\n            }\n            this.arrayContext.setAtByteIndex(packedIndex\x2C byteToWrite);\n            bytesAlreadySet++;\n        }\n    }\n    /**\n     * Get the current physical length (in longs) of the array's backing storage\n     * @return the current physical length (in longs) of the array's current backing storage\n     */\n    getPhysicalLength() {\n        return this.arrayContext.physicalLength;\n    }\n    /**\n     * Get the (virtual) length of the array\n     * @return the (virtual) length of the array\n     */\n    length() {\n        return this.arrayContext.getVirtualLength();\n    }\n    /**\n     * Clear the array contents\n     */\n    clear() {\n        this.arrayContext.clear();\n    }\n    toString() {\n        let output = "PackedArray:\\n";\n        output += this.arrayContext.toString();\n        return output;\n    }\n}\nexports.PackedArray = PackedArray;\n//# sourceMappingURL=PackedArray.js.map
code-source-info,0x93fa32614f6,202,0,7517,C0O0C4O7517,,
code-creation,Function,10,115333,0x93fa3261bee,156, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArray.js:1:1,0x93fa3261460,~
code-source-info,0x93fa3261bee,202,0,7517,C0O0C17O14C21O21C29O36C37O21C42O77C43O97C47O406C50O406C54O406C56O462C58O462C60O488C64O473C70O478C148O7443C150O7463C155O7516,,
code-creation,Eval,10,115791,0x93fa32639d6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArrayContext.js:1:1,0x93fa3263748,~
script-source,203,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArrayContext.js,"use strict";\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.PackedArrayContext = exports.MINIMUM_INITIAL_PACKED_ARRAY_CAPACITY = void 0;\n/**\n * A packed-value\x2C sparse array context used for storing 64 bit signed values.\n *\n * An array context is optimised for tracking sparsely set (as in mostly zeros) values that tend to not make\n * use pof the full 64 bit value range even when they are non-zero. The array context's internal representation\n * is such that the packed value at each virtual array index may be represented by 0-8 bytes of actual storage.\n *\n * An array context encodes the packed values in 8 "set trees" with each set tree representing one byte of the\n * packed value at the virtual index in question. The {@link #getPackedIndex(int\x2C int\x2C boolean)} method is used\n * to look up the byte-index corresponding to the given (set tree) value byte of the given virtual index\x2C and can\n * be used to add entries to represent that byte as needed. As a succesful {@link #getPackedIndex(int\x2C int\x2C boolean)}\n * may require a resizing of the array\x2C it can throw a {@link ResizeException} to indicate that the requested\n * packed index cannot be found or added without a resize of the physical storage.\n *\n */\nexports.MINIMUM_INITIAL_PACKED_ARRAY_CAPACITY = 16;\nconst MAX_SUPPORTED_PACKED_COUNTS_ARRAY_LENGTH = Math.pow(2\x2C 13) - 1; //(Short.MAX_VALUE / 4);  TODO ALEX why ???\nconst SET_0_START_INDEX = 0;\nconst NUMBER_OF_SETS = 8;\nconst LEAF_LEVEL_SHIFT = 3;\nconst NON_LEAF_ENTRY_SLOT_INDICATORS_OFFSET = 0;\nconst NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS = 1;\nconst PACKED_ARRAY_GROWTH_INCREMENT = 16;\nconst PACKED_ARRAY_GROWTH_FRACTION_POW2 = 4;\nconst { pow\x2C ceil\x2C log2\x2C max } = Math;\nconst bitCount = (n) => {\n    var bits = 0;\n    while (n !== 0) {\n        bits += bitCount32(n | 0);\n        n /= 0x100000000;\n    }\n    return bits;\n};\nconst bitCount32 = (n) => {\n    n = n - ((n >> 1) & 0x55555555);\n    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n    return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n};\nclass PackedArrayContext {\n    constructor(virtualLength\x2C initialPhysicalLength) {\n        this.populatedShortLength = 0;\n        this.topLevelShift = Number.MAX_VALUE; // Make it non-sensical until properly initialized.\n        this.physicalLength = Math.max(initialPhysicalLength\x2C exports.MINIMUM_INITIAL_PACKED_ARRAY_CAPACITY);\n        this.isPacked =\n            this.physicalLength <= MAX_SUPPORTED_PACKED_COUNTS_ARRAY_LENGTH;\n        if (!this.isPacked) {\n            this.physicalLength = virtualLength;\n        }\n        this.array = new ArrayBuffer(this.physicalLength * 8);\n        this.initArrayViews(this.array);\n        this.init(virtualLength);\n    }\n    initArrayViews(array) {\n        this.byteArray = new Uint8Array(array);\n        this.shortArray = new Uint16Array(array);\n        this.longArray = new Float64Array(array);\n    }\n    init(virtualLength) {\n        if (!this.isPacked) {\n            // Deal with non-packed context init:\n            this.virtualLength = virtualLength;\n            return;\n        }\n        this.populatedShortLength = SET_0_START_INDEX + 8;\n        // Populate empty root entries\x2C and point to them from the root indexes:\n        for (let i = 0; i < NUMBER_OF_SETS; i++) {\n            this.setAtShortIndex(SET_0_START_INDEX + i\x2C 0);\n        }\n        this.setVirtualLength(virtualLength);\n    }\n    clear() {\n        this.byteArray.fill(0);\n        this.init(this.virtualLength);\n    }\n    copyAndIncreaseSize(newPhysicalArrayLength\x2C newVirtualArrayLength) {\n        const ctx = new PackedArrayContext(newVirtualArrayLength\x2C newPhysicalArrayLength);\n        if (this.isPacked) {\n            ctx.populateEquivalentEntriesWithEntriesFromOther(this);\n        }\n        return ctx;\n    }\n    getPopulatedShortLength() {\n        return this.populatedShortLength;\n    }\n    getPopulatedLongLength() {\n        return (this.getPopulatedShortLength() + 3) >> 2; // round up\n    }\n    setAtByteIndex(byteIndex\x2C value) {\n        this.byteArray[byteIndex] = value;\n    }\n    getAtByteIndex(byteIndex) {\n        return this.byteArray[byteIndex];\n    }\n    /**\n     * add a byte value to a current byte value in the array\n     * @param byteIndex index of byte value to add to\n     * @param valueToAdd byte value to add\n     * @return the afterAddValue. ((afterAddValue & 0x100) != 0) indicates a carry.\n     */\n    addAtByteIndex(byteIndex\x2C valueToAdd) {\n        const newValue = this.byteArray[byteIndex] + valueToAdd;\n        this.byteArray[byteIndex] = newValue;\n        return newValue;\n    }\n    setPopulatedLongLength(newPopulatedLongLength) {\n        this.populatedShortLength = newPopulatedLongLength << 2;\n    }\n    getVirtualLength() {\n        return this.virtualLength;\n    }\n    length() {\n        return this.physicalLength;\n    }\n    setAtShortIndex(shortIndex\x2C value) {\n        this.shortArray[shortIndex] = value;\n    }\n    setAtLongIndex(longIndex\x2C value) {\n        this.longArray[longIndex] = value;\n    }\n    getAtShortIndex(shortIndex) {\n        return this.shortArray[shortIndex];\n    }\n    getIndexAtShortIndex(shortIndex) {\n        return this.shortArray[shortIndex];\n    }\n    setPackedSlotIndicators(entryIndex\x2C newPackedSlotIndicators) {\n        this.setAtShortIndex(entryIndex + NON_LEAF_ENTRY_SLOT_INDICATORS_OFFSET\x2C newPackedSlotIndicators);\n    }\n    getPackedSlotIndicators(entryIndex) {\n        return (this.shortArray[entryIndex + NON_LEAF_ENTRY_SLOT_INDICATORS_OFFSET] &\n            0xffff);\n    }\n    getIndexAtEntrySlot(entryIndex\x2C slot) {\n        return this.getAtShortIndex(entryIndex + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + slot);\n    }\n    setIndexAtEntrySlot(entryIndex\x2C slot\x2C newIndexValue) {\n        this.setAtShortIndex(entryIndex + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + slot\x2C newIndexValue);\n    }\n    expandArrayIfNeeded(entryLengthInLongs) {\n        const currentLength = this.length();\n        if (currentLength < this.getPopulatedLongLength() + entryLengthInLongs) {\n            const growthIncrement = max(entryLengthInLongs\x2C PACKED_ARRAY_GROWTH_INCREMENT\x2C this.getPopulatedLongLength() >> PACKED_ARRAY_GROWTH_FRACTION_POW2);\n            this.resizeArray(currentLength + growthIncrement);\n        }\n    }\n    newEntry(entryLengthInShorts) {\n        // Add entry at the end of the array:\n        const newEntryIndex = this.populatedShortLength;\n        this.expandArrayIfNeeded((entryLengthInShorts >> 2) + 1);\n        this.populatedShortLength = newEntryIndex + entryLengthInShorts;\n        for (let i = 0; i < entryLengthInShorts; i++) {\n            this.setAtShortIndex(newEntryIndex + i\x2C -1); // Poison value -1. Must be overriden before reads\n        }\n        return newEntryIndex;\n    }\n    newLeafEntry() {\n        // Add entry at the end of the array:\n        let newEntryIndex;\n        newEntryIndex = this.getPopulatedLongLength();\n        this.expandArrayIfNeeded(1);\n        this.setPopulatedLongLength(newEntryIndex + 1);\n        this.setAtLongIndex(newEntryIndex\x2C 0);\n        return newEntryIndex;\n    }\n    /**\n     * Consolidate entry with previous entry verison if one exists\n     *\n     * @param entryIndex The shortIndex of the entry to be consolidated\n     * @param previousVersionIndex the index of the previous version of the entry\n     */\n    consolidateEntry(entryIndex\x2C previousVersionIndex) {\n        const previousVersionPackedSlotsIndicators = this.getPackedSlotIndicators(previousVersionIndex);\n        // Previous version exists\x2C needs consolidation\n        const packedSlotsIndicators = this.getPackedSlotIndicators(entryIndex);\n        const insertedSlotMask = packedSlotsIndicators ^ previousVersionPackedSlotsIndicators; // the only bit that differs\n        const slotsBelowBitNumber = packedSlotsIndicators & (insertedSlotMask - 1);\n        const insertedSlotIndex = bitCount(slotsBelowBitNumber);\n        const numberOfSlotsInEntry = bitCount(packedSlotsIndicators);\n        // Copy the entry slots from previous version\x2C skipping the newly inserted slot in the target:\n        let sourceSlot = 0;\n        for (let targetSlot = 0; targetSlot < numberOfSlotsInEntry; targetSlot++) {\n            if (targetSlot !== insertedSlotIndex) {\n                const indexAtSlot = this.getIndexAtEntrySlot(previousVersionIndex\x2C sourceSlot);\n                if (indexAtSlot !== 0) {\n                    this.setIndexAtEntrySlot(entryIndex\x2C targetSlot\x2C indexAtSlot);\n                }\n                sourceSlot++;\n            }\n        }\n    }\n    /**\n     * Expand entry as indicated.\n     *\n     * @param existingEntryIndex the index of the entry\n     * @param entryPointerIndex  index to the slot pointing to the entry (needs to be fixed up)\n     * @param insertedSlotIndex  realtive [packed] index of slot being inserted into entry\n     * @param insertedSlotMask   mask value fo slot being inserted\n     * @param nextLevelIsLeaf    the level below this one is a leaf level\n     * @return the updated index of the entry (-1 if epansion failed due to conflict)\n     * @throws RetryException if expansion fails due to concurrent conflict\x2C and caller should try again.\n     */\n    expandEntry(existingEntryIndex\x2C entryPointerIndex\x2C insertedSlotIndex\x2C insertedSlotMask\x2C nextLevelIsLeaf) {\n        let packedSlotIndicators = this.getAtShortIndex(existingEntryIndex) & 0xffff;\n        packedSlotIndicators |= insertedSlotMask;\n        const numberOfslotsInExpandedEntry = bitCount(packedSlotIndicators);\n        if (insertedSlotIndex >= numberOfslotsInExpandedEntry) {\n            throw new Error("inserted slot index is out of range given provided masks");\n        }\n        const expandedEntryLength = numberOfslotsInExpandedEntry + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS;\n        // Create new next-level entry to refer to from slot at this level:\n        let indexOfNewNextLevelEntry = 0;\n        if (nextLevelIsLeaf) {\n            indexOfNewNextLevelEntry = this.newLeafEntry(); // Establish long-index to new leaf entry\n        }\n        else {\n            // TODO: Optimize this by creating the whole sub-tree here\x2C rather than a step that will immediaterly expand\n            // Create a new 1 word (empty\x2C no slots set) entry for the next level:\n            indexOfNewNextLevelEntry = this.newEntry(NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS); // Establish short-index to new leaf entry\n            this.setPackedSlotIndicators(indexOfNewNextLevelEntry\x2C 0);\n        }\n        const insertedSlotValue = indexOfNewNextLevelEntry;\n        const expandedEntryIndex = this.newEntry(expandedEntryLength);\n        // populate the packed indicators word:\n        this.setPackedSlotIndicators(expandedEntryIndex\x2C packedSlotIndicators);\n        // Populate the inserted slot with the index of the new next level entry:\n        this.setIndexAtEntrySlot(expandedEntryIndex\x2C insertedSlotIndex\x2C insertedSlotValue);\n        this.setAtShortIndex(entryPointerIndex\x2C expandedEntryIndex);\n        this.consolidateEntry(expandedEntryIndex\x2C existingEntryIndex);\n        return expandedEntryIndex;\n    }\n    //\n    //   ######   ######## ########    ##     ##    ###    ##             ## #### ##    ## ########  ######## ##     ##\n    //  ##    ##  ##          ##       ##     ##   ## ##   ##            ##   ##  ###   ## ##     ## ##        ##   ##\n    //  ##        ##          ##       ##     ##  ##   ##  ##           ##    ##  ####  ## ##     ## ##         ## ##\n    //  ##   #### ######      ##       ##     ## ##     ## ##          ##     ##  ## ## ## ##     ## ######      ###\n    //  ##    ##  ##          ##        ##   ##  ######### ##         ##      ##  ##  #### ##     ## ##         ## ##\n    //  ##    ##  ##          ##         ## ##   ##     ## ##        ##       ##  ##   ### ##     ## ##        ##   ##\n    //   ######   ########    ##          ###    ##     ## ######## ##       #### ##    ## ########  ######## ##     ##\n    //\n    getRootEntry(setNumber\x2C insertAsNeeded = false) {\n        const entryPointerIndex = SET_0_START_INDEX + setNumber;\n        let entryIndex = this.getIndexAtShortIndex(entryPointerIndex);\n        if (entryIndex == 0) {\n            if (!insertAsNeeded) {\n                return 0; // Index does not currently exist in packed array;\n            }\n            entryIndex = this.newEntry(NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS);\n            // Create a new empty (no slots set) entry for the next level:\n            this.setPackedSlotIndicators(entryIndex\x2C 0);\n            this.setAtShortIndex(entryPointerIndex\x2C entryIndex);\n        }\n        return entryIndex;\n    }\n    /**\n     * Get the byte-index (into the packed array) corresponding to a given (set tree) value byte of given virtual index.\n     * Inserts new set tree nodes as needed if indicated.\n     *\n     * @param setNumber      The set tree number (0-7\x2C 0 corresponding with the LSByte set tree)\n     * @param virtualIndex   The virtual index into the PackedArray\n     * @param insertAsNeeded If true\x2C will insert new set tree nodes as needed if they do not already exist\n     * @return the byte-index corresponding to the given (set tree) value byte of the given virtual index\n     */\n    getPackedIndex(setNumber\x2C virtualIndex\x2C insertAsNeeded) {\n        if (virtualIndex >= this.virtualLength) {\n            throw new Error(`Attempting access at index ${virtualIndex}\x2C beyond virtualLength ${this.virtualLength}`);\n        }\n        let entryPointerIndex = SET_0_START_INDEX + setNumber; // TODO init needed ?\n        let entryIndex = this.getRootEntry(setNumber\x2C insertAsNeeded);\n        if (entryIndex == 0) {\n            return -1; // Index does not currently exist in packed array;\n        }\n        // Work down the levels of non-leaf entries:\n        for (let indexShift = this.topLevelShift; indexShift >= LEAF_LEVEL_SHIFT; indexShift -= 4) {\n            const nextLevelIsLeaf = indexShift === LEAF_LEVEL_SHIFT;\n            // Target is a packedSlotIndicators entry\n            const packedSlotIndicators = this.getPackedSlotIndicators(entryIndex);\n            const slotBitNumber = (virtualIndex / pow(2\x2C indexShift)) & 0xf; //(virtualIndex >>> indexShift) & 0xf;\n            const slotMask = 1 << slotBitNumber;\n            const slotsBelowBitNumber = packedSlotIndicators & (slotMask - 1);\n            const slotNumber = bitCount(slotsBelowBitNumber);\n            if ((packedSlotIndicators & slotMask) === 0) {\n                // The entryIndex slot does not have the contents we want\n                if (!insertAsNeeded) {\n                    return -1; // Index does not currently exist in packed array;\n                }\n                // Expand the entry\x2C adding the index to new entry at the proper slot:\n                entryIndex = this.expandEntry(entryIndex\x2C entryPointerIndex\x2C slotNumber\x2C slotMask\x2C nextLevelIsLeaf);\n            }\n            // Next level's entry pointer index is in the appropriate slot in in the entries array in this entry:\n            entryPointerIndex =\n                entryIndex + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + slotNumber;\n            entryIndex = this.getIndexAtShortIndex(entryPointerIndex);\n        }\n        // entryIndex is the long-index of a leaf entry that contains the value byte for the given set\n        const byteIndex = (entryIndex << 3) + (virtualIndex & 0x7); // Determine byte index offset within leaf entry\n        return byteIndex;\n    }\n    determineTopLevelShiftForVirtualLength(virtualLength) {\n        const sizeMagnitude = ceil(log2(virtualLength));\n        const eightsSizeMagnitude = sizeMagnitude - 3;\n        let multipleOfFourSizeMagnitude = ceil(eightsSizeMagnitude / 4) * 4;\n        multipleOfFourSizeMagnitude = max(multipleOfFourSizeMagnitude\x2C 8);\n        const topLevelShiftNeeded = multipleOfFourSizeMagnitude - 4 + 3;\n        return topLevelShiftNeeded;\n    }\n    setVirtualLength(virtualLength) {\n        if (!this.isPacked) {\n            throw new Error("Should never be adjusting the virtual size of a non-packed context");\n        }\n        this.topLevelShift = this.determineTopLevelShiftForVirtualLength(virtualLength);\n        this.virtualLength = virtualLength;\n    }\n    getTopLevelShift() {\n        return this.topLevelShift;\n    }\n    //\n    //  ##     ##         ########   #######  ########  ##     ## ##          ###    ######## ########\n    //   ##   ##          ##     ## ##     ## ##     ## ##     ## ##         ## ##      ##    ##\n    //    ## ##           ##     ## ##     ## ##     ## ##     ## ##        ##   ##     ##    ##\n    //     ###    ####### ########  ##     ## ########  ##     ## ##       ##     ##    ##    ######\n    //    ## ##           ##        ##     ## ##        ##     ## ##       #########    ##    ##\n    //   ##   ##          ##        ##     ## ##        ##     ## ##       ##     ##    ##    ##\n    //  ##     ##         ##         #######  ##         #######  ######## ##     ##    ##    ########\n    //\n    resizeArray(newLength) {\n        const tmp = new Uint8Array(newLength * 8);\n        tmp.set(this.byteArray);\n        this.array = tmp.buffer;\n        this.initArrayViews(this.array);\n        this.physicalLength = newLength;\n    }\n    populateEquivalentEntriesWithEntriesFromOther(other) {\n        if (this.virtualLength < other.getVirtualLength()) {\n            throw new Error("Cannot populate array of smaller virtual length");\n        }\n        for (let i = 0; i < NUMBER_OF_SETS; i++) {\n            const otherEntryIndex = other.getAtShortIndex(SET_0_START_INDEX + i);\n            if (otherEntryIndex == 0)\n                continue; // No tree to duplicate\n            let entryIndexPointer = SET_0_START_INDEX + i;\n            for (let i = this.topLevelShift; i > other.topLevelShift; i -= 4) {\n                // for each inserted level:\n                // Allocate entry in other:\n                const sizeOfEntry = NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + 1;\n                const newEntryIndex = this.newEntry(sizeOfEntry);\n                // Link new level in.\n                this.setAtShortIndex(entryIndexPointer\x2C newEntryIndex);\n                // Populate new level entry\x2C use pointer to slot 0 as place to populate under:\n                this.setPackedSlotIndicators(newEntryIndex\x2C 0x1); // Slot 0 populated\n                entryIndexPointer =\n                    newEntryIndex + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS; // Where the slot 0 index goes.\n            }\n            this.copyEntriesAtLevelFromOther(other\x2C otherEntryIndex\x2C entryIndexPointer\x2C other.topLevelShift);\n        }\n    }\n    copyEntriesAtLevelFromOther(other\x2C otherLevelEntryIndex\x2C levelEntryIndexPointer\x2C otherIndexShift) {\n        const nextLevelIsLeaf = otherIndexShift == LEAF_LEVEL_SHIFT;\n        const packedSlotIndicators = other.getPackedSlotIndicators(otherLevelEntryIndex);\n        const numberOfSlots = bitCount(packedSlotIndicators);\n        const sizeOfEntry = NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + numberOfSlots;\n        const entryIndex = this.newEntry(sizeOfEntry);\n        this.setAtShortIndex(levelEntryIndexPointer\x2C entryIndex);\n        this.setAtShortIndex(entryIndex + NON_LEAF_ENTRY_SLOT_INDICATORS_OFFSET\x2C packedSlotIndicators);\n        for (let i = 0; i < numberOfSlots; i++) {\n            if (nextLevelIsLeaf) {\n                // Make leaf in other:\n                const leafEntryIndex = this.newLeafEntry();\n                this.setIndexAtEntrySlot(entryIndex\x2C i\x2C leafEntryIndex);\n                // OPTIM\n                // avoid iteration on all the values of the source ctx\n                const otherNextLevelEntryIndex = other.getIndexAtEntrySlot(otherLevelEntryIndex\x2C i);\n                this.longArray[leafEntryIndex] =\n                    other.longArray[otherNextLevelEntryIndex];\n            }\n            else {\n                const otherNextLevelEntryIndex = other.getIndexAtEntrySlot(otherLevelEntryIndex\x2C i);\n                this.copyEntriesAtLevelFromOther(other\x2C otherNextLevelEntryIndex\x2C entryIndex + NON_LEAF_ENTRY_HEADER_SIZE_IN_SHORTS + i\x2C otherIndexShift - 4);\n            }\n        }\n    }\n    getAtUnpackedIndex(index) {\n        return this.longArray[index];\n    }\n    setAtUnpackedIndex(index\x2C newValue) {\n        this.longArray[index] = newValue;\n    }\n    lazysetAtUnpackedIndex(index\x2C newValue) {\n        this.longArray[index] = newValue;\n    }\n    incrementAndGetAtUnpackedIndex(index) {\n        this.longArray[index]++;\n        return this.longArray[index];\n    }\n    addAndGetAtUnpackedIndex(index\x2C valueToAdd) {\n        this.longArray[index] += valueToAdd;\n        return this.longArray[index];\n    }\n    //\n    //   ########  #######           ######  ######## ########  #### ##    ##  ######\n    //      ##    ##     ##         ##    ##    ##    ##     ##  ##  ###   ## ##    ##\n    //      ##    ##     ##         ##          ##    ##     ##  ##  ####  ## ##\n    //      ##    ##     ## #######  ######     ##    ########   ##  ## ## ## ##   ####\n    //      ##    ##     ##               ##    ##    ##   ##    ##  ##  #### ##    ##\n    //      ##    ##     ##         ##    ##    ##    ##    ##   ##  ##   ### ##    ##\n    //      ##     #######           ######     ##    ##     ## #### ##    ##  ######\n    //\n    nonLeafEntryToString(entryIndex\x2C indexShift\x2C indentLevel) {\n        let output = "";\n        for (let i = 0; i < indentLevel; i++) {\n            output += "  ";\n        }\n        try {\n            const packedSlotIndicators = this.getPackedSlotIndicators(entryIndex);\n            output += `slotIndiators: 0x${toHex(packedSlotIndicators)}\x2C prevVersionIndex: 0: [ `;\n            const numberOfslotsInEntry = bitCount(packedSlotIndicators);\n            for (let i = 0; i < numberOfslotsInEntry; i++) {\n                output += this.getIndexAtEntrySlot(entryIndex\x2C i);\n                if (i < numberOfslotsInEntry - 1) {\n                    output += "\x2C ";\n                }\n            }\n            output += ` ] (indexShift = ${indexShift})\\n`;\n            const nextLevelIsLeaf = indexShift == LEAF_LEVEL_SHIFT;\n            for (let i = 0; i < numberOfslotsInEntry; i++) {\n                const nextLevelEntryIndex = this.getIndexAtEntrySlot(entryIndex\x2C i);\n                if (nextLevelIsLeaf) {\n                    output += this.leafEntryToString(nextLevelEntryIndex\x2C indentLevel + 4);\n                }\n                else {\n                    output += this.nonLeafEntryToString(nextLevelEntryIndex\x2C indexShift - 4\x2C indentLevel + 4);\n                }\n            }\n        }\n        catch (ex) {\n            output += `Exception thrown at nonLeafEnty at index ${entryIndex} with indexShift ${indexShift}\\n`;\n        }\n        return output;\n    }\n    leafEntryToString(entryIndex\x2C indentLevel) {\n        let output = "";\n        for (let i = 0; i < indentLevel; i++) {\n            output += "  ";\n        }\n        try {\n            output += "Leaf bytes : ";\n            for (let i = 0; i < 8; i++) {\n                output += `0x${toHex(this.byteArray[entryIndex * 8 + i])} `;\n            }\n            output += "\\n";\n        }\n        catch (ex) {\n            output += `Exception thrown at leafEnty at index ${entryIndex}\\n`;\n        }\n        return output;\n    }\n    toString() {\n        let output = "PackedArrayContext:\\n";\n        if (!this.isPacked) {\n            return output + "Context is unpacked:\\n"; // unpackedToString();\n        }\n        for (let setNumber = 0; setNumber < NUMBER_OF_SETS; setNumber++) {\n            try {\n                const entryPointerIndex = SET_0_START_INDEX + setNumber;\n                const entryIndex = this.getIndexAtShortIndex(entryPointerIndex);\n                output += `Set ${setNumber}: root = ${entryIndex} \\n`;\n                if (entryIndex == 0)\n                    continue;\n                output += this.nonLeafEntryToString(entryIndex\x2C this.topLevelShift\x2C 4);\n            }\n            catch (ex) {\n                output += `Exception thrown in set ${setNumber}%d\\n`;\n            }\n        }\n        //output += recordedValuesToString();\n        return output;\n    }\n}\nexports.PackedArrayContext = PackedArrayContext;\nconst toHex = (n) => {\n    return Number(n)\n        .toString(16)\n        .padStart(2\x2C "0");\n};\n//# sourceMappingURL=PackedArrayContext.js.map
code-source-info,0x93fa32639d6,203,0,24458,C0O0C4O24458,,
code-creation,Function,10,116666,0x93fa3264f7e,485, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/packedarray/PackedArrayContext.js:1:1,0x93fa3263940,~
code-source-info,0x93fa3264f7e,203,0,24458,C0O0C54O284C58O291C69O306C74O291C79O347C87O422C93O374C97O1509C102O1555C106O1610C110O1615C121O1615C127O1626C130O1610C132O1701C133O1701C135O1727C137O1727C139O1755C141O1755C143O1804C144O1804C146O1852C148O1852C150O1893C152O1893C154O1939C156O1939C158O1975C162O1950C168O1955C174O1961C180O1967C186O1998C190O1998C192O2153C196O2153C468O24267C473O24294C477O24330C481O24330C484O24457,,
tick,0x1a36493f4,116708,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa3261c20,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa3260832,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325fa48,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325e815,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e795,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,116833,0x93fa3266e56,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int8Histogram.js:1:1,0x93fa3266d00,~
script-source,204,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int8Histogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst TypedArrayHistogram_1 = require("./TypedArrayHistogram");\nclass Int8Histogram extends TypedArrayHistogram_1.default {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(Uint8Array\x2C lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    }\n}\nexports.default = Int8Histogram;\n//# sourceMappingURL=Int8Histogram.js.map
code-source-info,0x93fa3266e56,204,0,756,C0O0C4O756,,
code-creation,Function,10,116875,0x93fa32670ce,66, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int8Histogram.js:1:1,0x93fa3266dc0,~
code-source-info,0x93fa32670ce,204,0,756,C0O14C4O21C12O36C20O21C25O377C28O377C33O461C58O682C60O698C65O755,,
code-creation,Eval,10,117125,0x93fa3267756,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:1:1,0x93fa32675d0,~
script-source,205,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst JsHistogram_1 = require("./JsHistogram");\nclass TypedArrayHistogram extends JsHistogram_1.default {\n    constructor(arrayCtr\x2C lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n        this.arrayCtr = arrayCtr;\n        this._totalCount = 0;\n        this._counts = new arrayCtr(this.countsArrayLength);\n    }\n    clearCounts() {\n        this._counts.fill(0);\n    }\n    incrementCountAtIndex(index) {\n        const currentCount = this._counts[index];\n        const newCount = currentCount + 1;\n        if (newCount < 0) {\n            throw newCount + " would overflow short integer count";\n        }\n        this._counts[index] = newCount;\n    }\n    addToCountAtIndex(index\x2C value) {\n        const currentCount = this._counts[index];\n        const newCount = currentCount + value;\n        if (newCount < Number.MIN_SAFE_INTEGER ||\n            newCount > Number.MAX_SAFE_INTEGER) {\n            throw newCount + " would overflow integer count";\n        }\n        this._counts[index] = newCount;\n    }\n    setCountAtIndex(index\x2C value) {\n        if (value < Number.MIN_SAFE_INTEGER || value > Number.MAX_SAFE_INTEGER) {\n            throw value + " would overflow integer count";\n        }\n        this._counts[index] = value;\n    }\n    resize(newHighestTrackableValue) {\n        this.establishSize(newHighestTrackableValue);\n        const newCounts = new this.arrayCtr(this.countsArrayLength);\n        newCounts.set(this._counts);\n        this._counts = newCounts;\n    }\n    getCountAtIndex(index) {\n        return this._counts[index];\n    }\n    _getEstimatedFootprintInBytes() {\n        return 1024 + this._counts.BYTES_PER_ELEMENT * this._counts.length;\n    }\n    copyCorrectedForCoordinatedOmission(expectedIntervalBetweenValueSamples) {\n        const copy = new TypedArrayHistogram(this.arrayCtr\x2C this.lowestDiscernibleValue\x2C this.highestTrackableValue\x2C this.numberOfSignificantValueDigits);\n        copy.addWhileCorrectingForCoordinatedOmission(this\x2C expectedIntervalBetweenValueSamples);\n        return copy;\n    }\n    toString() {\n        return `Histogram ${this._counts.BYTES_PER_ELEMENT * 8}b ${JSON.stringify(this\x2C null\x2C 2)}`;\n    }\n}\nexports.default = TypedArrayHistogram;\n//# sourceMappingURL=TypedArrayHistogram.js.map
code-source-info,0x93fa3267756,205,0,2704,C0O0C4O2704,,
code-creation,Function,10,117250,0x93fa3267dc6,122, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:1:1,0x93fa32676c0,~
code-source-info,0x93fa3267dc6,205,0,2704,C0O14C4O21C12O36C20O21C25O369C28O369C33O369C40O443C114O2618C116O2634C121O2703,,
tick,0x100c56808,117250,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa32670ea,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325fa51,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x93fa325e815,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e795,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,117375,0x93fa32685fe,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int16Histogram.js:1:1,0x93fa32684a8,~
script-source,206,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int16Histogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst TypedArrayHistogram_1 = require("./TypedArrayHistogram");\nclass Int16Histogram extends TypedArrayHistogram_1.default {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(Uint16Array\x2C lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    }\n}\nexports.default = Int16Histogram;\n//# sourceMappingURL=Int16Histogram.js.map
code-source-info,0x93fa32685fe,206,0,760,C0O0C4O760,,
code-creation,Function,10,117416,0x93fa3268876,66, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int16Histogram.js:1:1,0x93fa3268568,~
code-source-info,0x93fa3268876,206,0,760,C0O14C4O21C12O36C20O21C25O377C28O377C33O462C58O684C60O700C65O759,,
code-creation,Eval,10,117541,0x93fa3268d96,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int32Histogram.js:1:1,0x93fa3268c40,~
script-source,207,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int32Histogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst TypedArrayHistogram_1 = require("./TypedArrayHistogram");\nclass Int32Histogram extends TypedArrayHistogram_1.default {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(Uint32Array\x2C lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    }\n}\nexports.default = Int32Histogram;\n//# sourceMappingURL=Int32Histogram.js.map
code-source-info,0x93fa3268d96,207,0,760,C0O0C4O760,,
code-creation,Function,10,117583,0x93fa326900e,66, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int32Histogram.js:1:1,0x93fa3268d00,~
code-source-info,0x93fa326900e,207,0,760,C0O14C4O21C12O36C20O21C25O377C28O377C33O462C58O684C60O700C65O759,,
code-creation,Eval,10,117708,0x93fa326952e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Float64Histogram.js:1:1,0x93fa32693d8,~
script-source,208,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Float64Histogram.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst TypedArrayHistogram_1 = require("./TypedArrayHistogram");\nclass Float64Histogram extends TypedArrayHistogram_1.default {\n    constructor(lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits) {\n        super(Float64Array\x2C lowestDiscernibleValue\x2C highestTrackableValue\x2C numberOfSignificantValueDigits);\n    }\n}\nexports.default = Float64Histogram;\n//# sourceMappingURL=Float64Histogram.js.map
code-source-info,0x93fa326952e,208,0,767,C0O0C4O767,,
code-creation,Function,10,117750,0x93fa32697a6,66, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Float64Histogram.js:1:1,0x93fa3269498,~
code-source-info,0x93fa32697a6,208,0,767,C0O14C4O21C12O36C20O21C25O377C28O377C33O464C58O687C60O703C65O766,,
code-creation,Eval,10,118000,0x93fa3269e86,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ZigZagEncoding.js:1:1,0x93fa3269ca0,~
script-source,209,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ZigZagEncoding.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst { pow\x2C floor } = Math;\nconst TWO_POW_7 = pow(2\x2C 7);\nconst TWO_POW_14 = pow(2\x2C 14);\nconst TWO_POW_21 = pow(2\x2C 21);\nconst TWO_POW_28 = pow(2\x2C 28);\nconst TWO_POW_35 = pow(2\x2C 35);\nconst TWO_POW_42 = pow(2\x2C 42);\nconst TWO_POW_49 = pow(2\x2C 49);\nconst TWO_POW_56 = pow(2\x2C 56);\n/**\n * This class provides encoding and decoding methods for writing and reading\n * ZigZag-encoded LEB128-64b9B-variant (Little Endian Base 128) values to/from a\n * {@link ByteBuffer}. LEB128's variable length encoding provides for using a\n * smaller nuber of bytes for smaller values\x2C and the use of ZigZag encoding\n * allows small (closer to zero) negative values to use fewer bytes. Details\n * on both LEB128 and ZigZag can be readily found elsewhere.\n *\n * The LEB128-64b9B-variant encoding used here diverges from the "original"\n * LEB128 as it extends to 64 bit values: In the original LEB128\x2C a 64 bit\n * value can take up to 10 bytes in the stream\x2C where this variant's encoding\n * of a 64 bit values will max out at 9 bytes.\n *\n * As such\x2C this encoder/decoder should NOT be used for encoding or decoding\n * "standard" LEB128 formats (e.g. Google Protocol Buffers).\n */\nclass ZigZagEncoding {\n    /**\n     * Writes a long value to the given buffer in LEB128 ZigZag encoded format\n     * (negative numbers not supported)\n     * @param buffer the buffer to write to\n     * @param value  the value to write to the buffer\n     */\n    static encode(buffer\x2C value) {\n        if (value >= 0) {\n            value = value * 2;\n        }\n        else {\n            value = -value * 2 - 1;\n        }\n        if (value < TWO_POW_7) {\n            buffer.put(value);\n        }\n        else {\n            buffer.put(value | 0x80);\n            if (value < TWO_POW_14) {\n                buffer.put(floor(value / TWO_POW_7));\n            }\n            else {\n                buffer.put(floor(value / TWO_POW_7) | 0x80);\n                if (value < TWO_POW_21) {\n                    buffer.put(floor(value / TWO_POW_14));\n                }\n                else {\n                    buffer.put(floor(value / TWO_POW_14) | 0x80);\n                    if (value < TWO_POW_28) {\n                        buffer.put(floor(value / TWO_POW_21));\n                    }\n                    else {\n                        buffer.put(floor(value / TWO_POW_21) | 0x80);\n                        if (value < TWO_POW_35) {\n                            buffer.put(floor(value / TWO_POW_28));\n                        }\n                        else {\n                            buffer.put(floor(value / TWO_POW_28) | 0x80);\n                            if (value < TWO_POW_42) {\n                                buffer.put(floor(value / TWO_POW_35));\n                            }\n                            else {\n                                buffer.put(floor(value / TWO_POW_35) | 0x80);\n                                if (value < TWO_POW_49) {\n                                    buffer.put(floor(value / TWO_POW_42));\n                                }\n                                else {\n                                    buffer.put(floor(value / TWO_POW_42) | 0x80);\n                                    if (value < TWO_POW_56) {\n                                        buffer.put(floor(value / TWO_POW_49));\n                                    }\n                                    else {\n                                        // should not happen\n                                        buffer.put(floor(value / TWO_POW_49) + 0x80);\n                                        buffer.put(floor(value / TWO_POW_56));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Read an LEB128-64b9B ZigZag encoded long value from the given buffer\n     * (negative numbers not supported)\n     * @param buffer the buffer to read from\n     * @return the value read from the buffer\n     */\n    static decode(buffer) {\n        let v = buffer.get();\n        let value = v & 0x7f;\n        if ((v & 0x80) != 0) {\n            v = buffer.get();\n            value += (v & 0x7f) * TWO_POW_7;\n            if ((v & 0x80) != 0) {\n                v = buffer.get();\n                value += (v & 0x7f) * TWO_POW_14;\n                if ((v & 0x80) != 0) {\n                    v = buffer.get();\n                    value += (v & 0x7f) * TWO_POW_21;\n                    if ((v & 0x80) != 0) {\n                        v = buffer.get();\n                        value += (v & 0x7f) * TWO_POW_28;\n                        if ((v & 0x80) != 0) {\n                            v = buffer.get();\n                            value += (v & 0x7f) * TWO_POW_35;\n                            if ((v & 0x80) != 0) {\n                                v = buffer.get();\n                                value += (v & 0x7f) * TWO_POW_42;\n                                if ((v & 0x80) != 0) {\n                                    v = buffer.get();\n                                    value += (v & 0x7f) * TWO_POW_49;\n                                    if ((v & 0x80) != 0) {\n                                        v = buffer.get();\n                                        value += (v & 0x7f) * TWO_POW_56;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (value % 2 === 0) {\n            value = value / 2;\n        }\n        else {\n            value = -(value + 1) / 2;\n        }\n        return value;\n    }\n}\nexports.default = ZigZagEncoding;\n//# sourceMappingURL=ZigZagEncoding.js.map
code-source-info,0x93fa3269e86,209,0,5784,C0O0C4O5784,,
code-creation,Function,10,118208,0x93fa326a1f6,216, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ZigZagEncoding.js:1:1,0x93fa3269df0,~
code-source-info,0x93fa326a1f6,209,0,5784,C0O0C32O14C36O21C44O36C52O21C57O100C61O85C66O90C72O124C78O124C83O124C85O154C91O154C96O154C98O185C104O185C109O185C111O216C117O216C122O216C124O247C130O247C135O247C137O278C143O278C148O278C150O309C156O309C161O309C163O340C169O340C174O340C208O5708C210O5724C215O5783,,
code-creation,LazyCompile,10,118250,0x93fa326aaa6,96,findDeflateFunction /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:118:29,0x93fa325e418,~
code-source-info,0x93fa326aaa6,199,4726,4965,C0O4726C19O4749C54O4756C58O4792C70O4827C82O4843C85O4848C95O4957,,
code-creation,Eval,10,118291,0x93fa326ad16,19, :1:1,0x93fa326ac30,~
script-source,210,<unknown>,require("zlib").deflateSync
code-source-info,0x93fa326ad16,210,0,27,C0O0C8O0C13O15C18O27,,
tick,0x10115de90,118458,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x93fa326ad1e,0x93fa326aadc,0x93fa325e859,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e795,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,118791,0x93fa326c2fe,5, node:zlib:1:1,0x93fa326bc08,~
script-source,211,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  MathMaxApply\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_BROTLI_INVALID_PARAM\x2C\n    ERR_BUFFER_TOO_LARGE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_ZLIB_INITIALIZATION_FAILED\x2C\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { Transform\x2C finished } = require('stream');\nconst {\n  deprecate\n} = require('internal/util');\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst binding = internalBinding('zlib');\nconst assert = require('internal/assert');\nconst {\n  Buffer\x2C\n  kMaxLength\n} = require('buffer');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst kFlushFlag = Symbol('kFlushFlag');\nconst kError = Symbol('kError');\n\nconst constants = internalBinding('constants').zlib;\nconst {\n  // Zlib flush levels\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\n  // Zlib option values\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\n  // Node's compression stream modes (node_zlib_mode)\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\n  // Brotli operations (~flush levels)\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\n} = constants;\n\n// Translation table for return codes.\nconst codes = {\n  Z_OK: constants.Z_OK\x2C\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\n  Z_ERRNO: constants.Z_ERRNO\x2C\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\n};\n\nfor (const ckey of ObjectKeys(codes)) {\n  codes[codes[ckey]] = ckey;\n}\n\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\n  validateFunction(callback\x2C 'callback');\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\n  // Buffer without copying.\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n  } else if (isAnyArrayBuffer(buffer)) {\n    buffer = Buffer.from(buffer);\n  }\n  engine.buffers = null;\n  engine.nread = 0;\n  engine.cb = callback;\n  engine.on('data'\x2C zlibBufferOnData);\n  engine.on('error'\x2C zlibBufferOnError);\n  engine.on('end'\x2C zlibBufferOnEnd);\n  engine.end(buffer);\n}\n\nfunction zlibBufferOnData(chunk) {\n  if (!this.buffers)\n    this.buffers = [chunk];\n  else\n    ArrayPrototypePush(this.buffers\x2C chunk);\n  this.nread += chunk.length;\n  if (this.nread > this._maxOutputLength) {\n    this.close();\n    this.removeAllListeners('end');\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\n  }\n}\n\nfunction zlibBufferOnError(err) {\n  this.removeAllListeners('end');\n  this.cb(err);\n}\n\nfunction zlibBufferOnEnd() {\n  let buf;\n  if (this.nread === 0) {\n    buf = Buffer.alloc(0);\n  } else {\n    const bufs = this.buffers;\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\n  }\n  this.close();\n  if (this._info)\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\n  else\n    this.cb(null\x2C buf);\n}\n\nfunction zlibBufferSync(engine\x2C buffer) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    if (isAnyArrayBuffer(buffer)) {\n      buffer = Buffer.from(buffer);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n        buffer\n      );\n    }\n  }\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\n  if (engine._info)\n    return { buffer\x2C engine };\n  return buffer;\n}\n\nfunction zlibOnError(message\x2C errno\x2C code) {\n  const self = this[owner_symbol];\n  // There is no way to cleanly recover.\n  // Continuing only obscures problems.\n\n  // eslint-disable-next-line no-restricted-syntax\n  const error = new Error(message);\n  error.errno = errno;\n  error.code = code;\n  self.destroy(error);\n  self[kError] = error;\n}\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst checkFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!checkFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C\n                                 `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\n);\n\nconst FLUSH_BOUND = [\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\n];\nconst FLUSH_BOUND_IDX_NORMAL = 0;\nconst FLUSH_BOUND_IDX_BROTLI = 1;\n\n// The base class for all Zlib-style streams.\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\n  let chunkSize = Z_DEFAULT_CHUNK;\n  let maxOutputLength = kMaxLength;\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\n  // passed in by us.\n  assert(typeof mode === 'number');\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\n\n  let flushBoundIdx;\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\n  } else {\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\n  }\n\n  if (opts) {\n    chunkSize = opts.chunkSize;\n    if (!checkFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\n      chunkSize = Z_DEFAULT_CHUNK;\n    } else if (chunkSize < Z_MIN_CHUNK) {\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\n    }\n\n    flush = checkRangesOrGetDefault(\n      opts.flush\x2C 'options.flush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\n\n    finishFlush = checkRangesOrGetDefault(\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\n      finishFlush);\n\n    maxOutputLength = checkRangesOrGetDefault(\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\n      1\x2C kMaxLength\x2C kMaxLength);\n\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\n      opts = { ...opts };\n      opts.encoding = null;\n      opts.objectMode = false;\n      opts.writableObjectMode = false;\n    }\n  }\n\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\n  this[kError] = null;\n  this.bytesWritten = 0;\n  this._handle = handle;\n  handle[owner_symbol] = this;\n  // Used by processCallback() and zlibOnError()\n  handle.onerror = zlibOnError;\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\n  this._outOffset = 0;\n\n  this._chunkSize = chunkSize;\n  this._defaultFlushFlag = flush;\n  this._finishFlushFlag = finishFlush;\n  this._defaultFullFlushFlag = fullFlush;\n  this._info = opts && opts.info;\n  this._maxOutputLength = maxOutputLength;\n}\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\n\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return !this._handle;\n  }\n});\n\n// `bytesRead` made sense as a name when looking from the zlib engine's\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\n// that have this concept\x2C where it stands for the number of bytes read\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: deprecate(function() {\n    return this.bytesWritten;\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\n  set: deprecate(function(value) {\n    this.bytesWritten = value;\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\n     'This feature will be removed in the future.'\x2C 'DEP0108')\n});\n\nZlibBase.prototype.reset = function() {\n  if (!this._handle)\n    assert(false\x2C 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class\x2C\n// internally\x2C when the last chunk has been written.\nZlibBase.prototype._flush = function(callback) {\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\n};\n\n// Force Transform compat behavior.\nZlibBase.prototype._final = function(callback) {\n  callback();\n};\n\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\n// out which one is the "stronger" flush is needed.\n// This is currently only used to figure out which flush flag to use for the\n// last chunk.\n// Roughly\x2C the following holds:\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\nconst flushiness = [];\nlet i = 0;\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\nfor (const flushFlag of kFlushFlagList) {\n  flushiness[flushFlag] = i++;\n}\n\nfunction maxFlush(a\x2C b) {\n  return flushiness[a] > flushiness[b] ? a : b;\n}\n\n// Set up a list of 'special' buffers that can be written using .write()\n// from the .flush() code as a way of introducing flushing operations into the\n// write sequence.\nconst kFlushBuffers = [];\n{\n  const dummyArrayBuffer = new ArrayBuffer();\n  for (const flushFlag of kFlushFlagList) {\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\n  }\n}\n\nZlibBase.prototype.flush = function(kind\x2C callback) {\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\n    callback = kind;\n    kind = this._defaultFullFlushFlag;\n  }\n\n  if (this.writableFinished) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (this.writableEnded) {\n    if (callback)\n      this.once('end'\x2C callback);\n  } else {\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\n  }\n};\n\nZlibBase.prototype.close = function(callback) {\n  if (callback) finished(this\x2C callback);\n  this.destroy();\n};\n\nZlibBase.prototype._destroy = function(err\x2C callback) {\n  _close(this);\n  callback(err);\n};\n\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  let flushFlag = this._defaultFlushFlag;\n  // We use a 'fake' zero-length chunk to carry information about flushes from\n  // the public API to the actual stream implementation.\n  if (typeof chunk[kFlushFlag] === 'number') {\n    flushFlag = chunk[kFlushFlag];\n  }\n\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\n  }\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n};\n\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\n  // _processChunk() is left for backwards compatibility\n  if (typeof cb === 'function')\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n  else\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\n};\n\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\n  let availInBefore = chunk.byteLength;\n  let availOutBefore = self._chunkSize - self._outOffset;\n  let inOff = 0;\n  let availOutAfter;\n  let availInAfter;\n\n  let buffers = null;\n  let nread = 0;\n  let inputRead = 0;\n  const state = self._writeState;\n  const handle = self._handle;\n  let buffer = self._outBuffer;\n  let offset = self._outOffset;\n  const chunkSize = self._chunkSize;\n\n  let error;\n  self.on('error'\x2C function onError(er) {\n    error = er;\n  });\n\n  while (true) {\n    handle.writeSync(flushFlag\x2C\n                     chunk\x2C // in\n                     inOff\x2C // in_off\n                     availInBefore\x2C // in_len\n                     buffer\x2C // out\n                     offset\x2C // out_off\n                     availOutBefore); // out_len\n    if (error)\n      throw error;\n    else if (self[kError])\n      throw self[kError];\n\n    availOutAfter = state[0];\n    availInAfter = state[1];\n\n    const inDelta = (availInBefore - availInAfter);\n    inputRead += inDelta;\n\n    const have = availOutBefore - availOutAfter;\n    if (have > 0) {\n      const out = buffer.slice(offset\x2C offset + have);\n      offset += have;\n      if (!buffers)\n        buffers = [out];\n      else\n        ArrayPrototypePush(buffers\x2C out);\n      nread += out.byteLength;\n\n      if (nread > self._maxOutputLength) {\n        _close(self);\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\n      }\n\n    } else {\n      assert(have === 0\x2C 'have should not go down');\n    }\n\n    // Exhausted the output buffer\x2C or used all the input create a new one.\n    if (availOutAfter === 0 || offset >= chunkSize) {\n      availOutBefore = chunkSize;\n      offset = 0;\n      buffer = Buffer.allocUnsafe(chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done. Need to reprocess.\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n      // it'll have the correct byte counts.\n      inOff += inDelta;\n      availInBefore = availInAfter;\n    } else {\n      break;\n    }\n  }\n\n  self.bytesWritten = inputRead;\n  _close(self);\n\n  if (nread === 0)\n    return Buffer.alloc(0);\n\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\n}\n\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\n  const handle = self._handle;\n  if (!handle) return process.nextTick(cb);\n\n  handle.buffer = chunk;\n  handle.cb = cb;\n  handle.availOutBefore = self._chunkSize - self._outOffset;\n  handle.availInBefore = chunk.byteLength;\n  handle.inOff = 0;\n  handle.flushFlag = flushFlag;\n\n  handle.write(flushFlag\x2C\n               chunk\x2C // in\n               0\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               handle.availOutBefore); // out_len\n}\n\nfunction processCallback() {\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\n  // important to null out the values once they are no longer needed since\n  // `_handle` can stay in memory long after the buffer is needed.\n  const handle = this;\n  const self = this[owner_symbol];\n  const state = self._writeState;\n\n  if (self.destroyed) {\n    this.buffer = null;\n    this.cb();\n    return;\n  }\n\n  const availOutAfter = state[0];\n  const availInAfter = state[1];\n\n  const inDelta = handle.availInBefore - availInAfter;\n  self.bytesWritten += inDelta;\n\n  const have = handle.availOutBefore - availOutAfter;\n  if (have > 0) {\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\n    self._outOffset += have;\n    self.push(out);\n  } else {\n    assert(have === 0\x2C 'have should not go down');\n  }\n\n  if (self.destroyed) {\n    this.cb();\n    return;\n  }\n\n  // Exhausted the output buffer\x2C or used all the input create a new one.\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\n    handle.availOutBefore = self._chunkSize;\n    self._outOffset = 0;\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\n  }\n\n  if (availOutAfter === 0) {\n    // Not actually done. Need to reprocess.\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n    // it'll have the correct byte counts.\n    handle.inOff += inDelta;\n    handle.availInBefore = availInAfter;\n\n    this.write(handle.flushFlag\x2C\n               this.buffer\x2C // in\n               handle.inOff\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               self._chunkSize); // out_len\n    return;\n  }\n\n  if (availInAfter > 0) {\n    // If we have more input that should be written\x2C but we also have output\n    // space available\x2C that means that the compression library was not\n    // interested in receiving more data\x2C and in particular that the input\n    // stream has ended early.\n    // This applies to streams where we don't check data past the end of\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\n    self.push(null);\n  }\n\n  // Finished with the chunk.\n  this.buffer = null;\n  this.cb();\n}\n\nfunction _close(engine) {\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle)\n    return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nconst zlibDefaultOpts = {\n  flush: Z_NO_FLUSH\x2C\n  finishFlush: Z_FINISH\x2C\n  fullFlush: Z_FULL_FLUSH\n};\n// Base class for all streams actually backed by zlib and using zlib-specific\n// parameters.\nfunction Zlib(opts\x2C mode) {\n  let windowBits = Z_DEFAULT_WINDOWBITS;\n  let level = Z_DEFAULT_COMPRESSION;\n  let memLevel = Z_DEFAULT_MEMLEVEL;\n  let strategy = Z_DEFAULT_STRATEGY;\n  let dictionary;\n\n  if (opts) {\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\n    // to use the window size in the zlib header of the compressed stream.\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\n        (mode === INFLATE ||\n         mode === GUNZIP ||\n         mode === UNZIP)) {\n      windowBits = 0;\n    } else {\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\n      windowBits = checkRangesOrGetDefault(\n        opts.windowBits\x2C 'options.windowBits'\x2C\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\n    }\n\n    level = checkRangesOrGetDefault(\n      opts.level\x2C 'options.level'\x2C\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\n\n    memLevel = checkRangesOrGetDefault(\n      opts.memLevel\x2C 'options.memLevel'\x2C\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\n\n    strategy = checkRangesOrGetDefault(\n      opts.strategy\x2C 'options.strategy'\x2C\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\n\n    dictionary = opts.dictionary;\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\n      if (isAnyArrayBuffer(dictionary)) {\n        dictionary = Buffer.from(dictionary);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.dictionary'\x2C\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n          dictionary\n        );\n      }\n    }\n  }\n\n  const handle = new binding.Zlib(mode);\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\n  // to come up with a good solution that doesn't break our internal API\x2C\n  // and with it all supported npm versions at the time of writing.\n  this._writeState = new Uint32Array(2);\n  handle.init(windowBits\x2C\n              level\x2C\n              memLevel\x2C\n              strategy\x2C\n              this._writeState\x2C\n              processCallback\x2C\n              dictionary);\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\n\n  this._level = level;\n  this._strategy = strategy;\n}\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\n\n// This callback is used by `.params()` to wait until a full flush happened\n// before adjusting the parameters. In particular\x2C the call to the native\n// `params()` function should not happen while a write is currently in progress\n// on the threadpool.\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\n  assert(this._handle\x2C 'zlib binding closed');\n  this._handle.params(level\x2C strategy);\n  if (!this.destroyed) {\n    this._level = level;\n    this._strategy = strategy;\n    if (callback) callback();\n  }\n}\n\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\n\n  if (this._level !== level || this._strategy !== strategy) {\n    this.flush(Z_SYNC_FLUSH\x2C\n               FunctionPrototypeBind(paramsAfterFlushCallback\x2C this\x2C\n                                     level\x2C strategy\x2C callback));\n  } else {\n    process.nextTick(callback);\n  }\n};\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate))\n    return new Deflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\n}\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Deflate\x2C Zlib);\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate))\n    return new Inflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\n}\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Inflate\x2C Zlib);\n\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip))\n    return new Gzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\n}\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gzip\x2C Zlib);\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip))\n    return new Gunzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\n}\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\n\nfunction DeflateRaw(opts) {\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\n  if (!(this instanceof DeflateRaw))\n    return new DeflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\n}\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw))\n    return new InflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\n}\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\n\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip))\n    return new Unzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\n}\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Unzip\x2C Zlib);\n\nfunction createConvenienceMethod(ctor\x2C sync) {\n  if (sync) {\n    return function syncBufferWrapper(buffer\x2C opts) {\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\n    };\n  }\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\n  };\n}\n\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\n  ObjectKeys(constants)\x2C\n  (key) => (StringPrototypeStartsWith(key\x2C 'BROTLI_PARAM_') ?\n    constants[key] :\n    0)\n));\n\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\n\nconst brotliDefaultOpts = {\n  flush: BROTLI_OPERATION_PROCESS\x2C\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\n  fullFlush: BROTLI_OPERATION_FLUSH\n};\nfunction Brotli(opts\x2C mode) {\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\n\n  TypedArrayPrototypeFill(brotliInitParamsArray\x2C -1);\n  if (opts?.params) {\n    ArrayPrototypeForEach(ObjectKeys(opts.params)\x2C (origKey) => {\n      const key = +origKey;\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\n          (brotliInitParamsArray[key] | 0) !== -1) {\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\n      }\n\n      const value = opts.params[origKey];\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\n                                       'number'\x2C opts.params[origKey]);\n      }\n      brotliInitParamsArray[key] = value;\n    });\n  }\n\n  const handle = mode === BROTLI_DECODE ?\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\n\n  this._writeState = new Uint32Array(2);\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land\x2C\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\n  // the current bindings setup\x2C though.\n  if (!handle.init(brotliInitParamsArray\x2C\n                   this._writeState\x2C\n                   processCallback)) {\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\n  }\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\n}\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Brotli\x2C Zlib);\n\nfunction BrotliCompress(opts) {\n  if (!(this instanceof BrotliCompress))\n    return new BrotliCompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\n}\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\n\nfunction BrotliDecompress(opts) {\n  if (!(this instanceof BrotliDecompress))\n    return new BrotliDecompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\n}\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\n\n\nfunction createProperty(ctor) {\n  return {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: function(options) {\n      return new ctor(options);\n    }\n  };\n}\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nmodule.exports = {\n  Deflate\x2C\n  Inflate\x2C\n  Gzip\x2C\n  Gunzip\x2C\n  DeflateRaw\x2C\n  InflateRaw\x2C\n  Unzip\x2C\n  BrotliCompress\x2C\n  BrotliDecompress\x2C\n\n  // Convenience methods.\n  // compress/decompress a string or buffer in one step.\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  createDeflate: createProperty(Deflate)\x2C\n  createInflate: createProperty(Inflate)\x2C\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\n  createInflateRaw: createProperty(InflateRaw)\x2C\n  createGzip: createProperty(Gzip)\x2C\n  createGunzip: createProperty(Gunzip)\x2C\n  createUnzip: createProperty(Unzip)\x2C\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  codes: {\n    enumerable: true\x2C\n    writable: false\x2C\n    value: ObjectFreeze(codes)\n  }\n});\n\n// These should be considered deprecated\n// expose all the zlib constants\nfor (const bkey of ObjectKeys(constants)) {\n  if (StringPrototypeStartsWith(bkey\x2C 'BROTLI')) continue;\n  ObjectDefineProperty(module.exports\x2C bkey\x2C {\n    enumerable: false\x2C value: constants[bkey]\x2C writable: false\n  });\n}\n
code-source-info,0x93fa326c2fe,211,0,29391,C0O0C4O29391,,
code-creation,Function,10,119916,0x93fa326e10e,4132, node:zlib:1:1,0x93fa326c268,~
code-source-info,0x93fa326e10e,211,0,29391,C0O0C360O1159C365O1174C371O1199C376O1220C382O1242C388O1251C394O1276C399O1292C405O1310C411O1325C416O1351C421O1375C426O1391C432O1405C437O1429C443O1445C449O1474C454O1484C460O1511C466O1728C470O1728C476O1728C482O1565C488O1595C494O1621C500O1647C506O1669C512O1708C517O1788C521O1788C527O1764C533O1775C539O1831C543O1831C549O1817C554O1926C558O1926C564O1867C570O1888C576O1908C582O1974C586O1974C590O1974C592O2014C596O2014C600O2014C602O2077C606O2077C612O2052C618O2062C624O2121C628O2121C634O2152C640O2104C646O2212C650O2212C656O2172C662O2192C668O2264C672O2264C676O2264C678O2301C682O2301C686O2301C688O2338C692O2338C698O2366C702O2338C704O3035C708O2406C713O2418C718O2427C723O2444C729O2458C734O2472C739O2508C745O2521C751O2539C757O2557C763O2570C769O2585C775O2601C781O2617C787O2634C793O2659C799O2679C805O2701C811O2721C817O2786C823O2795C829O2807C835O2816C841O2828C847O2834C853O2842C859O2851C865O2866C871O2922C876O2948C882O2974C888O2999C894O3100C904O3120C916O3152C928O3191C940O3225C952O3262C964O3304C976O3343C988O3381C1000O3423C1011O3462C1015O3462C1049O3454C1080O3454C1083O3485C1085O3496C1092O3504C1099O3443C1170O5988C1176O5988C1180O5988C1182O6625C1188O6625C1192O6625C1194O6960C1214O6966C1224O6978C1249O6993C1259O7019C1271O6960C1273O7087C1274O7087C1276O7121C1278O7121C1280O9224C1284O9254C1294O9275C1300O9224C1305O9287C1313O9287C1318O9331C1322O9361C1338O9429C1346O9331C1351O9774C1355O9804C1371O9879C1383O10004C1392O9879C1401O10072C1413O10177C1425O10072C1443O9774C1453O10247C1457O10256C1467O10272C1475O10500C1479O10509C1489O10526C1497O10639C1501O10648C1511O10665C1519O11085C1523O11085C1525O11097C1528O11123C1542O11124C1556O11136C1570O11145C1584O11186C1598O11200C1612O11214C1623O11249C1659O11236C1702O11236C1705O11269C1711O11280C1725O11291C1736O11225C1815O11571C1819O11571C1821O11604C1823O11604C1835O11649C1871O11636C1914O11636C1917O11671C1925O11705C1935O11705C1945O11696C1953O11733C1959O11746C1973O11770C1984O11625C2063O11790C2067O11799C2077O11815C2085O12222C2089O12231C2099O12247C2107O12334C2111O12343C2121O12362C2129O12427C2133O12436C2143O12457C2151O12996C2155O13005C2165O13029C2173O18662C2184O18673C2194O18700C2204O18723C2214O18662C2216O21150C2220O21176C2234O21196C2240O21150C2250O21208C2258O21208C2268O21767C2272O21772C2286O21789C2294O22438C2298O22467C2312O22483C2322O22438C2332O22495C2340O22495C2350O22669C2354O22698C2368O22714C2378O22669C2388O22726C2396O22726C2406O22888C2410O22914C2424O22930C2434O22888C2444O22942C2452O22942C2462O23109C2466O23137C2480O23153C2490O23109C2500O23165C2508O23165C2518O23408C2522O23440C2536O23456C2546O23408C2556O23468C2564O23468C2574O23657C2578O23689C2592O23705C2602O23657C2612O23717C2620O23717C2630O23886C2634O23913C2648O23929C2658O23886C2668O23941C2676O23941C2686O24392C2694O24426C2710O24405C2722O24392C2730O24392C2732O24574C2738O24606C2748O24574C2758O24574C2760O24639C2771O24650C2781O24691C2791O24729C2801O24639C2803O26093C2807O26121C2821O26137C2831O26093C2841O26149C2849O26149C2859O26351C2863O26387C2877O26405C2887O26351C2897O26417C2905O26417C2915O26635C2919O26673C2933O26691C2943O26635C2953O26703C2961O26703C2971O27069C2975O27098C2985O27103C3008O27127C3020O27167C3032O27069C3042O27214C3053O27235C3063O27246C3073O27257C3083O27265C3093O27275C3103O27289C3113O27303C3123O27312C3133O27330C3148O27443C3173O27499C3198O27547C3223O27597C3248O27648C3273O27710C3298O27762C3323O27814C3348O27863C3373O27919C3398O27969C3423O28023C3448O28076C3473O28138C3498O28199C3523O28269C3548O28336C3573O28410C3593O27229C3601O28493C3624O28521C3644O28563C3664O28608C3684O28656C3704O28698C3724O28736C3744O28775C3764O28822C3784O28880C3800O28927C3811O28987C3829O29011C3838O29067C3864O28463C3874O29189C3882O29189C3928O29181C3971O29181C3974O29216C3982O29220C3997O29263C3999O29303C4009O29312C4024O29359C4041O29275C4051O29170C4131O29390,,
tick,0x1016e5934,120041,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x93fa326ad1e,0x93fa326aadc,0x93fa325e859,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916e795,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c6da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,120208,0x93fa3273716,135,fromArrayBuffer node:buffer:448:25,0x30d75ba4dc0,~
code-source-info,0x93fa3273716,18,12917,13590,C0O12982C4O13018C9O13049C11O13062C15O13079C20O13083C26O13114C29O13159C36O13170C40O13187C41O13201C46O13210C56O13216C61O13210C62O13259C66O13291C73O13373C75O13382C79O13395C80O13406C85O13419C87O13430C92O13451C102O13457C107O13451C110O13516C113O13541C129O13548C134O13588,,
code-creation,LazyCompile,10,120291,0x93fa3273a6e,29, node:zlib:805:3,0x93fa326d210,~
code-source-info,0x93fa3273a6e,211,24451,24538,C0O24461C8O24461C17O24515C22O24524C28O24538,,
code-creation,LazyCompile,10,120333,0x93fa3275ad6,23,createConvenienceMethod node:zlib:788:33,0x93fa326c9f0,~
code-source-info,0x93fa3275ad6,211,24009,24366,C0O24009C9O24026C13O24042C17O24151C18O24158C22O24364,,
code-creation,LazyCompile,10,120375,0x93fa3275d86,25,createProperty node:zlib:873:24,0x93fa326cb60,~
code-source-info,0x93fa3275d86,211,26776,26917,C0O26776C9O26787C14O26853C24O26915,,
code-creation,LazyCompile,10,120500,0x93fa3276416,96,findInflateFunction /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:126:29,0x93fa325e468,~
code-source-info,0x93fa3276416,199,4994,5233,C0O4994C19O5017C54O5024C58O5060C70O5095C82O5111C85O5116C95O5225,,
code-creation,Eval,10,120541,0x93fa3276666,19, :1:1,0x93fa3276580,~
script-source,212,<unknown>,require("zlib").inflateSync
code-source-info,0x93fa3276666,212,0,27,C0O0C8O0C13O15C18O27,,
new,MemoryChunk,0x1312fd9c0000,262144
new,MemoryChunk,0xecd9dc00000,262144
new,MemoryChunk,0x25ab40e80000,262144
new,MemoryChunk,0x3b3988300000,262144
new,MemoryChunk,0x31cd511c0000,262144
new,MemoryChunk,0x2a6306bc0000,262144
new,MemoryChunk,0x251b9e440000,262144
new,MemoryChunk,0x1e01b9440000,262144
scavenge,begin,0,113891,1643426345604
new,MemoryChunk,0xfcf81400000,262144
new,MemoryChunk,0xe7577440000,262144
scavenge,end,0,114135,1643426345604
tick,0x1a3726538,121083,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c735,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,121208,0x93fa3277066,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogReader.js:1:1,0x93fa3276eb0,~
script-source,213,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogReader.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.listTags = void 0;\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nconst Histogram_1 = require("./Histogram");\nconst encoding_1 = require("./encoding");\nconst TAG_PREFIX = "Tag=";\nconst TAG_PREFIX_LENGTH = "Tag=".length;\n/**\n * A histogram log reader.\n * <p>\n * Histogram logs are used to capture full fidelity\x2C per-time-interval\n * histograms of a recorded value.\n * <p>\n * For example\x2C a histogram log can be used to capture high fidelity\n * reaction-time logs for some measured system or subsystem component.\n * Such a log would capture a full reaction time histogram for each\n * logged interval\x2C and could be used to later reconstruct a full\n * HdrHistogram of the measured reaction time behavior for any arbitrary\n * time range within the log\x2C by adding [only] the relevant interval\n * histograms.\n * <h3>Histogram log format:</h3>\n * A histogram log file consists of text lines. Lines beginning with\n * the "#" character are optional and treated as comments. Lines\n * containing the legend (starting with "Timestamp") are also optional\n * and ignored in parsing the histogram log. All other lines must\n * be valid interval description lines. Text fields are delimited by\n * commas\x2C spaces.\n * <p>\n * A valid interval description line contains an optional Tag=tagString\n * text field\x2C followed by an interval description.\n * <p>\n * A valid interval description must contain exactly four text fields:\n * <ul>\n * <li>StartTimestamp: The first field must contain a number parse-able as a Double value\x2C\n * representing the start timestamp of the interval in seconds.</li>\n * <li>intervalLength: The second field must contain a number parse-able as a Double value\x2C\n * representing the length of the interval in seconds.</li>\n * <li>Interval_Max: The third field must contain a number parse-able as a Double value\x2C\n * which generally represents the maximum value of the interval histogram.</li>\n * <li>Interval_Compressed_Histogram: The fourth field must contain a text field\n * parse-able as a Base64 text representation of a compressed HdrHistogram.</li>\n * </ul>\n * The log file may contain an optional indication of a starting time. Starting time\n * is indicated using a special comments starting with "#[StartTime: " and followed\n * by a number parse-able as a double\x2C representing the start time (in seconds)\n * that may be added to timestamps in the file to determine an absolute\n * timestamp (e.g. since the epoch) for each interval.\n */\nclass HistogramLogReader {\n    constructor(logContent\x2C bitBucketSize = 32\x2C useWebAssembly = false) {\n        this.lines = splitLines(logContent);\n        this.currentLineIndex = 0;\n        this.bitBucketSize = bitBucketSize;\n        this.useWebAssembly = useWebAssembly;\n    }\n    /**\n     * Read the next interval histogram from the log. Returns a Histogram object if\n     * an interval line was found\x2C or null if not.\n     * <p>Upon encountering any unexpected format errors in reading the next interval\n     * from the file\x2C this method will return a null.\n     * @return a DecodedInterval\x2C or a null if no appropriate interval found\n     */\n    nextIntervalHistogram(rangeStartTimeSec = 0\x2C rangeEndTimeSec = Number.MAX_VALUE) {\n        while (this.currentLineIndex < this.lines.length) {\n            const currentLine = this.lines[this.currentLineIndex];\n            this.currentLineIndex++;\n            if (currentLine.startsWith("#[StartTime:")) {\n                this.parseStartTimeFromLine(currentLine);\n            }\n            else if (currentLine.startsWith("#[BaseTime:")) {\n                this.parseBaseTimeFromLine(currentLine);\n            }\n            else if (currentLine.startsWith("#") ||\n                currentLine.startsWith('"StartTimestamp"')) {\n                // skip legend & meta data for now\n            }\n            else if (currentLine.includes("\x2C")) {\n                const tokens = currentLine.split("\x2C");\n                const [firstToken] = tokens;\n                let tag;\n                if (firstToken.startsWith(TAG_PREFIX)) {\n                    tag = firstToken.substring(TAG_PREFIX_LENGTH);\n                    tokens.shift();\n                }\n                else {\n                    tag = Histogram_1.NO_TAG;\n                }\n                const [rawLogTimeStampInSec\x2C rawIntervalLengthSec\x2C \x2C base64Histogram\x2C] = tokens;\n                const logTimeStampInSec = Number.parseFloat(rawLogTimeStampInSec);\n                if (!this.baseTimeSec) {\n                    // No explicit base time noted. Deduce from 1st observed time (compared to start time):\n                    if (logTimeStampInSec < this.startTimeSec - 365 * 24 * 3600.0) {\n                        // Criteria Note: if log timestamp is more than a year in the past (compared to\n                        // StartTime)\x2C we assume that timestamps in the log are not absolute\n                        this.baseTimeSec = this.startTimeSec;\n                    }\n                    else {\n                        // Timestamps are absolute\n                        this.baseTimeSec = 0.0;\n                    }\n                }\n                if (rangeEndTimeSec < logTimeStampInSec) {\n                    return null;\n                }\n                if (logTimeStampInSec < rangeStartTimeSec) {\n                    continue;\n                }\n                const histogram = encoding_1.decodeFromCompressedBase64(base64Histogram\x2C this.bitBucketSize\x2C this.useWebAssembly);\n                histogram.startTimeStampMsec =\n                    (this.baseTimeSec + logTimeStampInSec) * 1000;\n                const intervalLengthSec = Number.parseFloat(rawIntervalLengthSec);\n                histogram.endTimeStampMsec =\n                    (this.baseTimeSec + logTimeStampInSec + intervalLengthSec) * 1000;\n                histogram.tag = tag;\n                return histogram;\n            }\n        }\n        return null;\n    }\n    parseStartTimeFromLine(line) {\n        this.startTimeSec = Number.parseFloat(line.split(" ")[1]);\n    }\n    parseBaseTimeFromLine(line) {\n        this.baseTimeSec = Number.parseFloat(line.split(" ")[1]);\n    }\n}\nconst splitLines = (logContent) => logContent.split(/\\r\\n|\\r|\\n/g);\nconst shouldIncludeNoTag = (lines) => lines.find((line) => !line.startsWith("#") &&\n    !line.startsWith('"') &&\n    !line.startsWith(TAG_PREFIX) &&\n    line.includes("\x2C"));\nexports.listTags = (content) => {\n    const lines = splitLines(content);\n    const tags = lines\n        .filter((line) => line.includes("\x2C") && line.startsWith(TAG_PREFIX))\n        .map((line) => line.substring(TAG_PREFIX_LENGTH\x2C line.indexOf("\x2C")));\n    const tagsWithoutDuplicates = new Set(tags);\n    const result = Array.from(tagsWithoutDuplicates);\n    if (shouldIncludeNoTag(lines)) {\n        result.unshift("NO TAG");\n    }\n    return result;\n};\nexports.default = HistogramLogReader;\n//# sourceMappingURL=HistogramLogReader.js.map
code-source-info,0x93fa3277066,213,0,7187,C0O0C4O7187,,
code-creation,Function,10,121458,0x93fa327759e,149, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogReader.js:1:1,0x93fa3276fd0,~
code-source-info,0x93fa327759e,213,0,7187,C0O0C23O14C27O21C35O36C43O21C48O77C49O94C53O394C56O394C60O394C62O437C65O437C69O437C71O479C73O479C75O513C78O520C82O513C121O6427C125O6427C127O6503C131O6503C133O6650C137O6667C141O7103C143O7119C148O7186,,
code-creation,Eval,10,121750,0x93fa3278306,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogWriter.js:1:1,0x93fa3278160,~
script-source,214,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogWriter.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst Histogram_1 = require("./Histogram");\nconst encoding_1 = require("./encoding");\nconst formatters_1 = require("./formatters");\nconst HISTOGRAM_LOG_FORMAT_VERSION = "1.3";\nconst timeFormatter = formatters_1.floatFormatter(5\x2C 3);\nclass HistogramLogWriter {\n    constructor(log) {\n        this.log = log;\n        /**\n         * Base time to subtract from supplied histogram start/end timestamps when\n         * logging based on histogram timestamps.\n         * Base time is expected to be in msec since the epoch\x2C as histogram start/end times\n         * are typically stamped with absolute times in msec since the epoch.\n         */\n        this.baseTime = 0;\n    }\n    /**\n     * Output an interval histogram\x2C with the given timestamp information and the [optional] tag\n     * associated with the histogram\x2C using a configurable maxValueUnitRatio. (note that the\n     * specified timestamp information will be used\x2C and the timestamp information in the actual\n     * histogram will be ignored).\n     * The max value reported with the interval line will be scaled by the given maxValueUnitRatio.\n     * @param startTimeStampSec The start timestamp to log with the interval histogram\x2C in seconds.\n     * @param endTimeStampSec The end timestamp to log with the interval histogram\x2C in seconds.\n     * @param histogram The interval histogram to log.\n     * @param maxValueUnitRatio The ratio by which to divide the histogram's max value when reporting on it.\n     */\n    outputIntervalHistogram(histogram\x2C startTimeStampSec = (histogram.startTimeStampMsec - this.baseTime) / 1000\x2C endTimeStampSec = (histogram.endTimeStampMsec - this.baseTime) / 1000\x2C maxValueUnitRatio = 1000) {\n        const base64 = encoding_1.encodeIntoCompressedBase64(histogram);\n        const start = timeFormatter(startTimeStampSec);\n        const duration = timeFormatter(endTimeStampSec - startTimeStampSec);\n        const max = timeFormatter(histogram.maxValue / maxValueUnitRatio);\n        const lineContent = `${start}\x2C${duration}\x2C${max}\x2C${base64}\\n`;\n        if (histogram.tag && histogram.tag !== Histogram_1.NO_TAG) {\n            this.log(`Tag=${histogram.tag}\x2C${lineContent}`);\n        }\n        else {\n            this.log(lineContent);\n        }\n    }\n    /**\n     * Log a comment to the log.\n     * Comments will be preceded with with the '#' character.\n     * @param comment the comment string.\n     */\n    outputComment(comment) {\n        this.log(`#${comment}\\n`);\n    }\n    /**\n     * Log a start time in the log.\n     * @param startTimeMsec time (in milliseconds) since the absolute start time (the epoch)\n     */\n    outputStartTime(startTimeMsec) {\n        this.outputComment(`[StartTime: ${formatters_1.floatFormatter(5\x2C 3)(startTimeMsec / 1000)} (seconds since epoch)\x2C ${new Date(startTimeMsec)}]\\n`);\n    }\n    /**\n     * Output a legend line to the log.\n     */\n    outputLegend() {\n        this.log('"StartTimestamp"\x2C"Interval_Length"\x2C"Interval_Max"\x2C"Interval_Compressed_Histogram"\\n');\n    }\n    /**\n     * Output a log format version to the log.\n     */\n    outputLogFormatVersion() {\n        this.outputComment("[Histogram log format version " + HISTOGRAM_LOG_FORMAT_VERSION + "]");\n    }\n}\nexports.default = HistogramLogWriter;\n//# sourceMappingURL=HistogramLogWriter.js.map
code-source-info,0x93fa3278306,214,0,3353,C0O0C4O3353,,
code-creation,Function,10,121875,0x93fa32787d6,153, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramLogWriter.js:1:1,0x93fa3278270,~
code-source-info,0x93fa32787d6,214,0,3353,C0O0C20O14C24O21C32O36C40O21C45O97C48O97C52O97C54O140C57O140C61O140C63O184C66O184C70O184C72O246C74O246C76O275C79O288C90O288C96O275C145O3269C147O3285C152O3352,,
code-creation,LazyCompile,10,121916,0x93fa3278db6,67,exports.floatFormatter /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/formatters.js:27:26,0x369989178258,~
code-source-info,0x93fa3278db6,176,907,1228,C0O907C11O963C15O972C30O1027C36O1074C42O963C47O963C49O1146C56O1146C60O1146C62O1169C66O1226,,
tick,0x1a37782dc,122208,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x103c3707c,123500,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a375bfe0,124750,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a36b1c98,126000,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x103c3943c,127250,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a375bfc8,128291,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x103c378ac,129583,0,0x0,0,0x0,0x93fa3278de0,0x93fa3278830,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c76a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,130208,0x93fa32792ce,14,leftPadding /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/formatters.js:4:21,0x369989178098,~
code-source-info,0x93fa32792ce,176,189,360,C0O189C9O205C13O358,,
code-creation,Eval,10,130625,0x93fa327991e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Recorder.js:1:1,0x93fa3279780,~
script-source,215,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Recorder.js,"use strict";\n/*\n * This is a TypeScript port of the original Java version\x2C which was written by\n * Gil Tene as described in\n * https://github.com/HdrHistogram/HdrHistogram\n * and released to the public domain\x2C as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/\n */\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nconst HistogramBuilder_1 = require("./HistogramBuilder");\n/**\n * Records integer values\x2C and provides stable interval {@link Histogram} samples from\n * live recorded data without interrupting or stalling active recording of values. Each interval\n * histogram provided contains all value counts accumulated since the previous interval histogram\n * was taken.\n * <p>\n * This pattern is commonly used in logging interval histogram information while recording is ongoing.\n * <p>\n * {@link Recorder} supports concurrent\n * {@link Recorder#recordValue} or\n * {@link Recorder#recordValueWithExpectedInterval} calls.\n *\n */\nclass Recorder {\n    /**\n     * Construct an auto-resizing {@link Recorder} with a lowest discernible value of\n     * 1 and an auto-adjusting highestTrackableValue. Can auto-resize up to track values up to Number.MAX_SAFE_INTEGER.\n     *\n     * @param histogramBuildRequest parameters used to build histograms while using this recorder.\n     * @param clock (for testing purpose) an action that give current time in ms since 1970\n     */\n    constructor(histogramBuildRequest = HistogramBuilder_1.defaultRequest\x2C clock = () => new Date().getTime()) {\n        this.histogramBuildRequest = histogramBuildRequest;\n        this.clock = clock;\n        this.activeHistogram = HistogramBuilder_1.build(this.histogramBuildRequest);\n        Recorder.idGenerator++;\n        this.activeHistogram.containingInstanceId = Recorder.idGenerator;\n        this.activeHistogram.startTimeStampMsec = clock();\n    }\n    /**\n     * Record a value in the histogram\n     *\n     * @param value The value to be recorded\n     * @throws may throw Error if value is exceeds highestTrackableValue\n     */\n    recordValue(value) {\n        this.activeHistogram.recordValue(value);\n    }\n    /**\n     * Record a value in the histogram (adding to the value's current count)\n     *\n     * @param value The value to be recorded\n     * @param count The number of occurrences of this value to record\n     * @throws ArrayIndexOutOfBoundsException (may throw) if value is exceeds highestTrackableValue\n     */\n    recordValueWithCount(value\x2C count) {\n        this.activeHistogram.recordValueWithCount(value\x2C count);\n    }\n    /**\n     * Record a value\n     * <p>\n     * To compensate for the loss of sampled values when a recorded value is larger than the expected\n     * interval between value samples\x2C Histogram will auto-generate an additional series of decreasingly-smaller\n     * (down to the expectedIntervalBetweenValueSamples) value records.\n     * <p>\n     * See related notes {@link Histogram#recordValueWithExpectedInterval(long\x2C long)}\n     * for more explanations about coordinated omission and expected interval correction.\n     *      *\n     * @param value The value to record\n     * @param expectedIntervalBetweenValueSamples If expectedIntervalBetweenValueSamples is larger than 0\x2C add\n     *                                           auto-generated value records as appropriate if value is larger\n     *                                           than expectedIntervalBetweenValueSamples\n     * @throws ArrayIndexOutOfBoundsException (may throw) if value is exceeds highestTrackableValue\n     */\n    recordValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples) {\n        this.activeHistogram.recordValueWithExpectedInterval(value\x2C expectedIntervalBetweenValueSamples);\n    }\n    /**\n     * Get an interval histogram\x2C which will include a stable\x2C consistent view of all value counts\n     * accumulated since the last interval histogram was taken.\n     * <p>\n     * {@link Recorder#getIntervalHistogram(Histogram histogramToRecycle)\n     * getIntervalHistogram(histogramToRecycle)}\n     * accepts a previously returned interval histogram that can be recycled internally to avoid allocation\n     * and content copying operations\x2C and is therefore significantly more efficient for repeated use than\n     * {@link Recorder#getIntervalHistogram()} and\n     * {@link Recorder#getIntervalHistogramInto getIntervalHistogramInto()}. The provided\n     * {@code histogramToRecycle} must\n     * be either be null or an interval histogram returned by a previous call to\n     * {@link Recorder#getIntervalHistogram(Histogram histogramToRecycle)\n     * getIntervalHistogram(histogramToRecycle)} or\n     * {@link Recorder#getIntervalHistogram()}.\n     * <p>\n     * NOTE: The caller is responsible for not recycling the same returned interval histogram more than once. If\n     * the same interval histogram instance is recycled more than once\x2C behavior is undefined.\n     * <p>\n     * Calling {@link Recorder#getIntervalHistogram(Histogram histogramToRecycle)\n     * getIntervalHistogram(histogramToRecycle)} will reset the value counts\x2C and start accumulating value\n     * counts for the next interval\n     *\n     * @param histogramToRecycle a previously returned interval histogram that may be recycled to avoid allocation and\n     *                           copy operations.\n     * @return a histogram containing the value counts accumulated since the last interval histogram was taken.\n     */\n    getIntervalHistogram(histogramToRecycle) {\n        if (histogramToRecycle) {\n            const histogramToRecycleWithId = histogramToRecycle;\n            if (histogramToRecycleWithId.containingInstanceId !==\n                this.activeHistogram.containingInstanceId) {\n                throw "replacement histogram must have been obtained via a previous getIntervalHistogram() call from this Recorder";\n            }\n        }\n        this.inactiveHistogram = histogramToRecycle;\n        this.performIntervalSample();\n        const sampledHistogram = this.inactiveHistogram;\n        this.inactiveHistogram = null; // Once we expose the sample\x2C we can't reuse it internally until it is recycled\n        return sampledHistogram;\n    }\n    /**\n     * Place a copy of the value counts accumulated since accumulated (since the last interval histogram\n     * was taken) into {@code targetHistogram}.\n     *\n     * Calling {@link Recorder#getIntervalHistogramInto getIntervalHistogramInto()} will reset\n     * the value counts\x2C and start accumulating value counts for the next interval.\n     *\n     * @param targetHistogram the histogram into which the interval histogram's data should be copied\n     */\n    getIntervalHistogramInto(targetHistogram) {\n        this.performIntervalSample();\n        if (this.inactiveHistogram) {\n            targetHistogram.add(this.inactiveHistogram);\n            targetHistogram.startTimeStampMsec = this.inactiveHistogram.startTimeStampMsec;\n            targetHistogram.endTimeStampMsec = this.inactiveHistogram.endTimeStampMsec;\n        }\n    }\n    /**\n     * Reset any value counts accumulated thus far.\n     */\n    reset() {\n        this.activeHistogram.reset();\n        this.activeHistogram.startTimeStampMsec = this.clock();\n    }\n    performIntervalSample() {\n        if (!this.inactiveHistogram) {\n            this.inactiveHistogram = HistogramBuilder_1.build(this.histogramBuildRequest);\n            this.inactiveHistogram.containingInstanceId = this.activeHistogram.containingInstanceId;\n        }\n        this.inactiveHistogram.reset();\n        const tempHistogram = this.activeHistogram;\n        this.activeHistogram = this.inactiveHistogram;\n        this.inactiveHistogram = tempHistogram;\n        const currentTimeInMs = this.clock();\n        this.inactiveHistogram.endTimeStampMsec = currentTimeInMs;\n        this.activeHistogram.startTimeStampMsec = currentTimeInMs;\n    }\n    /**\n     * Release memory associated to this recorder by destroying\n     * histograms used under the cover.\n     * Useful when webassembly histograms are used.\n     */\n    destroy() {\n        var _a;\n        this.activeHistogram.destroy();\n        (_a = this.inactiveHistogram) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n}\nRecorder.idGenerator = 0;\nexports.default = Recorder;\n//# sourceMappingURL=Recorder.js.map
code-source-info,0x93fa327991e,215,0,8285,C0O0C4O8285,,
code-creation,Function,10,130958,0x93fa3279f2e,128, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Recorder.js:1:1,0x93fa3279888,~
code-source-info,0x93fa3279f2e,215,0,8285,C0O0C8O284C12O291C20O306C28O291C33O374C36O374C40O374C115O8195C116O8216C120O8221C122O8237C127O8284,,
tick,0x1a375c180,131000,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916c7ca,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x36998916a5eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,131291,0x93fa327aa86,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramBuilder.js:1:1,0x93fa327a900,~
script-source,216,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramBuilder.js,"use strict";\nObject.defineProperty(exports\x2C "__esModule"\x2C { value: true });\nexports.build = exports.defaultRequest = void 0;\nconst JsHistogramFactory_1 = require("./JsHistogramFactory");\nconst wasm_1 = require("./wasm");\nexports.defaultRequest = {\n    bitBucketSize: 32\x2C\n    autoResize: true\x2C\n    lowestDiscernibleValue: 1\x2C\n    highestTrackableValue: 2\x2C\n    numberOfSignificantValueDigits: 3\x2C\n    useWebAssembly: false\x2C\n};\nexports.build = (request = exports.defaultRequest) => {\n    const parameters = Object.assign({}\x2C exports.defaultRequest\x2C request);\n    if (request.useWebAssembly && wasm_1.webAssemblyAvailable) {\n        return wasm_1.WasmHistogram.build(parameters);\n    }\n    const histogramConstr = JsHistogramFactory_1.constructorFromBucketSize(parameters.bitBucketSize);\n    const histogram = new histogramConstr(parameters.lowestDiscernibleValue\x2C parameters.highestTrackableValue\x2C parameters.numberOfSignificantValueDigits);\n    histogram.autoResize = parameters.autoResize;\n    return histogram;\n};\n//# sourceMappingURL=HistogramBuilder.js.map
code-source-info,0x93fa327aa86,216,0,1057,C0O0C4O1057,,
code-creation,Function,10,131333,0x93fa327ac8e,100, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramBuilder.js:1:1,0x93fa327a9f0,~
code-source-info,0x93fa327ac8e,216,0,1057,C0O0C15O14C19O21C30O36C35O21C40O77C48O116C54O91C58O155C61O155C65O155C67O203C70O203C74O203C76O222C83O245C87O424C94O438C99O1056,,
code-creation,Eval,10,131666,0x93fa327b80e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:1:1,0x93fa327b668,~
script-source,217,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js,'use strict'\n\nconst percentiles = module.exports.percentiles = [\n  0.001\x2C\n  0.01\x2C\n  0.1\x2C\n  1\x2C\n  2.5\x2C\n  10\x2C\n  25\x2C\n  50\x2C\n  75\x2C\n  90\x2C\n  97.5\x2C\n  99\x2C\n  99.9\x2C\n  99.99\x2C\n  99.999\n]\n\nmodule.exports.histAsObj = function (hist\x2C total) {\n  const mean = Math.ceil(getMean(hist) * 100) / 100\n  const result = {\n    average: mean\x2C // added for backward compat with wrk\n    mean: mean\x2C\n    stddev: Math.ceil(getStdDeviation(hist) * 100) / 100\x2C\n    min: getMin(hist)\x2C\n    max: getMax(hist)\n  }\n\n  if (typeof total === 'number') {\n    result.total = total\n  }\n\n  return result\n}\n\nmodule.exports.addPercentiles = function (hist\x2C result) {\n  percentiles.forEach(function (perc) {\n    const key = ('p' + perc).replace('.'\x2C '_')\n    if (typeof hist.percentile === 'function') {\n      result[key] = hist.percentile(perc)\n    } else if (typeof hist.getValueAtPercentile === 'function') {\n      result[key] = hist.getValueAtPercentile(perc)\n    }\n  })\n\n  return result\n}\n\nfunction getMean (hist) {\n  if (typeof hist.mean === 'function') {\n    return hist.mean()\n  }\n  if (typeof hist.getMean === 'function') {\n    return hist.getMean()\n  }\n  return hist.mean\n}\n\nfunction getMin (hist) {\n  if (typeof hist.min === 'function') {\n    return hist.min()\n  }\n  return hist.minNonZeroValue\n}\n\nfunction getMax (hist) {\n  if (typeof hist.max === 'function') {\n    return hist.max()\n  }\n  return hist.maxValue\n}\n\nfunction getStdDeviation (hist) {\n  if (typeof hist.stddev === 'function') {\n    return hist.stddev()\n  }\n  if (typeof hist.getStdDeviation === 'function') {\n    return hist.getStdDeviation()\n  }\n  return hist.stdDeviation\n}\n
code-source-info,0x93fa327b80e,217,0,1603,C0O0C4O1603,,
code-creation,Function,10,131750,0x93fa327bc9e,78, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:1:1,0x93fa327b778,~
code-source-info,0x93fa327bc9e,217,0,1603,C0O0C32O41C42O61C48O34C50O181C59O199C63O569C72O592C77O1602,,
code-creation,LazyCompile,10,131791,0x93fa327c1fe,10,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:37:89,0x36998916c040,~
code-source-info,0x93fa327c1fe,168,2549,2590,C0O2554C5O2568C9O2588,,
code-creation,LazyCompile,10,131833,0x93fa327c336,85,exports.initWebAssemblySync /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:48:31,0x36998917b5b8,~
code-source-info,0x93fa327c336,179,2017,2192,C0O2029C6O2051C7O2058C8O2079C13O2088C20O2104C23O2109C30O2117C33O2124C40O2136C43O2153C48O2124C54O2109C60O2088C66O2177C77O2173C84O2191,,
code-creation,LazyCompile,10,131875,0x93fa327c496,461,toByteArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:53:22,0x3a1dfed70d28,~
code-source-info,0x93fa327c
code-creation,LazyCompile,10,131958,0x93fa327c90e,103,getLens /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:22:18,0x3a1dfed70c38,~
code-source-info,0x93fa327c90e,181,620,1054,C0O644C5O662C10O666C15O677C24O683C29O677C30O889C38O889C44O904C46O917C51O925C56O965C58O974C71O1010C74O998C78O1018C87O1026C96O1036C102O1052,,
code-creation,LazyCompile,10,131958,0x93fa327ca6e,18,_byteLength /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:49:22,0x3a1dfed70cd8,~
code-source-info,0x93fa327ca6e,181,1318,1420,C0O1355C2O1373C5O1392C8O1396C14O1401C17O1418,,
tick,0x101496034,132083,0,0x0,0,0x93fa327c508,0x93fa327c366,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x10158d0bc,133333,0,0x0,4,0x0,0x93fa327c591,0x93fa327c366,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x10165aa3c,134625,0,0x0,4,0x0,0x93fa327c591,0x93fa327c366,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,135833,0,0x0,4,0x0,0x93fa327c591,0x93fa327c366,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,136291,0x107509700,4064,toByteArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:53:22,0x3a1dfed70d28,*
code-source-info,0x
code-creation,LazyCompile,10,136416,0x93fa327e176,52,inflate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:383:17,0x93fa3248268,~
code-source-info,0x93fa327e176,192,11366,11614,C0O11402C5O11402C11O11436C18O11436C24O11536C30O11558C39O11578C43O11568C46O11543C47O11605C51O11612,,
code-creation,LazyCompile,10,136458,0x93fa327e3f6,492,Inflate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:93:17,0x93fa3248218,~
code-source-info,0x93fa327e3f
code-creation,LazyCompile,10,136541,0x93fa327e976,64,ZStream /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/zstream.js:22:17,0x93fa3247530,~
code-source-info,0x93fa327e976,191,992,1783,C0O1023C1O1034C5O1088C6O1101C10O1151C11O1165C15O1220C16O1234C20O1286C21O1298C25O1352C26O1366C30O1412C31O1427C35O1478C36O1493C40O1545C42O1554C46O1608C47O1619C51O1684C53O1699C57O1766C58O1777C63O1782,,
code-creation,LazyCompile,10,136583,0x93fa327eb26,51,inflateInit2 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:252:22,0x93fa324a6b0,~
code-source-info,0x93fa327eb26,193,9705,10157,C0O9753C4O9766C6O9788C7O9866C10O9874C16O9989C18O10000C22O10011C23O10024C27O10044C30O10050C36O10085C38O10093C43O10109C44O10120C48O10144C50O10155,,
code-creation,LazyCompile,10,136625,0x93fa327eed6,215,InflateState /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:121:22,0x93fa324a570,~
code-source-info,0x93fa327eed6,193,5060,7943,C0O5067C1O5077C5O5123C6O5133C10O5189C11O5199C15O5266C16O5280C20O5330C21O5341C25O5407C26O5417C30O5485C31O5496C35O5551C36O5562C40O5639C41O5649C45O5737C46O5748C50O5809C51O5820C55O5885C56O5896C60O5947C61O5958C65O6002C66O6014C70O6099C71O6109C75O6157C76O6167C80O6261C81O6273C85O6331C86O6343C90O6438C91O6449C95O6531C96O6544C100O6609C101O6623C105O6681C106O6694C110O6740C111O6754C115O6832C116O6843C120O6903C121O6913C125O6969C126O6980C130O7037C131O7047C135O7106C136O7116C140O7178C143O7200C155O7190C160O7188C164O7255C167O7277C179O7267C184O7265C188O7533C189O7545C193O7627C194O7640C198O7715C199O7725C203O7797C204O7807C208O7879C209O7888C214O7942,,
code-creation,LazyCompile,10,136708,0x93fa327f1d6,121,inflateReset2 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:218:23,0x93fa324a660,~
code-source-info,0x93fa327f1d6,193,8937,9682,C0O9008C4O9027C10O9036C12O9058C13O9076C18O9141C19O9156C24O9167C26O9181C28O9194C34O9224C36O9243C39O9249C43O9258C45O9273C50O9287C57O9378C63O9408C70O9426C75O9439C77O9461C78O9478C84O9503C91O9509C96O9531C97O9544C101O9605C103O9616C107O9626C109O9638C113O9654C116O9661C120O9680,,
code-creation,LazyCompile,10,136750,0x93fa327f396,41,inflateReset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:206:22,0x93fa324a610,~
code-source-info,0x93fa327f396,193,8721,8913,C0O8746C4O8765C10O8774C12O8796C13O8814C18O8823C19O8835C23O8842C24O8854C28O8861C29O8873C33O8880C36O8887C40O8910,,
code-creation,LazyCompile,10,136791,0x93fa327f55e,173,inflateResetKeep /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:179:26,0x93fa324a5c0,~
code-source-info,0x93fa327f55e,193,7970,8698,C0O7995C4O8014C10O8023C12O8045C13O8063C18O8072C20O8117C26O8103C32O8086C36O8124C38O8133C42O8162C48O8246C52O8251C55O8238C59O8262C61O8273C65O8283C66O8294C70O8301C71O8316C75O8323C81O8334C85O8345C86O8356C90O8376C91O8387C95O8394C96O8405C100O8475C103O8516C113O8506C119O8504C125O8489C129O8538C132O8581C142O8571C148O8569C154O8553C158O8605C160O8616C164O8623C166O8634C170O8684C172O8696,,
code-creation,LazyCompile,10,136833,0x93fa327f806,54,GZheader /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/gzheader.js:22:18,0x93fa32514d0,~
code-source-info,0x93fa327f806,197,993,2211,C0O1052C1O1068C5O1101C6O1117C10O1180C11O1196C15O1228C16O1244C20O1300C21O1316C25O1380C26O1396C30O1779C32O1795C36O1931C38O1947C42O2083C43O2099C47O2185C48O2201C53O2210,,
code-creation,LazyCompile,10,136875,0x93fa327f9b6,49,inflateGetHeader /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:1487:26,0x93fa324a890,~
code-source-info,0x93fa327f9b6,193,48310,48582,C0O48361C4O48380C10O48389C12O48411C13O48429C18O48449C22O48454C27O48459C32O48468C34O48490C35O48526C37O48537C41O48547C42O48557C46O48568C48O48580,,
code-creation,LazyCompile,10,136958,0x93fa327fbfe,743,Inflate.push /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:193:35,0x93fa3248308,~
code-source-info,0x93fa327fbfe
tick,0x10115d9cc,137083,0,0x0,2,0x0,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,137541,0x12ae912b9056,8753,inflate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:381:17,0x93fa324a7f0,~
code-source-info,0x12ae912b
code-creation,LazyCompile,10,138083,0x12ae912bc266,1139,inflate_table /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inftrees.js:55:40,0x93fa324f738,~
code-source-info,0x12ae912bc
tick,0x1014999a4,138333,0,0x0,0,0x12ae912bc56e,0x12ae912ba4e6,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,138541,0x12ae912bec16,1912,inflate_fast /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js:61:39,0x93fa324e4c8,~
code-source-info,0x12ae912bec
tick,0x1013e85a0,139625,0,0x0,0,0x12ae912bed37,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,140000,0xe75774669a6,302,updatewindow /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:339:22,0x93fa324a7a0,~
code-source-info,0xe75774669a
code-creation,LazyCompile,10,140041,0xe7577466c6e,80,arraySet /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:43:22,0x3a1dfed72b08,~
code-source-info,0xe7577466c6e,183,965,1259,C0O1017C6O1034C12O1057C17O1065C24O1093C28O1065C35O1057C41O1119C42O1126C43O1184C45O1189C47O1189C52O1209C54O1224C60O1244C63O1234C66O1229C70O1197C75O1171C79O1258,,
code-creation,LazyCompile,10,140083,0xe7577466dae,152,adler32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:26:17,0x93fa32441b8,~
code-source-info,0xe7577466dae,187,1151,1627,C0O1187C2O1194C12O1204C16O1219C18O1227C21O1235C31O1245C35O1259C37O1276C38O1276C43O1425C47O1433C61O1458C63O1465C71O1484C73O1495C82O1498C85O1493C88O1507C92O1517C94O1526C97O1532C101O1551C106O1551C108O1473C111O1560C124O1577C137O1265C140O1597C142O1614C145O1608C148O1622C151O1625,,
tick,0x1016572ac,140875,0,0x0,4,0x0,0xe7577466e37,0x12ae912bb1d0,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,141541,0x10750a800,1108,adler32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:26:17,0x93fa32441b8,*
code-source-info,0x10750a800,187,1151,1627,C0O1151C96O1276C148O1433C164O1465C188O1495C208O1498C264O1493C272O1526C280O1493C284O1526C288O1551C296O1493C300O1526C304O1551C308O1473C336O1498C340O1495C348O1498C364O1551C372O1493C376O1526C380O1551C384O1473C404O1560C432O1577C448O1265C464O1614C468O1276C556O1473C772O1560C828O1577C868O1265,,
code-creation,LazyCompile,10,141583,0xe75774678ae,44,exports.shrinkBuf /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:34:30,0x3a1dfed72a78,~
code-source-info,0xe75774678ae,183,777,924,C0O801C7O808C12O820C14O831C15O844C21O867C28O867C34O885C35O890C37O901C41O911C43O922,,
code-creation,LazyCompile,10,141583,0xe75774679e6,17,Inflate.onData /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:312:37,0x93fa3248390,~
code-source-info,0xe75774679e6,192,9417,9455,C0O9434C5O9441C10O9441C16O9454,,
tick,0x1a37298d4,142125,0,0x0,4,0x0,0x12ae912bf16e,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,143416,0,0x0,4,0x0,0x12ae912bf16e,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,144666,0,0x0,4,0x0,0x12ae912bf16e,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a369f658,145916,0,0x0,4,0x0,0x12ae912bf16e,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,146125,0x10750ad00,168,inflate_fast /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js:61:39,0x93fa324e4c8,*
code-source-info,0x10750ad00,194,2636,12666,C0O2636C56O4322C60O2636,,
tick,0x1014976c0,147166,0,0x0,0,0x12ae912bae5a,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,148458,0,0x0,4,0x0,0xe7577466e37,0x12ae912bb1d0,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,148583,0x10750ae20,1184,adler32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:26:17,0x93fa32441b8,*
code-source-info,0x10750ae20,187,1151,1627,C0O1151C96O1276C144O1493C152O1526C160O1493C164O1526C168O1276C172O1433C188O1465C212O1495C232O1498C288O1493C296O1526C304O1551C312O1493C316O1526C320O1551C324O1473C352O1498C356O1495C364O1498C380O1551C388O1493C392O1526C396O1551C400O1473C420O1560C448O1577C464O1265C480O1614C488O1608C500O1625C548O1276C636O1473C852O1560C908O1577C948O1265,,
tick,0x101529fa4,149708,0,0x0,4,0x0,0x12ae912bb1d0,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,150375,0x10750b360,1028,adler32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/adler32.js:26:17,0x93fa32441b8,*
code-source-info,0x10750b360,187,1151,1627,C0O1151C56O1194C68O1235C72O1194C104O1276C128O1433C144O1465C168O1495C188O1498C244O1551C252O1493C256O1526C260O1551C264O1473C288O1498C292O1495C300O1498C316O1551C324O1493C328O1526C332O1551C336O1473C356O1560C384O1577C400O1265C416O1608C420O1625C468O1151C516O1473C724O1560C780O1577C820O1265,,
tick,0x10158e2a0,150958,0,0x0,4,0x0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1013e1314,152250,0,0x0,0,0x12ae912bf093,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1014a3240,153500,0,0x0,0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x101497348,154750,0,0x0,0,0x12ae912bf15c,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x101499354,156000,0,0x0,0,0x12ae912bc4eb,0x12ae912ba033,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1011eb4e0,157250,0,0x0,4,0x0,0x12ae912bf2a0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a3628a14,158500,0,0x0,4,0x0,0x12ae912bf2a0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,159791,0,0x0,4,0x0,0x12ae912bf2a0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,161000,0x10750b800,6204,inflate_fast /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inffast.js:61:39,0x93fa324e4c8,*
code-source-info,0x10750b
tick,0x1a3627590,161125,0,0x0,4,0x0,0x12ae912bf2a0,0x12ae912ba626,0x93fa327fcd7,0x93fa327e188,0x93fa327c36c,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,161166,0xe757746f2a6,65,zswap32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:113:17,0x93fa324a520,~
code-source-info,0xe757746f2a6,193,4900,5036,C0O4908C2O4921C5O4929C14O4953C17O4960C27O4937C33O4986C43O4996C46O4970C52O5018C58O5026C61O5002C64O5034,,
code-creation,LazyCompile,10,161208,0xe757746f40e,37,inflateEnd /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/zlib/inflate.js:1473:20,0x93fa324a840,~
code-source-info,0xe757746f40e,193,48062,48283,C0O48074C4O48093C10O48141C12O48163C13O48188C18O48207C24O48221C25O48234C29O48248C30O48259C34O48269C36O48281,,
code-creation,LazyCompile,10,161250,0xe757746f58e,102,Inflate.onEnd /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/inflate.js:327:36,0x93fa3248418,~
code-source-info,0xe757746f58e,192,9859,10247,C0O9895C3O9912C7O9906C12O9933C17O9941C24O9944C29O10083C34O10090C42O10090C47O10076C53O10119C56O10139C61O10158C66O10139C71O10131C75O10179C77O10191C81O10199C83O10208C87O10236C92O10241C96O10229C101O10246,,
code-creation,LazyCompile,10,161291,0xe757746f726,108,flattenChunks /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pako/lib/utils/common.js:54:27,0x3a1dfed72b98,~
code-source-info,0xe757746f726,183,1330,1736,C0O1414C2O1432C4O1450C9O1460C11O1460C16O1478C18O1491C22O1495C33O1466C38O1427C41O1533C47O1542C53O1567C55O1585C57O1603C62O1613C64O1613C69O1631C71O1645C75O1663C80O1663C86O1699C97O1619C102O1580C105O1718C107O1732,,
code-creation,LazyCompile,10,161333,0xe757746f92e,109,instantiateSync /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:420:27,0x93fa3259e48,~
code-source-info,0xe757746f92e,198,13995,14333,C7O13995C13O14039C16O14039C26O14071C30O14083C37O14067C43O14120C46O14120C51O14166C55O14182C68O14166C74O14229C77O14229C83O14270C90O14285C96O14299C102O14315C108O14329,,
code-creation,LazyCompile,10,161375,0xe757746fab6,12,isModule /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:399:20,0x93fa3259da8,~
code-source-info,0xe757746fab6,198,13228,13285,C0O13262C4O13274C8O13251C11O13281,,
code-creation,Stub,7,162083,0x10750d180,348,js-to-wasm:ii:i
code-creation,Stub,7,162083,0x10750d380,256,js-to-wasm:i:i
code-creation,Stub,7,162083,0x10750d520,272,js-to-wasm:i:
code-creation,Stub,7,162083,0x10750d6c0,136,js-to-wasm::
code-creation,Stub,7,162083,0x10750d7c0,736,js-to-wasm:idddii:i
code-creation,Stub,7,162083,0x10750db80,368,js-to-wasm:ii:
code-creation,Stub,7,162083,0x10750dda0,292,js-to-wasm:i:d
code-creation,Stub,7,162125,0x10750df80,384,js-to-wasm:id:
code-creation,Stub,7,162125,0x10750e1a0,480,js-to-wasm:idd:
code-creation,Stub,7,162125,0x10750e440,416,js-to-wasm:id:d
code-creation,Stub,7,162125,0x10750e6a0,472,js-to-wasm:idd:i
code-creation,Stub,7,162125,0x10750e940,376,js-to-wasm:id:i
tick,0x1a3576268,162333,1,0x101308b3c,6,0x0,0xe757746f953,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,163583,0x2f3ebe168400,224,wasm-to-js:iiii:,0x151f17120,
code-creation,Function,4,163625,0x2f3ebe1684e0,192,wasm-function[358],0x151f17286,
code-creation,Function,4,163625,0x2f3ebe1685a0,512,wasm-function[356],0x151f17284,
code-creation,Function,4,163625,0x2f3ebe1687a0,512,wasm-function[353],0x151f17281,
code-creation,Function,4,163666,0x2f3ebe1689a0,2144,wasm-function[351],0x151f1727f,
code-creation,Function,4,163666,0x2f3ebe169200,448,wasm-function[346],0x151f1727a,
code-creation,Function,4,163666,0x2f3ebe1693c0,448,wasm-function[343],0x151f17277,
code-creation,Function,4,163708,0x2f3ebe169580,448,wasm-function[341],0x151f17275,
code-creation,Function,4,163708,0x2f3ebe169740,448,wasm-function[339],0x151f17273,
code-creation,Function,4,163750,0x2f3ebe169900,640,wasm-function[337],0x151f17271,
code-creation,Function,4,163750,0x2f3ebe169b80,1056,wasm-function[336],0x151f17270,
code-creation,Function,4,163750,0x2f3ebe169fa0,448,wasm-function[335],0x151f1726f,
code-creation,Function,4,163791,0x2f3ebe165fc0,1152,wasm-function[181],0x151f171d5,
code-creation,Function,4,163791,0x2f3ebe166440,416,wasm-function[359],0x151f17287,
code-creation,Function,4,163833,0x2f3ebe1665e0,512,wasm-function[357],0x151f17285,
code-creation,Function,4,163833,0x2f3ebe1667e0,512,wasm-function[355],0x151f17283,
code-creation,Function,4,163833,0x2f3ebe1669e0,512,wasm-function[354],0x151f17282,
code-creation,Function,4,163833,0x2f3ebe166be0,1312,wasm-function[352],0x151f17280,
code-creation,Function,4,163833,0x2f3ebe167100,448,wasm-function[350],0x151f1727e,
code-creation,Function,4,163833,0x2f3ebe1672c0,448,wasm-function[349],0x151f1727d,
code-creation,Function,4,163833,0x2f3ebe167480,448,wasm-function[348],0x151f1727c,
code-creation,Function,4,163833,0x2f3ebe167640,448,wasm-function[347],0x151f1727b,
code-creation,Function,4,163875,0x2f3ebe167800,448,wasm-function[345],0x151f17279,
code-creation,Function,4,163875,0x2f3ebe1679c0,448,wasm-function[344],0x151f17278,
code-creation,Function,4,163875,0x2f3ebe167b80,448,wasm-function[342],0x151f17276,
code-creation,Function,4,163875,0x2f3ebe167d40,288,wasm-function[340],0x151f17274,
code-creation,Function,4,163875,0x2f3ebe167e60,1440,wasm-function[338],0x151f17272,
code-creation,Function,4,163875,0x2f3ebe16a160,608,wasm-function[334],0x151f1726e,
code-creation,Function,4,163875,0x2f3ebe16a3c0,384,wasm-function[333],0x151f1726d,
code-creation,Function,4,163916,0x2f3ebe16a540,448,wasm-function[332],0x151f1726c,
code-creation,Function,4,163916,0x2f3ebe16a700,672,wasm-function[331],0x151f1726b,
code-creation,Function,4,163916,0x2f3ebe16a9a0,1056,wasm-function[330],0x151f1726a,
code-creation,Function,4,163916,0x2f3ebe16adc0,2304,wasm-function[329],0x151f17269,
code-creation,Function,4,163916,0x2f3ebe16b6c0,448,wasm-function[327],0x151f17267,
code-creation,Function,4,163916,0x2f3ebe16b880,448,wasm-function[326],0x151f17266,
code-creation,Function,4,163916,0x2f3ebe16ba40,448,wasm-function[324],0x151f17264,
code-creation,Function,4,163916,0x2f3ebe16bc00,448,wasm-function[322],0x151f17262,
code-creation,Function,4,163916,0x2f3ebe16bdc0,448,wasm-function[320],0x151f17260,
code-creation,Function,4,163916,0x2f3ebe16bf80,288,wasm-function[318],0x151f1725e,
code-creation,Function,4,163916,0x2f3ebe16c0a0,448,wasm-function[328],0x151f17268,
code-creation,Function,4,163958,0x2f3ebe16c260,448,wasm-function[325],0x151f17265,
code-creation,Function,4,163958,0x2f3ebe16c420,448,wasm-function[323],0x151f17263,
code-creation,Function,4,163958,0x2f3ebe16c5e0,448,wasm-function[321],0x151f17261,
code-creation,Function,4,163958,0x2f3ebe16c7a0,448,wasm-function[319],0x151f1725f,
code-creation,Function,4,163958,0x2f3ebe16c960,448,wasm-function[317],0x151f1725d,
code-creation,Function,4,163958,0x2f3ebe16cb20,640,wasm-function[315],0x151f1725b,
code-creation,Function,4,163958,0x2f3ebe16cda0,1056,wasm-function[314],0x151f1725a,
code-creation,Function,4,163958,0x2f3ebe16d1c0,448,wasm-function[313],0x151f17259,
code-creation,Function,4,163958,0x2f3ebe16d380,736,wasm-function[312],0x151f17258,
code-creation,Function,4,163958,0x2f3ebe16d660,384,wasm-function[311],0x151f17257,
code-creation,Function,4,164000,0x2f3ebe16d7e0,672,wasm-function[309],0x151f17255,
code-creation,Function,4,164000,0x2f3ebe16da80,1536,wasm-function[316],0x151f1725c,
code-creation,Function,4,164000,0x2f3ebe16e080,448,wasm-function[310],0x151f17256,
code-creation,Function,4,164000,0x2f3ebe16e240,1056,wasm-function[308],0x151f17254,
code-creation,Function,4,164000,0x2f3ebe16e660,448,wasm-function[306],0x151f17252,
code-creation,Function,4,164000,0x2f3ebe16e820,448,wasm-function[305],0x151f17251,
code-creation,Function,4,164000,0x2f3ebe16e9e0,448,wasm-function[304],0x151f17250,
code-creation,Function,4,164000,0x2f3ebe16eba0,448,wasm-function[303],0x151f1724f,
code-creation,Function,4,164000,0x2f3ebe16ed60,448,wasm-function[302],0x151f1724e,
code-creation,Function,4,164000,0x2f3ebe16ef20,448,wasm-function[301],0x151f1724d,
code-creation,Function,4,164041,0x2f3ebe16f0e0,448,wasm-function[300],0x151f1724c,
code-creation,Function,4,164041,0x2f3ebe16f2a0,448,wasm-function[299],0x151f1724b,
code-creation,Function,4,164041,0x2f3ebe16f460,448,wasm-function[298],0x151f1724a,
code-creation,Function,4,164041,0x2f3ebe16f620,2304,wasm-function[307],0x151f17253,
code-creation,Function,4,164041,0x2f3ebe16ff20,448,wasm-function[297],0x151f17249,
code-creation,Function,4,164041,0x2f3ebe1700e0,448,wasm-function[295],0x151f17247,
code-creation,Function,4,164041,0x2f3ebe1702a0,1600,wasm-function[294],0x151f17246,
code-creation,Function,4,164041,0x2f3ebe1708e0,448,wasm-function[291],0x151f17243,
code-creation,Function,4,164041,0x2f3ebe170aa0,736,wasm-function[290],0x151f17242,
code-creation,Function,4,164041,0x2f3ebe170d80,1056,wasm-function[286],0x151f1723e,
code-creation,Function,4,164083,0x2f3ebe1711a0,448,wasm-function[284],0x151f1723c,
code-creation,Function,4,164083,0x2f3ebe171360,448,wasm-function[283],0x151f1723b,
code-creation,Function,4,164083,0x2f3ebe171520,448,wasm-function[282],0x151f1723a,
code-creation,Function,4,164083,0x2f3ebe1716e0,448,wasm-function[281],0x151f17239,
code-creation,Function,4,164083,0x2f3ebe1718a0,448,wasm-function[280],0x151f17238,
code-creation,Function,4,164083,0x2f3ebe171a60,288,wasm-function[296],0x151f17248,
code-creation,Function,4,164083,0x2f3ebe171b80,640,wasm-function[293],0x151f17245,
code-creation,Function,4,164083,0x2f3ebe171e00,1056,wasm-function[292],0x151f17244,
code-creation,Function,4,164083,0x2f3ebe172220,384,wasm-function[289],0x151f17241,
code-creation,Function,4,164125,0x2f3ebe1723a0,448,wasm-function[288],0x151f17240,
code-creation,Function,4,164125,0x2f3ebe172560,672,wasm-function[287],0x151f1723f,
code-creation,Function,4,164125,0x2f3ebe172800,2304,wasm-function[285],0x151f1723d,
code-creation,Function,4,164125,0x2f3ebe173100,448,wasm-function[279],0x151f17237,
code-creation,Function,4,164125,0x2f3ebe1732c0,448,wasm-function[277],0x151f17235,
code-creation,Function,4,164125,0x2f3ebe173480,448,wasm-function[276],0x151f17234,
code-creation,Function,4,164125,0x2f3ebe173640,448,wasm-function[275],0x151f17233,
code-creation,Function,4,164125,0x2f3ebe173800,288,wasm-function[274],0x151f17232,
code-creation,Function,4,164125,0x2f3ebe173920,1728,wasm-function[46],0x151f1714e,
code-creation,Function,4,164125,0x2f3ebe173fe0,4224,wasm-function[90],0x151f1717a,
code-creation,Function,4,164166,0x2f3ebe175060,4224,wasm-function[89],0x151f17179,
code-creation,Function,4,164166,0x2f3ebe1760e0,4224,wasm-function[88],0x151f17178,
code-creation,Function,4,164166,0x2f3ebe177160,2368,wasm-function[87],0x151f17177,
code-creation,Function,4,164166,0x2f3ebe177aa0,4192,wasm-function[86],0x151f17176,
code-creation,Function,4,164166,0x2f3ebe178b00,448,wasm-function[85],0x151f17175,
code-creation,Function,4,164166,0x2f3ebe178cc0,1216,wasm-function[84],0x151f17174,
code-creation,Function,4,164166,0x2f3ebe179180,2336,wasm-function[83],0x151f17173,
code-creation,Function,4,164166,0x2f3ebe179aa0,512,wasm-function[82],0x151f17172,
code-creation,Function,4,164166,0x2f3ebe179ca0,416,wasm-function[81],0x151f17171,
code-creation,Function,4,164166,0x2f3ebe179e40,1184,wasm-function[80],0x151f17170,
code-creation,Function,4,164208,0x2f3ebe17a2e0,640,wasm-function[79],0x151f1716f,
code-creation,Function,4,164208,0x2f3ebe17a560,992,wasm-function[78],0x151f1716e,
code-creation,Function,4,164208,0x2f3ebe17a940,1152,wasm-function[77],0x151f1716d,
code-creation,Function,4,164208,0x2f3ebe17adc0,1120,wasm-function[76],0x151f1716c,
code-creation,Function,4,164208,0x2f3ebe17b220,4224,wasm-function[91],0x151f1717b,
code-creation,Function,4,164208,0x2f3ebe17c2a0,1120,wasm-function[180],0x151f171d4,
code-creation,Function,4,164208,0x2f3ebe17c700,2688,wasm-function[179],0x151f171d3,
code-creation,Function,4,164208,0x2f3ebe17d180,1792,wasm-function[178],0x151f171d2,
code-creation,Function,4,164208,0x2f3ebe17d880,1056,wasm-function[177],0x151f171d1,
code-creation,Function,4,164208,0x2f3ebe17dca0,3264,wasm-function[176],0x151f171d0,
code-creation,Function,4,164208,0x2f3ebe17e960,3392,wasm-function[175],0x151f171cf,
code-creation,Function,4,164250,0x2f3ebe17f6a0,3392,wasm-function[174],0x151f171ce,
code-creation,Function,4,164250,0x2f3ebe1803e0,3392,wasm-function[173],0x151f171cd,
code-creation,Function,4,164250,0x2f3ebe181120,3392,wasm-function[172],0x151f171cc,
code-creation,Function,4,164250,0x2f3ebe181e60,1440,wasm-function[171],0x151f171cb,
code-creation,Function,4,164250,0x2f3ebe182400,736,wasm-function[170],0x151f171ca,
code-creation,Function,4,164250,0x2f3ebe1826e0,4032,wasm-function[169],0x151f171c9,
code-creation,Function,4,164250,0x2f3ebe1836a0,4224,wasm-function[168],0x151f171c8,
code-creation,Function,4,164250,0x2f3ebe184720,448,wasm-function[273],0x151f17231,
code-creation,Function,4,164250,0x2f3ebe1848e0,640,wasm-function[271],0x151f1722f,
code-creation,Function,4,164250,0x2f3ebe184b60,448,wasm-function[269],0x151f1722d,
code-creation,Function,4,164291,0x2f3ebe184d20,736,wasm-function[268],0x151f1722c,
code-creation,Function,4,164291,0x2f3ebe185000,448,wasm-function[266],0x151f1722a,
code-creation,Function,4,164291,0x2f3ebe1851c0,1024,wasm-function[264],0x151f17228,
code-creation,Function,4,164291,0x2f3ebe1855c0,448,wasm-function[262],0x151f17226,
code-creation,Function,4,164291,0x2f3ebe185780,448,wasm-function[261],0x151f17225,
code-creation,Function,4,164291,0x2f3ebe185940,448,wasm-function[260],0x151f17224,
code-creation,Function,4,164291,0x2f3ebe185b00,448,wasm-function[259],0x151f17223,
code-creation,Function,4,164291,0x2f3ebe185cc0,448,wasm-function[258],0x151f17222,
code-creation,Function,4,164333,0x2f3ebe185e80,448,wasm-function[257],0x151f17221,
code-creation,Function,4,164333,0x2f3ebe186040,448,wasm-function[278],0x151f17236,
code-creation,Function,4,164333,0x2f3ebe186200,1600,wasm-function[272],0x151f17230,
code-creation,Function,4,164333,0x2f3ebe186840,1056,wasm-function[270],0x151f1722e,
code-creation,Function,4,164333,0x2f3ebe186c60,384,wasm-function[267],0x151f1722b,
code-creation,Function,4,164333,0x2f3ebe186de0,672,wasm-function[265],0x151f17229,
code-creation,Function,4,164333,0x2f3ebe187080,2304,wasm-function[263],0x151f17227,
code-creation,Function,4,164333,0x2f3ebe187980,448,wasm-function[256],0x151f17220,
code-creation,Function,4,164333,0x2f3ebe187b40,448,wasm-function[254],0x151f1721e,
code-creation,Function,4,164333,0x2f3ebe187d00,448,wasm-function[253],0x151f1721d,
code-creation,Function,4,164333,0x2f3ebe187ec0,288,wasm-function[252],0x151f1721c,
code-creation,Function,4,164375,0x2f3ebe187fe0,448,wasm-function[251],0x151f1721b,
code-creation,Function,4,164375,0x2f3ebe1881a0,1536,wasm-function[250],0x151f1721a,
code-creation,Function,4,164375,0x2f3ebe1887a0,448,wasm-function[255],0x151f1721f,
code-creation,Function,4,164375,0x2f3ebe188960,640,wasm-function[249],0x151f17219,
code-creation,Function,4,164375,0x2f3ebe188be0,1056,wasm-function[248],0x151f17218,
code-creation,Function,4,164375,0x2f3ebe189000,736,wasm-function[246],0x151f17216,
code-creation,Function,4,164375,0x2f3ebe1892e0,384,wasm-function[245],0x151f17215,
code-creation,Function,4,164375,0x2f3ebe189460,448,wasm-function[244],0x151f17214,
code-creation,Function,4,164375,0x2f3ebe189620,288,wasm-function[243],0x151f17213,
code-creation,Function,4,164375,0x2f3ebe189740,288,wasm-function[241],0x151f17211,
code-creation,Function,4,164416,0x2f3ebe189860,288,wasm-function[239],0x151f1720f,
code-creation,Function,4,164416,0x2f3ebe189980,288,wasm-function[237],0x151f1720d,
code-creation,Function,4,164416,0x2f3ebe189aa0,288,wasm-function[235],0x151f1720b,
code-creation,Function,4,164416,0x2f3ebe189bc0,288,wasm-function[233],0x151f17209,
code-creation,Function,4,164416,0x2f3ebe189ce0,448,wasm-function[247],0x151f17217,
code-creation,Function,4,164416,0x2f3ebe189ea0,288,wasm-function[242],0x151f17212,
code-creation,Function,4,164416,0x2f3ebe189fc0,320,wasm-function[240],0x151f17210,
code-creation,Function,4,164416,0x2f3ebe18a100,320,wasm-function[238],0x151f1720e,
code-creation,Function,4,164416,0x2f3ebe18a240,320,wasm-function[236],0x151f1720c,
code-creation,Function,4,164416,0x2f3ebe18a380,288,wasm-function[234],0x151f1720a,
code-creation,Function,4,164458,0x2f3ebe18a4a0,672,wasm-function[232],0x151f17208,
code-creation,Function,4,164458,0x2f3ebe18a740,672,wasm-function[230],0x151f17206,
code-creation,Function,4,164458,0x2f3ebe18a9e0,768,wasm-function[229],0x151f17205,
code-creation,Function,4,164458,0x2f3ebe18ace0,640,wasm-function[227],0x151f17203,
code-creation,Function,4,164458,0x2f3ebe18af60,672,wasm-function[225],0x151f17201,
code-creation,Function,4,164458,0x2f3ebe18b200,768,wasm-function[223],0x151f171ff,
code-creation,Function,4,164458,0x2f3ebe18e7c0,768,wasm-function[231],0x151f17207,
code-creation,Function,4,164458,0x2f3ebe18eac0,672,wasm-function[228],0x151f17204,
code-creation,Function,4,164458,0x2f3ebe18ed60,768,wasm-function[226],0x151f17202,
code-creation,Function,4,164458,0x2f3ebe18f060,640,wasm-function[224],0x151f17200,
code-creation,Function,4,164500,0x2f3ebe18f2e0,672,wasm-function[222],0x151f171fe,
code-creation,Function,4,164500,0x2f3ebe18f580,576,wasm-function[220],0x151f171fc,
code-creation,Function,4,164500,0x2f3ebe18f7c0,864,wasm-function[219],0x151f171fb,
code-creation,Function,4,164500,0x2f3ebe18fb20,416,wasm-function[218],0x151f171fa,
code-creation,Function,4,164500,0x2f3ebe18fcc0,320,wasm-function[216],0x151f171f8,
code-creation,Function,4,164500,0x2f3ebe18fe00,352,wasm-function[215],0x151f171f7,
code-creation,Function,4,164500,0x2f3ebe18ff60,512,wasm-function[213],0x151f171f5,
code-creation,Function,4,164500,0x2f3ebe190160,672,wasm-function[211],0x151f171f3,
code-creation,Function,4,164500,0x2f3ebe18b500,864,wasm-function[23],0x151f17137,
code-creation,Function,4,164500,0x2f3ebe18b860,224,wasm-function[45],0x151f1714d,
code-creation,Function,4,164541,0x2f3ebe18b940,1280,wasm-function[44],0x151f1714c,
code-creation,Function,4,164541,0x2f3ebe18be40,1728,wasm-function[43],0x151f1714b,
code-creation,Function,4,164541,0x2f3ebe18c500,832,wasm-function[42],0x151f1714a,
code-creation,Function,4,164541,0x2f3ebe18c840,736,wasm-function[41],0x151f17149,
code-creation,Function,4,164541,0x2f3ebe18cb20,224,wasm-function[40],0x151f17148,
code-creation,Function,4,164541,0x2f3ebe18cc00,1312,wasm-function[39],0x151f17147,
code-creation,Function,4,164541,0x2f3ebe18d120,512,wasm-function[38],0x151f17146,
code-creation,Function,4,164541,0x2f3ebe18d320,256,wasm-function[37],0x151f17145,
code-creation,Function,4,164541,0x2f3ebe18d420,288,wasm-function[36],0x151f17144,
code-creation,Function,4,164541,0x2f3ebe18d540,864,wasm-function[35],0x151f17143,
code-creation,Function,4,164583,0x2f3ebe18d8a0,1376,wasm-function[34],0x151f17142,
code-creation,Function,4,164583,0x2f3ebe18de00,288,wasm-function[33],0x151f17141,
code-creation,Function,4,164583,0x2f3ebe18df20,256,wasm-function[32],0x151f17140,
code-creation,Function,4,164583,0x2f3ebe18e020,736,wasm-function[31],0x151f1713f,
code-creation,Function,4,164583,0x2f3ebe18e300,256,wasm-function[30],0x151f1713e,
code-creation,Function,4,164583,0x2f3ebe18e400,960,wasm-function[29],0x151f1713d,
code-creation,Function,4,164583,0x2f3ebe190400,2816,wasm-function[75],0x151f1716b,
code-creation,Function,4,164583,0x2f3ebe190f00,512,wasm-function[74],0x151f1716a,
code-creation,Function,4,164583,0x2f3ebe191100,416,wasm-function[73],0x151f17169,
code-creation,Function,4,164583,0x2f3ebe1912a0,1792,wasm-function[72],0x151f17168,
code-creation,Function,4,164625,0x2f3ebe1919a0,416,wasm-function[71],0x151f17167,
code-creation,Function,4,164625,0x2f3ebe191b40,1120,wasm-function[70],0x151f17166,
code-creation,Function,4,164625,0x2f3ebe191fa0,288,wasm-function[69],0x151f17165,
code-creation,Function,4,164625,0x2f3ebe1920c0,128,wasm-function[68],0x151f17164,
code-creation,Function,4,164625,0x2f3ebe192140,2944,wasm-function[67],0x151f17163,
code-creation,Function,4,164625,0x2f3ebe192cc0,288,wasm-function[66],0x151f17162,
code-creation,Function,4,164625,0x2f3ebe192de0,320,wasm-function[65],0x151f17161,
code-creation,Function,4,164625,0x2f3ebe192f20,576,wasm-function[64],0x151f17160,
code-creation,Function,4,164625,0x2f3ebe193160,512,wasm-function[63],0x151f1715f,
code-creation,Function,4,164625,0x2f3ebe193360,224,wasm-function[62],0x151f1715e,
code-creation,Function,4,164625,0x2f3ebe193440,384,wasm-function[61],0x151f1715d,
code-creation,Function,4,164666,0x2f3ebe1935c0,416,wasm-function[60],0x151f1715c,
code-creation,Function,4,164666,0x2f3ebe193760,640,wasm-function[221],0x151f171fd,
code-creation,Function,4,164666,0x2f3ebe1939e0,672,wasm-function[217],0x151f171f9,
code-creation,Function,4,164666,0x2f3ebe193c80,416,wasm-function[214],0x151f171f6,
code-creation,Function,4,164666,0x2f3ebe193e20,768,wasm-function[212],0x151f171f4,
code-creation,Function,4,164666,0x2f3ebe194120,608,wasm-function[210],0x151f171f2,
code-creation,Function,4,164666,0x2f3ebe194380,640,wasm-function[208],0x151f171f0,
code-creation,Function,4,164666,0x2f3ebe194600,2176,wasm-function[207],0x151f171ef,
code-creation,Function,4,164666,0x2f3ebe194e80,2240,wasm-function[205],0x151f171ed,
code-creation,Function,4,164666,0x2f3ebe195740,2240,wasm-function[203],0x151f171eb,
code-creation,Function,4,164666,0x2f3ebe196000,3264,wasm-function[201],0x151f171e9,
code-creation,Function,4,164708,0x2f3ebe196cc0,4224,wasm-function[190],0x151f171de,
code-creation,Function,4,164708,0x2f3ebe197d40,2240,wasm-function[187],0x151f171db,
code-creation,Function,4,164708,0x2f3ebe198600,4224,wasm-function[167],0x151f171c7,
code-creation,Function,4,164708,0x2f3ebe199680,4224,wasm-function[166],0x151f171c6,
code-creation,Function,4,164708,0x2f3ebe19a700,4224,wasm-function[165],0x151f171c5,
code-creation,Function,4,164708,0x2f3ebe19b780,2368,wasm-function[164],0x151f171c4,
code-creation,Function,4,164708,0x2f3ebe19c0c0,4192,wasm-function[163],0x151f171c3,
code-creation,Function,4,164708,0x2f3ebe19d120,2336,wasm-function[162],0x151f171c2,
code-creation,Function,4,164708,0x2f3ebe19da40,1184,wasm-function[161],0x151f171c1,
code-creation,Function,4,164708,0x2f3ebe19dee0,672,wasm-function[160],0x151f171c0,
code-creation,Function,4,164750,0x2f3ebe19e180,992,wasm-function[159],0x151f171bf,
code-creation,Function,4,164750,0x2f3ebe19e560,1152,wasm-function[158],0x151f171be,
code-creation,Function,4,164750,0x2f3ebe19e9e0,1120,wasm-function[157],0x151f171bd,
code-creation,Function,4,164750,0x2f3ebe19ee40,2816,wasm-function[156],0x151f171bc,
code-creation,Function,4,164750,0x2f3ebe19f940,1792,wasm-function[155],0x151f171bb,
code-creation,Function,4,164750,0x2f3ebe1a0040,3264,wasm-function[154],0x151f171ba,
code-creation,Function,4,164750,0x2f3ebe1a0d00,640,wasm-function[209],0x151f171f1,
code-creation,Function,4,164750,0x2f3ebe1a0f80,2240,wasm-function[206],0x151f171ee,
code-creation,Function,4,164750,0x2f3ebe1a1840,2240,wasm-function[204],0x151f171ec,
code-creation,Function,4,164750,0x2f3ebe1a2100,1888,wasm-function[202],0x151f171ea,
tick,0x1a3575280,164791,1,0x101308b3c,6,0x0,0xe757746f953,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,164791,0x2f3ebe1a2860,3392,wasm-function[200],0x151f171e8,
code-creation,Function,4,164791,0x2f3ebe1a35a0,2368,wasm-function[189],0x151f171dd,
code-creation,Function,4,164791,0x2f3ebe1a3ee0,4192,wasm-function[188],0x151f171dc,
code-creation,Function,4,164791,0x2f3ebe1a4f40,640,wasm-function[185],0x151f171d9,
code-creation,Function,4,164791,0x2f3ebe1a51c0,544,wasm-function[184],0x151f171d8,
code-creation,Function,4,164791,0x2f3ebe1a53e0,1152,wasm-function[183],0x151f171d7,
code-creation,Function,4,164833,0x2f3ebe1a5860,288,wasm-function[182],0x151f171d6,
code-creation,Function,4,164833,0x2f3ebe1a5980,4224,wasm-function[122],0x151f1719a,
code-creation,Function,4,164833,0x2f3ebe1a6a00,320,wasm-function[28],0x151f1713c,
code-creation,Function,4,164833,0x2f3ebe1a6b40,1280,wasm-function[27],0x151f1713b,
code-creation,Function,4,164833,0x2f3ebe1a7040,960,wasm-function[26],0x151f1713a,
code-creation,Function,4,164833,0x2f3ebe1a7400,1728,wasm-function[25],0x151f17139,
code-creation,Function,4,164833,0x2f3ebe1a7ac0,800,wasm-function[24],0x151f17138,
code-creation,Function,4,164833,0x2f3ebe1a7de0,4224,wasm-function[191],0x151f171df,
code-creation,Function,4,164833,0x2f3ebe1a8e60,3392,wasm-function[199],0x151f171e7,
code-creation,Function,4,164833,0x2f3ebe1a9ba0,3392,wasm-function[198],0x151f171e6,
code-creation,Function,4,164833,0x2f3ebe1aa8e0,3392,wasm-function[197],0x151f171e5,
code-creation,Function,4,164875,0x2f3ebe1ab620,1344,wasm-function[196],0x151f171e4,
code-creation,Function,4,164875,0x2f3ebe1abb60,704,wasm-function[195],0x151f171e3,
code-creation,Function,4,164875,0x2f3ebe1abe20,4032,wasm-function[194],0x151f171e2,
code-creation,Function,4,164875,0x2f3ebe1acde0,4224,wasm-function[193],0x151f171e1,
code-creation,Function,4,164875,0x2f3ebe1ade60,4224,wasm-function[192],0x151f171e0,
code-creation,Function,4,164875,0x2f3ebe1aeee0,608,wasm-function[105],0x151f17189,
code-creation,Function,4,164875,0x2f3ebe1af140,1184,wasm-function[117],0x151f17195,
code-creation,Function,4,164875,0x2f3ebe1af5e0,672,wasm-function[116],0x151f17194,
code-creation,Function,4,164916,0x2f3ebe1af880,992,wasm-function[115],0x151f17193,
code-creation,Function,4,164916,0x2f3ebe1afc60,3392,wasm-function[150],0x151f171b6,
code-creation,Function,4,164916,0x2f3ebe1b09a0,4224,wasm-function[146],0x151f171b2,
code-creation,Function,4,164916,0x2f3ebe1b1a20,4224,wasm-function[144],0x151f171b0,
code-creation,Function,4,164916,0x2f3ebe1b2aa0,2368,wasm-function[142],0x151f171ae,
code-creation,Function,4,164916,0x2f3ebe1b33e0,3392,wasm-function[131],0x151f171a3,
code-creation,Function,4,164916,0x2f3ebe1b4120,3392,wasm-function[129],0x151f171a1,
code-creation,Function,4,164916,0x2f3ebe1b4e60,1440,wasm-function[127],0x151f1719f,
code-creation,Function,4,164916,0x2f3ebe1b5400,736,wasm-function[126],0x151f1719e,
code-creation,Function,4,164958,0x2f3ebe1b56e0,4224,wasm-function[124],0x151f1719c,
code-creation,Function,4,164958,0x2f3ebe1b6760,1120,wasm-function[135],0x151f171a7,
code-creation,Function,4,164958,0x2f3ebe1b6bc0,1152,wasm-function[136],0x151f171a8,
code-creation,Function,4,164958,0x2f3ebe1b7040,1184,wasm-function[139],0x151f171ab,
code-creation,Function,4,164958,0x2f3ebe1b74e0,1184,wasm-function[186],0x151f171da,
code-creation,Function,4,164958,0x2f3ebe1b7980,3392,wasm-function[152],0x151f171b8,
code-creation,Function,4,164958,0x2f3ebe1b86c0,3392,wasm-function[151],0x151f171b7,
code-creation,Function,4,164958,0x2f3ebe1b9400,1440,wasm-function[149],0x151f171b5,
code-creation,Function,4,164958,0x2f3ebe1b99a0,736,wasm-function[148],0x151f171b4,
code-creation,Function,4,164958,0x2f3ebe1b9c80,4032,wasm-function[147],0x151f171b3,
code-creation,Function,4,165000,0x2f3ebe1bac40,4224,wasm-function[145],0x151f171b1,
code-creation,Function,4,165000,0x2f3ebe1bbcc0,4224,wasm-function[143],0x151f171af,
code-creation,Function,4,165000,0x2f3ebe1bcd40,3392,wasm-function[130],0x151f171a2,
code-creation,Function,4,165000,0x2f3ebe1bda80,3392,wasm-function[128],0x151f171a0,
code-creation,Function,4,165000,0x2f3ebe1be7c0,4032,wasm-function[125],0x151f1719d,
code-creation,Function,4,165000,0x2f3ebe1bf780,4224,wasm-function[123],0x151f1719b,
code-creation,Function,4,165000,0x2f3ebe1c0800,3392,wasm-function[153],0x151f171b9,
code-creation,Function,4,165000,0x2f3ebe1c1540,4224,wasm-function[121],0x151f17199,
code-creation,Function,4,165000,0x2f3ebe1c25c0,2368,wasm-function[120],0x151f17198,
code-creation,Function,4,165000,0x2f3ebe1c2f00,4192,wasm-function[119],0x151f17197,
tick,0x1a375c0cc,165041,1,0x101308b3c,6,0x0,0xe757746f953,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,165041,0x2f3ebe1c3f60,2336,wasm-function[118],0x151f17196,
code-creation,Function,4,165041,0x2f3ebe1c4880,3264,wasm-function[104],0x151f17188,
code-creation,Function,4,165041,0x2f3ebe1c5540,3392,wasm-function[103],0x151f17187,
code-creation,Function,4,165041,0x2f3ebe1c6280,3392,wasm-function[102],0x151f17186,
code-creation,Function,4,165041,0x2f3ebe1c6fc0,3392,wasm-function[101],0x151f17185,
code-creation,Function,4,165041,0x2f3ebe1c7d00,3392,wasm-function[100],0x151f17184,
code-creation,Function,4,165041,0x2f3ebe1c8a40,1440,wasm-function[99],0x151f17183,
code-creation,Function,4,165083,0x2f3ebe1c8fe0,736,wasm-function[98],0x151f17182,
code-creation,Function,4,165083,0x2f3ebe1c92c0,4032,wasm-function[97],0x151f17181,
code-creation,Function,4,165083,0x2f3ebe1ca280,2144,wasm-function[96],0x151f17180,
code-creation,Function,4,165083,0x2f3ebe1caae0,1152,wasm-function[114],0x151f17192,
code-creation,Function,4,165083,0x2f3ebe1caf60,1120,wasm-function[113],0x151f17191,
code-creation,Function,4,165083,0x2f3ebe1cb3c0,2816,wasm-function[112],0x151f17190,
code-creation,Function,4,165083,0x2f3ebe1cbec0,1792,wasm-function[111],0x151f1718f,
code-creation,Function,4,165083,0x2f3ebe1cc5c0,640,wasm-function[110],0x151f1718e,
code-creation,Function,4,165083,0x2f3ebe1cc840,832,wasm-function[109],0x151f1718d,
code-creation,Function,4,165083,0x2f3ebe1ccb80,864,wasm-function[108],0x151f1718c,
code-creation,Function,4,165125,0x2f3ebe1ccee0,608,wasm-function[107],0x151f1718b,
code-creation,Function,4,165125,0x2f3ebe1cd140,288,wasm-function[106],0x151f1718a,
code-creation,Function,4,165125,0x2f3ebe1cd260,992,wasm-function[137],0x151f171a9,
code-creation,Function,4,165125,0x2f3ebe1cd640,2336,wasm-function[140],0x151f171ac,
code-creation,Function,4,165125,0x2f3ebe1cdf60,672,wasm-function[138],0x151f171aa,
code-creation,Function,4,165125,0x2f3ebe1ce200,3552,wasm-function[12],0x151f1712c,
code-creation,Function,4,165125,0x2f3ebe1cefe0,704,wasm-function[22],0x151f17136,
code-creation,Function,4,165125,0x2f3ebe1cf2a0,1344,wasm-function[21],0x151f17135,
code-creation,Function,4,165125,0x2f3ebe1cf7e0,1280,wasm-function[20],0x151f17134,
code-creation,Function,4,165125,0x2f3ebe1cfce0,192,wasm-function[19],0x151f17133,
code-creation,Function,4,165125,0x2f3ebe1cfda0,544,wasm-function[15],0x151f1712f,
code-creation,Function,4,165166,0x2f3ebe1d1ac0,256,wasm-function[14],0x151f1712e,
code-creation,Function,4,165166,0x2f3ebe1d1bc0,832,wasm-function[5],0x151f17125,
code-creation,Function,4,165166,0x2f3ebe1cffc0,1728,wasm-function[11],0x151f1712b,
code-creation,Function,4,165166,0x2f3ebe1d0680,512,wasm-function[7],0x151f17127,
code-creation,Function,4,165166,0x2f3ebe1d0880,544,wasm-function[93],0x151f1717d,
code-creation,Function,4,165166,0x2f3ebe1d0aa0,1792,wasm-function[133],0x151f171a5,
code-creation,Function,4,165166,0x2f3ebe1d11a0,1568,wasm-function[17],0x151f17131,
code-creation,Function,4,165166,0x2f3ebe1d17c0,640,wasm-function[3],0x151f17123,
code-creation,Function,4,165166,0x2f3ebe1d1a40,128,wasm-function[1],0x151f17121,
code-creation,Function,4,165166,0x2f3ebe1d1f00,416,wasm-function[6],0x151f17126,
code-creation,Function,4,165166,0x2f3ebe1d20a0,960,wasm-function[10],0x151f1712a,
code-creation,Function,4,165208,0x2f3ebe1d2460,480,wasm-function[9],0x151f17129,
code-creation,Function,4,165208,0x2f3ebe1d2640,1664,wasm-function[8],0x151f17128,
code-creation,Function,4,165208,0x2f3ebe1d2cc0,416,wasm-function[94],0x151f1717e,
code-creation,Function,4,165208,0x2f3ebe1d2e60,640,wasm-function[16],0x151f17130,
code-creation,Function,4,165208,0x2f3ebe1d30e0,3040,wasm-function[18],0x151f17132,
code-creation,Function,4,165208,0x2f3ebe1d3cc0,416,wasm-function[95],0x151f1717f,
code-creation,Function,4,165208,0x2f3ebe1d3e60,416,wasm-function[92],0x151f1717c,
code-creation,Function,4,165208,0x2f3ebe1d4000,1216,wasm-function[13],0x151f1712d,
code-creation,Function,4,165208,0x2f3ebe1d44c0,384,wasm-function[2],0x151f17122,
code-creation,Function,4,165208,0x2f3ebe1d4640,768,wasm-function[4],0x151f17124,
code-creation,Function,4,165208,0x2f3ebe1d4940,224,wasm-function[59],0x151f1715b,
code-creation,Function,4,165208,0x2f3ebe1d4a20,1216,wasm-function[58],0x151f1715a,
code-creation,Function,4,165250,0x2f3ebe1d4ee0,1536,wasm-function[57],0x151f17159,
code-creation,Function,4,165250,0x2f3ebe1d54e0,1728,wasm-function[56],0x151f17158,
code-creation,Function,4,165250,0x2f3ebe1d5ba0,1952,wasm-function[55],0x151f17157,
code-creation,Function,4,165250,0x2f3ebe1d6340,320,wasm-function[54],0x151f17156,
code-creation,Function,4,165250,0x2f3ebe1d6480,256,wasm-function[53],0x151f17155,
code-creation,Function,4,165250,0x2f3ebe1d6580,256,wasm-function[52],0x151f17154,
code-creation,Function,4,165250,0x2f3ebe1d6680,224,wasm-function[51],0x151f17153,
code-creation,Function,4,165250,0x2f3ebe1d6760,1280,wasm-function[50],0x151f17152,
code-creation,Function,4,165250,0x2f3ebe1d6c60,1728,wasm-function[49],0x151f17151,
code-creation,Function,4,165250,0x2f3ebe1d7320,224,wasm-function[48],0x151f17150,
code-creation,Function,4,165250,0x2f3ebe1d7400,1280,wasm-function[47],0x151f1714f,
code-creation,Function,4,165291,0x2f3ebe1d7900,3264,wasm-function[132],0x151f171a4,
code-creation,Function,4,165291,0x2f3ebe1d85c0,4192,wasm-function[141],0x151f171ad,
code-creation,Function,4,165291,0x2f3ebe1d9620,2816,wasm-function[134],0x151f171a6,
code-creation,LazyCompile,10,165333,0xe7577470266,138,preInstantiate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:91:26,0x93fa3259be8,~
code-source-info,0xe7577470266,198,2764,3724,C0O2764C17O2804C18O2804C20O3043C31O3033C37O3021C39O3061C45O3077C55O3071C59O3346C65O3362C75O3356C79O3578C85O3593C91O3601C95O3606C99O3587C103O3638C112O3646C115O3628C119O3679C128O3687C131O3669C135O3697C137O3720,,
code-creation,Function,4,165333,0x2f3ebe1da120,896,wasm-function[180],0x151f171d4,*
code-creation,Function,4,165333,0x2f3ebe1da4a0,896,wasm-function[135],0x151f171a7,*
code-creation,Function,4,165333,0x2f3ebe1da820,928,wasm-function[158],0x151f171be,*
code-creation,Stub,7,166041,0x10750eb60,136,js-to-wasm::
code-creation,Function,4,166083,0x2f3ebe1dabc0,2560,wasm-function[90],0x151f1717a,*
code-creation,Function,4,166083,0x2f3ebe1db5c0,256,wasm-function[359],0x151f17287,*
code-creation,Function,4,166083,0x2f3ebe1db6c0,160,wasm-function[358],0x151f17286,*
code-creation,Function,4,166125,0x2f3ebe1db760,416,wasm-function[357],0x151f17285,*
code-creation,Function,4,166166,0x2f3ebe1db900,896,wasm-function[157],0x151f171bd,*
code-creation,Function,4,166166,0x2f3ebe1dbc80,416,wasm-function[356],0x151f17284,*
code-creation,Function,4,166166,0x2f3ebe1dbe20,416,wasm-function[355],0x151f17283,*
code-creation,Function,4,166208,0x2f3ebe1dbfc0,1792,wasm-function[179],0x151f171d3,*
code-creation,Function,4,166208,0x2f3ebe1dc6c0,416,wasm-function[354],0x151f17282,*
code-creation,Function,4,166250,0x2f3ebe1dc860,1760,wasm-function[134],0x151f171a6,*
code-creation,Function,4,166250,0x2f3ebe1dcf40,416,wasm-function[353],0x151f17281,*
code-creation,Function,4,166250,0x2f3ebe1dd0e0,1760,wasm-function[156],0x151f171bc,*
code-creation,Function,4,166291,0x2f3ebe1dd7c0,832,wasm-function[352],0x151f17280,*
tick,0x1016e67bc,166291,0,0x0,0,0x0,0x2f3ebe192088,0x10750eba8,0x101309020,0xe757746f972,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,166500,0xe7577479566,549,postInstantiate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:121:27,0x93fa3259c68,~
code-source-info,0xe7577479566,198,3824,13098,C0O3824C124O3883C129O3919C133O3911C135O3953C139O3945C141O3989C151O3998C153O3981C155O4048C165O4057C167O4040C169O4109C179O4120C181O4101C183O4174C193O4187C196O4243C200O4235C202O4281C216O4327C218O4281C220O4352C225O4374C229O4387C234O4409C238O4422C243O4446C247O4461C252O4487C256O6150C261O6178C265O6566C270O6599C274O6970C279O6998C283O9274C288O9301C292O9959C297O9990C301O10339C306O10366C310O10653C315O10686C319O10968C324O10998C328O11900C335O11901C345O11912C355O11924C365O11943C375O11955C385O11968C395O11980C405O11993C415O12007C422O12021C435O12021C440O12145C448O12165C455O12166C465O12182C472O12197C485O12197C490O12727C495O12756C499O12859C505O12900C513O12882C517O12922C523O12962C531O12944C535O13052C543O13059C548O13094,,
code-creation,Function,4,166583,0x2f3ebe1ddb00,1248,wasm-function[178],0x151f171d2,*
code-creation,Function,4,166583,0x2f3ebe1ddfe0,1248,wasm-function[133],0x151f171a5,*
code-creation,Function,4,166625,0x2f3ebe1de4c0,800,wasm-function[177],0x151f171d1,*
code-creation,Function,4,166625,0x2f3ebe1de7e0,1248,wasm-function[155],0x151f171bb,*
code-creation,LazyCompile,10,166708,0xe7577479c06,44, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:361:134,0xe7577479218,~
code-source-info,0xe7577479c06,198,12029,12135,C0O12045C3O12082C11O12093C15O12098C20O12109C25O12098C30O12091C37O12045C43O12134,,
code-creation,LazyCompile,10,166750,0xe7577479d76,84,attachTypedArrayFunctions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:356:39,0xe7577479128,~
code-source-info,0xe7577479d76,198,11699,11892,C0O11727C8O11751C16O11775C29O11775C34O11759C38O11806C46O11830C60O11862C73O11862C78O11842C83O11891,,
code-creation,Function,4,166833,0x2f3ebe1decc0,1536,wasm-function[351],0x151f1727f,*
code-creation,Function,4,166833,0x2f3ebe1df2c0,352,wasm-function[350],0x151f1727e,*
code-creation,LazyCompile,10,166916,0xe757747a2b6,35, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:366:47,0xe7577479268,~
code-source-info,0xe757747a2b6,198,12205,12286,C0O12223C3O12260C8O12265C16O12265C28O12223C34O12285,,
code-creation,Function,4,166958,0x2f3ebe1df420,352,wasm-function[349],0x151f1727d,*
code-creation,Function,4,167000,0x2f3ebe1df580,352,wasm-function[348],0x151f1727c,*
code-creation,LazyCompile,10,167250,0xe757747adb6,953,demangle /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:449:20,0x93fa3259ee8,~
code-source-info,0xe757747adb6,198,15012,18354,C0O15012C29O15077C34O15084C51O15186C62O15221C72O15077C74O15310C78O15310C88O15310C118O15287C148O15287C151O15287C158O15346C166O15353C169O15346C171O15400C181O15400C187O15429C195O15468C203O15475C208O15507C214O15507C219O15524C224O15536C230O15536C238O15561C239O15567C243O15581C245O15592C249O15455C252O15628C253O15633C257O15660C267O15660C273O15683C274O15692C286O15731C295O15731C302O15777C304O15781C307O15777C309O15805C319O15856C332O15892C336O15892C338O16009C348O16040C358O16024C362O16128C370O16138C374O16362C380O16377C385O16384C397O16384C404O16414C416O16415C421O16527C423O16543C429O16584C437O16599C442O16584C448O16613C450O16624C455O16636C460O16658C466O16676C472O16676C479O16700C484O16712C490O16737C500O16737C506O16712C524O16779C530O16800C544O16800C550O16786C553O16779C555O16851C561O16872C575O16872C581O16858C584O16851C586O16910C591O16917C597O16938C603O16960C611O17045C625O16917C634O17207C636O17216C641O17255C647O17261C655O17391C661O17467C667O17473C675O17634C683O17687C689O17705C695O17705C702O17729C707O17741C713O17766C723O17766C729O17741C737O17795C742O17802C748O17823C760O17871C774O17871C780O17857C793O17937C807O17937C813O17923C826O17802C833O18037C847O18076C852O18118C858O18124C864O18242C870O18277C872O18288C878O15278C950O18327C952O18350,,
code-creation,Function,4,167416,0x2f3ebe1df6e0,352,wasm-function[347],0x151f1727b,*
code-creation,Function,4,167416,0x2f3ebe1df840,2240,wasm-function[132],0x151f171a4,*
code-creation,Function,4,167416,0x2f3ebe1e0100,352,wasm-function[346],0x151f1727a,*
code-creation,Function,4,167458,0x2f3ebe1e0260,352,wasm-function[345],0x151f17279,*
code-creation,Function,4,167458,0x2f3ebe1e03c0,352,wasm-function[344],0x151f17278,*
code-creation,Function,4,167458,0x2f3ebe1e0520,2240,wasm-function[176],0x151f171d0,*
code-creation,Function,4,167500,0x2f3ebe1e0de0,2240,wasm-function[154],0x151f171ba,*
code-creation,Function,4,167500,0x2f3ebe1e16a0,352,wasm-function[343],0x151f17277,*
code-creation,Function,4,167541,0x2f3ebe1e1800,352,wasm-function[342],0x151f17276,*
code-creation,Function,4,167541,0x2f3ebe1e1960,352,wasm-function[341],0x151f17275,*
tick,0x1a357638c,167583,0,0x0,3,0x0,0xe7577479785,0xe757746f97b,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,167583,0x2f3ebe1e1ac0,256,wasm-function[340],0x151f17274,*
code-creation,Function,4,167625,0x2f3ebe1e1bc0,352,wasm-function[339],0x151f17273,*
code-creation,RegExp,3,167791,0x10750ec60,1064,^(get|set):
code-creation,LazyCompile,10,167916,0xe757747bbd6,26,Object.hasOwn /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:64:45,0x93fa3259ff8,~
code-source-info,0xe757747bbd6,198,2002,2079,C0O2020C4O2034C9O2044C14O2059C19O2059C25O2075,,
code-creation,Function,4,167958,0x2f3ebe1e1d20,2272,wasm-function[131],0x151f171a3,*
code-creation,Function,4,167958,0x2f3ebe1e2600,1120,wasm-function[338],0x151f17272,*
code-creation,Function,4,168083,0x2f3ebe1e2a60,2272,wasm-function[175],0x151f171cf,*
code-creation,Function,4,168125,0x2f3ebe1e3340,2272,wasm-function[153],0x151f171b9,*
code-creation,Function,4,168125,0x2f3ebe1e3c20,512,wasm-function[337],0x151f17271,*
code-creation,Function,4,168333,0x2f3ebe1e3e20,736,wasm-function[336],0x151f17270,*
code-creation,Function,4,168416,0x2f3ebe1e4100,352,wasm-function[335],0x151f1726f,*
code-creation,Function,4,168541,0x2f3ebe1e4260,448,wasm-function[334],0x151f1726e,*
code-creation,Function,4,168625,0x2f3ebe1e4420,288,wasm-function[333],0x151f1726d,*
tick,0x1a3576190,168666,0,0x0,0,0x0,0x101409ae8,0xe757747ae6b,0xe7577479785,0xe757746f97b,0x93fa327c372,0x36998916a601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x369989148db3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,168708,0x2f3ebe1e4540,2304,wasm-function[130],0x151f171a2,*
code-creation,Function,4,168708,0x2f3ebe1e4e40,352,wasm-function[332],0x151f1726c,*
code-creation,Function,4,168875,0x2f3ebe1e4fa0,480,wasm-function[331],0x151f1726b,*
code-creation,Function,4,168875,0x2f3ebe1e5180,2304,wasm-function[174],0x151f171ce,*
code-creation,Function,4,168916,0x2f3ebe1e5a80,2304,wasm-function[152],0x151f171b8,*
code-creation,Function,4,169041,0x2f3ebe1e6380,704,wasm-function[330],0x151f1726a,*
code-creation,Function,4,169458,0x2f3ebe1e6640,2304,wasm-function[129],0x151f171a1,*
code-creation,Eval,10,169541,0x17d3055165d6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/format.js:1:1,0x17d305516480,~
script-source,219,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/format.js,'use strict'\n\nfunction format (num) {\n  if (num < 1000) {\n    return '' + num\n  } else {\n    return '' + Math.round(num / 1000) + 'k'\n  }\n}\n\nmodule.exports = format\n
code-source-info,0x17d3055165d6,219,0,165,C0O0C4O165,,
code-creation,Function,10,169583,0x17d3055166be,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/format.js:1:1,0x17d305516540,~
code-source-info,0x17d3055166be,219,0,165,C0O0C5O141C7O156C12O164,,
code-creation,Function,4,169583,0x2f3ebe1e6f40,1536,wasm-function[329],0x151f17269,*
code-creation,LazyCompile,10,169666,0x17d3055168f6,97,getStderr node:internal/bootstrap/switches/is_main_thread:133:19,0x23e292d0b4c0,~
script-source,87,node:internal/bootstrap/switches/is_main_thread,'use strict';\n\nconst { ObjectDefineProperty } = primordials;\nconst rawMethods = internalBinding('process_methods');\n\n// TODO(joyeecheung): deprecate and remove these underscore methods\nprocess._debugProcess = rawMethods._debugProcess;\nprocess._debugEnd = rawMethods._debugEnd;\n\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\n// Five word summary: they were broken beyond repair.\nprocess._startProfilerIdleNotifier = () => {};\nprocess._stopProfilerIdleNotifier = () => {};\n\nfunction defineStream(name\x2C getter) {\n  ObjectDefineProperty(process\x2C name\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\n  });\n}\n\ndefineStream('stdout'\x2C getStdout);\ndefineStream('stdin'\x2C getStdin);\ndefineStream('stderr'\x2C getStderr);\n\n// Worker threads don't receive signals.\nconst {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n} = require('internal/process/signal');\nprocess.on('newListener'\x2C startListeningIfSignal);\nprocess.on('removeListener'\x2C stopListeningIfSignal);\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst { guessHandleType } = internalBinding('util');\n\nfunction createWritableStdioStream(fd) {\n  let stream;\n  // Note stream._type is used for test-module-load-list.js\n  switch (guessHandleType(fd)) {\n    case 'TTY':\n      const tty = require('tty');\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n      break;\n\n    case 'FILE':\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      const net = require('net');\n\n      // If fd is already being used for the IPC channel\x2C libuv will return\n      // an error when trying to use it again. In that case\x2C create the socket\n      // using the existing handle instead of the fd.\n      if (process.channel && process.channel.fd === fd) {\n        const { kChannelHandle } = require('internal/child_process');\n        stream = new net.Socket({\n          handle: process[kChannelHandle]\x2C\n          readable: false\x2C\n          writable: true\n        });\n      } else {\n        stream = new net.Socket({\n          fd\x2C\n          readable: false\x2C\n          writable: true\n        });\n      }\n\n      stream._type = 'pipe';\n      break;\n\n    default:\n      // Provide a dummy black-hole output for e.g. non-console\n      // Windows applications.\n      const { Writable } = require('stream');\n      stream = new Writable({\n        write(buf\x2C enc\x2C cb) {\n          cb();\n        }\n      });\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\nfunction dummyDestroy(err\x2C cb) {\n  cb(err);\n  this._undestroy();\n\n  // We need to emit 'close' anyway so that the closing\n  // of the stream is observable. We just make sure we\n  // are not going to do it twice.\n  // The 'close' event is needed so that finished and\n  // pipeline work correctly.\n  if (!this._writableState.emitClose) {\n    process.nextTick(() => {\n      this.emit('close');\n    });\n  }\n}\n\nlet stdin;\nlet stdout;\nlet stderr;\n\nfunction getStdout() {\n  if (stdout) return stdout;\n  stdout = createWritableStdioStream(1);\n  stdout.destroySoon = stdout.destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stdout._destroy = dummyDestroy;\n  if (stdout.isTTY) {\n    process.on('SIGWINCH'\x2C () => stdout._refreshSize());\n  }\n  return stdout;\n}\n\nfunction getStderr() {\n  if (stderr) return stderr;\n  stderr = createWritableStdioStream(2);\n  stderr.destroySoon = stderr.destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stderr._destroy = dummyDestroy;\n  if (stderr.isTTY) {\n    process.on('SIGWINCH'\x2C () => stderr._refreshSize());\n  }\n  return stderr;\n}\n\nfunction getStdin() {\n  if (stdin) return stdin;\n  const fd = 0;\n\n  switch (guessHandleType(fd)) {\n    case 'TTY':\n      const tty = require('tty');\n      stdin = new tty.ReadStream(fd\x2C {\n        highWaterMark: 0\x2C\n        readable: true\x2C\n        writable: false\n      });\n      break;\n\n    case 'FILE':\n      const fs = require('fs');\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      const net = require('net');\n\n      // It could be that process has been started with an IPC channel\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\n      // present and creating a new one will lead to the assertion failure\n      // in libuv.\n      if (process.channel && process.channel.fd === fd) {\n        stdin = new net.Socket({\n          handle: process.channel\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\n        });\n      } else {\n        stdin = new net.Socket({\n          fd: fd\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\n        });\n      }\n      // Make sure the stdin can't be `.end()`-ed\n      stdin._writableState.ended = true;\n      break;\n\n    default:\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      const { Readable } = require('stream');\n      stdin = new Readable({ read() {} });\n      stdin.push(null);\n  }\n\n  // For supporting legacy API we put the FD here.\n  stdin.fd = fd;\n\n  // `stdin` starts out life in a paused state\x2C but node doesn't\n  // know yet. Explicitly to readStop() it to put it in the\n  // not-reading state.\n  if (stdin._handle && stdin._handle.readStop) {\n    stdin._handle.reading = false;\n    stdin._readableState.reading = false;\n    stdin._handle.readStop();\n  }\n\n  // If the user calls stdin.pause()\x2C then we need to stop reading\n  // once the stream implementation does so (one nextTick later)\x2C\n  // so that the process can close down.\n  stdin.on('pause'\x2C () => {\n    process.nextTick(onpause);\n  });\n\n  function onpause() {\n    if (!stdin._handle)\n      return;\n    if (stdin._handle.reading && !stdin.readableFlowing) {\n      stdin._readableState.reading = false;\n      stdin._handle.reading = false;\n      stdin._handle.readStop();\n    }\n  }\n\n  return stdin;\n}\n\n// Used by internal tests.\nrawMethods.resetStdioForTesting = function() {\n  stdin = undefined;\n  stdout = undefined;\n  stderr = undefined;\n};\n
code-source-info,0x17d3055168f6,87,3640,3953,C0O3647C6O3659C10O3673C11O3676C17O3685C24O3683C30O3717C37O3738C40O3745C44O3736C48O3820C55O3836C59O3854C64O3865C70O3878C73O3886C86O3886C92O3937C96O3951,,
code-creation,Function,4,169958,0x2f3ebe1e7540,352,wasm-function[328],0x151f17268,*
code-creation,Function,4,169958,0x2f3ebe1e76a0,2304,wasm-function[173],0x151f171cd,*
code-creation,Function,4,169958,0x2f3ebe1e7fa0,352,wasm-function[327],0x151f17267,*
code-creation,Function,4,169958,0x2f3ebe1e8100,352,wasm-function[326],0x151f17266,*
code-creation,Function,4,169958,0x2f3ebe1e8260,352,wasm-function[325],0x151f17265,*
code-creation,Function,4,169958,0x2f3ebe1e83c0,352,wasm-function[324],0x151f17264,*
tick,0x1a3726358,170000,0,0x0,3,0x0,0x369989148dd0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,170041,0x17d3055174ae,305,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:41:35,0x23e292d0b3b0,~
code-source-info,0x17d3055174ae,87,1312,2845,C0O1325C4O1403C7O1403C20O1395C53O1460C59O1460C64O1482C66O1499C73O1491C79O1522C81O1535C85O1550C87O1605C93O1605C98O1653C100O1682C110O1662C116O1715C118O1728C122O1742C124O1801C130O1801C135O2033C138O2045C147O2064C152O2072C159O2075C164O2120C170O2120C175O2101C180O2163C184O2180C199O2214C208O2172C216O2319C220O2336C232O2355C238O2328C244O2438C246O2451C250O2467C252O2610C258O2610C263O2597C268O2635C275O2667C285O2644C291O2783C293O2793C297O2802C298O2818C302O2829C304O2843,,
code-creation,Function,4,170041,0x2f3ebe1e8520,2304,wasm-function[151],0x151f171b7,*
code-creation,Function,4,170083,0x2f3ebe1e8e20,352,wasm-function[323],0x151f17263,*
code-creation,Function,4,170083,0x2f3ebe1e8f80,352,wasm-function[322],0x151f17262,*
code-creation,LazyCompile,10,170125,0x17d305517846,194,WriteStream node:tty:85:21,0x3699891603b0,~
code-source-info,0x17d305517846,161,2514,3460,C0O2523C2O2534C7O2563C12O2570C17O2590C18O2593C20O2600C26O2605C32O2618C37O2627C44O2633C49O2627C50O2672C52O2690C67O2690C73O2725C79O2751C86O2757C91O2751C92O2794C97O2798C102O2805C114O2830C118O2805C124O3271C129O3279C136O3279C141O3317C151O3317C157O3350C162O3358C167O3358C173O3384C175O3400C176O3422C179O3413C183O3431C185O3450C188O3441C193O3459,,
code-creation,Function,4,170125,0x2f3ebe1e90e0,352,wasm-function[321],0x151f17261,*
code-creation,Function,4,170833,0x2f3ebe1e9240,352,wasm-function[320],0x151f17260,*
code-creation,Function,4,170875,0x2f3ebe1e93a0,2304,wasm-function[128],0x151f171a0,*
code-creation,Function,4,170875,0x2f3ebe1e9ca0,352,wasm-function[319],0x151f1725f,*
code-creation,Function,4,170916,0x2f3ebe1e9e00,256,wasm-function[318],0x151f1725e,*
code-creation,Function,4,170916,0x2f3ebe1e9f00,352,wasm-function[317],0x151f1725d,*
code-creation,Function,4,170916,0x2f3ebe1ea060,2304,wasm-function[172],0x151f171cc,*
code-creation,Function,4,170916,0x2f3ebe1ea960,960,wasm-function[127],0x151f1719f,*
code-creation,Function,4,170958,0x2f3ebe1ead20,544,wasm-function[126],0x151f1719e,*
code-creation,Function,4,170958,0x2f3ebe1eaf40,960,wasm-function[171],0x151f171cb,*
code-creation,Function,4,170958,0x2f3ebe1eb300,1120,wasm-function[316],0x151f1725c,*
code-creation,Function,4,171000,0x2f3ebe1eb760,544,wasm-function[170],0x151f171ca,*
code-creation,Function,4,171000,0x2f3ebe1eb980,512,wasm-function[315],0x151f1725b,*
code-creation,Function,4,171083,0x2f3ebe1ebb80,736,wasm-function[314],0x151f1725a,*
tick,0x100df7908,171166,0,0x0,0,0x0,0x1b9b88163878,0x17d3055178bc,0x17d3055174f7,0x17d305516907,0x369989148dd0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716cd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,171208,0x2f3ebe1ebe60,352,wasm-function[313],0x151f17259,*
code-creation,Function,4,171291,0x2f3ebe1ebfc0,2304,wasm-function[150],0x151f171b6,*
code-creation,Function,4,171333,0x2f3ebe1ec8c0,512,wasm-function[312],0x151f17258,*
code-creation,Function,4,171375,0x2f3ebe1ecac0,288,wasm-function[311],0x151f17257,*
code-creation,Function,4,171500,0x2f3ebe1ecbe0,352,wasm-function[310],0x151f17256,*
code-creation,Function,4,171583,0x2f3ebe1ecd40,2496,wasm-function[125],0x151f1719d,*
code-creation,Function,4,171750,0x2f3ebe1ed700,960,wasm-function[149],0x151f171b5,*
code-creation,Function,4,171750,0x2f3ebe1edac0,480,wasm-function[309],0x151f17255,*
code-creation,Function,4,171750,0x2f3ebe1edca0,2496,wasm-function[169],0x151f171c9,*
code-creation,Function,4,171750,0x2f3ebe1ee660,544,wasm-function[148],0x151f171b4,*
code-creation,Eval,10,171875,0x17d305518126,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:1:1,0x17d305517f30,~
script-source,220,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js,'use strict'\n\nconst EE = require('events').EventEmitter\nconst { isMainThread } = require('./worker_threads')\n\nconst initWorkers = require('./manager')\nconst validateOpts = require('./validate')\nconst noop = require('./noop')\nconst runTracker = require('./runTracker')\nconst track = require('./progressTracker')\n\nfunction init (opts\x2C cb) {\n  const cbPassedIn = (typeof cb === 'function')\n  if (!cbPassedIn && !opts.forever) {\n    if (opts.warmup) {\n      return runWithWarmup(opts)\n    } else {\n      return run(opts)\n    }\n  } else {\n    return _init(opts\x2C null\x2C cb)\n  }\n}\n\nfunction run (opts) {\n  const tracker = new EE()\n  const promise = new Promise((resolve\x2C reject) => {\n    _init(opts\x2C tracker\x2C (err\x2C results) => {\n      if (err) return reject(err)\n      resolve(results)\n    })\n  })\n  tracker.then = promise.then.bind(promise)\n  tracker.catch = promise.catch.bind(promise)\n\n  return tracker\n}\n\nfunction runWithWarmup (opts) {\n  const warmupOpts = {\n    ...opts\x2C\n    ...opts.warmup\x2C\n    warmupRunning: true\x2C\n    renderResultsTable: false\n  }\n  const mainTracker = new EE()\n  const warmUpTracker = new EE()\n  const promise = new Promise((resolve\x2C reject) => {\n    _init(warmupOpts\x2C warmUpTracker\x2C (err\x2C warmupResults) => {\n      if (err) return reject(err)\n      _init(opts\x2C mainTracker\x2C (err\x2C results) => {\n        if (err) return reject(err)\n        results.warmup = warmupResults\n        resolve(results)\n      })\n    })\n  })\n  mainTracker.then = promise.then.bind(promise)\n  mainTracker.catch = promise.catch.bind(promise)\n  return mainTracker\n}\n\nfunction _init (opts\x2C tracker\x2C cb) {\n  const cbPassedIn = (typeof cb === 'function')\n  cb = cb || noop\n\n  tracker = tracker || new EE()\n\n  opts = validateOpts(opts\x2C cbPassedIn)\n\n  function _cb (err\x2C result) {\n    if (err) {\n      return cbPassedIn ? cb(err) : setImmediate(() => tracker.emit('error'\x2C err))\n    }\n\n    tracker.emit('done'\x2C result)\n    cb(null\x2C result)\n\n    if (!err && opts.json) {\n      console.log(JSON.stringify(result))\n    }\n  }\n\n  if (opts instanceof Error) {\n    _cb(opts)\n    return tracker\n  }\n\n  tracker.opts = opts\n\n  if (opts.workers && isMainThread) {\n    initWorkers(opts\x2C tracker\x2C _cb)\n  } else {\n    runTracker(opts\x2C tracker\x2C _cb)\n  }\n\n  // if not running via command-line and\n  // not rendering json\x2C or if std isn't a tty\x2C track progress\n  if (opts[Symbol.for('internal')] && (!opts.json || !process.stdout.isTTY)) track(tracker\x2C opts)\n\n  return tracker\n}\n\nmodule.exports = init\n
code-source-info,0x17d305518126,220,0,2469,C0O0C4O2469,,
code-creation,Function,10,172000,0x17d30551838e,130, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:1:1,0x17d305518090,~
code-source-info,0x17d30551838e,220,0,2469,C0O0C49O25C52O25C57O42C61O25C63O81C66O81C71O64C77O130C80O130C84O130C86O172C89O172C93O172C95O207C98O207C102O207C104O244C107O244C111O244C113O282C116O282C120O282C122O2447C124O2462C129O2468,,
code-creation,Function,4,172000,0x2f3ebe1ee880,704,wasm-function[308],0x151f17254,*
code-creation,LazyCompile,10,172041,0x17d305518b16,16,get node:events:101:6,0x1910fc7f25b0,~
code-source-info,0x17d305518b16,13,2897,2950,C0O2906C3O2926C10O2936C12O2935C15O2946,,
code-creation,LazyCompile,10,172083,0x17d305518c0e,5,get node:events:136:16,0x1910fc7f26f0,~
code-source-info,0x17d305518c0e,13,3826,3866,C0O3835C4O3862,,
code-creation,Eval,10,172375,0x17d305519006,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/worker_threads.js:1:1,0x17d305518e80,~
script-source,221,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/worker_threads.js,'use strict'\n\nlet workerThreads = {}\n\ntry {\n  workerThreads = require('worker_threads')\n} catch (err) {\n  if (err) {\n    // we don't need the error but can't have catch block\n    // without err as node 8 doesn't support that\n  }\n\n  workerThreads = {\n    isMainThread: true\n  }\n}\n\nmodule.exports = workerThreads\n
code-source-info,0x17d305519006,221,0,311,C0O0C4O311,,
code-creation,Function,10,172375,0x17d3055190e6,45, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/worker_threads.js:1:1,0x17d305518f70,~
code-source-info,0x17d3055190e6,221,0,311,C0O34C5O46C8O62C16O60C26O106C30O232C37O280C39O295C44O310,,
code-creation,Function,4,172416,0x2f3ebe1eeb40,2560,wasm-function[124],0x151f1719c,*
tick,0x100e21c70,172458,0,0x0,0,0x1013ef5b8,0x1013f1668,0x172aed04fc04,0x172aed04f8e0,0x172aed04f5a7,0x172aed04e9d9,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x17d3055183de,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,172625,0x2f3ebe1ef540,2496,wasm-function[147],0x151f171b3,*
code-creation,Eval,10,172708,0x17d3055197be,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/manager.js:1:1,0x17d305519608,~
script-source,222,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/manager.js,'use strict'\n\nconst path = require('path')\nconst EE = require('events').EventEmitter\nconst aggregateResult = require('./aggregateResult')\nconst { getHistograms } = require('./histUtil')\nconst { Worker } = require('./worker_threads')\n\nfunction initWorkers (opts\x2C tracker\x2C cb) {\n  tracker = tracker || new EE()\n\n  const workers = []\n  const results = []\n  const numWorkers = +opts.workers\n  const histograms = getHistograms()\n  const histData = {\n    requests: []\x2C\n    throughput: []\n  }\n  let restart = true\n\n  function reset () {\n    workers.length = 0\n    results.length = 0\n    histograms.requests.reset()\n    histograms.throughput.reset()\n    histData.requests.length = 0\n    histData.throughput.length = 0\n  }\n\n  function startAll () {\n    for (const w of workers) {\n      w.postMessage({ cmd: 'START' })\n    }\n\n    setImmediate(() => { tracker.emit('start') })\n  }\n\n  function handleFinish () {\n    const result = aggregateResult(results\x2C opts\x2C histograms)\n    cb(null\x2C result)\n    reset()\n\n    if (opts.forever && restart) {\n      setImmediate(() => {\n        init()\n        startAll()\n      })\n    }\n  }\n\n  function stopAll () {\n    for (const w of workers) {\n      w.postMessage({ cmd: 'STOP' })\n    }\n    reset()\n  }\n\n  const workerOpts = {\n    ...opts\x2C\n    ...(opts.amount ? { amount: Math.max(Math.floor(opts.amount / numWorkers)\x2C 1) } : undefined)\x2C\n    ...(opts.connections ? { connections: Math.max(Math.floor(opts.connections / numWorkers)\x2C 1) } : undefined)\n  }\n  workerOpts.a = workerOpts.amount\n  workerOpts.c = workerOpts.connections\n\n  function init () {\n    for (let i = 0; i < numWorkers; i++) {\n      const worker = new Worker(path.resolve(__dirname\x2C './worker.js')\x2C { workerData: { opts: workerOpts } })\n\n      worker.on('message'\x2C (msg) => {\n        const { cmd\x2C data\x2C error } = msg\n\n        if (cmd === 'RESULT') {\n          results.push(data)\n\n          if (results.length === workers.length) {\n            handleFinish()\n          }\n        } else if (cmd === 'UPDATE_HIST') {\n          const { name\x2C value } = data\n          histData[name].push(value)\n\n          if (histData[name].length === workers.length) {\n            const total = histData[name].reduce((acc\x2C v) => acc + v\x2C 0)\n            histData[name].length = 0\n            histograms[name].recordValue(total)\n          }\n        } else if (cmd === 'RESET_HIST') {\n          const { name } = data\n          histograms[name].reset()\n        } else if (cmd === 'ERROR') {\n          tracker.emit('error'\x2C error)\n        }\n      })\n\n      worker.on('error'\x2C (err) => {\n        console.log('Worker error:'\x2C err)\n        stopAll()\n        cb(err)\n      })\n\n      workers.push(worker)\n    }\n  }\n\n  init()\n  startAll()\n\n  tracker.stop = () => {\n    restart = false\n    stopAll()\n  }\n\n  return tracker\n}\n\nmodule.exports = initWorkers\n
code-source-info,0x17d3055197be,222,0,2812,C0O0C4O2812,,
code-creation,Function,10,172833,0x17d305519936,97, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/manager.js:1:1,0x17d305519728,~
code-source-info,0x17d305519936,222,0,2812,C0O0C29O27C32O27C36O27C38O54C41O54C46O71C50O54C52O109C55O109C59O109C61O164C64O164C69O146C75O205C78O205C83O194C89O2783C91O2798C96O2811,,
code-creation,Function,4,172875,0x2f3ebe1eff00,1536,wasm-function[307],0x151f17253,*
code-creation,Function,4,172875,0x2f3ebe1f0500,352,wasm-function[306],0x151f17252,*
code-creation,Function,4,172875,0x2f3ebe1f0660,2560,wasm-function[168],0x151f171c8,*
code-creation,Function,4,172875,0x2f3ebe1f1060,352,wasm-function[305],0x151f17251,*
code-creation,Function,4,172875,0x2f3ebe1f11c0,352,wasm-function[304],0x151f17250,*
code-creation,Function,4,172958,0x2f3ebe1f1320,352,wasm-function[303],0x151f1724f,*
code-creation,Function,4,173083,0x2f3ebe1f1480,352,wasm-function[302],0x151f1724e,*
code-creation,Function,4,173125,0x2f3ebe1f15e0,352,wasm-function[301],0x151f1724d,*
code-creation,Eval,10,173166,0x17d30551a23e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/aggregateResult.js:1:1,0x17d30551a0b8,~
script-source,223,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/aggregateResult.js,'use strict'\n\nconst { decodeHist\x2C histAsObj\x2C addPercentiles } = require('./histUtil')\n\nfunction aggregateResult (results\x2C opts\x2C histograms) {\n  results = Array.isArray(results) ? results : [results]\n\n  const aggregated = results.map(r => ({\n    ...r\x2C\n    latencies: decodeHist(r.latencies)\x2C\n    requests: decodeHist(r.requests)\x2C\n    throughput: decodeHist(r.throughput)\n  })).reduce((acc\x2C r) => {\n    acc.latencies.add(r.latencies)\n\n    acc.totalCompletedRequests += r.totalCompletedRequests\n    acc.totalRequests += r.totalRequests\n    acc.totalBytes += r.totalBytes\n\n    acc.errors += r.errors\n    acc.timeouts += r.timeouts\n    acc.mismatches += r.mismatches\n    acc.non2xx += r.non2xx\n    acc.resets += r.resets\n    acc['1xx'] += r['1xx']\n    acc['2xx'] += r['2xx']\n    acc['3xx'] += r['3xx']\n    acc['4xx'] += r['4xx']\n    acc['5xx'] += r['5xx']\n\n    Object.keys(r.statusCodeStats).forEach(statusCode => {\n      if (!acc.statusCodeStats[statusCode]) {\n        acc.statusCodeStats[statusCode] = r.statusCodeStats[statusCode]\n      } else {\n        acc.statusCodeStats[statusCode].count += r.statusCodeStats[statusCode].count\n      }\n    })\n\n    return acc\n  })\n\n  const result = {\n    title: opts.title\x2C\n    url: opts.url\x2C\n    socketPath: opts.socketPath\x2C\n    connections: opts.connections\x2C\n    pipelining: opts.pipelining\x2C\n    workers: opts.workers\x2C\n\n    duration: aggregated.duration\x2C\n    start: aggregated.start\x2C\n    finish: aggregated.finish\x2C\n    errors: aggregated.errors\x2C\n    timeouts: aggregated.timeouts\x2C\n    mismatches: aggregated.mismatches\x2C\n    non2xx: aggregated.non2xx\x2C\n    resets: aggregated.resets\x2C\n    '1xx': aggregated['1xx']\x2C\n    '2xx': aggregated['2xx']\x2C\n    '3xx': aggregated['3xx']\x2C\n    '4xx': aggregated['4xx']\x2C\n    '5xx': aggregated['5xx']\x2C\n    statusCodeStats: aggregated.statusCodeStats\x2C\n\n    latency: addPercentiles(aggregated.latencies\x2C histAsObj(aggregated.latencies))\x2C\n    requests: addPercentiles(histograms.requests\x2C histAsObj(histograms.requests\x2C aggregated.totalCompletedRequests))\x2C\n    throughput: addPercentiles(histograms.throughput\x2C histAsObj(histograms.throughput\x2C aggregated.totalBytes))\n  }\n\n  result.latency.totalCount = aggregated.latencies.totalCount\n  result.requests.sent = aggregated.totalRequests\n\n  if (result.requests.min >= Number.MAX_SAFE_INTEGER) result.requests.min = 0\n  if (result.throughput.min >= Number.MAX_SAFE_INTEGER) result.throughput.min = 0\n  if (result.latency.min >= Number.MAX_SAFE_INTEGER) result.latency.min = 0\n\n  return result\n}\n\nmodule.exports = aggregateResult\n
code-source-info,0x17d30551a23e,223,0,2538,C0O0C4O2538,,
code-creation,Function,10,173291,0x17d30551a34e,53, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/aggregateResult.js:1:1,0x17d30551a1a8,~
code-source-info,0x17d30551a34e,223,0,2538,C0O0C19O64C22O64C27O22C33O34C39O45C45O2505C47O2520C52O2537,,
code-creation,Function,4,173333,0x2f3ebe1f1740,352,wasm-function[300],0x151f1724c,*
code-creation,Function,4,173333,0x2f3ebe1f18a0,352,wasm-function[299],0x151f1724b,*
code-creation,Function,4,173333,0x2f3ebe1f1a00,352,wasm-function[298],0x151f1724a,*
code-creation,Function,4,173375,0x2f3ebe1f1b60,352,wasm-function[297],0x151f17249,*
code-creation,Function,4,173416,0x2f3ebe1f1cc0,256,wasm-function[296],0x151f17248,*
code-creation,Function,4,173583,0x2f3ebe1f1dc0,2560,wasm-function[123],0x151f1719b,*
code-creation,Function,4,173583,0x2f3ebe1f27c0,352,wasm-function[295],0x151f17247,*
tick,0x100ff481c,173708,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,174416,0x17d30551ad46,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:1:1,0x17d30551ab20,~
script-source,224,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js,'use strict'\n\nconst defaultOptions = require('./defaultOptions')\nconst timestring = require('timestring')\nconst { checkURL } = require('./url')\nconst multipart = require('./multipart')\nconst { parseHAR } = require('./parseHAR')\nconst { hasWorkerSupport } = require('./util')\n\nconst isValidFn = (opt) => (!opt || typeof opt === 'function' || typeof opt === 'string')\n\nconst lessThanOneError = (label) => new Error(`${label} can not be less than 1`)\nconst greaterThanZeroError = (label) => new Error(`${label} must be greater than 0`)\nconst minIfPresent = (val\x2C min) => val !== null && val < min\n\nfunction safeRequire (path) {\n  if (typeof path === 'string') {\n    try {\n      return require(path)\n    } catch (err) {}\n  }\n\n  return path\n}\n\nfunction defaultOpts (opts) {\n  const setupClient = opts.workers ? opts.setupClient : safeRequire(opts.setupClient)\n\n  const requests = opts.requests\n    ? opts.requests.map((r) => {\n        const setupRequest = opts.workers ? r.setupRequest : safeRequire(r.setupRequest)\n        const onResponse = opts.workers ? r.onResponse : safeRequire(r.onResponse)\n\n        return {\n          ...r\x2C\n          ...(setupRequest ? { setupRequest } : undefined)\x2C\n          ...(onResponse ? { onResponse } : undefined)\n        }\n      })\n    : undefined\n\n  return {\n    ...defaultOptions\x2C\n    ...opts\x2C\n    ...(setupClient ? { setupClient } : undefined)\x2C\n    ...(requests ? { requests } : undefined)\n  }\n}\n\nmodule.exports = function validateOpts (opts\x2C cbPassedIn) {\n  if (opts.workers && !hasWorkerSupport) return new Error('Please use node >= 11.7.0 for workers support')\n  // these need to be validated before defaulting\n  if (minIfPresent(opts.bailout\x2C 1)) return lessThanOneError('bailout threshold')\n  if (minIfPresent(opts.connectionRate\x2C 1)) return lessThanOneError('connectionRate')\n  if (minIfPresent(opts.overallRate\x2C 1)) return lessThanOneError('bailout overallRate')\n  if (minIfPresent(opts.amount\x2C 1)) return lessThanOneError('amount')\n  if (minIfPresent(opts.maxConnectionRequests\x2C 1)) return lessThanOneError('maxConnectionRequests')\n  if (minIfPresent(opts.maxOverallRequests\x2C 1)) return lessThanOneError('maxOverallRequests')\n\n  if (opts.form) {\n    opts.method = opts.method || 'POST'\n  }\n\n  // fill in defaults after\n  opts = defaultOpts(opts)\n\n  if (opts.requests) {\n    if (opts.requests.some(r => !isValidFn(r.setupRequest))) {\n      return new Error('Invalid option setupRequest\x2C please provide a function (or file path when in workers mode)')\n    }\n\n    if (opts.requests.some(r => !isValidFn(r.onResponse))) {\n      return new Error('Invalid option onResponse\x2C please provide a function (or file path when in workers mode)')\n    }\n  }\n\n  if (!isValidFn(opts.setupClient)) {\n    return new Error('Invalid option setupClient\x2C please provide a function (or file path when in workers mode)')\n  }\n\n  if (!checkURL(opts.url) && !opts.socketPath) {\n    return new Error('url or socketPath option required')\n  }\n\n  if (typeof opts.duration === 'string') {\n    if (/[a-zA-Z]/.exec(opts.duration)) {\n      try {\n        opts.duration = timestring(opts.duration)\n      } catch (error) {\n        return error\n      }\n    } else {\n      opts.duration = Number(opts.duration.trim())\n    }\n  }\n\n  if (typeof opts.duration !== 'number') {\n    return new Error('duration entered was in an invalid format')\n  }\n\n  if (opts.duration < 0) {\n    return new Error('duration can not be less than 0')\n  }\n\n  if (opts.expectBody && opts.requests !== defaultOptions.requests) {\n    return new Error('expectBody cannot be used in conjunction with requests')\n  }\n\n  if (opts.form) {\n    try {\n      // Parse multipart upfront to make sure there's no errors\n      const data = multipart(opts.form)\n      opts.form = opts.workers ? opts.form : data // but use parsed data only if not in workers mode\n    } catch (error) {\n      return error\n    }\n  }\n\n  opts.harRequests = new Map()\n  if (opts.har) {\n    try {\n      opts.harRequests = parseHAR(opts.har)\n    } catch (error) {\n      return error\n    }\n  }\n\n  if (opts.connections < 1) return lessThanOneError('connections')\n  if (opts.pipelining < 1) return lessThanOneError('pipelining factor')\n  if (opts.timeout < 1) return greaterThanZeroError('timeout')\n\n  if (opts.ignoreCoordinatedOmission && !opts.connectionRate && !opts.overallRate) {\n    return new Error('ignoreCoordinatedOmission makes no sense without connectionRate or overallRate')\n  }\n\n  if (opts.forever && cbPassedIn) {\n    return new Error('should not use the callback parameter when the `forever` option is set to true. Use the `done` event on this event emitter')\n  }\n\n  if (opts.forever && opts.workers) {\n    return new Error('Using `forever` option isn\\'t currently supported with workers')\n  }\n\n  return opts\n}\n
code-source-info,0x17d30551ad46,224,0,4756,C0O0C4O4756,,
tick,0x100e1c83c,175041,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,10,175083,0x17d30551b08e,172, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:1:1,0x17d30551acb0,~
code-source-info,0x17d30551b08e,224,0,4756,C0O0C51O37C57O37C61O37C63O84C69O84C73O84C75O127C81O127C86O114C92O162C98O162C102O162C104O206C110O206C115O193C121O257C127O257C132O236C138O294C142O294C144O392C148O392C150O477C154O477C156O554C160O554C162O1430C166O1445C171O4755,,
code-creation,Function,4,175166,0x2f3ebe1f2920,2560,wasm-function[167],0x151f171c7,*
code-creation,Function,4,175166,0x2f3ebe1f3320,2560,wasm-function[146],0x151f171b2,*
code-creation,Function,4,175166,0x2f3ebe1f3d20,1184,wasm-function[294],0x151f17246,*
code-creation,Function,4,175166,0x2f3ebe1f41c0,512,wasm-function[293],0x151f17245,*
code-creation,Function,4,175208,0x2f3ebe1f43c0,736,wasm-function[292],0x151f17244,*
code-creation,Function,4,175208,0x2f3ebe1f46a0,352,wasm-function[291],0x151f17243,*
code-creation,Function,4,175208,0x2f3ebe1f4800,2560,wasm-function[122],0x151f1719a,*
code-creation,Function,4,175250,0x2f3ebe1f5200,512,wasm-function[290],0x151f17242,*
code-creation,Function,4,175250,0x2f3ebe1f5400,2560,wasm-function[166],0x151f171c6,*
code-creation,Function,4,175250,0x2f3ebe1f5e00,288,wasm-function[289],0x151f17241,*
code-creation,Function,4,175291,0x2f3ebe1f5f20,2560,wasm-function[145],0x151f171b1,*
code-creation,Function,4,175291,0x2f3ebe1f6920,352,wasm-function[288],0x151f17240,*
code-creation,Function,4,175291,0x2f3ebe1f6a80,480,wasm-function[287],0x151f1723f,*
code-creation,Function,4,175291,0x2f3ebe1f6c60,704,wasm-function[286],0x151f1723e,*
code-creation,Function,4,175333,0x2f3ebe1f6f20,2560,wasm-function[121],0x151f17199,*
code-creation,Function,4,175333,0x2f3ebe1f7920,2560,wasm-function[165],0x151f171c5,*
code-creation,Function,4,175416,0x2f3ebe1f8320,2560,wasm-function[144],0x151f171b0,*
code-creation,Function,4,175416,0x2f3ebe1f8d20,1536,wasm-function[285],0x151f1723d,*
code-creation,Function,4,175541,0x2f3ebe1f9320,352,wasm-function[284],0x151f1723c,*
code-creation,Function,4,175625,0x2f3ebe1f9480,352,wasm-function[283],0x151f1723b,*
code-creation,Function,4,175791,0x2f3ebe1f95e0,352,wasm-function[282],0x151f1723a,*
code-creation,Function,4,175833,0x2f3ebe1f9740,352,wasm-function[281],0x151f17239,*
code-creation,Function,4,175833,0x2f3ebe1f98a0,1568,wasm-function[120],0x151f17198,*
code-creation,Function,4,175833,0x2f3ebe1f9ec0,352,wasm-function[280],0x151f17238,*
code-creation,Function,4,175875,0x2f3ebe1fa020,1568,wasm-function[164],0x151f171c4,*
code-creation,Eval,10,175875,0x17d30551bace,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/defaultOptions.js:1:1,0x17d30551b978,~
script-source,225,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/defaultOptions.js,'use strict'\n\nconst defaultOptions = {\n  headers: {}\x2C\n  method: 'GET'\x2C\n  duration: 10\x2C\n  connections: 10\x2C\n  pipelining: 1\x2C\n  timeout: 10\x2C\n  maxConnectionRequests: 0\x2C\n  maxOverallRequests: 0\x2C\n  connectionRate: 0\x2C\n  overallRate: 0\x2C\n  amount: 0\x2C\n  reconnectRate: 0\x2C\n  forever: false\x2C\n  idReplacement: false\x2C\n  requests: [{}]\x2C\n  servername: undefined\x2C\n  excludeErrorStats: false\n}\n\nmodule.exports = defaultOptions\n
code-source-info,0x17d30551bace,225,0,410,C0O0C4O410,,
code-creation,Function,10,175916,0x17d30551bcf6,21, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/defaultOptions.js:1:1,0x17d30551ba38,~
code-source-info,0x17d30551bcf6,225,0,410,C0O37C6O337C13O378C15O393C20O409,,
code-creation,Function,4,176083,0x2f3ebe1fa640,352,wasm-function[279],0x151f17237,*
code-creation,Function,4,176166,0x2f3ebe1fa7a0,352,wasm-function[278],0x151f17236,*
code-creation,Function,4,176250,0x2f3ebe1fa900,2560,wasm-function[143],0x151f171af,*
code-creation,Function,4,176250,0x2f3ebe1fb300,352,wasm-function[277],0x151f17235,*
tick,0x1a3726538,176250,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0d3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,176333,0x17d30551c966,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/timestring/index.js:1:1,0x17d30551c7b0,~
script-source,226,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/timestring/index.js,/**\n * Exports\n */\n\nmodule.exports = parseTimestring\n\n/**\n * Default options to use when parsing a timestring\n *\n * @type {Object}\n */\n\nconst DEFAULT_OPTS = {\n  hoursPerDay: 24\x2C\n  daysPerWeek: 7\x2C\n  weeksPerMonth: 4\x2C\n  monthsPerYear: 12\x2C\n  daysPerYear: 365.25\n}\n\n/**\n * Map of accepted strings to unit\n *\n * @type {Object}\n */\n\nconst UNIT_MAP = {\n  ms: ['ms'\x2C 'milli'\x2C 'millisecond'\x2C 'milliseconds']\x2C\n  s: ['s'\x2C 'sec'\x2C 'secs'\x2C 'second'\x2C 'seconds']\x2C\n  m: ['m'\x2C 'min'\x2C 'mins'\x2C 'minute'\x2C 'minutes']\x2C\n  h: ['h'\x2C 'hr'\x2C 'hrs'\x2C 'hour'\x2C 'hours']\x2C\n  d: ['d'\x2C 'day'\x2C 'days']\x2C\n  w: ['w'\x2C 'week'\x2C 'weeks']\x2C\n  mth: ['mon'\x2C 'mth'\x2C 'mths'\x2C 'month'\x2C 'months']\x2C\n  y: ['y'\x2C 'yr'\x2C 'yrs'\x2C 'year'\x2C 'years']\n}\n\n/**\n * Parse a timestring\n *\n * @param  {String} string\n * @param  {String} returnUnit\n * @param  {Object} opts\n * @return {Number}\n */\n\nfunction parseTimestring (string\x2C returnUnit\x2C opts) {\n  opts = Object.assign({}\x2C DEFAULT_OPTS\x2C opts || {})\n\n  let totalSeconds = 0\n  let unitValues = getUnitValues(opts)\n  let groups = string\n    .toLowerCase()\n    .replace(/[^.\\w+-]+/g\x2C '')\n    .match(/[-+]?[0-9.]+[a-z]+/g)\n\n  if (groups === null) {\n    throw new Error(`The string [${string}] could not be parsed by timestring`)\n  }\n\n  groups.forEach(group => {\n    let value = group.match(/[0-9.]+/g)[0]\n    let unit = group.match(/[a-z]+/g)[0]\n\n    totalSeconds += getSeconds(value\x2C unit\x2C unitValues)\n  })\n\n  if (returnUnit) {\n    return convert(totalSeconds\x2C returnUnit\x2C unitValues)\n  }\n\n  return totalSeconds\n}\n\n/**\n * Get unit values based on the passed options\n *\n * @param   {Object} opts\n * @returns {Object}\n */\n\nfunction getUnitValues (opts) {\n  let unitValues = {\n    ms: 0.001\x2C\n    s: 1\x2C\n    m: 60\x2C\n    h: 3600\n  }\n\n  unitValues.d = opts.hoursPerDay * unitValues.h\n  unitValues.w = opts.daysPerWeek * unitValues.d\n  unitValues.mth = (opts.daysPerYear / opts.monthsPerYear) * unitValues.d\n  unitValues.y = opts.daysPerYear * unitValues.d\n\n  return unitValues\n}\n\n/**\n * Get the key for a unit\n *\n * @param   {String} unit\n * @returns {String}\n */\n\nfunction getUnitKey (unit) {\n  for (let key of Object.keys(UNIT_MAP)) {\n    if (UNIT_MAP[key].indexOf(unit) > -1) {\n      return key\n    }\n  }\n\n  throw new Error(`The unit [${unit}] is not supported by timestring`)\n}\n\n/**\n *  Get the number of seconds for a value\x2C based on the unit\n *\n * @param   {Number} value\n * @param   {String} unit\n * @param   {Object} unitValues\n * @returns {Number}\n */\n\nfunction getSeconds (value\x2C unit\x2C unitValues) {\n  return value * unitValues[getUnitKey(unit)]\n}\n\n/**\n * Convert a value from its existing unit to a new unit\n *\n * @param   {Number} value\n * @param   {String} unit\n * @param   {Object} unitValues\n * @returns {Number}\n */\n\nfunction convert (value\x2C unit\x2C unitValues) {\n  return value / unitValues[getUnitKey(unit)]\n}\n
code-source-info,0x17d30551c966,226,0,2797,C0O0C4O2797,,
code-creation,Function,10,176458,0x17d30551cf2e,60, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/timestring/index.js:1:1,0x17d30551c8d0,~
code-source-info,0x17d30551cf2e,226,0,2797,C0O0C40O20C42O35C46O157C50O157C52O344C56O344C59O2796,,
code-creation,Function,4,176458,0x2f3ebe1fb460,352,wasm-function[276],0x151f17234,*
code-creation,Function,4,176500,0x2f3ebe1fb5c0,352,wasm-function[275],0x151f17233,*
code-creation,Function,4,176500,0x2f3ebe1fb720,256,wasm-function[274],0x151f17232,*
code-creation,Function,4,176541,0x2f3ebe1fb820,352,wasm-function[273],0x151f17231,*
code-creation,Eval,10,176750,0x17d30551d856,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js:1:1,0x17d30551d700,~
script-source,227,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js,'use strict'\n\n/**\n * check the url is not an empty string or empty array\n * @param url\n */\nfunction checkURL (url) {\n  return (typeof url === 'string' && url) ||\n    (Array.isArray(url) && url.length > 0)\n}\n\n/**\n *\n * @param url\n * @param asArray\n * @returns\n */\nfunction ofURL (url\x2C asArray) {\n  if (Array.isArray(url)) return url\n\n  if (typeof url === 'string') {\n    return {\n      map (fn) {\n        if (asArray) return [fn(url)]\n        return fn(url)\n      }\n    }\n  }\n\n  throw new Error('url should only be a string or an array of string')\n}\n\nexports.checkURL = checkURL\nexports.ofURL = ofURL\n
code-source-info,0x17d30551d856,227,0,600,C0O0C4O600,,
code-creation,Function,10,176791,0x17d30551d9c6,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js:1:1,0x17d30551d7c0,~
code-source-info,0x17d30551d9c6,227,0,600,C0O0C10O550C12O567C16O578C18O592C23O599,,
code-creation,Function,4,177000,0x2f3ebe1fb980,1568,wasm-function[142],0x151f171ae,*
code-creation,Function,4,177000,0x2f3ebe1fbfa0,3232,wasm-function[119],0x151f17197,*
code-creation,Function,4,177000,0x2f3ebe1fcc40,1184,wasm-function[272],0x151f17230,*
code-creation,Eval,10,177041,0x17d30551e05e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/multipart.js:1:1,0x17d30551deb8,~
script-source,228,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/multipart.js,'use strict'\n\nconst { resolve\x2C basename } = require('path')\nconst { readFileSync } = require('fs')\nconst FormData = require('form-data')\n\nfunction getFormData (string) {\n  try {\n    return JSON.parse(string)\n  } catch (error) {\n    try {\n      const path = resolve(string)\n      const data = readFileSync(path\x2C 'utf8')\n      return JSON.parse(data)\n    } catch (error) {\n      throw new Error('Invalid JSON or file where to get form data')\n    }\n  }\n}\n\nmodule.exports = (options) => {\n  const obj = typeof options === 'string' ? getFormData(options) : options\n  const form = new FormData()\n  for (const key in obj) {\n    const type = obj[key] && obj[key].type\n    switch (type) {\n      case 'file': {\n        const path = obj[key] && obj[key].path\n        if (!path) {\n          throw new Error(`Missing key 'path' in form object for key '${key}'`)\n        }\n        const opts = obj[key] && obj[key].options\n        const buffer = readFileSync(path)\n        form.append(key\x2C buffer\x2C Object.assign({}\x2C {\n          filename: basename(path)\n        }\x2C opts))\n        break\n      }\n      case 'text': {\n        const value = obj[key] && obj[key].value\n        if (!value) {\n          throw new Error(`Missing key 'value' in form object for key '${key}'`)\n        }\n        form.append(key\x2C value)\n        break\n      }\n      default:\n        throw new Error('A \\'type\\' key with value \\'text\\' or \\'file\\' should be specified')\n    }\n  }\n  return form\n}\n
code-source-info,0x17d30551e05e,228,0,1451,C0O0C4O1451,,
code-creation,Function,10,177125,0x17d30551e20e,76, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/multipart.js:1:1,0x17d30551dfc8,~
code-source-info,0x17d30551e20e,228,0,1451,C0O0C23O44C26O44C31O22C37O31C43O85C46O85C51O68C57O116C60O116C64O116C66O453C70O468C75O1450,,
code-creation,Function,4,177166,0x2f3ebe1fd0e0,3232,wasm-function[163],0x151f171c3,*
code-creation,Function,4,177375,0x2f3ebe1fdd80,512,wasm-function[271],0x151f1722f,*
code-creation,Function,4,177500,0x2f3ebe1fdf80,736,wasm-function[270],0x151f1722e,*
code-creation,Function,4,177500,0x2f3ebe1fe260,1568,wasm-function[118],0x151f17196,*
tick,0x1a37263d4,177500,1,0x100cd0724,6,0x0,0x172aed06021d,0x172aed05fb4e,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,177625,0x2f3ebe1fe880,352,wasm-function[269],0x151f1722d,*
code-creation,Function,4,177666,0x2f3ebe1fe9e0,1568,wasm-function[162],0x151f171c2,*
code-creation,Eval,10,177875,0x17d30551f656,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/form_data.js:1:1,0x17d30551f440,~
script-source,229,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/form_data.js,var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData\x2C CombinedStream);\n\n/**\n * Create readable "multipart/form-data" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field\x2C value\x2C options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field\x2C value\x2C options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header\x2C value\x2C options);\n};\n\nFormData.prototype._trackLength = function(header\x2C value\x2C options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync()\x2C when length is known.\n  // e.g. for streaming directly from a remote server\x2C\n  // w/ a known file a size\x2C and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value\x2C callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity \u2013> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive\x2C starts with 0\n      callback(null\x2C value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path\x2C function(err\x2C stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null\x2C fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null\x2C +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response'\x2C function(response) {\n      value.pause();\n      callback(null\x2C +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field\x2C value\x2C options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value\x2C options);\n  var contentType = this._getContentType(value\x2C options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data'\x2C 'name="' + field + '"'].concat(contentDisposition || [])\x2C\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers\x2C options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value\x2C options) {\n\n  var filename\n    \x2C contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g\x2C '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename="' + filename + '"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value\x2C options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable\x2C browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-\x2C request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0\x2C len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer\x2C this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer\x2C Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2\x2C boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer\x2C Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer\x2C Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused\x2C there are 3 "internal" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this\x2C null\x2C knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure\x2C this._lengthRetriever\x2C function(err\x2C values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null\x2C knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params\x2C cb) {\n  var request\n    \x2C options\n    \x2C defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port\x2C\n      path: params.pathname\x2C\n      host: params.hostname\x2C\n      protocol: params.protocol\n    }\x2C defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params\x2C defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified\x2C fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err\x2C length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length'\x2C length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error\x2C responce) {\n        request.removeListener('error'\x2C callback);\n        request.removeListener('response'\x2C onResponse);\n\n        return cb.call(this\x2C error\x2C responce);\n      };\n\n      onResponse = callback.bind(this\x2C null);\n\n      request.on('error'\x2C callback);\n      request.on('response'\x2C onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error'\x2C err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n
code-source-info,0x17d30551f656,229,0,13713,C0O0C4O13713,,
code-creation,Function,10,178416,0x17d305520496,470, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/form_data.js:1:1,0x17d30551f5c0,~
code-source-info,0x17d
code-creation,Function,4,178458,0x2f3ebe1ff000,800,wasm-function[117],0x151f17195,*
code-creation,Function,4,178458,0x2f3ebe1ff320,800,wasm-function[161],0x151f171c1,*
code-creation,Function,4,178458,0x2f3ebe1ff640,512,wasm-function[268],0x151f1722c,*
code-creation,Function,4,178458,0x2f3ebe1ff840,512,wasm-function[116],0x151f17194,*
code-creation,Function,4,178458,0x2f3ebe1ffa40,3232,wasm-function[141],0x151f171ad,*
code-creation,Function,4,178458,0x2f3ebe2006e0,512,wasm-function[160],0x151f171c0,*
code-creation,Function,4,178458,0x2f3ebe2008e0,288,wasm-function[267],0x151f1722b,*
code-creation,Function,4,178500,0x2f3ebe200a00,768,wasm-function[115],0x151f17193,*
code-creation,Function,4,178500,0x2f3ebe200d00,768,wasm-function[159],0x151f171bf,*
code-creation,Function,4,178500,0x2f3ebe201000,352,wasm-function[266],0x151f1722a,*
code-creation,Function,4,178500,0x2f3ebe201160,1568,wasm-function[140],0x151f171ac,*
code-creation,Function,4,178500,0x2f3ebe201780,928,wasm-function[114],0x151f17192,*
code-creation,Function,4,178666,0x2f3ebe201b20,480,wasm-function[265],0x151f17229,*
code-creation,Function,4,178666,0x2f3ebe201d00,800,wasm-function[139],0x151f171ab,*
tick,0x1013d40e4,178791,0,0x0,0,0x172aed04cd64,0x172aed04c955,0x172aed04d706,0x172aed04d2fa,0x172aed068c06,0x17d3055204a4,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,178791,0x2f3ebe202020,512,wasm-function[138],0x151f171aa,*
code-creation,Function,4,178833,0x2f3ebe202220,704,wasm-function[264],0x151f17228,*
code-creation,Function,4,179000,0x2f3ebe2024e0,768,wasm-function[137],0x151f171a9,*
code-creation,Eval,10,179125,0x17d3055223de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/combined-stream/lib/combined_stream.js:1:1,0x17d305522258,~
script-source,230,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/combined-stream/lib/combined_stream.js,var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream\x2C Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream\x2C {\n        maxDataSize: Infinity\x2C\n        pauseStream: this.pauseStreams\x2C\n      });\n      stream.on('data'\x2C this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest\x2C options) {\n  Stream.prototype.pipe.call(this\x2C dest\x2C options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data'\x2C this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end'\x2C this._getNext.bind(this));\n    stream.pipe(this\x2C {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error'\x2C function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data'\x2C data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error'\x2C err);\n};\n
code-source-info,0x17d3055223de,230,0,4687,C0O0C4O4687,,
code-creation,Function,10,179333,0x17d305522fce,329, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/combined-stream/lib/combined_stream.js:1:1,0x17d305522348,~
code-source-info,0x17d305522fce,230,0,4687,C0O0C11O11C14O11C19O41C22O41C27O58C31O41C33O87C36O87C40O87C42O115C44O130C48O455C59O455C65O490C72O512C76O709C83O737C87O946C90O961C99O978C103O1494C106O1509C115O1524C119O1639C122O1654C131O1673C135O1995C138O2010C147O2033C151O2530C154O2545C163O2565C167O2867C170O2882C179O2906C183O3019C186O3034C195O3050C199O3100C202O3115C211O3131C215O3344C218O3359C227O3376C231O3651C234O3666C243O3680C247O3736C250O3751C259O3769C263O3827C266O3842C275O3859C279O3955C282O3970C291O3995C295O4232C298O4247C307O4273C311O4586C314O4601C323O4622C328O4686,,
code-creation,Function,4,179375,0x2f3ebe2027e0,2304,wasm-function[102],0x151f17186,*
code-creation,Function,4,179375,0x2f3ebe2030e0,928,wasm-function[136],0x151f171a8,*
code-creation,Function,4,179375,0x2f3ebe203480,1536,wasm-function[263],0x151f17227,*
code-creation,Function,4,179375,0x2f3ebe203a80,192,wasm-function[45],0x151f1714d,*
code-creation,Function,4,179375,0x2f3ebe203b40,896,wasm-function[113],0x151f17191,*
code-creation,Function,4,179416,0x2f3ebe203ec0,352,wasm-function[262],0x151f17226,*
code-creation,LazyCompile,10,179458,0x17d305524066,5,get node:stream:53:6,0xe898a5fff30,~
script-source,43,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst pipeline = require('internal/streams/pipeline');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\nStream.isDisturbed = require('internal/streams/utils').isDisturbed;\nStream.Readable = require('internal/streams/readable');\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isUint8Array = require('internal/util/types').isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x17d305524066,43,2170,2199,C0O2179C4O2195,,
code-creation,Function,4,179583,0x2f3ebe204020,352,wasm-function[261],0x151f17225,*
code-creation,Function,4,179625,0x2f3ebe204180,2304,wasm-function[101],0x151f17185,*
code-creation,Function,4,179625,0x2f3ebe204a80,352,wasm-function[260],0x151f17224,*
code-creation,Function,4,179833,0x2f3ebe204be0,352,wasm-function[259],0x151f17223,*
code-creation,Function,4,179833,0x2f3ebe204d40,352,wasm-function[258],0x151f17222,*
code-creation,Function,4,179833,0x2f3ebe204ea0,352,wasm-function[257],0x151f17221,*
code-creation,Function,4,179875,0x2f3ebe205000,352,wasm-function[256],0x151f17220,*
code-creation,Function,4,179916,0x2f3ebe205160,1760,wasm-function[112],0x151f17190,*
code-creation,Function,4,179958,0x2f3ebe205840,352,wasm-function[255],0x151f1721f,*
code-creation,Function,4,180083,0x2f3ebe2059a0,352,wasm-function[254],0x151f1721e,*
tick,0x1a3726538,180083,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d305522ff2,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204a4,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,180166,0x17d305524b36,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/delayed-stream/lib/delayed_stream.js:1:1,0x17d3055249d0,~
script-source,231,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/delayed-stream/lib/delayed_stream.js,var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream\x2C Stream);\n\nDelayedStream.create = function(source\x2C options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source\x2C arguments);\n  };\n\n  source.on('error'\x2C function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype\x2C 'readable'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source\x2C arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this\x2C args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this\x2C arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this\x2C args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error'\x2C new Error(message));\n};\n
code-source-info,0x17d305524b36,231,0,2319,C0O0C4O2319,,
code-creation,Function,10,180291,0x17d3055252be,188, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/delayed-stream/lib/delayed_stream.js:1:1,0x17d305524aa0,~
code-source-info,0x17d3055252be,231,0,2319,C0O0C10O13C13O13C18O30C22O13C24O50C27O50C32O68C34O83C38O331C46O331C52O365C56O386C60O872C64O879C69O908C82O982C90O879C95O1051C104O1073C108O1170C117O1187C121O1294C130O1310C134O1366C143O1384C147O1570C156O1585C160O1703C169O1725C173O1981C182O2019C187O2318,,
code-creation,Function,4,180291,0x2f3ebe205b00,352,wasm-function[253],0x151f1721d,*
code-creation,Function,4,180291,0x2f3ebe205c60,1248,wasm-function[111],0x151f1718f,*
code-creation,Function,4,180291,0x2f3ebe206140,2560,wasm-function[89],0x151f17179,*
code-creation,LazyCompile,10,180375,0x17d305525b6e,139,inherits node:util:232:18,0xe898a5f8880,~
script-source,39,node:util,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  NumberIsSafeInteger\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypePadStart\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_FALSY_VALUE_REJECTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst {\n  format\x2C\n  formatWithOptions\x2C\n  inspect\n} = require('internal/util/inspect');\nconst { debuglog } = require('internal/util/debuglog');\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\nconst { isBuffer } = require('buffer').Buffer;\nconst types = require('internal/util/types');\n\nconst {\n  deprecate\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName: internalErrorName\x2C\n  promisify\x2C\n  toUSVString\x2C\n} = require('internal/util');\n\nlet internalDeepEqual;\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is boolean}\n */\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is null}\n */\nfunction isNull(arg) {\n  return arg === null;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is (null | undefined)}\n */\nfunction isNullOrUndefined(arg) {\n  return arg === null || arg === undefined;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is number}\n */\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\n/**\n * @param {any} arg\n * @returns {arg is string}\n */\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is symbol}\n */\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is undefined}\n */\nfunction isUndefined(arg) {\n  return arg === undefined;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {a is NonNullable<object>}\n */\nfunction isObject(arg) {\n  return arg !== null && typeof arg === 'object';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} e\n * @returns {arg is Error}\n */\nfunction isError(e) {\n  return ObjectPrototypeToString(e) === '[object Error]' || e instanceof Error;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is Function}\n */\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is (boolean | null | number | string | symbol | undefined)}\n */\nfunction isPrimitive(arg) {\n  return arg === null ||\n         (typeof arg !== 'object' && typeof arg !== 'function');\n}\n\n/**\n * @param {number} n\n * @returns {string}\n */\nfunction pad(n) {\n  return StringPrototypePadStart(n.toString()\x2C 2\x2C '0');\n}\n\nconst months = ['Jan'\x2C 'Feb'\x2C 'Mar'\x2C 'Apr'\x2C 'May'\x2C 'Jun'\x2C 'Jul'\x2C 'Aug'\x2C 'Sep'\x2C\n                'Oct'\x2C 'Nov'\x2C 'Dec'];\n\n/**\n * @returns {string}  26 Feb 16:19:34\n */\nfunction timestamp() {\n  const d = new Date();\n  const t = ArrayPrototypeJoin([\n    pad(DatePrototypeGetHours(d))\x2C\n    pad(DatePrototypeGetMinutes(d))\x2C\n    pad(DatePrototypeGetSeconds(d))\x2C\n  ]\x2C ':');\n  return `${DatePrototypeGetDate(d)} ${months[DatePrototypeGetMonth(d)]} ${t}`;\n}\n\nlet console;\n/**\n * Log is just a thin wrapper to console.log that prepends a timestamp\n * @deprecated since v6.0.0\n * @type {(...args: any[]) => void}\n */\nfunction log(...args) {\n  if (!console) {\n    console = require('internal/console/global');\n  }\n  console.log('%s - %s'\x2C timestamp()\x2C format(...args));\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {Function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {Function} superCtor Constructor function to inherit prototype from.\n * @throws {TypeError} Will error if either constructor is null\x2C or if\n *     the super constructor lacks a prototype.\n */\nfunction inherits(ctor\x2C superCtor) {\n\n  if (ctor === undefined || ctor === null)\n    throw new ERR_INVALID_ARG_TYPE('ctor'\x2C 'Function'\x2C ctor);\n\n  if (superCtor === undefined || superCtor === null)\n    throw new ERR_INVALID_ARG_TYPE('superCtor'\x2C 'Function'\x2C superCtor);\n\n  if (superCtor.prototype === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype'\x2C\n                                   'Object'\x2C superCtor.prototype);\n  }\n  ObjectDefineProperty(ctor\x2C 'super_'\x2C {\n    value: superCtor\x2C\n    writable: true\x2C\n    configurable: true\n  });\n  ObjectSetPrototypeOf(ctor.prototype\x2C superCtor.prototype);\n}\n\n/**\n * @deprecated since v6.0.0\n * @template T\n * @template S\n * @param {T} target\n * @param {S} source\n * @returns {S extends null ? T : (T & S)}\n */\nfunction _extend(target\x2C source) {\n  // Don't do anything if source isn't an object\n  if (source === null || typeof source !== 'object') return target;\n\n  const keys = ObjectKeys(source);\n  let i = keys.length;\n  while (i--) {\n    target[keys[i]] = source[keys[i]];\n  }\n  return target;\n}\n\nconst callbackifyOnRejected = hideStackFrames((reason\x2C cb) => {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means "no error\n  // occurred"\x2C we error-wrap so the callback consumer can distinguish between\n  // "the promise rejected with null" or "the promise fulfilled with undefined".\n  if (!reason) {\n    reason = new ERR_FALSY_VALUE_REJECTION(reason);\n  }\n  return cb(reason);\n});\n\n/**\n * @template {(...args: any[]) => Promise<any>} T\n * @param {T} original\n * @returns {T extends (...args: infer TArgs) => Promise<infer TReturn> ?\n *   ((...params: [...TArgs\x2C ((err: Error\x2C ret: TReturn) => any)]) => void) :\n *   never\n * }\n */\nfunction callbackify(original) {\n  validateFunction(original\x2C 'original');\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified(...args) {\n    const maybeCb = ArrayPrototypePop(args);\n    validateFunction(maybeCb\x2C 'last argument');\n    const cb = FunctionPrototypeBind(maybeCb\x2C this);\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack\x2C `uncaughtException`\x2C `async_hooks`)\n    ReflectApply(original\x2C this\x2C args)\n      .then((ret) => process.nextTick(cb\x2C null\x2C ret)\x2C\n            (rej) => process.nextTick(callbackifyOnRejected\x2C rej\x2C cb));\n  }\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  // It is possible to manipulate a functions `length` or `name` property. This\n  // guards against the manipulation.\n  if (typeof descriptors.length.value === 'number') {\n    descriptors.length.value++;\n  }\n  if (typeof descriptors.name.value === 'string') {\n    descriptors.name.value += 'Callbackified';\n  }\n  ObjectDefineProperties(callbackified\x2C descriptors);\n  return callbackified;\n}\n\n/**\n * @param {number} err\n * @returns {string}\n */\nfunction getSystemErrorName(err) {\n  validateNumber(err\x2C 'err');\n  if (err >= 0 || !NumberIsSafeInteger(err)) {\n    throw new ERR_OUT_OF_RANGE('err'\x2C 'a negative integer'\x2C err);\n  }\n  return internalErrorName(err);\n}\n\n// Keep the `exports =` so that various functions can still be monkeypatched\nmodule.exports = {\n  _errnoException: errnoException\x2C\n  _exceptionWithHostPort: exceptionWithHostPort\x2C\n  _extend\x2C\n  callbackify\x2C\n  debug: debuglog\x2C\n  debuglog\x2C\n  deprecate\x2C\n  format\x2C\n  formatWithOptions\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  inherits\x2C\n  inspect\x2C\n  isArray: ArrayIsArray\x2C\n  isBoolean\x2C\n  isBuffer\x2C\n  isDeepStrictEqual(a\x2C b) {\n    if (internalDeepEqual === undefined) {\n      internalDeepEqual = require('internal/util/comparisons')\n        .isDeepStrictEqual;\n    }\n    return internalDeepEqual(a\x2C b);\n  }\x2C\n  isNull\x2C\n  isNullOrUndefined\x2C\n  isNumber\x2C\n  isString\x2C\n  isSymbol\x2C\n  isUndefined\x2C\n  isRegExp: types.isRegExp\x2C\n  isObject\x2C\n  isDate: types.isDate\x2C\n  isError\x2C\n  isFunction\x2C\n  isPrimitive\x2C\n  log\x2C\n  promisify\x2C\n  toUSVString\x2C\n  TextDecoder\x2C\n  TextEncoder\x2C\n  types\n};\n
code-source-info,0x17d305525b6e,39,5781,6380,C0O5804C8O5849C24O5855C29O5849C30O5910C38O5965C54O5971C59O5965C60O6050C66O6081C77O6190C84O6087C89O6081C90O6208C98O6229C105O6258C112O6208C117O6320C122O6346C127O6367C132O6320C138O6379,,
code-creation,Function,4,180791,0x2f3ebe206b40,256,wasm-function[252],0x151f1721c,*
code-creation,Function,4,180791,0x2f3ebe206c40,512,wasm-function[110],0x151f1718e,*
code-creation,Function,4,180791,0x2f3ebe206e40,2304,wasm-function[100],0x151f17184,*
code-creation,Function,4,180791,0x2f3ebe207740,576,wasm-function[109],0x151f1718d,*
code-creation,Function,4,180791,0x2f3ebe207980,352,wasm-function[251],0x151f1721b,*
code-creation,Function,4,180791,0x2f3ebe207ae0,544,wasm-function[108],0x151f1718c,*
code-creation,Function,4,180833,0x2f3ebe207d00,960,wasm-function[99],0x151f17183,*
code-creation,Function,4,180833,0x2f3ebe2080c0,480,wasm-function[107],0x151f1718b,*
code-creation,Eval,10,180958,0x17d305527506,5, node:http:1:1,0x17d305527350,~
script-source,232,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst httpAgent = require('_http_agent');\nconst { ClientRequest } = require('_http_client');\nconst { methods } = require('_http_common');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n} = require('_http_outgoing');\nconst {\n  _connectionListener\x2C\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\n} = require('_http_server');\nlet maxHeaderSize;\n\n/**\n * Returns a new instance of `http.Server`.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n/**\n * @typedef {Object} HTTPRequestOptions\n * @property {httpAgent.Agent | boolean} [agent]\n * @property {string} [auth]\n * @property {Function} [createConnection]\n * @property {number} [defaultPort]\n * @property {number} [family]\n * @property {Object} [headers]\n * @property {number} [hints]\n * @property {string} [host]\n * @property {string} [hostname]\n * @property {boolean} [insecureHTTPParser]\n * @property {string} [localAddress]\n * @property {number} [localPort]\n * @property {Function} [lookup]\n * @property {number} [maxHeaderSize]\n * @property {string} [method]\n * @property {string} [path]\n * @property {number} [port]\n * @property {string} [protocol]\n * @property {boolean} [setHost]\n * @property {string} [socketPath]\n * @property {number} [timeout]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * Makes an HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction request(url\x2C options\x2C cb) {\n  return new ClientRequest(url\x2C options\x2C cb);\n}\n\n/**\n * Makes a `GET` HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(url\x2C options\x2C cb) {\n  const req = request(url\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  _connectionListener\x2C\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods))\x2C\n  STATUS_CODES\x2C\n  Agent: httpAgent.Agent\x2C\n  ClientRequest\x2C\n  IncomingMessage\x2C\n  OutgoingMessage\x2C\n  Server\x2C\n  ServerResponse\x2C\n  createServer\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  get\x2C\n  request\n};\n\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    if (maxHeaderSize === undefined) {\n      const { getOptionValue } = require('internal/options');\n      maxHeaderSize = getOptionValue('--max-http-header-size');\n    }\n\n    return maxHeaderSize;\n  }\n});\n\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return httpAgent.globalAgent;\n  }\x2C\n  set(value) {\n    httpAgent.globalAgent = value;\n  }\n});\n
code-source-info,0x17d305527506,232,0,4182,C0O0C4O4182,,
code-creation,Function,10,181125,0x17d305527a36,349, node:http:1:1,0x17d305527470,~
code-source-info,0x17d305527a36,232,0,4182,C0O0C37O1159C42O1182C47O1204C52O1262C58O1262C62O1262C64O1312C70O1312C75O1294C81O1357C87O1357C92O1345C97O1410C103O1410C108O1390C113O1512C119O1512C124O1447C129O1469C134O1492C139O1617C145O1617C150O1549C155O1572C160O1588C166O1598C171O1646C172O1646C174O3354C181O3375C185O3426C191O3407C201O3459C209O3492C219O3501C225O3518C231O3537C237O3556C243O3566C249O3584C255O3600C261O3622C267O3645C273O3652C279O3369C283O3692C298O3764C306O3664C311O4007C326O4077C334O4126C342O3979C348O4181,,
code-creation,Function,4,181166,0x2f3ebe2082a0,256,wasm-function[106],0x151f1718a,*
code-creation,Function,4,181166,0x2f3ebe2083a0,544,wasm-function[98],0x151f17182,*
code-creation,Function,4,181166,0x2f3ebe2085c0,448,wasm-function[105],0x151f17189,*
code-creation,Function,4,181166,0x2f3ebe208780,2560,wasm-function[88],0x151f17178,*
tick,0x10115d8e0,181291,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305527a70,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,181416,0x17d305528ba6,5, node:_http_agent:1:1,0x17d305528800,~
script-source,233,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSome\x2C\n  ArrayPrototypeSplice\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSubstr\x2C\n  Symbol\x2C\n} = primordials;\n\nconst net = require('net');\nconst EventEmitter = require('events');\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\nconst { AsyncResource } = require('async_hooks');\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\nconst {\n  codes: {\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst { once } = require('internal/util');\nconst {\n  validateNumber\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kOnKeylog = Symbol('onkeylog');\nconst kRequestOptions = Symbol('requestOptions');\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\n// New Agent code.\n\n// The largest departure from the previous implementation is that\n// an Agent instance holds connections for a variable number of host:ports.\n// Surprisingly\x2C this is still API compatible as far as third parties are\n// concerned. The only code that really notices the difference is the\n// request object.\n\n// Another departure is that all code related to HTTP parsing is in\n// ClientRequest.onSocket(). The Agent is now *strictly*\n// concerned with managing a connection pool.\n\nclass ReusedHandle {\n  constructor(type\x2C handle) {\n    this.type = type;\n    this.handle = handle;\n  }\n}\n\nfunction freeSocketErrorListener(err) {\n  const socket = this;\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\n  socket.destroy();\n  socket.emit('agentRemove');\n}\n\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this.defaultPort = 80;\n  this.protocol = 'http:';\n\n  this.options = { __proto__: null\x2C ...options };\n\n  // Don't confuse net and make it think that we're connecting to a pipe\n  this.options.path = null;\n  this.requests = ObjectCreate(null);\n  this.sockets = ObjectCreate(null);\n  this.freeSockets = ObjectCreate(null);\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\n  this.keepAlive = this.options.keepAlive || false;\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\n  this.scheduling = this.options.scheduling || 'lifo';\n  this.maxTotalSockets = this.options.maxTotalSockets;\n  this.totalSocketCount = 0;\n\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\n\n  if (this.maxTotalSockets !== undefined) {\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets');\n    if (this.maxTotalSockets <= 0 || NumberIsNaN(this.maxTotalSockets))\n      throw new ERR_OUT_OF_RANGE('maxTotalSockets'\x2C '> 0'\x2C\n                                 this.maxTotalSockets);\n  } else {\n    this.maxTotalSockets = Infinity;\n  }\n\n  this.on('free'\x2C (socket\x2C options) => {\n    const name = this.getName(options);\n    debug('agent.on(free)'\x2C name);\n\n    // TODO(ronag): socket.destroy(err) might have been called\n    // before coming here and have an 'error' scheduled. In the\n    // case of socket.destroy() below this 'error' has no handler\n    // and could cause unhandled exception.\n\n    if (!socket.writable) {\n      socket.destroy();\n      return;\n    }\n\n    const requests = this.requests[name];\n    if (requests && requests.length) {\n      const req = ArrayPrototypeShift(requests);\n      const reqAsyncRes = req[kRequestAsyncResource];\n      if (reqAsyncRes) {\n        // Run request within the original async context.\n        reqAsyncRes.runInAsyncScope(() => {\n          asyncResetHandle(socket);\n          setRequestSocket(this\x2C req\x2C socket);\n        });\n        req[kRequestAsyncResource] = null;\n      } else {\n        setRequestSocket(this\x2C req\x2C socket);\n      }\n      if (requests.length === 0) {\n        delete this.requests[name];\n      }\n      return;\n    }\n\n    // If there are no pending requests\x2C then put it in\n    // the freeSockets pool\x2C but only if we're allowed to do so.\n    const req = socket._httpMessage;\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\n      socket.destroy();\n      return;\n    }\n\n    const freeSockets = this.freeSockets[name] || [];\n    const freeLen = freeSockets.length;\n    let count = freeLen;\n    if (this.sockets[name])\n      count += this.sockets[name].length;\n\n    if (this.totalSocketCount > this.maxTotalSockets ||\n        count > this.maxSockets ||\n        freeLen >= this.maxFreeSockets ||\n        !this.keepSocketAlive(socket)) {\n      socket.destroy();\n      return;\n    }\n\n    this.freeSockets[name] = freeSockets;\n    socket[async_id_symbol] = -1;\n    socket._httpMessage = null;\n    this.removeSocket(socket\x2C options);\n\n    socket.once('error'\x2C freeSocketErrorListener);\n    ArrayPrototypePush(freeSockets\x2C socket);\n  });\n\n  // Don't emit keylog events unless there is a listener for them.\n  this.on('newListener'\x2C maybeEnableKeylog);\n}\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\n\nfunction maybeEnableKeylog(eventName) {\n  if (eventName === 'keylog') {\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\n    // Future sockets will listen on keylog at creation.\n    const agent = this;\n    this[kOnKeylog] = function onkeylog(keylog) {\n      agent.emit('keylog'\x2C keylog\x2C this);\n    };\n    // Existing sockets will start listening on keylog now.\n    const sockets = ObjectValues(this.sockets);\n    for (let i = 0; i < sockets.length; i++) {\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\n    }\n  }\n}\n\nAgent.defaultMaxSockets = Infinity;\n\nAgent.prototype.createConnection = net.createConnection;\n\n// Get the key for a given set of request options\nAgent.prototype.getName = function getName(options) {\n  let name = options.host || 'localhost';\n\n  name += ':';\n  if (options.port)\n    name += options.port;\n\n  name += ':';\n  if (options.localAddress)\n    name += options.localAddress;\n\n  // Pacify parallel/test-http-agent-getname by only appending\n  // the ':' when options.family is set.\n  if (options.family === 4 || options.family === 6)\n    name += `:${options.family}`;\n\n  if (options.socketPath)\n    name += `:${options.socketPath}`;\n\n  return name;\n};\n\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\n                                                 localAddress/* legacy */) {\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\n  if (typeof options === 'string') {\n    options = {\n      __proto__: null\x2C\n      host: options\x2C\n      port\x2C\n      localAddress\n    };\n  }\n\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  if (!this.sockets[name]) {\n    this.sockets[name] = [];\n  }\n\n  const freeSockets = this.freeSockets[name];\n  let socket;\n  if (freeSockets) {\n    while (freeSockets.length && freeSockets[0].destroyed) {\n      ArrayPrototypeShift(freeSockets);\n    }\n    socket = this.scheduling === 'fifo' ?\n      ArrayPrototypeShift(freeSockets) :\n      ArrayPrototypePop(freeSockets);\n    if (!freeSockets.length)\n      delete this.freeSockets[name];\n  }\n\n  const freeLen = freeSockets ? freeSockets.length : 0;\n  const sockLen = freeLen + this.sockets[name].length;\n\n  if (socket) {\n    asyncResetHandle(socket);\n    this.reuseSocket(socket\x2C req);\n    setRequestSocket(this\x2C req\x2C socket);\n    ArrayPrototypePush(this.sockets[name]\x2C socket);\n    this.totalSocketCount++;\n  } else if (sockLen < this.maxSockets &&\n             this.totalSocketCount < this.maxTotalSockets) {\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\n    // If we are under maxSockets create a new one.\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        setRequestSocket(this\x2C req\x2C socket);\n    });\n  } else {\n    debug('wait for socket');\n    // We are over limit so we'll add it to the queue.\n    if (!this.requests[name]) {\n      this.requests[name] = [];\n    }\n\n    // Used to create sockets for pending requests from different origin\n    req[kRequestOptions] = options;\n    // Used to capture the original async context.\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\n\n    ArrayPrototypePush(this.requests[name]\x2C req);\n  }\n};\n\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  options._agentKey = name;\n\n  debug('createConnection'\x2C name\x2C options);\n  options.encoding = null;\n\n  const oncreate = once((err\x2C s) => {\n    if (err)\n      return cb(err);\n    if (!this.sockets[name]) {\n      this.sockets[name] = [];\n    }\n    ArrayPrototypePush(this.sockets[name]\x2C s);\n    this.totalSocketCount++;\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\n    installListeners(this\x2C s\x2C options);\n    cb(null\x2C s);\n  });\n\n  const newSocket = this.createConnection(options\x2C oncreate);\n  if (newSocket)\n    oncreate(null\x2C newSocket);\n};\n\nfunction calculateServerName(options\x2C req) {\n  let servername = options.host;\n  const hostHeader = req.getHeader('host');\n  if (hostHeader) {\n    validateString(hostHeader\x2C 'options.headers.host');\n\n    // abc => abc\n    // abc:123 => abc\n    // [::1] => ::1\n    // [::1]:123 => ::1\n    if (StringPrototypeStartsWith(hostHeader\x2C '[')) {\n      const index = StringPrototypeIndexOf(hostHeader\x2C ']');\n      if (index === -1) {\n        // Leading '['\x2C but no ']'. Need to do something...\n        servername = hostHeader;\n      } else {\n        servername = StringPrototypeSubstr(hostHeader\x2C 1\x2C index - 1);\n      }\n    } else {\n      servername = StringPrototypeSplit(hostHeader\x2C ':'\x2C 1)[0];\n    }\n  }\n  // Don't implicitly set invalid (IP) servernames.\n  if (net.isIP(servername))\n    servername = '';\n  return servername;\n}\n\nfunction installListeners(agent\x2C s\x2C options) {\n  function onFree() {\n    debug('CLIENT socket onFree');\n    agent.emit('free'\x2C s\x2C options);\n  }\n  s.on('free'\x2C onFree);\n\n  function onClose(err) {\n    debug('CLIENT socket onClose');\n    // This is the only place where sockets get removed from the Agent.\n    // If you want to remove a socket from the pool\x2C just close it.\n    // All socket errors end in a close event anyway.\n    agent.removeSocket(s\x2C options);\n  }\n  s.on('close'\x2C onClose);\n\n  function onTimeout() {\n    debug('CLIENT socket onTimeout');\n\n    // Destroy if in free list.\n    // TODO(ronag): Always destroy\x2C even if not in free list.\n    const sockets = agent.freeSockets;\n    if (ArrayPrototypeSome(ObjectKeys(sockets)\x2C (name) =>\n      ArrayPrototypeIncludes(sockets[name]\x2C s)\n    )) {\n      return s.destroy();\n    }\n  }\n  s.on('timeout'\x2C onTimeout);\n\n  function onRemove() {\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    debug('CLIENT socket onRemove');\n    agent.removeSocket(s\x2C options);\n    s.removeListener('close'\x2C onClose);\n    s.removeListener('free'\x2C onFree);\n    s.removeListener('timeout'\x2C onTimeout);\n    s.removeListener('agentRemove'\x2C onRemove);\n  }\n  s.on('agentRemove'\x2C onRemove);\n\n  if (agent[kOnKeylog]) {\n    s.on('keylog'\x2C agent[kOnKeylog]);\n  }\n}\n\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\n  const name = this.getName(options);\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\n  const sets = [this.sockets];\n\n  // If the socket was destroyed\x2C remove it from the free buffers too.\n  if (!s.writable)\n    ArrayPrototypePush(sets\x2C this.freeSockets);\n\n  for (let sk = 0; sk < sets.length; sk++) {\n    const sockets = sets[sk];\n\n    if (sockets[name]) {\n      const index = ArrayPrototypeIndexOf(sockets[name]\x2C s);\n      if (index !== -1) {\n        ArrayPrototypeSplice(sockets[name]\x2C index\x2C 1);\n        // Don't leak\n        if (sockets[name].length === 0)\n          delete sockets[name];\n        this.totalSocketCount--;\n      }\n    }\n  }\n\n  let req;\n  if (this.requests[name] && this.requests[name].length) {\n    debug('removeSocket\x2C have a request\x2C make a socket');\n    req = this.requests[name][0];\n  } else {\n    // TODO(rickyes): this logic will not be FIFO across origins.\n    // There might be older requests in a different origin\x2C but\n    // if the origin which releases the socket has pending requests\n    // that will be prioritized.\n    const keys = ObjectKeys(this.requests);\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i];\n      // Check whether this specific origin is already at maxSockets\n      if (this.sockets[prop] && this.sockets[prop].length) break;\n      debug('removeSocket\x2C have a request with different origin\x2C' +\n        ' make a socket');\n      req = this.requests[prop][0];\n      options = req[kRequestOptions];\n      break;\n    }\n  }\n\n  if (req && options) {\n    req[kRequestOptions] = undefined;\n    // If we have pending requests and a socket gets closed make a new one\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        socket.emit('free');\n    });\n  }\n\n};\n\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\n  socket.unref();\n\n  const agentTimeout = this.options.timeout || 0;\n  if (socket.timeout !== agentTimeout) {\n    socket.setTimeout(agentTimeout);\n  }\n\n  return true;\n};\n\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\n  debug('have free socket');\n  socket.removeListener('error'\x2C freeSocketErrorListener);\n  req.reusedSocket = true;\n  socket.ref();\n};\n\nAgent.prototype.destroy = function destroy() {\n  const sets = [this.freeSockets\x2C this.sockets];\n  for (let s = 0; s < sets.length; s++) {\n    const set = sets[s];\n    const keys = ObjectKeys(set);\n    for (let v = 0; v < keys.length; v++) {\n      const setName = set[keys[v]];\n      for (let n = 0; n < setName.length; n++) {\n        setName[n].destroy();\n      }\n    }\n  }\n};\n\nfunction setRequestSocket(agent\x2C req\x2C socket) {\n  req.onSocket(socket);\n  const agentTimeout = agent.options.timeout || 0;\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\n    return;\n  }\n  socket.setTimeout(req.timeout);\n}\n\nfunction asyncResetHandle(socket) {\n  // Guard against an uninitialized or user supplied Socket.\n  const handle = socket._handle;\n  if (handle && typeof handle.asyncReset === 'function') {\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C socket));\n    socket[async_id_symbol] = handle.getAsyncId();\n  }\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent: new Agent()\n};\n
code-source-info,0x17d305528ba6,233,0,16460,C0O0C4O16460,,
code-creation,Function,10,182083,0x17d305529546,636, node:_http_agent:1:1,0x17d305528b10,~
code-source-info,0x17d305529546,233,0,16460,C0O0C137O1159C143O1185C149O1210C155O1231C161O1253C167O1276C173O1298C179O1322C185O1347C191O1362C197O1378C203O1392C208O1416C214O1432C220O1458C226O1482C232O1511C238O1536C243O1574C246O1574C250O1574C252O1611C255O1611C259O1611C261O1642C264O1642C269O1675C282O1676C288O1642C290O1747C293O1747C298O1729C304O1799C307O1799C312O1830C317O1779C323O1890C326O1890C331O1890C336O1863C342O1935C345O1935C350O1926C356O2026C359O2026C364O1971C370O1989C376O2006C382O2077C385O2077C389O2077C391O2121C394O2121C398O2121C400O2177C403O2177C407O2177C430O2707C432O6330C435O6357C443O6381C448O6330C453O6393C459O6393C464O6964C467O6990C470O6988C474O7001C477O7007C485O7040C489O7034C493O7109C496O7115C505O7133C509O7621C512O7627C521O7648C525O9844C528O9850C537O9873C541O13025C544O13031C553O13054C557O14893C560O14899C569O14925C573O15183C576O15189C585O15211C589O15384C592O15390C601O15408C605O16402C612O16423C619O16445C630O16417C635O16459,,
code-creation,Function,4,182166,0x2f3ebe209180,1120,wasm-function[250],0x151f1721a,*
code-creation,Function,4,182166,0x2f3ebe2095e0,1568,wasm-function[87],0x151f17177,*
code-creation,Function,4,182166,0x2f3ebe209c00,2240,wasm-function[104],0x151f17188,*
code-creation,Function,4,182166,0x2f3ebe20a6c0,2496,wasm-function[97],0x151f17181,*
code-creation,Function,4,182166,0x2f3ebe20a4c0,512,wasm-function[249],0x151f17219,*
code-creation,LazyCompile,10,182291,0x17d30552b24e,505,Agent node:_http_agent:93:15,0x17d305528c28,~
code-source-info,0x17d30552b24e
code-creation,Function,4,182333,0x2f3ebe20b080,736,wasm-function[248],0x151f17218,*
code-creation,Function,4,182375,0x2f3ebe20b360,1728,wasm-function[96],0x151f17180,*
code-creation,LazyCompile,10,182375,0x17d30552c846,75, node:internal/validators:127:39,0x30d75b99e38,~
code-source-info,0x17d30552c846,17,3681,4014,C0O3709C5O3714C12O3774C19O3800C22O3818C27O3800C36O3774C42O3921C47O3940C51O3955C67O3961C72O3955C74O4013,,
tick,0x10114ebc0,182541,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305527a7c,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,182750,0x17d30552d7e6,5, node:_http_client:1:1,0x17d30552d220,~
script-source,234,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsFinite\x2C\n  ObjectAssign\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSlice\x2C\n} = primordials;\n\nconst net = require('net');\nconst assert = require('internal/assert');\nconst { once } = require('internal/util');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  freeParser\x2C\n  parsers\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst { OutgoingMessage } = require('_http_outgoing');\nconst Agent = require('_http_agent');\nconst { Buffer } = require('buffer');\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\nconst { kOutHeaders\x2C kNeedDrain } = require('internal/http');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_HTTP_TOKEN\x2C\n  ERR_INVALID_PROTOCOL\x2C\n  ERR_UNESCAPED_CHARACTERS\n} = codes;\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst { getTimerDuration } = require('internal/timers');\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\n} = require('internal/dtrace');\n\nconst { addAbortSignal\x2C finished } = require('stream');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst kError = Symbol('kError');\n\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nfunction validateHost(host\x2C name) {\n  if (host !== null && host !== undefined && typeof host !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\n                                   host);\n  }\n  return host;\n}\n\nclass HTTPClientAsyncResource {\n  constructor(type\x2C req) {\n    this.type = type;\n    this.req = req;\n  }\n}\n\nfunction ClientRequest(input\x2C options\x2C cb) {\n  FunctionPrototypeCall(OutgoingMessage\x2C this);\n\n  if (typeof input === 'string') {\n    const urlStr = input;\n    input = urlToHttpOptions(new URL(urlStr));\n  } else if (input && input[searchParamsSymbol] &&\n             input[searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    input = urlToHttpOptions(input);\n  } else {\n    cb = options;\n    options = input;\n    input = null;\n  }\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = input || {};\n  } else {\n    options = ObjectAssign(input || {}\x2C options);\n  }\n\n  let agent = options.agent;\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\n  if (agent === false) {\n    agent = new defaultAgent.constructor();\n  } else if (agent === null || agent === undefined) {\n    if (typeof options.createConnection !== 'function') {\n      agent = defaultAgent;\n    }\n    // Explicitly pass through this statement as agent will not be used\n    // when createConnection is provided.\n  } else if (typeof agent.addRequest !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\n                                   agent);\n  }\n  this.agent = agent;\n\n  const protocol = options.protocol || defaultAgent.protocol;\n  let expectedProtocol = defaultAgent.protocol;\n  if (this.agent && this.agent.protocol)\n    expectedProtocol = this.agent.protocol;\n\n  if (options.path) {\n    const path = String(options.path);\n    if (RegExpPrototypeTest(INVALID_PATH_REGEX\x2C path))\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\n  }\n\n  if (protocol !== expectedProtocol) {\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\n  }\n\n  const defaultPort = options.defaultPort ||\n                    (this.agent && this.agent.defaultPort);\n\n  const port = options.port = options.port || defaultPort || 80;\n  const host = options.host = validateHost(options.hostname\x2C 'hostname') ||\n                            validateHost(options.host\x2C 'host') || 'localhost';\n\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\n\n  this.socketPath = options.socketPath;\n\n  if (options.timeout !== undefined)\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\n\n  const signal = options.signal;\n  if (signal) {\n    addAbortSignal(signal\x2C this);\n  }\n  let method = options.method;\n  const methodIsString = (typeof method === 'string');\n  if (method !== null && method !== undefined && !methodIsString) {\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\n  }\n\n  if (methodIsString && method) {\n    if (!checkIsHttpToken(method)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\n    }\n    method = this.method = StringPrototypeToUpperCase(method);\n  } else {\n    method = this.method = 'GET';\n  }\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined &&\n      typeof insecureHTTPParser !== 'boolean') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.insecureHTTPParser'\x2C 'boolean'\x2C insecureHTTPParser);\n  }\n  this.insecureHTTPParser = insecureHTTPParser;\n\n  this.path = options.path || '/';\n  if (cb) {\n    this.once('response'\x2C cb);\n  }\n\n  if (method === 'GET' ||\n      method === 'HEAD' ||\n      method === 'DELETE' ||\n      method === 'OPTIONS' ||\n      method === 'TRACE' ||\n      method === 'CONNECT') {\n    this.useChunkedEncodingByDefault = false;\n  } else {\n    this.useChunkedEncodingByDefault = true;\n  }\n\n  this._ended = false;\n  this.res = null;\n  this.aborted = false;\n  this.timeoutCb = null;\n  this.upgradeOrConnect = false;\n  this.parser = null;\n  this.maxHeadersCount = null;\n  this.reusedSocket = false;\n  this.host = host;\n  this.protocol = protocol;\n\n  if (this.agent) {\n    // If there is an agent we should default to Connection:keep-alive\x2C\n    // but only if the Agent will actually reuse the connection!\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\n    // there's never a case where this socket will actually be reused\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\n      this._last = true;\n      this.shouldKeepAlive = false;\n    } else {\n      this._last = false;\n      this.shouldKeepAlive = true;\n    }\n  }\n\n  const headersArray = ArrayIsArray(options.headers);\n  if (!headersArray) {\n    if (options.headers) {\n      const keys = ObjectKeys(options.headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        this.setHeader(key\x2C options.headers[key]);\n      }\n    }\n\n    if (host && !this.getHeader('host') && setHost) {\n      let hostHeader = host;\n\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\n      // in square brackets\x2C as defined by URI formatting\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\n      const posColon = StringPrototypeIndexOf(hostHeader\x2C ':');\n      if (posColon !== -1 &&\n          StringPrototypeIncludes(hostHeader\x2C ':'\x2C posColon + 1) &&\n          StringPrototypeCharCodeAt(hostHeader\x2C 0) !== 91/* '[' */) {\n        hostHeader = `[${hostHeader}]`;\n      }\n\n      if (port && +port !== defaultPort) {\n        hostHeader += ':' + port;\n      }\n      this.setHeader('Host'\x2C hostHeader);\n    }\n\n    if (options.auth && !this.getHeader('Authorization')) {\n      this.setHeader('Authorization'\x2C 'Basic ' +\n                     Buffer.from(options.auth).toString('base64'));\n    }\n\n    if (this.getHeader('expect')) {\n      if (this._header) {\n        throw new ERR_HTTP_HEADERS_SENT('render');\n      }\n\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                        this[kOutHeaders]);\n    }\n  } else {\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                      options.headers);\n  }\n\n  let optsWithoutSignal = options;\n  if (optsWithoutSignal.signal) {\n    optsWithoutSignal = ObjectAssign({}\x2C options);\n    delete optsWithoutSignal.signal;\n  }\n\n  // initiate connection\n  if (this.agent) {\n    this.agent.addRequest(this\x2C optsWithoutSignal);\n  } else {\n    // No agent\x2C default to Connection:close.\n    this._last = true;\n    this.shouldKeepAlive = false;\n    if (typeof optsWithoutSignal.createConnection === 'function') {\n      const oncreate = once((err\x2C socket) => {\n        if (err) {\n          process.nextTick(() => this.emit('error'\x2C err));\n        } else {\n          this.onSocket(socket);\n        }\n      });\n\n      try {\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal\x2C\n                                                             oncreate);\n        if (newSocket) {\n          oncreate(null\x2C newSocket);\n        }\n      } catch (err) {\n        oncreate(err);\n      }\n    } else {\n      debug('CLIENT use net.createConnection'\x2C optsWithoutSignal);\n      this.onSocket(net.createConnection(optsWithoutSignal));\n    }\n  }\n}\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\n\nClientRequest.prototype._finish = function _finish() {\n  DTRACE_HTTP_CLIENT_REQUEST(this\x2C this.socket);\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish\x2C this);\n};\n\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                    this[kOutHeaders]);\n};\n\nClientRequest.prototype.abort = function abort() {\n  if (this.aborted) {\n    return;\n  }\n  this.aborted = true;\n  process.nextTick(emitAbortNT\x2C this);\n  this.destroy();\n};\n\nClientRequest.prototype.destroy = function destroy(err) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  // If we're aborting\x2C we don't care about any more response data.\n  if (this.res) {\n    this.res._dump();\n  }\n\n  this[kError] = err;\n  this.socket?.destroy(err);\n\n  return this;\n};\n\nfunction emitAbortNT(req) {\n  req.emit('abort');\n}\n\nfunction ondrain() {\n  const msg = this._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketCloseListener() {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('HTTP socket close');\n\n  // Pull through final chunk\x2C if anything is buffered.\n  // the ondata function will handle it properly\x2C and this\n  // is a no-op if no final chunk remains.\n  socket.read();\n\n  // NOTE: It's important to get parser here\x2C because it could be freed by\n  // the `socketOnData`.\n  const parser = socket.parser;\n  const res = req.res;\n\n  req.destroyed = true;\n  if (res) {\n    // Socket closed before we emitted 'end' below.\n    if (!res.complete) {\n      res.destroy(connResetException('aborted'));\n    }\n    req._closed = true;\n    req.emit('close');\n    if (!res.aborted && res.readable) {\n      res.push(null);\n    }\n  } else {\n    if (!req.socket._hadError) {\n      // This socket error fired before we started to\n      // receive a response. The error needs to\n      // fire on the request.\n      req.socket._hadError = true;\n      req.emit('error'\x2C connResetException('socket hang up'));\n    }\n    req._closed = true;\n    req.emit('close');\n  }\n\n  // Too bad.  That output wasn't getting written.\n  // This is pretty terrible that it doesn't raise an error.\n  // Fixed better in v0.10\n  if (req.outputData)\n    req.outputData.length = 0;\n\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction socketErrorListener(err) {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\n\n  if (req) {\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req.socket._hadError = true;\n    req.emit('error'\x2C err);\n  }\n\n  const parser = socket.parser;\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n\n  // Ensure that no further data will come out of the socket\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n  socket.destroy();\n}\n\nfunction socketOnEnd() {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  if (!req.res && !req.socket._hadError) {\n    // If we don't have a response then we know that the socket\n    // ended prematurely and we need to emit an error on the request.\n    req.socket._hadError = true;\n    req.emit('error'\x2C connResetException('socket hang up'));\n  }\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n  socket.destroy();\n}\n\nfunction socketOnData(d) {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  assert(parser && parser.socket === socket);\n\n  const ret = parser.execute(d);\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    freeParser(parser\x2C req\x2C socket);\n    socket.destroy();\n    req.socket._hadError = true;\n    req.emit('error'\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade (if status code 101) or CONNECT\n    const bytesParsed = ret;\n    const res = parser.incoming;\n    req.res = res;\n\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n\n    const bodyHead = TypedArrayPrototypeSlice(d\x2C bytesParsed\x2C d.length);\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (req.listenerCount(eventName) > 0) {\n      req.upgradeOrConnect = true;\n\n      // detach the socket\n      socket.emit('agentRemove');\n      socket.removeListener('close'\x2C socketCloseListener);\n      socket.removeListener('error'\x2C socketErrorListener);\n\n      socket._httpMessage = null;\n      socket.readableFlowing = null;\n\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\n      req.destroyed = true;\n      req._closed = true;\n      req.emit('close');\n    } else {\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.complete &&\n             // When the status code is informational (100\x2C 102-199)\x2C\n             // the server will send a final response after this client\n             // sends a request body\x2C so we must not free the parser.\n             // 101 (Switching Protocols) and all other status codes\n             // should be processed normally.\n             !statusIsInformational(parser.incoming.statusCode)) {\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction statusIsInformational(status) {\n  // 100 (Continue)    RFC7231 Section 6.2.1\n  // 102 (Processing)  RFC2518\n  // 103 (Early Hints) RFC8297\n  // 104-199 (Unassigned)\n  return (status < 200 && status >= 100 && status !== 101);\n}\n\n// client\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\n  const socket = this.socket;\n  const req = socket._httpMessage;\n\n  debug('AGENT incoming response!');\n\n  if (req.res) {\n    // We already have a response object\x2C this means the server\n    // sent a double response.\n    socket.destroy();\n    return 0;  // No special treatment.\n  }\n  req.res = res;\n\n  // Skip body and treat as Upgrade.\n  if (res.upgrade)\n    return 2;\n\n  // Responses to CONNECT request is handled as Upgrade.\n  const method = req.method;\n  if (method === 'CONNECT') {\n    res.upgrade = true;\n    return 2;  // Skip body and treat as Upgrade.\n  }\n\n  if (statusIsInformational(res.statusCode)) {\n    // Restart the parser\x2C as this is a 1xx informational message.\n    req.res = null; // Clear res so that we don't hit double-responses.\n    // Maintain compatibility by sending 100-specific events\n    if (res.statusCode === 100) {\n      req.emit('continue');\n    }\n    // Send information events to all 1xx responses except 101 Upgrade.\n    req.emit('information'\x2C {\n      statusCode: res.statusCode\x2C\n      statusMessage: res.statusMessage\x2C\n      httpVersion: res.httpVersion\x2C\n      httpVersionMajor: res.httpVersionMajor\x2C\n      httpVersionMinor: res.httpVersionMinor\x2C\n      headers: res.headers\x2C\n      rawHeaders: res.rawHeaders\n    });\n\n    return 1;  // Skip body but don't treat as Upgrade.\n  }\n\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\n    // Server MUST respond with Connection:keep-alive for us to enable it.\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\n    // keep the connection open.\n    req.shouldKeepAlive = false;\n  }\n\n  DTRACE_HTTP_CLIENT_RESPONSE(socket\x2C req);\n  req.res = res;\n  res.req = req;\n\n  // Add our listener first\x2C so that we guarantee socket cleanup\n  res.on('end'\x2C responseOnEnd);\n  req.on('prefinish'\x2C requestOnPrefinish);\n  socket.on('timeout'\x2C responseOnTimeout);\n\n  // If the user did not listen for the 'response' event\x2C then they\n  // can't possibly read the data\x2C so we ._dump() it into the void\n  // so that the socket doesn't hang there in a paused state.\n  if (req.aborted || !req.emit('response'\x2C res))\n    res._dump();\n\n  if (method === 'HEAD')\n    return 1;  // Skip body but don't treat as Upgrade.\n\n  if (res.statusCode === 304) {\n    res.complete = true;\n    return 1; // Skip body as there won't be any\n  }\n\n  return 0;  // No special treatment.\n}\n\n// client\nfunction responseKeepAlive(req) {\n  const socket = req.socket;\n\n  debug('AGENT socket keep-alive');\n  if (req.timeoutCb) {\n    socket.setTimeout(0\x2C req.timeoutCb);\n    req.timeoutCb = null;\n  }\n  socket.removeListener('close'\x2C socketCloseListener);\n  socket.removeListener('error'\x2C socketErrorListener);\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n\n  // TODO(ronag): Between here and emitFreeNT the socket\n  // has no 'error' handler.\n\n  // There are cases where _handle === null. Avoid those. Passing undefined to\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\n  // Mark this socket as available\x2C AFTER user-added end\n  // handlers have a chance to run.\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\n\n  req.destroyed = true;\n  if (req.res) {\n    // Detach socket from IncomingMessage to avoid destroying the freed\n    // socket in IncomingMessage.destroy().\n    req.res.socket = null;\n  }\n}\n\nfunction responseOnEnd() {\n  const req = this.req;\n  const socket = req.socket;\n\n  if (socket) {\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n  }\n\n  req._ended = true;\n\n  if (!req.shouldKeepAlive) {\n    if (socket.writable) {\n      debug('AGENT socket.destroySoon()');\n      if (typeof socket.destroySoon === 'function')\n        socket.destroySoon();\n      else\n        socket.end();\n    }\n    assert(!socket.writable);\n  } else if (req.finished && !this.aborted) {\n    // We can assume `req.finished` means all data has been written since:\n    // - `'responseOnEnd'` means we have been assigned a socket.\n    // - when we have a socket we write directly to it without buffering.\n    // - `req.finished` means `end()` has been called and no further data.\n    //   can be written\n    responseKeepAlive(req);\n  }\n}\n\nfunction responseOnTimeout() {\n  const req = this._httpMessage;\n  if (!req) return;\n  const res = req.res;\n  if (!res) return;\n  res.emit('timeout');\n}\n\nfunction requestOnPrefinish() {\n  const req = this;\n\n  if (req.shouldKeepAlive && req._ended)\n    responseKeepAlive(req);\n}\n\nfunction emitFreeNT(req) {\n  req._closed = true;\n  req.emit('close');\n  if (req.socket) {\n    req.socket.emit('free');\n  }\n}\n\nfunction tickOnSocket(req\x2C socket) {\n  const parser = parsers.alloc();\n  req.socket = socket;\n  const lenient = req.insecureHTTPParser === undefined ?\n    isLenient() : req.insecureHTTPParser;\n  parser.initialize(HTTPParser.RESPONSE\x2C\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\n                    req.maxHeaderSize || 0\x2C\n                    lenient ? kLenientAll : kLenientNone\x2C\n                    0);\n  parser.socket = socket;\n  parser.outgoing = req;\n  req.parser = parser;\n\n  socket.parser = parser;\n  socket._httpMessage = req;\n\n  // Propagate headers limit from request object to parser\n  if (typeof req.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\n  }\n\n  parser.onIncoming = parserOnIncomingClient;\n  socket.on('error'\x2C socketErrorListener);\n  socket.on('data'\x2C socketOnData);\n  socket.on('end'\x2C socketOnEnd);\n  socket.on('close'\x2C socketCloseListener);\n  socket.on('drain'\x2C ondrain);\n\n  if (\n    req.timeout !== undefined ||\n    (req.agent && req.agent.options && req.agent.options.timeout)\n  ) {\n    listenSocketTimeout(req);\n  }\n  req.emit('socket'\x2C socket);\n}\n\nfunction emitRequestTimeout() {\n  const req = this._httpMessage;\n  if (req) {\n    req.emit('timeout');\n  }\n}\n\nfunction listenSocketTimeout(req) {\n  if (req.timeoutCb) {\n    return;\n  }\n  // Set timeoutCb so it will get cleaned up on request end.\n  req.timeoutCb = emitRequestTimeout;\n  // Delegate socket timeout event.\n  if (req.socket) {\n    req.socket.once('timeout'\x2C emitRequestTimeout);\n  } else {\n    req.on('socket'\x2C (socket) => {\n      socket.once('timeout'\x2C emitRequestTimeout);\n    });\n  }\n}\n\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\n  // TODO(ronag): Between here and onSocketNT the socket\n  // has no 'error' handler.\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\n};\n\nfunction onSocketNT(req\x2C socket\x2C err) {\n  if (req.destroyed || err) {\n    req.destroyed = true;\n\n    function _destroy(req\x2C err) {\n      if (!req.aborted && !err) {\n        err = connResetException('socket hang up');\n      }\n      if (err) {\n        req.emit('error'\x2C err);\n      }\n      req._closed = true;\n      req.emit('close');\n    }\n\n    if (socket) {\n      if (!err && req.agent && !socket.destroyed) {\n        socket.emit('free');\n      } else {\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\n          _destroy(req\x2C er || err);\n        });\n        return;\n      }\n    }\n\n    _destroy(req\x2C err || req[kError]);\n  } else {\n    tickOnSocket(req\x2C socket);\n    req._flush();\n  }\n}\n\nClientRequest.prototype._deferToConnect = _deferToConnect;\nfunction _deferToConnect(method\x2C arguments_) {\n  // This function is for calls that need to happen once the socket is\n  // assigned to this request and writable. It's an important promisy\n  // thing for all the socket calls that happen either now\n  // (when a socket is assigned) or in the future (when a socket gets\n  // assigned out of the pool and is eventually writable).\n\n  const callSocketMethod = () => {\n    if (method)\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\n  };\n\n  const onSocket = () => {\n    if (this.socket.writable) {\n      callSocketMethod();\n    } else {\n      this.socket.once('connect'\x2C callSocketMethod);\n    }\n  };\n\n  if (!this.socket) {\n    this.once('socket'\x2C onSocket);\n  } else {\n    onSocket();\n  }\n}\n\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (this._ended) {\n    return this;\n  }\n\n  listenSocketTimeout(this);\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n  if (callback) this.once('timeout'\x2C callback);\n\n  if (this.socket) {\n    setSocketTimeout(this.socket\x2C msecs);\n  } else {\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\n  }\n\n  return this;\n};\n\nfunction setSocketTimeout(sock\x2C msecs) {\n  if (sock.connecting) {\n    sock.once('connect'\x2C function() {\n      sock.setTimeout(msecs);\n    });\n  } else {\n    sock.setTimeout(msecs);\n  }\n}\n\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\n};\n\nClientRequest.prototype.setSocketKeepAlive =\n    function setSocketKeepAlive(enable\x2C initialDelay) {\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\n    };\n\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\n  this.setTimeout(0\x2C cb);\n};\n\nmodule.exports = {\n  ClientRequest\n};\n
code-source-info,0x17d30552d7e6,234,0,25980,C0O0C4O25980,,
code-creation,Function,10,183791,0x17d30552e7b6,940, node:_http_client:1:1,0x17d30552d750,~
code-source-info,0x17d30552e7b
tick,0x1a37298d4,183833,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305527a7c,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,183875,0x2f3ebe20ba20,352,wasm-function[95],0x151f1717f,*
code-creation,Function,4,183916,0x2f3ebe20bb80,352,wasm-function[247],0x151f17217,*
code-creation,Function,4,183916,0x2f3ebe20bce0,352,wasm-function[94],0x151f1717e,*
code-creation,Function,4,183916,0x2f3ebe20be40,2272,wasm-function[103],0x151f17187,*
code-creation,Function,4,183916,0x2f3ebe20c720,3232,wasm-function[86],0x151f17176,*
code-creation,Function,4,183916,0x2f3ebe20d3c0,416,wasm-function[93],0x151f1717d,*
code-creation,Function,4,183916,0x2f3ebe20d560,608,wasm-function[23],0x151f17137,*
code-creation,Function,4,183916,0x2f3ebe20d7c0,352,wasm-function[92],0x151f1717c,*
code-creation,Function,4,183916,0x2f3ebe20d920,384,wasm-function[85],0x151f17175,*
code-creation,Function,4,183916,0x2f3ebe20daa0,512,wasm-function[246],0x151f17216,*
code-creation,Function,4,183916,0x2f3ebe20dca0,832,wasm-function[44],0x151f1714c,*
code-creation,Function,4,183916,0x2f3ebe20dfe0,896,wasm-function[84],0x151f17174,*
code-creation,Function,4,183958,0x2f3ebe20e360,288,wasm-function[245],0x151f17215,*
code-creation,Function,4,183958,0x2f3ebe20e480,352,wasm-function[244],0x151f17214,*
code-creation,Function,4,183958,0x2f3ebe20e5e0,1248,wasm-function[43],0x151f1714b,*
code-creation,Function,4,183958,0x2f3ebe20eac0,256,wasm-function[243],0x151f17213,*
code-creation,Function,4,183958,0x2f3ebe20ebc0,608,wasm-function[42],0x151f1714a,*
code-creation,Function,4,183958,0x2f3ebe20ee20,1568,wasm-function[83],0x151f17173,*
code-creation,Function,4,183958,0x2f3ebe20f440,256,wasm-function[242],0x151f17212,*
code-creation,Function,4,183958,0x2f3ebe20f540,2560,wasm-function[91],0x151f1717b,*
code-creation,Function,4,183958,0x2f3ebe20ff40,416,wasm-function[82],0x151f17172,*
code-creation,Function,4,184000,0x2f3ebe2100e0,576,wasm-function[41],0x151f17149,*
code-creation,Function,4,184000,0x2f3ebe210320,192,wasm-function[40],0x151f17148,*
code-creation,Function,4,184000,0x2f3ebe2103e0,352,wasm-function[81],0x151f17171,*
code-creation,Function,4,184000,0x2f3ebe210540,512,wasm-function[211],0x151f171f3,*
code-creation,Function,4,184000,0x2f3ebe210740,256,wasm-function[241],0x151f17211,*
code-creation,Function,4,184000,0x2f3ebe210840,288,wasm-function[240],0x151f17210,*
code-creation,Function,4,184000,0x2f3ebe210960,256,wasm-function[239],0x151f1720f,*
code-creation,Function,4,184000,0x2f3ebe210a60,800,wasm-function[80],0x151f17170,*
code-creation,Function,4,184000,0x2f3ebe210d80,288,wasm-function[238],0x151f1720e,*
code-creation,Function,4,184041,0x2f3ebe210ea0,416,wasm-function[210],0x151f171f2,*
code-creation,Function,4,184041,0x2f3ebe211040,256,wasm-function[237],0x151f1720d,*
code-creation,Function,4,184041,0x2f3ebe211140,960,wasm-function[39],0x151f17147,*
code-creation,Eval,10,184166,0x17d30553170e,5, node:_http_common:1:1,0x17d3055313c8,~
script-source,235,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathMin\x2C\n  Symbol\x2C\n  RegExpPrototypeTest\x2C\n} = primordials;\nconst { setImmediate } = require('timers');\n\nconst { methods\x2C HTTPParser } = internalBinding('http_parser');\nconst { getOptionValue } = require('internal/options');\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\n\nconst FreeList = require('internal/freelist');\nconst incoming = require('_http_incoming');\nconst {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n} = incoming;\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst kIncomingMessage = Symbol('IncomingMessage');\nconst kRequestTimeout = Symbol('RequestTimeout');\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\nconst kOnBody = HTTPParser.kOnBody | 0;\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\n\nconst MAX_HEADER_PAIRS = 2000;\n\n// Only called in the slow case where slow means\n// that the request headers were either fragmented\n// across multiple TCP packets or too large to be\n// processed in a single run. This method is also\n// called to process trailing HTTP headers.\nfunction parserOnHeaders(headers\x2C url) {\n  // Once we exceeded headers limit - stop collecting them\n  if (this.maxHeaderPairs <= 0 ||\n      this._headers.length < this.maxHeaderPairs) {\n    this._headers.push(...headers);\n  }\n  this._url += url;\n}\n\n// `headers` and `url` are set only if .onHeaders() has not been called for\n// this request.\n// `url` is not set for response parsers but that's not applicable here since\n// all our parsers are request parsers.\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\n                                 shouldKeepAlive) {\n  const parser = this;\n  const { socket } = parser;\n\n  if (headers === undefined) {\n    headers = parser._headers;\n    parser._headers = [];\n  }\n\n  if (url === undefined) {\n    url = parser._url;\n    parser._url = '';\n  }\n\n  // Parser is also used by http client\n  const ParserIncomingMessage = (socket && socket.server &&\n                                 socket.server[kIncomingMessage]) ||\n                                 IncomingMessage;\n\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\n  incoming.httpVersionMajor = versionMajor;\n  incoming.httpVersionMinor = versionMinor;\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\n  incoming.url = url;\n  incoming.upgrade = upgrade;\n\n  if (socket) {\n    debug('requestTimeout timer moved to req');\n    incoming[kRequestTimeout] = incoming.socket[kRequestTimeout];\n    incoming.socket[kRequestTimeout] = undefined;\n  }\n\n  let n = headers.length;\n\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\n  if (parser.maxHeaderPairs > 0)\n    n = MathMin(n\x2C parser.maxHeaderPairs);\n\n  incoming._addHeaderLines(headers\x2C n);\n\n  if (typeof method === 'number') {\n    // server only\n    incoming.method = methods[method];\n  } else {\n    // client only\n    incoming.statusCode = statusCode;\n    incoming.statusMessage = statusMessage;\n  }\n\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\n}\n\nfunction parserOnBody(b\x2C start\x2C len) {\n  const stream = this.incoming;\n\n  // If the stream has already been removed\x2C then drop it.\n  if (stream === null)\n    return;\n\n  // Pretend this was the result of a stream._read call.\n  if (len > 0 && !stream._dumped) {\n    const slice = b.slice(start\x2C start + len);\n    const ret = stream.push(slice);\n    if (!ret)\n      readStop(this.socket);\n  }\n}\n\nfunction parserOnMessageComplete() {\n  const parser = this;\n  const stream = parser.incoming;\n\n  if (stream !== null) {\n    stream.complete = true;\n    // Emit any trailing headers.\n    const headers = parser._headers;\n    if (headers.length) {\n      stream._addHeaderLines(headers\x2C headers.length);\n      parser._headers = [];\n      parser._url = '';\n    }\n\n    // For emit end event\n    stream.push(null);\n  }\n\n  // Force to read the next incoming message\n  readStart(parser.socket);\n}\n\n\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\n  const parser = new HTTPParser();\n\n  cleanParser(parser);\n\n  parser[kOnHeaders] = parserOnHeaders;\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\n  parser[kOnBody] = parserOnBody;\n  parser[kOnMessageComplete] = parserOnMessageComplete;\n\n  return parser;\n});\n\nfunction closeParserInstance(parser) { parser.close(); }\n\n// Free the parser and also break any links that it\n// might have to any other things.\n// TODO: All parser data should be attached to a\n// single object\x2C so that it can be easily cleaned\n// up by doing `parser.data = {}`\x2C which should\n// be done in FreeList.free.  `parsers.free(parser)`\n// should be all that is needed.\nfunction freeParser(parser\x2C req\x2C socket) {\n  if (parser) {\n    if (parser._consumed)\n      parser.unconsume();\n    cleanParser(parser);\n    if (parsers.free(parser) === false) {\n      // Make sure the parser's stack has unwound before deleting the\n      // corresponding C++ object through .close().\n      setImmediate(closeParserInstance\x2C parser);\n    } else {\n      // Since the Parser destructor isn't going to run the destroy() callbacks\n      // it needs to be triggered manually.\n      parser.free();\n    }\n  }\n  if (req) {\n    req.parser = null;\n  }\n  if (socket) {\n    socket.parser = null;\n  }\n}\n\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nfunction checkIsHttpToken(val) {\n  return RegExpPrototypeTest(tokenRegExp\x2C val);\n}\n\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n/**\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nfunction checkInvalidHeaderChar(val) {\n  return RegExpPrototypeTest(headerCharRegex\x2C val);\n}\n\nfunction cleanParser(parser) {\n  parser._headers = [];\n  parser._url = '';\n  parser.socket = null;\n  parser.incoming = null;\n  parser.outgoing = null;\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\n  parser[kOnMessageBegin] = null;\n  parser[kOnExecute] = null;\n  parser[kOnTimeout] = null;\n  parser._consumed = false;\n  parser.onIncoming = null;\n}\n\nfunction prepareError(err\x2C parser\x2C rawPacket) {\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\n  if (typeof err.reason === 'string')\n    err.message = `Parse Error: ${err.reason}`;\n}\n\nlet warnedLenient = false;\n\nfunction isLenient() {\n  if (insecureHTTPParser && !warnedLenient) {\n    warnedLenient = true;\n    process.emitWarning('Using insecure HTTP parsing');\n  }\n  return insecureHTTPParser;\n}\n\nmodule.exports = {\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\n  CRLF: '\\r\\n'\x2C\n  freeParser\x2C\n  methods\x2C\n  parsers\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n};\n
code-source-info,0x17d30553170e,235,0,8441,C0O0C4O8441,,
code-creation,Function,10,184500,0x17d305531e56,512, node:_http_common:1:1,0x17d305531678,~
code-source-info,0x17d305531e
code-creation,Function,4,184541,0x2f3ebe211500,288,wasm-function[236],0x151f1720c,*
code-creation,Function,4,184583,0x2f3ebe211620,512,wasm-function[79],0x151f1716f,*
code-creation,Function,4,184583,0x2f3ebe211820,256,wasm-function[235],0x151f1720b,*
code-creation,Function,4,184583,0x2f3ebe211920,416,wasm-function[38],0x151f17146,*
code-creation,Function,4,184583,0x2f3ebe211ac0,256,wasm-function[234],0x151f1720a,*
code-creation,Function,4,184583,0x2f3ebe211bc0,224,wasm-function[37],0x151f17145,*
code-creation,Function,4,184583,0x2f3ebe211ca0,256,wasm-function[233],0x151f17209,*
code-creation,Function,4,184583,0x2f3ebe211da0,288,wasm-function[36],0x151f17144,*
code-creation,Function,4,184583,0x2f3ebe211ec0,768,wasm-function[78],0x151f1716e,*
code-creation,Function,4,184583,0x2f3ebe2121c0,512,wasm-function[209],0x151f171f1,*
code-creation,Function,4,184583,0x2f3ebe2123c0,480,wasm-function[232],0x151f17208,*
code-creation,Function,4,184583,0x2f3ebe2125a0,512,wasm-function[208],0x151f171f0,*
code-creation,Function,4,184625,0x2f3ebe2127a0,576,wasm-function[231],0x151f17207,*
code-creation,Function,4,184625,0x2f3ebe2129e0,928,wasm-function[77],0x151f1716d,*
code-creation,Function,4,184666,0x2f3ebe212d80,512,wasm-function[230],0x151f17206,*
code-creation,Eval,10,184708,0x17d305533bbe,5, node:internal/freelist:1:1,0x17d305533a58,~
script-source,236,node:internal/freelist,'use strict';\n\nconst {\n  ReflectApply\x2C\n} = primordials;\n\nclass FreeList {\n  constructor(name\x2C max\x2C ctor) {\n    this.name = name;\n    this.ctor = ctor;\n    this.max = max;\n    this.list = [];\n  }\n\n  alloc() {\n    return this.list.length > 0 ?\n      this.list.pop() :\n      ReflectApply(this.ctor\x2C this\x2C arguments);\n  }\n\n  free(obj) {\n    if (this.list.length < this.max) {\n      this.list.push(obj);\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = FreeList;\n
code-source-info,0x17d305533bbe,236,0,476,C0O0C4O476,,
code-creation,Function,10,184708,0x17d305533ed6,54, node:internal/freelist:1:1,0x17d305533b28,~
code-source-info,0x17d305533ed6,236,0,476,C0O0C8O25C46O449C48O464C53O475,,
code-creation,Eval,10,184875,0x17d3055345a6,5, node:_http_incoming:1:1,0x17d305534390,~
script-source,237,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\n} = primordials;\n\nconst { Readable\x2C finished } = require('stream');\n\nconst kHeaders = Symbol('kHeaders');\nconst kHeadersCount = Symbol('kHeadersCount');\nconst kTrailers = Symbol('kTrailers');\nconst kTrailersCount = Symbol('kTrailersCount');\n\nfunction readStart(socket) {\n  if (socket && !socket._paused && socket.readable)\n    socket.resume();\n}\n\nfunction readStop(socket) {\n  if (socket)\n    socket.pause();\n}\n\n/* Abstract base class for ServerRequest and ClientResponse. */\nfunction IncomingMessage(socket) {\n  let streamOptions;\n\n  if (socket) {\n    streamOptions = {\n      highWaterMark: socket.readableHighWaterMark\n    };\n  }\n\n  Readable.call(this\x2C streamOptions);\n\n  this._readableState.readingMore = true;\n\n  this.socket = socket;\n\n  this.httpVersionMajor = null;\n  this.httpVersionMinor = null;\n  this.httpVersion = null;\n  this.complete = false;\n  this[kHeaders] = null;\n  this[kHeadersCount] = 0;\n  this.rawHeaders = [];\n  this[kTrailers] = null;\n  this[kTrailersCount] = 0;\n  this.rawTrailers = [];\n\n  this.aborted = false;\n\n  this.upgrade = null;\n\n  // request (server) only\n  this.url = '';\n  this.method = null;\n\n  // response (client) only\n  this.statusCode = null;\n  this.statusMessage = null;\n  this.client = socket;\n\n  this._consuming = false;\n  // Flag for when we decide that this message cannot possibly be\n  // read by the user\x2C so there's no point continuing to handle it.\n  this._dumped = false;\n}\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\n  get: function() {\n    if (!this[kHeaders]) {\n      this[kHeaders] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeaders];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeaders];\n  }\x2C\n  set: function(val) {\n    this[kHeaders] = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\n  get: function() {\n    if (!this[kTrailers]) {\n      this[kTrailers] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailers];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailers];\n  }\x2C\n  set: function(val) {\n    this[kTrailers] = val;\n  }\n});\n\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (callback)\n    this.on('timeout'\x2C callback);\n  this.socket.setTimeout(msecs);\n  return this;\n};\n\n// Argument n cannot be factored out due to the overhead of\n// argument adaptor frame creation inside V8 in case that number of actual\n// arguments is different from expected arguments.\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\n// Refactoring `n` out might be possible when V8 is upgraded to that\n// version.\n// Ref: https://v8.dev/blog/v8-release-89\nIncomingMessage.prototype._read = function _read(n) {\n  if (!this._consuming) {\n    this._readableState.readingMore = false;\n    this._consuming = true;\n  }\n\n  // We actually do almost nothing here\x2C because the parserOnBody\n  // function fills up our internal buffer directly.  However\x2C we\n  // do need to unpause the underlying socket so that it flows.\n  if (this.socket.readable)\n    readStart(this.socket);\n};\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\n  if (!this.readableEnded || !this.complete) {\n    this.aborted = true;\n    this.emit('aborted');\n  }\n\n  // If aborted and the underlying socket is not already destroyed\x2C\n  // destroy it.\n  // We have to check if the socket is already destroyed because finished\n  // does not call the callback when this methdod is invoked from `_http_client`\n  // in `test/parallel/test-http-client-spurious-aborted.js`\n  if (this.socket && !this.socket.destroyed && this.aborted) {\n    this.socket.destroy(err);\n    const cleanup = finished(this.socket\x2C (e) => {\n      cleanup();\n      onError(this\x2C e || err\x2C cb);\n    });\n  } else {\n    onError(this\x2C err\x2C cb);\n  }\n};\n\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\nfunction _addHeaderLines(headers\x2C n) {\n  if (headers && headers.length) {\n    let dest;\n    if (this.complete) {\n      this.rawTrailers = headers;\n      this[kTrailersCount] = n;\n      dest = this[kTrailers];\n    } else {\n      this.rawHeaders = headers;\n      this[kHeadersCount] = n;\n      dest = this[kHeaders];\n    }\n\n    if (dest) {\n      for (let i = 0; i < n; i += 2) {\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\n      }\n    }\n  }\n}\n\n\n// This function is used to help avoid the lowercasing of a field name if it\n// matches a 'traditional cased' version of a field name. It then returns the\n// lowercased name to both avoid calling toLowerCase() a second time and to\n// indicate whether the field was a 'no duplicates' field. If a field is not a\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\n// of known header names to avoid us having to call toLowerCase() for those\n// headers.\nfunction matchKnownFields(field\x2C lowercased) {\n  switch (field.length) {\n    case 3:\n      if (field === 'Age' || field === 'age') return 'age';\n      break;\n    case 4:\n      if (field === 'Host' || field === 'host') return 'host';\n      if (field === 'From' || field === 'from') return 'from';\n      if (field === 'ETag' || field === 'etag') return 'etag';\n      if (field === 'Date' || field === 'date') return '\\u0000date';\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\n      break;\n    case 6:\n      if (field === 'Server' || field === 'server') return 'server';\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\n      break;\n    case 7:\n      if (field === 'Referer' || field === 'referer') return 'referer';\n      if (field === 'Expires' || field === 'expires') return 'expires';\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\n      break;\n    case 8:\n      if (field === 'Location' || field === 'location')\n        return 'location';\n      if (field === 'If-Match' || field === 'if-match')\n        return '\\u0000if-match';\n      break;\n    case 10:\n      if (field === 'User-Agent' || field === 'user-agent')\n        return 'user-agent';\n      if (field === 'Set-Cookie' || field === 'set-cookie')\n        return '\\u0001';\n      if (field === 'Connection' || field === 'connection')\n        return '\\u0000connection';\n      break;\n    case 11:\n      if (field === 'Retry-After' || field === 'retry-after')\n        return 'retry-after';\n      break;\n    case 12:\n      if (field === 'Content-Type' || field === 'content-type')\n        return 'content-type';\n      if (field === 'Max-Forwards' || field === 'max-forwards')\n        return 'max-forwards';\n      break;\n    case 13:\n      if (field === 'Authorization' || field === 'authorization')\n        return 'authorization';\n      if (field === 'Last-Modified' || field === 'last-modified')\n        return 'last-modified';\n      if (field === 'Cache-Control' || field === 'cache-control')\n        return '\\u0000cache-control';\n      if (field === 'If-None-Match' || field === 'if-none-match')\n        return '\\u0000if-none-match';\n      break;\n    case 14:\n      if (field === 'Content-Length' || field === 'content-length')\n        return 'content-length';\n      break;\n    case 15:\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\n        return '\\u0000accept-encoding';\n      if (field === 'Accept-Language' || field === 'accept-language')\n        return '\\u0000accept-language';\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\n        return '\\u0000x-forwarded-for';\n      break;\n    case 16:\n      if (field === 'Content-Encoding' || field === 'content-encoding')\n        return '\\u0000content-encoding';\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\n        return '\\u0000x-forwarded-host';\n      break;\n    case 17:\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\n        return 'if-modified-since';\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\n        return '\\u0000transfer-encoding';\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\n        return '\\u0000x-forwarded-proto';\n      break;\n    case 19:\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\n        return 'proxy-authorization';\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\n        return 'if-unmodified-since';\n      break;\n  }\n  if (lowercased) {\n    return '\\u0000' + field;\n  }\n  return matchKnownFields(StringPrototypeToLowerCase(field)\x2C true);\n}\n// Add the given (field\x2C value) pair to the message\n//\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\n// same header with a '\x2C ' if the header in question supports specification of\n// multiple values this way. The one exception to this is the Cookie header\x2C\n// which has multiple values joined with a '; ' instead. If a header's values\n// cannot be joined in either of these ways\x2C we declare the first instance the\n// winner and drop the second. Extended header fields (those beginning with\n// 'x-') are always joined.\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\nfunction _addHeaderLine(field\x2C value\x2C dest) {\n  field = matchKnownFields(field);\n  const flag = StringPrototypeCharCodeAt(field\x2C 0);\n  if (flag === 0 || flag === 2) {\n    field = StringPrototypeSlice(field\x2C 1);\n    // Make a delimited list\n    if (typeof dest[field] === 'string') {\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\n    } else {\n      dest[field] = value;\n    }\n  } else if (flag === 1) {\n    // Array header -- only Set-Cookie at the moment\n    if (dest['set-cookie'] !== undefined) {\n      dest['set-cookie'].push(value);\n    } else {\n      dest['set-cookie'] = [value];\n    }\n  } else if (dest[field] === undefined) {\n    // Drop duplicates\n    dest[field] = value;\n  }\n}\n\n\n// Call this instead of resume() if we want to just\n// dump all the data to /dev/null\nIncomingMessage.prototype._dump = function _dump() {\n  if (!this._dumped) {\n    this._dumped = true;\n    // If there is buffered data\x2C it may trigger 'data' events.\n    // Remove 'data' event listeners explicitly.\n    this.removeAllListeners('data');\n    this.resume();\n  }\n};\n\nfunction onError(self\x2C error\x2C cb) {\n  // This is to keep backward compatible behavior.\n  // An error is emitted only if there are listeners attached to the event.\n  if (self.listenerCount('error') === 0) {\n    cb();\n  } else {\n    cb(error);\n  }\n}\n\nmodule.exports = {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n};\n
code-source-info,0x17d3055345a6,237,0,12951,C0O0C4O12951,,
code-creation,Function,10,185416,0x17d305534f56,392, node:_http_incoming:1:1,0x17d305534510,~
code-source-info,0x17d305534f
tick,0x1a369eb88,185458,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305531f38,0x311ed227c90d,0x311ed227bbdd,0x17d30552e95b,0x311ed227c90d,0x311ed227bbdd,0x17d305527a7c,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,186125,0x2f3ebe212f80,640,wasm-function[35],0x151f17143,*
code-creation,Function,4,186125,0x2f3ebe213200,576,wasm-function[229],0x151f17205,*
code-creation,Function,4,186125,0x2f3ebe213440,896,wasm-function[76],0x151f1716c,*
code-creation,Function,4,186125,0x2f3ebe2137c0,1472,wasm-function[207],0x151f171ef,*
code-creation,Function,4,186125,0x2f3ebe213d80,512,wasm-function[228],0x151f17204,*
code-creation,Function,4,186125,0x2f3ebe213f80,512,wasm-function[227],0x151f17203,*
code-creation,Function,4,186125,0x2f3ebe214180,576,wasm-function[226],0x151f17202,*
code-creation,Function,4,186125,0x2f3ebe2143c0,1504,wasm-function[206],0x151f171ee,*
code-creation,Function,4,186166,0x2f3ebe2149a0,512,wasm-function[225],0x151f17201,*
code-creation,Function,4,186166,0x2f3ebe214ba0,1760,wasm-function[75],0x151f1716b,*
code-creation,Function,4,186166,0x2f3ebe215280,416,wasm-function[74],0x151f1716a,*
code-creation,Function,4,186166,0x2f3ebe215420,512,wasm-function[224],0x151f17200,*
code-creation,Function,4,186166,0x2f3ebe215620,1056,wasm-function[34],0x151f17142,*
code-creation,Function,4,186166,0x2f3ebe215a40,320,wasm-function[73],0x151f17169,*
code-creation,Function,4,186166,0x2f3ebe215b80,256,wasm-function[33],0x151f17141,*
code-creation,Function,4,186166,0x2f3ebe215c80,576,wasm-function[223],0x151f171ff,*
code-creation,Function,4,186166,0x2f3ebe215ec0,224,wasm-function[32],0x151f17140,*
code-creation,Function,4,186166,0x2f3ebe215fa0,1504,wasm-function[205],0x151f171ed,*
code-creation,Function,4,186208,0x2f3ebe216580,512,wasm-function[222],0x151f171fe,*
code-creation,Function,4,186208,0x2f3ebe216780,544,wasm-function[31],0x151f1713f,*
code-creation,Function,4,186208,0x2f3ebe2169a0,512,wasm-function[221],0x151f171fd,*
code-creation,Function,4,186208,0x2f3ebe216ba0,224,wasm-function[30],0x151f1713e,*
code-creation,Function,4,186208,0x2f3ebe216c80,1248,wasm-function[72],0x151f17168,*
code-creation,Function,4,186208,0x2f3ebe217160,352,wasm-function[71],0x151f17167,*
code-creation,Function,4,186208,0x2f3ebe2172c0,416,wasm-function[220],0x151f171fc,*
code-creation,Function,4,186208,0x2f3ebe217460,672,wasm-function[29],0x151f1713d,*
code-creation,Function,4,186208,0x2f3ebe217700,1504,wasm-function[204],0x151f171ec,*
code-creation,Function,4,186208,0x2f3ebe217ce0,256,wasm-function[28],0x151f1713c,*
code-creation,Function,4,186250,0x2f3ebe217de0,640,wasm-function[219],0x151f171fb,*
code-creation,Function,4,186250,0x2f3ebe218060,352,wasm-function[218],0x151f171fa,*
code-creation,LazyCompile,10,186291,0x17d30553636e,26,FreeList node:internal/freelist:8:14,0x17d305533bf0,~
code-source-info,0x17d30553636e,236,87,194,C0O111C2O121C6O133C8O143C12O155C14O164C18O175C20O185C25O193,,
tick,0x10100f9b0,186291,0,0x0,3,0x0,0x17d305531fe7,0x311ed227c90d,0x311ed227bbdd,0x17d30552e95b,0x311ed227c90d,0x311ed227bbdd,0x17d305527a7c,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,186750,0x17d3055372de,5, node:_http_outgoing:1:1,0x17d305536e08,~
script-source,238,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  MathFloor\x2C\n  NumberPrototypeToString\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\nconst assert = require('internal/assert');\nconst EE = require('events');\nconst Stream = require('stream');\nconst internalUtil = require('internal/util');\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\nconst { Buffer } = require('buffer');\nconst common = require('_http_common');\nconst checkIsHttpToken = common._checkIsHttpToken;\nconst checkInvalidHeaderChar = common._checkInvalidHeaderChar;\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol }\n} = require('internal/async_hooks');\nconst {\n  codes: {\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\n    ERR_HTTP_TRAILER_INVALID\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_DESTROYED\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst { isUint8Array } = require('internal/util/types');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst HIGH_WATER_MARK = getDefaultHighWaterMark();\nconst { CRLF } = common;\n\nconst kCorked = Symbol('corked');\n\nconst nop = () => {};\n\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\nconst RE_TE_CHUNKED = common.chunkExpression;\n\n// isCookieField performs a case-insensitive comparison of a provided string\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\n// using a case-insensitive RegExp.\nfunction isCookieField(s) {\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\n}\n\nfunction OutgoingMessage() {\n  Stream.call(this);\n\n  // Queue that holds all currently pending data\x2C until the response will be\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\n  this.outputData = [];\n\n  // `outputSize` is an approximate measure of how much data is queued on this\n  // response. `_onPendingData` will be invoked to update similar global\n  // per-connection counter. That counter will be used to pause/unpause the\n  // TCP socket and HTTP Parser and thus handle the backpressure.\n  this.outputSize = 0;\n\n  this.writable = true;\n  this.destroyed = false;\n\n  this._last = false;\n  this.chunkedEncoding = false;\n  this.shouldKeepAlive = true;\n  this._defaultKeepAlive = true;\n  this.useChunkedEncodingByDefault = true;\n  this.sendDate = false;\n  this._removedConnection = false;\n  this._removedContLen = false;\n  this._removedTE = false;\n\n  this._contentLength = null;\n  this._hasBody = true;\n  this._trailer = '';\n  this[kNeedDrain] = false;\n\n  this.finished = false;\n  this._headerSent = false;\n  this[kCorked] = 0;\n  this._closed = false;\n\n  this.socket = null;\n  this._header = null;\n  this[kOutHeaders] = null;\n\n  this._keepAliveTimeout = 0;\n\n  this._onPendingData = nop;\n}\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\n  get() {\n    return (\n      this.finished &&\n      this.outputSize === 0 &&\n      (!this.socket || this.socket.writableLength === 0)\n    );\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\n  get() {\n    return false;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\n  get() {\n    return this.outputSize + (this.socket ? this.socket.writableLength : 0);\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\n  get() {\n    return this.socket ? this.socket.writableHighWaterMark : HIGH_WATER_MARK;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\n  get() {\n    const corked = this.socket ? this.socket.writableCorked : 0;\n    return corked + this[kCorked];\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\n  get: internalUtil.deprecate(function() {\n    return this.getHeaders();\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (val == null) {\n      this[kOutHeaders] = null;\n    } else if (typeof val === 'object') {\n      const headers = this[kOutHeaders] = ObjectCreate(null);\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const name = keys[i];\n        headers[StringPrototypeToLowerCase(name)] = [name\x2C val[name]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\n  get: internalUtil.deprecate(function() {\n    const headers = this[kOutHeaders];\n    if (headers !== null) {\n      const out = ObjectCreate(null);\n      const keys = ObjectKeys(headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const val = headers[key][0];\n        out[key] = val;\n      }\n      return out;\n    }\n    return null;\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (typeof val === 'object' && val !== null) {\n      const headers = this[kOutHeaders];\n      if (!headers)\n        return;\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const header = headers[keys[i]];\n        if (header)\n          header[0] = val[keys[i]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\n});\n\n\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n\n  const headersMap = this[kOutHeaders];\n  const headers = {};\n\n  if (headersMap !== null) {\n    const keys = ObjectKeys(headersMap);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\n      const key = keys[i];\n      headers[headersMap[key][0]] = headersMap[key][1];\n    }\n  }\n  return headers;\n};\n\nOutgoingMessage.prototype.cork = function() {\n  if (this.socket) {\n    this.socket.cork();\n  } else {\n    this[kCorked]++;\n  }\n};\n\nOutgoingMessage.prototype.uncork = function() {\n  if (this.socket) {\n    this.socket.uncork();\n  } else if (this[kCorked]) {\n    this[kCorked]--;\n  }\n};\n\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n\n  if (callback) {\n    this.on('timeout'\x2C callback);\n  }\n\n  if (!this.socket) {\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\n      socket.setTimeout(msecs);\n    });\n  } else {\n    this.socket.setTimeout(msecs);\n  }\n  return this;\n};\n\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nOutgoingMessage.prototype.destroy = function destroy(error) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  if (this.socket) {\n    this.socket.destroy(error);\n  } else {\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\n      socket.destroy(error);\n    });\n  }\n\n  return this;\n};\n\n\n// This abstract either writing directly to the socket or buffering it.\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback) {\n  // This is a shameful hack to get the headers and first body chunk onto\n  // the same packet. Future versions of Node are going to take care of\n  // this at a lower level and in a more general way.\n  if (!this._headerSent) {\n    if (typeof data === 'string' &&\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\n      data = this._header + data;\n    } else {\n      const header = this._header;\n      this.outputData.unshift({\n        data: header\x2C\n        encoding: 'latin1'\x2C\n        callback: null\n      });\n      this.outputSize += header.length;\n      this._onPendingData(header.length);\n    }\n    this._headerSent = true;\n  }\n  return this._writeRaw(data\x2C encoding\x2C callback);\n};\n\n\nOutgoingMessage.prototype._writeRaw = _writeRaw;\nfunction _writeRaw(data\x2C encoding\x2C callback) {\n  const conn = this.socket;\n  if (conn && conn.destroyed) {\n    // The socket was destroyed. If we're still trying to write to it\x2C\n    // then we haven't gotten the 'close' event yet.\n    return false;\n  }\n\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (conn && conn._httpMessage === this && conn.writable) {\n    // There might be pending data in the this.output buffer.\n    if (this.outputData.length) {\n      this._flushOutput(conn);\n    }\n    // Directly write to socket.\n    return conn.write(data\x2C encoding\x2C callback);\n  }\n  // Buffer\x2C as long as we're not destroyed.\n  this.outputData.push({ data\x2C encoding\x2C callback });\n  this.outputSize += data.length;\n  this._onPendingData(data.length);\n  return this.outputSize < HIGH_WATER_MARK;\n}\n\n\nOutgoingMessage.prototype._storeHeader = _storeHeader;\nfunction _storeHeader(firstLine\x2C headers) {\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\n  const state = {\n    connection: false\x2C\n    contLen: false\x2C\n    te: false\x2C\n    date: false\x2C\n    expect: false\x2C\n    trailer: false\x2C\n    header: firstLine\n  };\n\n  if (headers) {\n    if (headers === this[kOutHeaders]) {\n      for (const key in headers) {\n        const entry = headers[key];\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\n      }\n    } else if (ArrayIsArray(headers)) {\n      if (headers.length && ArrayIsArray(headers[0])) {\n        for (let i = 0; i < headers.length; i++) {\n          const entry = headers[i];\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\n        }\n      } else {\n        if (headers.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\n        }\n\n        for (let n = 0; n < headers.length; n += 2) {\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\n        }\n      }\n    } else {\n      for (const key in headers) {\n        if (ObjectPrototypeHasOwnProperty(headers\x2C key)) {\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\n        }\n      }\n    }\n  }\n\n  let { header } = state;\n\n  // Date header\n  if (this.sendDate && !state.date) {\n    header += 'Date: ' + utcDate() + CRLF;\n  }\n\n  // Force the connection to close when the response is a 204 No Content or\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\n  // header.\n  //\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\n  // node.js used to send out a zero chunk anyway to accommodate clients\n  // that don't have special handling for those responses.\n  //\n  // It was pointed out that this might confuse reverse proxies to the point\n  // of creating security liabilities\x2C so suppress the zero chunk and force\n  // the connection to close.\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\n                               this.statusCode === 304)) {\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\n          ' closing connection.');\n    this.chunkedEncoding = false;\n    this.shouldKeepAlive = false;\n  }\n\n  // keep-alive logic\n  if (this._removedConnection) {\n    this._last = true;\n    this.shouldKeepAlive = false;\n  } else if (!state.connection) {\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\n    if (shouldSendKeepAlive) {\n      header += 'Connection: keep-alive' + CRLF;\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\n        header += `Keep-Alive: timeout=${timeoutSeconds}${CRLF}`;\n      }\n    } else {\n      this._last = true;\n      header += 'Connection: close' + CRLF;\n    }\n  }\n\n  if (!state.contLen && !state.te) {\n    if (!this._hasBody) {\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\n      this.chunkedEncoding = false;\n    } else if (!this.useChunkedEncodingByDefault) {\n      this._last = true;\n    } else if (!state.trailer &&\n               !this._removedContLen &&\n               typeof this._contentLength === 'number') {\n      header += 'Content-Length: ' + this._contentLength + CRLF;\n    } else if (!this._removedTE) {\n      header += 'Transfer-Encoding: chunked' + CRLF;\n      this.chunkedEncoding = true;\n    } else {\n      // We should only be able to get here if both Content-Length and\n      // Transfer-Encoding are removed by the user.\n      // See: test/parallel/test-http-remove-header-stays-removed.js\n      debug('Both Content-Length and Transfer-Encoding are removed');\n    }\n  }\n\n  // Test non-chunked message does not have trailer header set\x2C\n  // message will be terminated by the first empty line after the\n  // header fields\x2C regardless of the header fields present in the\n  // message\x2C and thus cannot contain a message body or 'trailers'.\n  if (this.chunkedEncoding !== true && state.trailer) {\n    throw new ERR_HTTP_TRAILER_INVALID();\n  }\n\n  this._header = header + CRLF;\n  this._headerSent = false;\n\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\n  // UNLESS we're sending Expect: 100-continue.\n  if (state.expect) this._send('');\n}\n\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderName(key);\n  if (ArrayIsArray(value)) {\n    if (value.length < 2 || !isCookieField(key)) {\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < value.length; i++)\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\n      return;\n    }\n    value = ArrayPrototypeJoin(value\x2C '; ');\n  }\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\n}\n\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderValue(key\x2C value);\n  state.header += key + ': ' + value + CRLF;\n  matchHeader(self\x2C state\x2C key\x2C value);\n}\n\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\n  if (field.length < 4 || field.length > 17)\n    return;\n  field = StringPrototypeToLowerCase(field);\n  switch (field) {\n    case 'connection':\n      state.connection = true;\n      self._removedConnection = false;\n      if (RegExpPrototypeTest(RE_CONN_CLOSE\x2C value))\n        self._last = true;\n      else\n        self.shouldKeepAlive = true;\n      break;\n    case 'transfer-encoding':\n      state.te = true;\n      self._removedTE = false;\n      if (RegExpPrototypeTest(RE_TE_CHUNKED\x2C value))\n        self.chunkedEncoding = true;\n      break;\n    case 'content-length':\n      state.contLen = true;\n      self._removedContLen = false;\n      break;\n    case 'date':\n    case 'expect':\n    case 'trailer':\n      state[field] = true;\n      break;\n    case 'keep-alive':\n      self._defaultKeepAlive = false;\n      break;\n  }\n}\n\nconst validateHeaderName = hideStackFrames((name) => {\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\n    throw new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name);\n  }\n});\n\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\n  if (value === undefined) {\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(value\x2C name);\n  }\n  if (checkInvalidHeaderChar(value)) {\n    debug('Header "%s" contains invalid characters'\x2C name);\n    throw new ERR_INVALID_CHAR('header content'\x2C name);\n  }\n});\n\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('set');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  let headers = this[kOutHeaders];\n  if (headers === null)\n    this[kOutHeaders] = headers = ObjectCreate(null);\n\n  headers[StringPrototypeToLowerCase(name)] = [name\x2C value];\n  return this;\n};\n\n\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\n  validateString(name\x2C 'name');\n\n  const headers = this[kOutHeaders];\n  if (headers === null)\n    return;\n\n  const entry = headers[StringPrototypeToLowerCase(name)];\n  return entry && entry[1];\n};\n\n\n// Returns an array of the names of the current outgoing headers.\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\n};\n\n\n// Returns an array of the names of the current outgoing raw headers.\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\n  const headersMap = this[kOutHeaders];\n  if (headersMap === null) return [];\n\n  const values = ObjectValues(headersMap);\n  const headers = Array(values.length);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = values.length; i < l; i++) {\n    headers[i] = values[i][0];\n  }\n\n  return headers;\n};\n\n\n// Returns a shallow copy of the current outgoing headers.\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\n  const headers = this[kOutHeaders];\n  const ret = ObjectCreate(null);\n  if (headers) {\n    const keys = ObjectKeys(headers);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const val = headers[key][1];\n      ret[key] = val;\n    }\n  }\n  return ret;\n};\n\n\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\n  validateString(name\x2C 'name');\n  return this[kOutHeaders] !== null &&\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\n};\n\n\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\n  validateString(name\x2C 'name');\n\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('remove');\n  }\n\n  const key = StringPrototypeToLowerCase(name);\n\n  switch (key) {\n    case 'connection':\n      this._removedConnection = true;\n      break;\n    case 'content-length':\n      this._removedContLen = true;\n      break;\n    case 'transfer-encoding':\n      this._removedTE = true;\n      break;\n    case 'date':\n      this.sendDate = false;\n      break;\n  }\n\n  if (this[kOutHeaders] !== null) {\n    delete this[kOutHeaders][key];\n  }\n};\n\n\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\n};\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: function() { return !!this._header; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\n  get: function() { return this.finished; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\n  get: function() {\n    return !this.destroyed && !this.finished && this[kNeedDrain];\n  }\n});\n\nconst crlf_buf = Buffer.from(CRLF);\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\n  if (!ret)\n    this[kNeedDrain] = true;\n  return ret;\n};\n\nfunction onError(msg\x2C err\x2C callback) {\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\n                             process.nextTick\x2C\n                             emitErrorNt\x2C\n                             msg\x2C\n                             err\x2C\n                             callback);\n}\n\nfunction emitErrorNt(msg\x2C err\x2C callback) {\n  callback(err);\n  if (typeof msg.emit === 'function' && !msg._closed) {\n    msg.emit('error'\x2C err);\n  }\n}\n\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\n  if (typeof callback !== 'function')\n    callback = nop;\n\n  let len;\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk === 'string') {\n    len = Buffer.byteLength(chunk\x2C encoding);\n  } else if (isUint8Array(chunk)) {\n    len = chunk.length;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n  }\n\n  let err;\n  if (msg.finished) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (msg.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    if (!msg.destroyed) {\n      onError(msg\x2C err\x2C callback);\n    } else {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  if (!msg._header) {\n    if (fromEnd) {\n      msg._contentLength = len;\n    }\n    msg._implicitHeader();\n  }\n\n  if (!msg._hasBody) {\n    debug('This type of response MUST NOT have a body. ' +\n          'Ignoring write() calls.');\n    process.nextTick(callback);\n    return true;\n  }\n\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\n    msg.socket.cork();\n    process.nextTick(connectionCorkNT\x2C msg.socket);\n  }\n\n  let ret;\n  if (msg.chunkedEncoding && chunk.length !== 0) {\n    msg._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\n    msg._send(crlf_buf\x2C null\x2C null);\n    msg._send(chunk\x2C encoding\x2C null);\n    ret = msg._send(crlf_buf\x2C null\x2C callback);\n  } else {\n    ret = msg._send(chunk\x2C encoding\x2C callback);\n  }\n\n  debug('write ret = ' + ret);\n  return ret;\n}\n\n\nfunction connectionCorkNT(conn) {\n  conn.uncork();\n}\n\n\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\n  this._trailer = '';\n  const keys = ObjectKeys(headers);\n  const isArray = ArrayIsArray(headers);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\n    let field\x2C value;\n    const key = keys[i];\n    if (isArray) {\n      field = headers[key][0];\n      value = headers[key][1];\n    } else {\n      field = key;\n      value = headers[key];\n    }\n    if (typeof field !== 'string' || !field || !checkIsHttpToken(field)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Trailer name'\x2C field);\n    }\n    if (checkInvalidHeaderChar(value)) {\n      debug('Trailer "%s" contains invalid characters'\x2C field);\n      throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n    }\n    this._trailer += field + ': ' + value + CRLF;\n  }\n};\n\nfunction onFinish(outmsg) {\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\n  outmsg.emit('finish');\n}\n\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\n  if (typeof chunk === 'function') {\n    callback = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (chunk) {\n    if (this.finished) {\n      onError(this\x2C\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\n              typeof callback !== 'function' ? nop : callback);\n      return this;\n    }\n\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\n  } else if (this.finished) {\n    if (typeof callback === 'function') {\n      if (!this.writableFinished) {\n        this.on('finish'\x2C callback);\n      } else {\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\n      }\n    }\n    return this;\n  } else if (!this._header) {\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    this._contentLength = 0;\n    this._implicitHeader();\n  }\n\n  if (typeof callback === 'function')\n    this.once('finish'\x2C callback);\n\n  const finish = onFinish.bind(undefined\x2C this);\n\n  if (this._hasBody && this.chunkedEncoding) {\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\n  } else {\n    // Force a flush\x2C HACK.\n    this._send(''\x2C 'latin1'\x2C finish);\n  }\n\n  if (this.socket) {\n    // Fully uncork connection on end().\n    this.socket._writableState.corked = 1;\n    this.socket.uncork();\n  }\n  this[kCorked] = 0;\n\n  this.finished = true;\n\n  // There is the first message on the outgoing queue\x2C and we've sent\n  // everything to the socket.\n  debug('outgoing message end.');\n  if (this.outputData.length === 0 &&\n      this.socket &&\n      this.socket._httpMessage === this) {\n    this._finish();\n  }\n\n  return this;\n};\n\n\nOutgoingMessage.prototype._finish = function _finish() {\n  assert(this.socket);\n  this.emit('prefinish');\n};\n\n\n// This logic is probably a bit confusing. Let me explain a bit:\n//\n// In both HTTP servers and clients it is possible to queue up several\n// outgoing messages. This is easiest to imagine in the case of a client.\n// Take the following situation:\n//\n//    req1 = client.request('GET'\x2C '/');\n//    req2 = client.request('POST'\x2C '/');\n//\n// When the user does\n//\n//   req2.write('hello world\\n');\n//\n// it's possible that the first request has not been completely flushed to\n// the socket yet. Thus the outgoing messages need to be prepared to queue\n// up data internally before sending it on further to the socket's queue.\n//\n// This function\x2C outgoingFlush()\x2C is called by both the Server and Client\n// to attempt to flush any pending messages out to the socket.\nOutgoingMessage.prototype._flush = function _flush() {\n  const socket = this.socket;\n\n  if (socket && socket.writable) {\n    // There might be remaining data in this.output; write it out\n    const ret = this._flushOutput(socket);\n\n    if (this.finished) {\n      // This is a queue to the server or client to bring in the next this.\n      this._finish();\n    } else if (ret && this[kNeedDrain]) {\n      this[kNeedDrain] = false;\n      this.emit('drain');\n    }\n  }\n};\n\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\n  while (this[kCorked]) {\n    this[kCorked]--;\n    socket.cork();\n  }\n\n  const outputLength = this.outputData.length;\n  if (outputLength <= 0)\n    return undefined;\n\n  const outputData = this.outputData;\n  socket.cork();\n  let ret;\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0; i < outputLength; i++) {\n    const { data\x2C encoding\x2C callback } = outputData[i];\n    ret = socket.write(data\x2C encoding\x2C callback);\n  }\n  socket.uncork();\n\n  this.outputData = [];\n  this._onPendingData(-this.outputSize);\n  this.outputSize = 0;\n\n  return ret;\n};\n\n\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\n  if (!this._header) {\n    this._implicitHeader();\n  }\n\n  // Force-flush the headers.\n  this._send('');\n};\n\nOutgoingMessage.prototype.pipe = function pipe() {\n  // OutgoingMessage should be write-only. Piping from it is disabled.\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\nfunction(err\x2C event) {\n  this.destroy(err);\n};\n\nmodule.exports = {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n};\n
code-source-info,0x17d3055372de,238,0,28594,C0O0C4O28594,,
code-creation,Function,10,187875,0x17d305538dce,1476, node:_http_outgoing:1:1,0x17d305537248,~
code-source-info,0x17d305538dce
tick,0x1a3726358,187958,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d30552e987,0x311ed227c90d,0x311ed227bbdd,0x17d305527a7c,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,188041,0x2f3ebe2181c0,736,wasm-function[70],0x151f17166,*
code-creation,Function,4,188041,0x2f3ebe2184a0,832,wasm-function[27],0x151f1713b,*
code-creation,Function,4,188041,0x2f3ebe2187e0,544,wasm-function[217],0x151f171f9,*
code-creation,Function,4,188083,0x2f3ebe218a00,288,wasm-function[216],0x151f171f8,*
code-creation,Function,4,188083,0x2f3ebe218b20,1504,wasm-function[203],0x151f171eb,*
code-creation,Function,4,188083,0x2f3ebe219100,224,wasm-function[69],0x151f17165,*
code-creation,Function,4,188083,0x2f3ebe2191e0,320,wasm-function[215],0x151f171f7,*
code-creation,Function,4,188083,0x2f3ebe219320,672,wasm-function[26],0x151f1713a,*
code-creation,Function,4,188083,0x2f3ebe2195c0,64,wasm-function[68],0x151f17164,*
code-creation,Function,4,188083,0x2f3ebe219600,352,wasm-function[214],0x151f171f6,*
code-creation,Function,4,188083,0x2f3ebe219760,416,wasm-function[213],0x151f171f5,*
code-creation,Function,4,188083,0x2f3ebe219900,1088,wasm-function[202],0x151f171ea,*
code-creation,Function,4,188083,0x2f3ebe219d40,1248,wasm-function[25],0x151f17139,*
code-creation,Function,4,188125,0x2f3ebe21a220,576,wasm-function[212],0x151f171f4,*
code-creation,Function,4,188125,0x2f3ebe21a460,576,wasm-function[24],0x151f17138,*
code-creation,Function,4,188125,0x2f3ebe21a6a0,1376,wasm-function[56],0x151f17158,*
code-creation,Function,4,188125,0x2f3ebe21ac00,192,wasm-function[66],0x151f17162,*
code-creation,Function,4,188125,0x2f3ebe21acc0,288,wasm-function[65],0x151f17161,*
code-creation,Function,4,188125,0x2f3ebe21ade0,2240,wasm-function[201],0x151f171e9,*
code-creation,Function,4,188125,0x2f3ebe21b6a0,384,wasm-function[64],0x151f17160,*
code-creation,Function,4,188125,0x2f3ebe21b820,1152,wasm-function[67],0x151f17163,*
code-creation,Function,4,188125,0x2f3ebe21bca0,352,wasm-function[63],0x151f1715f,*
code-creation,Function,4,188125,0x2f3ebe21be00,224,wasm-function[62],0x151f1715e,*
code-creation,Function,4,188125,0x2f3ebe21bee0,256,wasm-function[61],0x151f1715d,*
code-creation,Function,4,188166,0x2f3ebe21bfe0,2560,wasm-function[191],0x151f171df,*
code-creation,Function,4,188166,0x2f3ebe21c9e0,256,wasm-function[60],0x151f1715c,*
code-creation,Function,4,188166,0x2f3ebe21cae0,192,wasm-function[59],0x151f1715b,*
code-creation,Function,4,188166,0x2f3ebe21cba0,832,wasm-function[58],0x151f1715a,*
code-creation,Eval,10,188208,0x17d30553c04e,5, node:internal/http:1:1,0x17d30553be48,~
script-source,239,node:internal/http,'use strict';\n\nconst {\n  Symbol\x2C\n  Date\x2C\n  DatePrototypeGetMilliseconds\x2C\n  DatePrototypeToUTCString\x2C\n} = primordials;\n\nconst { setUnrefTimeout } = require('internal/timers');\n\nconst { InternalPerformanceEntry } = require('internal/perf/performance_entry');\n\nconst {\n  enqueue\x2C\n  hasObserver\x2C\n} = require('internal/perf/observe');\n\nlet utcCache;\n\nfunction utcDate() {\n  if (!utcCache) cache();\n  return utcCache;\n}\n\nfunction cache() {\n  const d = new Date();\n  utcCache = DatePrototypeToUTCString(d);\n  setUnrefTimeout(resetCache\x2C 1000 - DatePrototypeGetMilliseconds(d));\n}\n\nfunction resetCache() {\n  utcCache = undefined;\n}\n\nfunction emitStatistics(statistics) {\n  if (!hasObserver('http') || statistics == null) return;\n  const startTime = statistics.startTime;\n  const diff = process.hrtime(startTime);\n  const entry = new InternalPerformanceEntry(\n    'HttpRequest'\x2C\n    'http'\x2C\n    startTime[0] * 1000 + startTime[1] / 1e6\x2C\n    diff[0] * 1000 + diff[1] / 1e6\x2C\n    undefined\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  kOutHeaders: Symbol('kOutHeaders')\x2C\n  kNeedDrain: Symbol('kNeedDrain')\x2C\n  utcDate\x2C\n  emitStatistics\x2C\n};\n
code-source-info,0x17d30553c04e,239,0,1130,C0O0C4O1130,,
code-creation,Function,10,188250,0x17d30553c31e,176, node:internal/http:1:1,0x17d30553bfb8,~
code-source-info,0x17d30553c31e,239,0,1130,C0O0C55O25C60O35C66O43C72O75C78O147C81O147C86O127C92O213C95O213C100O184C106O296C109O296C114O268C120O279C126O335C127O335C129O1005C137O1039C148O1076C158O1100C164O1111C170O1020C175O1129,,
code-creation,Eval,10,188791,0x17d30553f03e,5, node:_http_server:1:1,0x17d30553e978,~
script-source,240,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst net = require('net');\nconst EE = require('events');\nconst assert = require('internal/assert');\nconst {\n  parsers\x2C\n  freeParser\x2C\n  CRLF\x2C\n  continueExpression\x2C\n  chunkExpression\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst { OutgoingMessage } = require('_http_outgoing');\nconst {\n  kOutHeaders\x2C\n  kNeedDrain\x2C\n  emitStatistics\n} = require('internal/http');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  getOrSetAsyncId\n} = require('internal/async_hooks');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  connResetException\x2C\n  codes\n} = require('internal/errors');\nconst {\n  ERR_HTTP_REQUEST_TIMEOUT\x2C\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_HTTP_INVALID_STATUS_CODE\x2C\n  ERR_HTTP_SOCKET_ENCODING\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_CHAR\n} = codes;\nconst {\n  validateInteger\x2C\n  validateBoolean\n} = require('internal/validators');\nconst Buffer = require('buffer').Buffer;\nconst {\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\n} = require('internal/dtrace');\nconst { setTimeout\x2C clearTimeout } = require('timers');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst onRequestStartChannel = dc.channel('http.server.request.start');\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\n\nconst kServerResponse = Symbol('ServerResponse');\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\n\nconst {\n  hasObserver\x2C\n} = require('internal/perf/observe');\n\nconst STATUS_CODES = {\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\n  103: 'Early Hints'\x2C                // RFC 8297 2\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\n  423: 'Locked'\x2C                     // RFC 4918 11.3\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\n  428: 'Precondition Required'\x2C      // RFC 6585 3\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\n  509: 'Bandwidth Limit Exceeded'\x2C\n  510: 'Not Extended'\x2C               // RFC 2774 7\n  511: 'Network Authentication Required' // RFC 6585 6\n};\n\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nclass HTTPServerAsyncResource {\n  constructor(type\x2C socket) {\n    this.type = type;\n    this.socket = socket;\n  }\n}\n\nfunction ServerResponse(req) {\n  OutgoingMessage.call(this);\n\n  if (req.method === 'HEAD') this._hasBody = false;\n\n  this.req = req;\n  this.sendDate = true;\n  this._sent100 = false;\n  this._expect_continue = false;\n\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\n    this.useChunkedEncodingByDefault = RegExpPrototypeTest(chunkExpression\x2C\n                                                           req.headers.te);\n    this.shouldKeepAlive = false;\n  }\n\n  if (hasObserver('http')) {\n    this[kServerResponseStatistics] = {\n      startTime: process.hrtime()\n    };\n  }\n}\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\n\nServerResponse.prototype._finish = function _finish() {\n  DTRACE_HTTP_SERVER_RESPONSE(this.socket);\n  emitStatistics(this[kServerResponseStatistics]);\n  OutgoingMessage.prototype._finish.call(this);\n};\n\n\nServerResponse.prototype.statusCode = 200;\nServerResponse.prototype.statusMessage = undefined;\n\nfunction onServerResponseClose() {\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\n  // array. That is\x2C in the example below\x2C b still gets called even though\n  // it's been removed by a:\n  //\n  //   var EventEmitter = require('events');\n  //   var obj = new EventEmitter();\n  //   obj.on('event'\x2C a);\n  //   obj.on('event'\x2C b);\n  //   function a() { obj.removeListener('event'\x2C b) }\n  //   function b() { throw "BAM!" }\n  //   obj.emit('event');  // throws\n  //\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\n  // where the ServerResponse object has already been deconstructed.\n  // Fortunately\x2C that requires only a single if check. :-)\n  if (this._httpMessage) {\n    this._httpMessage.destroyed = true;\n    this._httpMessage._closed = true;\n    this._httpMessage.emit('close');\n  }\n}\n\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\n  assert(!socket._httpMessage);\n  socket._httpMessage = this;\n  socket.on('close'\x2C onServerResponseClose);\n  this.socket = socket;\n  this.emit('socket'\x2C socket);\n  this._flush();\n};\n\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\n  assert(socket._httpMessage === this);\n  socket.removeListener('close'\x2C onServerResponseClose);\n  socket._httpMessage = null;\n  this.socket = null;\n};\n\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\n  this._writeRaw(`HTTP/1.1 100 Continue${CRLF}${CRLF}`\x2C 'ascii'\x2C cb);\n  this._sent100 = true;\n};\n\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\n  this._writeRaw(`HTTP/1.1 102 Processing${CRLF}${CRLF}`\x2C 'ascii'\x2C cb);\n};\n\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\n  this.writeHead(this.statusCode);\n};\n\nServerResponse.prototype.writeHead = writeHead;\nfunction writeHead(statusCode\x2C reason\x2C obj) {\n  const originalStatusCode = statusCode;\n\n  statusCode |= 0;\n  if (statusCode < 100 || statusCode > 999) {\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\n  }\n\n\n  if (typeof reason === 'string') {\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\n    this.statusMessage = reason;\n  } else {\n    // writeHead(statusCode[\x2C headers])\n    if (!this.statusMessage)\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\n    obj = reason;\n  }\n  this.statusCode = statusCode;\n\n  let headers;\n  if (this[kOutHeaders]) {\n    // Slow-case: when progressive API and header fields are passed.\n    let k;\n    if (ArrayIsArray(obj)) {\n      if (obj.length % 2 !== 0) {\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\n      }\n\n      for (let n = 0; n < obj.length; n += 2) {\n        k = obj[n + 0];\n        if (k) this.setHeader(k\x2C obj[n + 1]);\n      }\n    } else if (obj) {\n      const keys = ObjectKeys(obj);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        k = keys[i];\n        if (k) this.setHeader(k\x2C obj[k]);\n      }\n    }\n    if (k === undefined && this._header) {\n      throw new ERR_HTTP_HEADERS_SENT('render');\n    }\n    // Only progressive api is used\n    headers = this[kOutHeaders];\n  } else {\n    // Only writeHead() called\n    headers = obj;\n  }\n\n  if (checkInvalidHeaderChar(this.statusMessage))\n    throw new ERR_INVALID_CHAR('statusMessage');\n\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}${CRLF}`;\n\n  if (statusCode === 204 || statusCode === 304 ||\n      (statusCode >= 100 && statusCode <= 199)) {\n    // RFC 2616\x2C 10.2.5:\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.3.5:\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.1 Informational 1xx:\n    // This class of status code indicates a provisional response\x2C\n    // consisting only of the Status-Line and optional headers\x2C and is\n    // terminated by an empty line.\n    this._hasBody = false;\n  }\n\n  // Don't keep alive connections where the client expects 100 Continue\n  // but we sent a final status; they may put extra bytes on the wire.\n  if (this._expect_continue && !this._sent100) {\n    this.shouldKeepAlive = false;\n  }\n\n  this._storeHeader(statusLine\x2C headers);\n\n  return this;\n}\n\n// Docs-only deprecated: DEP0063\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\n\nfunction storeHTTPOptions(options) {\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined)\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\n  this.insecureHTTPParser = insecureHTTPParser;\n}\n\nfunction Server(options\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\n\n  if (typeof options === 'function') {\n    requestListener = options;\n    options = {};\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'object'\x2C options);\n  }\n\n  storeHTTPOptions.call(this\x2C options);\n  net.Server.call(this\x2C { allowHalfOpen: true });\n\n  if (requestListener) {\n    this.on('request'\x2C requestListener);\n  }\n\n  // Similar option to this. Too lazy to write my own docs.\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\n  this.httpAllowHalfOpen = false;\n\n  this.on('connection'\x2C connectionListener);\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n}\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\n\n\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  this.timeout = msecs;\n  if (callback)\n    this.on('timeout'\x2C callback);\n  return this;\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\n  switch (event) {\n    case 'request':\n      const { 1: res } = args;\n      if (!res.headersSent && !res.writableEnded) {\n        // Don't leak headers.\n        const names = res.getHeaderNames();\n        for (let i = 0; i < names.length; i++) {\n          res.removeHeader(names[i]);\n        }\n        res.statusCode = 500;\n        res.end(STATUS_CODES[500]);\n      } else {\n        res.destroy();\n      }\n      break;\n    default:\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\n        .apply(this\x2C arguments);\n  }\n};\n\nfunction connectionListener(socket) {\n  defaultTriggerAsyncIdScope(\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\n  );\n}\n\nfunction connectionListenerInternal(server\x2C socket) {\n  debug('SERVER new http connection');\n\n  // Ensure that the server property of the socket is correctly set.\n  // See https://github.com/nodejs/node/issues/13435\n  socket.server = server;\n\n  // If the user has added a listener to the server\x2C\n  // request\x2C or response\x2C then it's their responsibility.\n  // otherwise\x2C destroy on timeout by default\n  if (server.timeout && typeof socket.setTimeout === 'function')\n    socket.setTimeout(server.timeout);\n  socket.on('timeout'\x2C socketOnTimeout);\n\n  const parser = parsers.alloc();\n\n  const lenient = server.insecureHTTPParser === undefined ?\n    isLenient() : server.insecureHTTPParser;\n\n  // TODO(addaleax): This doesn't play well with the\n  // `async_hooks.currentResource()` proposal\x2C see\n  // https://github.com/nodejs/node/pull/21313\n  parser.initialize(\n    HTTPParser.REQUEST\x2C\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\n    server.maxHeaderSize || 0\x2C\n    lenient ? kLenientAll : kLenientNone\x2C\n    server.headersTimeout || 0\x2C\n  );\n  parser.socket = socket;\n  socket.parser = parser;\n\n  // Propagate headers limit from server instance to parser\n  if (typeof server.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\n  }\n\n  const state = {\n    onData: null\x2C\n    onEnd: null\x2C\n    onClose: null\x2C\n    onDrain: null\x2C\n    outgoing: []\x2C\n    incoming: []\x2C\n    // `outgoingData` is an approximate amount of bytes queued through all\n    // inactive responses. If more data than the high watermark is queued - we\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\n    // sent to the client.\n    outgoingData: 0\x2C\n    keepAliveTimeoutSet: false\n  };\n  state.onData = socketOnData.bind(undefined\x2C\n                                   server\x2C socket\x2C parser\x2C state);\n  state.onEnd = socketOnEnd.bind(undefined\x2C\n                                 server\x2C socket\x2C parser\x2C state);\n  state.onClose = socketOnClose.bind(undefined\x2C\n                                     socket\x2C state);\n  state.onDrain = socketOnDrain.bind(undefined\x2C\n                                     socket\x2C state);\n  socket.on('data'\x2C state.onData);\n  socket.on('error'\x2C socketOnError);\n  socket.on('end'\x2C state.onEnd);\n  socket.on('close'\x2C state.onClose);\n  socket.on('drain'\x2C state.onDrain);\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\n                                            server\x2C socket\x2C state);\n\n  // We are consuming socket\x2C so it won't get any actual data\n  socket.on('resume'\x2C onSocketResume);\n  socket.on('pause'\x2C onSocketPause);\n\n  // Overrides to unconsume on `data`\x2C `readable` listeners\n  socket.on = generateSocketListenerWrapper('on');\n  socket.addListener = generateSocketListenerWrapper('addListener');\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\n  socket.setEncoding = socketSetEncoding;\n\n  // We only consume the socket if it has never been consumed before.\n  if (socket._handle && socket._handle.isStreamBase &&\n      !socket._handle._consumed) {\n    parser._consumed = true;\n    socket._handle._consumed = true;\n    parser.consume(socket._handle);\n  }\n  parser[kOnExecute] =\n    onParserExecute.bind(undefined\x2C\n                         server\x2C socket\x2C parser\x2C state);\n\n  parser[kOnTimeout] =\n    onParserTimeout.bind(undefined\x2C\n                         server\x2C socket);\n\n  // When receiving new requests on the same socket (pipelining or keep alive)\n  // make sure the requestTimeout is active.\n  parser[kOnMessageBegin] =\n    setRequestTimeout.bind(undefined\x2C\n                           server\x2C socket);\n\n  // This protects from DOS attack where an attacker establish the connection\n  // without sending any data on applications where server.timeout is left to\n  // the default value of zero.\n  setRequestTimeout(server\x2C socket);\n\n  socket._paused = false;\n}\n\nfunction socketSetEncoding() {\n  throw new ERR_HTTP_SOCKET_ENCODING();\n}\n\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\n  state.outgoingData += delta;\n  socketOnDrain(socket\x2C state);\n}\n\nfunction socketOnDrain(socket\x2C state) {\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\n\n  // If we previously paused\x2C then start reading again.\n  if (socket._paused && !needPause) {\n    socket._paused = false;\n    if (socket.parser)\n      socket.parser.resume();\n    socket.resume();\n  }\n\n  const msg = socket._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketOnTimeout() {\n  const req = this.parser && this.parser.incoming;\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\n  const res = this._httpMessage;\n  const resTimeout = res && res.emit('timeout'\x2C this);\n  const serverTimeout = this.server.emit('timeout'\x2C this);\n\n  if (!reqTimeout && !resTimeout && !serverTimeout)\n    this.destroy();\n}\n\nfunction socketOnClose(socket\x2C state) {\n  debug('server socket close');\n  freeParser(socket.parser\x2C null\x2C socket);\n  abortIncoming(state.incoming);\n}\n\nfunction abortIncoming(incoming) {\n  while (incoming.length) {\n    const req = incoming.shift();\n    req.destroy(connResetException('aborted'));\n  }\n  // Abort socket._httpMessage ?\n}\n\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\n  const ret = parser.finish();\n\n  if (ret instanceof Error) {\n    debug('parse error');\n    // socketOnError has additional logic and will call socket.destroy(err).\n    socketOnError.call(socket\x2C ret);\n  } else if (!server.httpAllowHalfOpen) {\n    socket.end();\n  } else if (state.outgoing.length) {\n    state.outgoing[state.outgoing.length - 1]._last = true;\n  } else if (socket._httpMessage) {\n    socket._httpMessage._last = true;\n  } else {\n    socket.end();\n  }\n}\n\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\n  assert(!socket._paused);\n  debug('SERVER socketOnData %d'\x2C d.length);\n\n  const ret = parser.execute(d);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\n}\n\nfunction onRequestTimeout(socket) {\n  socket[kRequestTimeout] = undefined;\n  // socketOnError has additional logic and will call socket.destroy(err).\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\n}\n\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\n  // When underlying `net.Socket` instance is consumed - no\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\n  // callback even if the data is constantly flowing into the socket.\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\n  socket._unrefTimer();\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\n}\n\nfunction onParserTimeout(server\x2C socket) {\n  const serverTimeout = server.emit('timeout'\x2C socket);\n\n  if (!serverTimeout)\n    socket.destroy();\n}\n\nconst noop = () => {};\nconst badRequestResponse = Buffer.from(\n  `HTTP/1.1 400 ${STATUS_CODES[400]}${CRLF}` +\n  `Connection: close${CRLF}${CRLF}`\x2C 'ascii'\n);\nconst requestTimeoutResponse = Buffer.from(\n  `HTTP/1.1 408 ${STATUS_CODES[408]}${CRLF}` +\n  `Connection: close${CRLF}${CRLF}`\x2C 'ascii'\n);\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\n  `HTTP/1.1 431 ${STATUS_CODES[431]}${CRLF}` +\n  `Connection: close${CRLF}${CRLF}`\x2C 'ascii'\n);\nfunction socketOnError(e) {\n  // Ignore further errors\n  this.removeListener('error'\x2C socketOnError);\n  this.on('error'\x2C noop);\n\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\n    if (this.writable && this.bytesWritten === 0) {\n      let response;\n\n      switch (e.code) {\n        case 'HPE_HEADER_OVERFLOW':\n          response = requestHeaderFieldsTooLargeResponse;\n          break;\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\n          response = requestTimeoutResponse;\n          break;\n        default:\n          response = badRequestResponse;\n          break;\n      }\n\n      this.write(response);\n    }\n    this.destroy(e);\n  }\n}\n\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    ret.rawPacket = d || parser.getCurrentBuffer();\n    debug('parse error'\x2C ret);\n    socketOnError.call(socket\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade or CONNECT\n    const req = parser.incoming;\n    debug('SERVER upgrade or connect'\x2C req.method);\n\n    if (!d)\n      d = parser.getCurrentBuffer();\n\n    socket.removeListener('data'\x2C state.onData);\n    socket.removeListener('end'\x2C state.onEnd);\n    socket.removeListener('close'\x2C state.onClose);\n    socket.removeListener('drain'\x2C state.onDrain);\n    socket.removeListener('error'\x2C socketOnError);\n    socket.removeListener('timeout'\x2C socketOnTimeout);\n    unconsume(parser\x2C socket);\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n    parser = null;\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\n      debug('SERVER have listener for %s'\x2C eventName);\n      const bodyHead = d.slice(ret\x2C d.length);\n\n      socket.readableFlowing = null;\n\n      // Clear the requestTimeout after upgrading the connection.\n      clearRequestTimeout(req);\n\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\n    } else {\n      // Got CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\n    debug('SERVER got PRI request');\n    socket.destroy();\n  } else {\n    // When receiving new requests on the same socket (pipelining or keep alive)\n    // make sure the requestTimeout is active.\n    parser[kOnMessageBegin] =\n      setRequestTimeout.bind(undefined\x2C server\x2C socket);\n  }\n\n  if (socket._paused && socket.parser) {\n    // onIncoming paused the socket\x2C we should pause the parser as well\n    debug('pause parser');\n    socket.parser.pause();\n  }\n}\n\nfunction clearIncoming(req) {\n  req = req || this;\n  const parser = req.socket && req.socket.parser;\n  // Reset the .incoming property so that the request object can be gc'ed.\n  if (parser && parser.incoming === req) {\n    if (req.readableEnded) {\n      parser.incoming = null;\n    } else {\n      req.on('end'\x2C clearIncoming);\n    }\n  }\n}\n\nfunction setRequestTimeout(server\x2C socket) {\n  // Set the request timeout handler.\n  if (\n    !socket[kRequestTimeout] &&\n    server.requestTimeout && server.requestTimeout > 0\n  ) {\n    debug('requestTimeout timer set');\n    socket[kRequestTimeout] =\n      setTimeout(onRequestTimeout\x2C server.requestTimeout\x2C socket).unref();\n  }\n}\n\nfunction clearRequestTimeout(req) {\n  if (!req) {\n    req = this;\n  }\n\n  if (!req[kRequestTimeout]) {\n    return;\n  }\n\n  debug('requestTimeout timer cleared');\n  clearTimeout(req[kRequestTimeout]);\n  req[kRequestTimeout] = undefined;\n}\n\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\n  if (onResponseFinishChannel.hasSubscribers) {\n    onResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  // Usually the first incoming element should be our request.  it may\n  // be that in the case abortIncoming() was called that the incoming\n  // array will be empty.\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\n\n  state.incoming.shift();\n\n  // If the user never called req.read()\x2C and didn't pipe() or\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\n  // bytes will be pulled off the wire.\n  if (!req._consuming && !req._readableState.resumeScheduled)\n    req._dump();\n\n  // Make sure the requestTimeout is cleared before finishing.\n  // This might occur if the application has sent a response\n  // without consuming the request body\x2C which would have already\n  // cleared the timer.\n  // clearRequestTimeout can be executed even if the timer is not active\x2C\n  // so this is safe.\n  clearRequestTimeout(req);\n\n  res.detachSocket(socket);\n  clearIncoming(req);\n  process.nextTick(emitCloseNT\x2C res);\n\n  if (res._last) {\n    if (typeof socket.destroySoon === 'function') {\n      socket.destroySoon();\n    } else {\n      socket.end();\n    }\n  } else if (state.outgoing.length === 0) {\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\n      socket.setTimeout(server.keepAliveTimeout);\n      state.keepAliveTimeoutSet = true;\n    }\n  } else {\n    // Start sending the next message\n    const m = state.outgoing.shift();\n    if (m) {\n      m.assignSocket(socket);\n    }\n  }\n}\n\nfunction emitCloseNT(self) {\n  self.destroyed = true;\n  self._closed = true;\n  self.emit('close');\n}\n\n// The following callback is issued after the headers have been read on a\n// new message. In this callback we setup the response object and pass it\n// to the user.\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (req.upgrade) {\n    req.upgrade = req.method === 'CONNECT' ||\n                  server.listenerCount('upgrade') > 0;\n    if (req.upgrade)\n      return 2;\n  }\n\n  state.incoming.push(req);\n\n  // If the writable end isn't consuming\x2C then stop reading\n  // so that we don't become overwhelmed by a flood of\n  // pipelined requests that may never be resolved.\n  if (!socket._paused) {\n    const ws = socket._writableState;\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\n      socket._paused = true;\n      // We also need to pause the parser\x2C but don't do that until after\n      // the call to execute\x2C because we may still be processing the last\n      // chunk.\n      socket.pause();\n    }\n  }\n\n  const res = new server[kServerResponse](req);\n  res._keepAliveTimeout = server.keepAliveTimeout;\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\n                                               socket\x2C state);\n\n  res.shouldKeepAlive = keepAlive;\n  DTRACE_HTTP_SERVER_REQUEST(req\x2C socket);\n\n  if (onRequestStartChannel.hasSubscribers) {\n    onRequestStartChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  if (socket._httpMessage) {\n    // There are already pending outgoing res\x2C append.\n    state.outgoing.push(res);\n  } else {\n    res.assignSocket(socket);\n  }\n\n  // When we're finished writing the response\x2C check if this is the last\n  // response\x2C if so destroy the socket.\n  res.on('finish'\x2C\n         resOnFinish.bind(undefined\x2C\n                          req\x2C res\x2C socket\x2C state\x2C server));\n\n  if (req.headers.expect !== undefined &&\n      (req.httpVersionMajor === 1 && req.httpVersionMinor === 1)) {\n    if (RegExpPrototypeTest(continueExpression\x2C req.headers.expect)) {\n      res._expect_continue = true;\n\n      if (server.listenerCount('checkContinue') > 0) {\n        server.emit('checkContinue'\x2C req\x2C res);\n      } else {\n        res.writeContinue();\n        server.emit('request'\x2C req\x2C res);\n      }\n    } else if (server.listenerCount('checkExpectation') > 0) {\n      server.emit('checkExpectation'\x2C req\x2C res);\n    } else {\n      res.writeHead(417);\n      res.end();\n    }\n  } else {\n    req.on('end'\x2C clearRequestTimeout);\n\n    server.emit('request'\x2C req\x2C res);\n  }\n  return 0;  // No special treatment.\n}\n\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\n  if (!state.keepAliveTimeoutSet)\n    return;\n\n  socket.setTimeout(server.timeout || 0);\n  state.keepAliveTimeoutSet = false;\n}\n\nfunction onSocketResume() {\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\n  // state.\n  //\n  // We don't care about stream semantics for the consumed socket anyway.\n  if (this._paused) {\n    this.pause();\n    return;\n  }\n\n  if (this._handle && !this._handle.reading) {\n    this._handle.reading = true;\n    this._handle.readStart();\n  }\n}\n\nfunction onSocketPause() {\n  if (this._handle && this._handle.reading) {\n    this._handle.reading = false;\n    this._handle.readStop();\n  }\n}\n\nfunction unconsume(parser\x2C socket) {\n  if (socket._handle) {\n    if (parser._consumed)\n      parser.unconsume();\n    parser._consumed = false;\n    socket.removeListener('pause'\x2C onSocketPause);\n    socket.removeListener('resume'\x2C onSocketResume);\n  }\n}\n\nfunction generateSocketListenerWrapper(originalFnName) {\n  return function socketListenerWrap(ev\x2C fn) {\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\n                                                          ev\x2C fn);\n    if (!this.parser) {\n      this.on = net.Socket.prototype.on;\n      this.addListener = net.Socket.prototype.addListener;\n      this.prependListener = net.Socket.prototype.prependListener;\n      return res;\n    }\n\n    if (ev === 'data' || ev === 'readable')\n      unconsume(this.parser\x2C this);\n\n    return res;\n  };\n}\n\nmodule.exports = {\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\x2C\n  storeHTTPOptions\x2C\n  _connectionListener: connectionListener\x2C\n  kServerResponse\n};\n
code-source-info,0x17d30553f03e,240,0,32121,C0O0C4O32121,,
code-creation,Function,10,190083,0xe757747f6be,1410, node:_http_server:1:1,0x17d30553efa8,~
code-source-info,0xe757747f6be
tick,0x1a36c6a58,190166,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305527ac7,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a362708c,190208,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x17d305527ac7,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37285c0,191416,0,0x0,0,0x0,0xe757747f6bd,0x311ed227c90d,0x311ed227bbdd,0x17d305527ac7,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Function,4,191458,0x2f3ebe21cee0,2560,wasm-function[190],0x151f171de,*
code-creation,Function,4,191458,0x2f3ebe21d8e0,1056,wasm-function[57],0x151f17159,*
code-creation,Function,4,191500,0x2f3ebe21dd00,1408,wasm-function[55],0x151f17157,*
code-creation,Function,4,191500,0x2f3ebe21e280,2272,wasm-function[200],0x151f171e8,*
code-creation,Function,4,191500,0x2f3ebe21ec80,512,wasm-function[195],0x151f171e3,*
code-creation,Function,4,191500,0x2f3ebe21eb60,288,wasm-function[54],0x151f17156,*
code-creation,Function,4,191541,0x2f3ebe21ee80,992,wasm-function[196],0x151f171e4,*
code-creation,Function,4,191541,0x2f3ebe21f260,1568,wasm-function[189],0x151f171dd,*
code-creation,Function,4,191541,0x2f3ebe21f880,256,wasm-function[53],0x151f17155,*
code-creation,Function,4,191583,0x2f3ebe21f980,192,wasm-function[52],0x151f17154,*
code-creation,Function,4,191583,0x2f3ebe21fa40,192,wasm-function[51],0x151f17153,*
code-creation,Function,4,191583,0x2f3ebe21fb00,2304,wasm-function[199],0x151f171e7,*
code-creation,Function,4,191583,0x2f3ebe220400,2496,wasm-function[194],0x151f171e2,*
code-creation,Function,4,191625,0x2f3ebe220dc0,832,wasm-function[50],0x151f17152,*
code-creation,Function,4,191625,0x2f3ebe221100,3232,wasm-function[188],0x151f171dc,*
code-creation,Function,4,191666,0x2f3ebe221da0,2304,wasm-function[198],0x151f171e6,*
code-creation,Function,4,191666,0x2f3ebe2226a0,1568,wasm-function[187],0x151f171db,*
code-creation,Function,4,191666,0x2f3ebe222cc0,1248,wasm-function[49],0x151f17151,*
code-creation,Function,4,191666,0x2f3ebe2231a0,2560,wasm-function[193],0x151f171e1,*
code-creation,Function,4,191708,0x2f3ebe223ba0,192,wasm-function[48],0x151f17150,*
code-creation,Function,4,191708,0x2f3ebe223c60,800,wasm-function[186],0x151f171da,*
code-creation,Function,4,191708,0x2f3ebe223f80,832,wasm-function[47],0x151f1714f,*
code-creation,Function,4,191750,0x2f3ebe2242c0,480,wasm-function[185],0x151f171d9,*
code-creation,Function,4,191750,0x2f3ebe2244a0,416,wasm-function[184],0x151f171d8,*
code-creation,Function,4,191750,0x2f3ebe224640,1248,wasm-function[46],0x151f1714e,*
code-creation,Function,4,191791,0x2f3ebe224b20,256,wasm-function[182],0x151f171d6,*
code-creation,Function,4,191791,0x2f3ebe224c20,2304,wasm-function[197],0x151f171e5,*
code-creation,Function,4,191791,0x2f3ebe225520,928,wasm-function[183],0x151f171d7,*
code-creation,Function,4,191833,0x2f3ebe2258c0,320,wasm-function[6],0x151f17126,*
code-creation,Function,4,191833,0x2f3ebe225a00,2560,wasm-function[192],0x151f171e0,*
code-creation,Function,4,191833,0x2f3ebe226400,928,wasm-function[181],0x151f171d5,*
code-creation,Function,4,191875,0x2f3ebe2267a0,416,wasm-function[15],0x151f1712f,*
code-creation,Function,4,191875,0x2f3ebe226940,1152,wasm-function[11],0x151f1712b,*
code-creation,Function,4,191875,0x2f3ebe226dc0,2240,wasm-function[12],0x151f1712c,*
code-creation,Function,4,191875,0x2f3ebe227680,1952,wasm-function[18],0x151f17132,*
code-creation,Function,4,191916,0x2f3ebe227e20,576,wasm-function[10],0x151f1712a,*
code-creation,Function,4,191916,0x2f3ebe228060,256,wasm-function[14],0x151f1712e,*
code-creation,Function,4,191916,0x2f3ebe228160,1120,wasm-function[17],0x151f17131,*
code-creation,Function,4,191958,0x2f3ebe2285c0,320,wasm-function[9],0x151f17129,*
code-creation,Function,4,192000,0x2f3ebe228700,576,wasm-function[22],0x151f17136,*
code-creation,Eval,10,192208,0xfcf8140ff56,5, node:diagnostics_channel:1:1,0xfcf8140fcf8,~
script-source,241,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectCreate\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = internalBinding('util');\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index >= 0) {\n      ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\n\n      // When there are no more active subscribers\x2C restore to fast prototype.\n      if (!this._subscribers.length) {\n        // eslint-disable-next-line no-use-before-define\n        ObjectSetPrototypeOf(this\x2C Channel.prototype);\n      }\n    }\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    for (let i = 0; i < this._subscribers.length; i++) {\n      try {\n        const onMessage = this._subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this.name = name;\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\n    this._subscribers = [];\n    this.subscribe(subscription);\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n}\n\nconst channels = ObjectCreate(null);\n\nfunction channel(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  channel = new Channel(name);\n  channels[name] = new WeakReference(channel);\n  return channel;\n}\n\nfunction hasSubscribers(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (!channel) {\n    return false;\n  }\n\n  return channel.hasSubscribers;\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  Channel\n};\n
code-source-info,0xfcf8140ff56,241,0,2641,C0O0C4O2641,,
code-creation,Function,10,192500,0xfcf81410a66,308, node:diagnostics_channel:1:1,0xfcf8140fec0,~
code-source-info,0xfcf81410a66,241,0,2641,C0O0C55O25C61O50C67O72C73O96C78O112C84O136C90O160C95O250C98O250C103O250C108O220C114O310C117O310C122O288C128O380C131O380C136O351C142O434C145O434C150O416C197O516C215O1577C267O1467C269O1998C271O1998C275O1998C277O2580C284O2601C290O2612C296O2630C302O2595C307O2640,,
code-creation,Function,4,192541,0x2f3ebe228940,416,wasm-function[16],0x151f17130,*
code-creation,Function,4,192541,0x2f3ebe228ae0,864,wasm-function[13],0x151f1712d,*
code-creation,Function,4,192541,0x2f3ebe228e40,992,wasm-function[21],0x151f17135,*
code-creation,Function,4,192541,0x2f3ebe229220,160,wasm-function[19],0x151f17133,*
code-creation,Function,4,192541,0x2f3ebe2292c0,448,wasm-function[3],0x151f17123,*
code-creation,Function,4,192541,0x2f3ebe229480,480,wasm-function[7],0x151f17127,*
code-creation,Function,4,192541,0x2f3ebe229660,1088,wasm-function[8],0x151f17128,*
code-creation,Function,4,192583,0x2f3ebe229aa0,1024,wasm-function[20],0x151f17134,*
code-creation,Function,4,192583,0x2f3ebe229ea0,64,wasm-function[1],0x151f17121,*
code-creation,Function,4,192583,0x2f3ebe229ee0,384,wasm-function[2],0x151f17122,*
code-creation,Function,4,192583,0x2f3ebe22a060,320,wasm-function[4],0x151f17124,*
code-creation,Function,4,192583,0x2f3ebe22a1a0,608,wasm-function[5],0x151f17125,*
tick,0x100fe1414,192625,0,0x0,3,0x0,0xe757747f9b1,0x311ed227c90d,0x311ed227bbdd,0x17d305527ac7,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204bf,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,192666,0xfcf814112fe,105,channel node:diagnostics_channel:91:17,0xfcf8140ff88,~
code-source-info,0xfcf814112fe,241,2035,2392,C0O2050C2O2073C9O2081C13O2091C15O2114C20O2114C25O2123C29O2136C31O2151C32O2155C44O2219C62O2225C67O2219C68O2297C75O2307C81O2328C88O2349C93O2345C98O2343C102O2375C104O2390,,
code-creation,LazyCompile,10,192666,0xfcf81411886,13,Channel node:diagnostics_channel:65:14,0xfcf814101e0,~
code-source-info,0xfcf81411886,241,1496,1565,C0O1509C1O1527C5O1544C7O1554C12O1564,,
code-creation,LazyCompile,10,192750,0xfcf81411bf6,5,byteLength node:buffer:627:17,0x30d75ba5c00,~
code-source-info,0xfcf81411bf6,18,17976,18001,C0O17995C4O18001,,
code-creation,LazyCompile,10,192750,0xfcf81411cde,23,write node:buffer:628:12,0x30d75ba5ce8,~
code-source-info,0xfcf81411cde,18,18014,18079,C0O18048C17O18048C22O18079,,
code-creation,LazyCompile,10,192833,0xfcf81411fc6,43,get node:http:132:6,0x17d305527628,~
code-source-info,0xfcf81411fc6,232,3767,3973,C0O3776C6O3844C12O3844C17O3825C22O3879C25O3895C32O3893C38O3948C42O3969,,
code-creation,LazyCompile,10,192833,0xfcf814125be,10,get node:http:145:6,0x17d305527678,~
code-source-info,0xfcf814125be,232,4080,4122,C0O4089C5O4106C9O4118,,
code-creation,Eval,10,193000,0xfcf81412afe,5, node:https:1:1,0xfcf81412848,~
script-source,242,node:https,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  FunctionPrototypeCall\x2C\n  JSONStringify\x2C\n  ObjectAssign\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nrequire('internal/util').assertCrypto();\n\nconst tls = require('tls');\nconst { Agent: HttpAgent } = require('_http_agent');\nconst {\n  Server: HttpServer\x2C\n  storeHTTPOptions\x2C\n  _connectionListener\x2C\n} = require('_http_server');\nconst { ClientRequest } = require('_http_client');\nlet debug = require('internal/util/debuglog').debuglog('https'\x2C (fn) => {\n  debug = fn;\n});\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\n\nfunction Server(opts\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(opts\x2C requestListener);\n\n  if (typeof opts === 'function') {\n    requestListener = opts;\n    opts = undefined;\n  }\n  opts = { ...opts };\n\n  if (!opts.ALPNProtocols) {\n    // http/1.0 is not defined as Protocol IDs in IANA\n    // https://www.iana.org/assignments/tls-extensiontype-values\n    //       /tls-extensiontype-values.xhtml#alpn-protocol-ids\n    opts.ALPNProtocols = ['http/1.1'];\n  }\n\n  FunctionPrototypeCall(storeHTTPOptions\x2C this\x2C opts);\n  FunctionPrototypeCall(tls.Server\x2C this\x2C opts\x2C _connectionListener);\n\n  this.httpAllowHalfOpen = false;\n\n  if (requestListener) {\n    this.addListener('request'\x2C requestListener);\n  }\n\n  this.addListener('tlsClientError'\x2C function addListener(err\x2C conn) {\n    if (!this.emit('clientError'\x2C err\x2C conn))\n      conn.destroy(err);\n  });\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n}\nObjectSetPrototypeOf(Server.prototype\x2C tls.Server.prototype);\nObjectSetPrototypeOf(Server\x2C tls.Server);\n\nServer.prototype.setTimeout = HttpServer.prototype.setTimeout;\n\n/**\n * Creates a new `https.Server` instance.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n\n// HTTPS agents.\n\nfunction createConnection(port\x2C host\x2C options) {\n  if (port !== null && typeof port === 'object') {\n    options = port;\n  } else if (host !== null && typeof host === 'object') {\n    options = { ...host };\n  } else if (options === null || typeof options !== 'object') {\n    options = {};\n  } else {\n    options = { ...options };\n  }\n\n  if (typeof port === 'number') {\n    options.port = port;\n  }\n\n  if (typeof host === 'string') {\n    options.host = host;\n  }\n\n  debug('createConnection'\x2C options);\n\n  if (options._agentKey) {\n    const session = this._getSession(options._agentKey);\n    if (session) {\n      debug('reuse session for %j'\x2C options._agentKey);\n      options = {\n        session\x2C\n        ...options\n      };\n    }\n  }\n\n  const socket = tls.connect(options);\n\n  if (options._agentKey) {\n    // Cache new session for reuse\n    socket.on('session'\x2C (session) => {\n      this._cacheSession(options._agentKey\x2C session);\n    });\n\n    // Evict session on error\n    socket.once('close'\x2C (err) => {\n      if (err)\n        this._evictSession(options._agentKey);\n    });\n  }\n\n  return socket;\n}\n\n/**\n * Creates a new `HttpAgent` instance.\n * @param {{\n *   keepAlive?: boolean;\n *   keepAliveMsecs?: number;\n *   maxSockets?: number;\n *   maxTotalSockets?: number;\n *   maxFreeSockets?: number;\n *   scheduling?: string;\n *   timeout?: number;\n *   maxCachedSessions?: number;\n *   servername?: string;\n *   }} [options]\n * @returns {Agent}\n */\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(HttpAgent\x2C this\x2C options);\n  this.defaultPort = 443;\n  this.protocol = 'https:';\n  this.maxCachedSessions = this.options.maxCachedSessions;\n  if (this.maxCachedSessions === undefined)\n    this.maxCachedSessions = 100;\n\n  this._sessionCache = {\n    map: {}\x2C\n    list: []\n  };\n}\nObjectSetPrototypeOf(Agent.prototype\x2C HttpAgent.prototype);\nObjectSetPrototypeOf(Agent\x2C HttpAgent);\nAgent.prototype.createConnection = createConnection;\n\n/**\n * Gets a unique name for a set of options.\n * @param {{\n *   host: string;\n *   port: number;\n *   localAddress: string;\n *   family: number;\n *   }} [options]\n * @returns {string}\n */\nAgent.prototype.getName = function getName(options) {\n  let name = FunctionPrototypeCall(HttpAgent.prototype.getName\x2C this\x2C options);\n\n  name += ':';\n  if (options.ca)\n    name += options.ca;\n\n  name += ':';\n  if (options.cert)\n    name += options.cert;\n\n  name += ':';\n  if (options.clientCertEngine)\n    name += options.clientCertEngine;\n\n  name += ':';\n  if (options.ciphers)\n    name += options.ciphers;\n\n  name += ':';\n  if (options.key)\n    name += options.key;\n\n  name += ':';\n  if (options.pfx)\n    name += options.pfx;\n\n  name += ':';\n  if (options.rejectUnauthorized !== undefined)\n    name += options.rejectUnauthorized;\n\n  name += ':';\n  if (options.servername && options.servername !== options.host)\n    name += options.servername;\n\n  name += ':';\n  if (options.minVersion)\n    name += options.minVersion;\n\n  name += ':';\n  if (options.maxVersion)\n    name += options.maxVersion;\n\n  name += ':';\n  if (options.secureProtocol)\n    name += options.secureProtocol;\n\n  name += ':';\n  if (options.crl)\n    name += options.crl;\n\n  name += ':';\n  if (options.honorCipherOrder !== undefined)\n    name += options.honorCipherOrder;\n\n  name += ':';\n  if (options.ecdhCurve)\n    name += options.ecdhCurve;\n\n  name += ':';\n  if (options.dhparam)\n    name += options.dhparam;\n\n  name += ':';\n  if (options.secureOptions !== undefined)\n    name += options.secureOptions;\n\n  name += ':';\n  if (options.sessionIdContext)\n    name += options.sessionIdContext;\n\n  name += ':';\n  if (options.sigalgs)\n    name += JSONStringify(options.sigalgs);\n\n  name += ':';\n  if (options.privateKeyIdentifier)\n    name += options.privateKeyIdentifier;\n\n  name += ':';\n  if (options.privateKeyEngine)\n    name += options.privateKeyEngine;\n\n  return name;\n};\n\nAgent.prototype._getSession = function _getSession(key) {\n  return this._sessionCache.map[key];\n};\n\nAgent.prototype._cacheSession = function _cacheSession(key\x2C session) {\n  // Cache is disabled\n  if (this.maxCachedSessions === 0)\n    return;\n\n  // Fast case - update existing entry\n  if (this._sessionCache.map[key]) {\n    this._sessionCache.map[key] = session;\n    return;\n  }\n\n  // Put new entry\n  if (this._sessionCache.list.length >= this.maxCachedSessions) {\n    const oldKey = ArrayPrototypeShift(this._sessionCache.list);\n    debug('evicting %j'\x2C oldKey);\n    delete this._sessionCache.map[oldKey];\n  }\n\n  ArrayPrototypePush(this._sessionCache.list\x2C key);\n  this._sessionCache.map[key] = session;\n};\n\nAgent.prototype._evictSession = function _evictSession(key) {\n  const index = ArrayPrototypeIndexOf(this._sessionCache.list\x2C key);\n  if (index === -1)\n    return;\n\n  ArrayPrototypeSplice(this._sessionCache.list\x2C index\x2C 1);\n  delete this._sessionCache.map[key];\n};\n\nconst globalAgent = new Agent();\n\n/**\n * Makes a request to a secure web server.\n * @param {...any} args\n * @returns {ClientRequest}\n */\nfunction request(...args) {\n  let options = {};\n\n  if (typeof args[0] === 'string') {\n    const urlStr = ArrayPrototypeShift(args);\n    options = urlToHttpOptions(new URL(urlStr));\n  } else if (args[0] && args[0][searchParamsSymbol] &&\n             args[0][searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    options = urlToHttpOptions(ArrayPrototypeShift(args));\n  }\n\n  if (args[0] && typeof args[0] !== 'function') {\n    ObjectAssign(options\x2C ArrayPrototypeShift(args));\n  }\n\n  options._defaultAgent = module.exports.globalAgent;\n  ArrayPrototypeUnshift(args\x2C options);\n\n  return ReflectConstruct(ClientRequest\x2C args);\n}\n\n/**\n * Makes a GET request to a secure web server.\n * @param {string | URL} input\n * @param {{\n *   agent?: Agent | boolean;\n *   auth?: string;\n *   createConnection?: Function;\n *   defaultPort?: number;\n *   family?: number;\n *   headers?: Object;\n *   hints?: number;\n *   host?: string;\n *   hostname?: string;\n *   insecureHTTPParser?: boolean;\n *   localAddress?: string;\n *   localPort?: number;\n *   lookup?: Function;\n *   maxHeaderSize?: number;\n *   method?: string;\n *   path?: string;\n *   port?: number;\n *   protocol?: string;\n *   setHost?: boolean;\n *   socketPath?: string;\n *   timeout?: number;\n *   signal?: AbortSignal;\n *   } | string | URL} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(input\x2C options\x2C cb) {\n  const req = request(input\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent\x2C\n  Server\x2C\n  createServer\x2C\n  get\x2C\n  request\n};\n
code-source-info,0xfcf81412afe,242,0,10048,C0O0C4O10048,,
code-creation,Function,10,193416,0xfcf8141313e,523, node:https:1:1,0xfcf81412a68,~
code-source-info,0xfcf8141313e
code-creation,LazyCompile,10,193458,0xfcf8141435e,19,assertCrypto node:internal/util:155:22,0x1910fc7e9f18,~
code-source-info,0xfcf8141435e,12,3984,4037,C0O3991C6O4009C11O4015C16O4009C18O4036,,
code-creation,Eval,10,193833,0xfcf814150ce,5, node:tls:1:1,0xfcf81414d48,~
script-source,243,node:tls,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  RegExpPrototypeTest\x2C\n  StringFromCharCode\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  ERR_TLS_CERT_ALTNAME_INVALID\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst internalUtil = require('internal/util');\ninternalUtil.assertCrypto();\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst net = require('net');\nconst { getOptionValue } = require('internal/options');\nconst { getRootCertificates\x2C getSSLCiphers } = internalBinding('crypto');\nconst { Buffer } = require('buffer');\nconst { URL } = require('internal/url');\nconst { canonicalizeIP } = internalBinding('cares_wrap');\nconst _tls_common = require('_tls_common');\nconst _tls_wrap = require('_tls_wrap');\nconst { createSecurePair } = require('internal/tls/secure-pair');\nconst { parseCertString } = require('internal/tls/parse-cert-string');\n\n// Allow {CLIENT_RENEG_LIMIT} client-initiated session renegotiations\n// every {CLIENT_RENEG_WINDOW} seconds. An error event is emitted if more\n// renegotiations are seen. The settings are applied to all remote client\n// connections.\nexports.CLIENT_RENEG_LIMIT = 3;\nexports.CLIENT_RENEG_WINDOW = 600;\n\nexports.DEFAULT_CIPHERS = getOptionValue('--tls-cipher-list');\n\nexports.DEFAULT_ECDH_CURVE = 'auto';\n\nif (getOptionValue('--tls-min-v1.0'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1';\nelse if (getOptionValue('--tls-min-v1.1'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.1';\nelse if (getOptionValue('--tls-min-v1.2'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\nelse if (getOptionValue('--tls-min-v1.3'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.3';\nelse\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\n\nif (getOptionValue('--tls-max-v1.3'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3';\nelse if (getOptionValue('--tls-max-v1.2'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.2';\nelse\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3'; // Will depend on node version.\n\n\nexports.getCiphers = internalUtil.cachedResult(\n  () => internalUtil.filterDuplicateStrings(getSSLCiphers()\x2C true)\n);\n\nlet rootCertificates;\n\nfunction cacheRootCertificates() {\n  rootCertificates = ObjectFreeze(getRootCertificates());\n}\n\nObjectDefineProperty(exports\x2C 'rootCertificates'\x2C {\n  configurable: false\x2C\n  enumerable: true\x2C\n  get: () => {\n    // Out-of-line caching to promote inlining the getter.\n    if (!rootCertificates) cacheRootCertificates();\n    return rootCertificates;\n  }\x2C\n});\n\n// Convert protocols array into valid OpenSSL protocols list\n// ("\\x06spdy/2\\x08http/1.1\\x08http/1.0")\nfunction convertProtocols(protocols) {\n  const lens = new Array(protocols.length);\n  const buff = Buffer.allocUnsafe(ArrayPrototypeReduce(protocols\x2C (p\x2C c\x2C i) => {\n    const len = Buffer.byteLength(c);\n    if (len > 255) {\n      throw new ERR_OUT_OF_RANGE('The byte length of the protocol at index ' +\n        `${i} exceeds the maximum length.`\x2C '<= 255'\x2C len\x2C true);\n    }\n    lens[i] = len;\n    return p + 1 + len;\n  }\x2C 0));\n\n  let offset = 0;\n  for (let i = 0\x2C c = protocols.length; i < c; i++) {\n    buff[offset++] = lens[i];\n    buff.write(protocols[i]\x2C offset);\n    offset += lens[i];\n  }\n\n  return buff;\n}\n\nexports.convertALPNProtocols = function convertALPNProtocols(protocols\x2C out) {\n  // If protocols is Array - translate it into buffer\n  if (ArrayIsArray(protocols)) {\n    out.ALPNProtocols = convertProtocols(protocols);\n  } else if (isArrayBufferView(protocols)) {\n    // Copy new buffer not to be modified by user.\n    out.ALPNProtocols = Buffer.from(protocols);\n  }\n};\n\nfunction unfqdn(host) {\n  return StringPrototypeReplace(host\x2C /[.]$/\x2C '');\n}\n\n// String#toLowerCase() is locale-sensitive so we use\n// a conservative version that only lowercases A-Z.\nfunction toLowerCase(c) {\n  return StringFromCharCode(32 + StringPrototypeCharCodeAt(c\x2C 0));\n}\n\nfunction splitHost(host) {\n  return StringPrototypeSplit(\n    StringPrototypeReplace(unfqdn(host)\x2C /[A-Z]/g\x2C toLowerCase)\x2C\n    '.'\n  );\n}\n\nfunction check(hostParts\x2C pattern\x2C wildcards) {\n  // Empty strings\x2C null\x2C undefined\x2C etc. never match.\n  if (!pattern)\n    return false;\n\n  const patternParts = splitHost(pattern);\n\n  if (hostParts.length !== patternParts.length)\n    return false;\n\n  // Pattern has empty components\x2C e.g. "bad..example.com".\n  if (ArrayPrototypeIncludes(patternParts\x2C ''))\n    return false;\n\n  // RFC 6125 allows IDNA U-labels (Unicode) in names but we have no\n  // good way to detect their encoding or normalize them so we simply\n  // reject them.  Control characters and blanks are rejected as well\n  // because nothing good can come from accepting them.\n  const isBad = (s) => RegExpPrototypeTest(/[^\\u0021-\\u007F]/u\x2C s);\n  if (ArrayPrototypeSome(patternParts\x2C isBad))\n    return false;\n\n  // Check host parts from right to left first.\n  for (let i = hostParts.length - 1; i > 0; i -= 1) {\n    if (hostParts[i] !== patternParts[i])\n      return false;\n  }\n\n  const hostSubdomain = hostParts[0];\n  const patternSubdomain = patternParts[0];\n  const patternSubdomainParts = StringPrototypeSplit(patternSubdomain\x2C '*');\n\n  // Short-circuit when the subdomain does not contain a wildcard.\n  // RFC 6125 does not allow wildcard substitution for components\n  // containing IDNA A-labels (Punycode) so match those verbatim.\n  if (patternSubdomainParts.length === 1 ||\n      StringPrototypeIncludes(patternSubdomain\x2C 'xn--'))\n    return hostSubdomain === patternSubdomain;\n\n  if (!wildcards)\n    return false;\n\n  // More than one wildcard is always wrong.\n  if (patternSubdomainParts.length > 2)\n    return false;\n\n  // *.tld wildcards are not allowed.\n  if (patternParts.length <= 2)\n    return false;\n\n  const { 0: prefix\x2C 1: suffix } = patternSubdomainParts;\n\n  if (prefix.length + suffix.length > hostSubdomain.length)\n    return false;\n\n  if (!StringPrototypeStartsWith(hostSubdomain\x2C prefix))\n    return false;\n\n  if (!StringPrototypeEndsWith(hostSubdomain\x2C suffix))\n    return false;\n\n  return true;\n}\n\nexports.checkServerIdentity = function checkServerIdentity(hostname\x2C cert) {\n  const subject = cert.subject;\n  const altNames = cert.subjectaltname;\n  const dnsNames = [];\n  const uriNames = [];\n  const ips = [];\n\n  hostname = '' + hostname;\n\n  if (altNames) {\n    const splitAltNames = StringPrototypeSplit(altNames\x2C '\x2C ');\n    ArrayPrototypeForEach(splitAltNames\x2C (name) => {\n      if (StringPrototypeStartsWith(name\x2C 'DNS:')) {\n        ArrayPrototypePush(dnsNames\x2C StringPrototypeSlice(name\x2C 4));\n      } else if (StringPrototypeStartsWith(name\x2C 'URI:')) {\n        const uri = new URL(StringPrototypeSlice(name\x2C 4));\n\n        // TODO(bnoordhuis) Also use scheme.\n        ArrayPrototypePush(uriNames\x2C uri.hostname);\n      } else if (StringPrototypeStartsWith(name\x2C 'IP Address:')) {\n        ArrayPrototypePush(ips\x2C canonicalizeIP(StringPrototypeSlice(name\x2C 11)));\n      }\n    });\n  }\n\n  let valid = false;\n  let reason = 'Unknown reason';\n\n  const hasAltNames =\n    dnsNames.length > 0 || ips.length > 0 || uriNames.length > 0;\n\n  hostname = unfqdn(hostname);  // Remove trailing dot for error messages.\n\n  if (net.isIP(hostname)) {\n    valid = ArrayPrototypeIncludes(ips\x2C canonicalizeIP(hostname));\n    if (!valid)\n      reason = `IP: ${hostname} is not in the cert's list: ` +\n               ArrayPrototypeJoin(ips\x2C '\x2C ');\n    // TODO(bnoordhuis) Also check URI SANs that are IP addresses.\n  } else if (hasAltNames || subject) {\n    const hostParts = splitHost(hostname);\n    const wildcard = (pattern) => check(hostParts\x2C pattern\x2C true);\n\n    if (hasAltNames) {\n      const noWildcard = (pattern) => check(hostParts\x2C pattern\x2C false);\n      valid = ArrayPrototypeSome(dnsNames\x2C wildcard) ||\n              ArrayPrototypeSome(uriNames\x2C noWildcard);\n      if (!valid)\n        reason =\n          `Host: ${hostname}. is not in the cert's altnames: ${altNames}`;\n    } else {\n      // Match against Common Name only if no supported identifiers exist.\n      const cn = subject.CN;\n\n      if (ArrayIsArray(cn))\n        valid = ArrayPrototypeSome(cn\x2C wildcard);\n      else if (cn)\n        valid = wildcard(cn);\n\n      if (!valid)\n        reason = `Host: ${hostname}. is not cert's CN: ${cn}`;\n    }\n  } else {\n    reason = 'Cert is empty';\n  }\n\n  if (!valid) {\n    return new ERR_TLS_CERT_ALTNAME_INVALID(reason\x2C hostname\x2C cert);\n  }\n};\n\nexports.createSecureContext = _tls_common.createSecureContext;\nexports.SecureContext = _tls_common.SecureContext;\nexports.TLSSocket = _tls_wrap.TLSSocket;\nexports.Server = _tls_wrap.Server;\nexports.createServer = _tls_wrap.createServer;\nexports.connect = _tls_wrap.connect;\n\nexports.parseCertString = internalUtil.deprecate(\n  parseCertString\x2C\n  'tls.parseCertString() is deprecated. ' +\n  'Please use querystring.parse() instead.'\x2C\n  'DEP0076');\n\nexports.createSecurePair = internalUtil.deprecate(\n  createSecurePair\x2C\n  'tls.createSecurePair() is deprecated. Please use ' +\n  'tls.TLSSocket instead.'\x2C 'DEP0064');\n
code-source-info,0xfcf814150ce,243,0,10345,C0O0C4O10345,,
code-creation,Function,10,194250,0xfcf814157e6,751, node:tls:1:1,0xfcf81415038,~
code-source-info,0xfcf814157e
tick,0x1a363621c,194333,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,195166,0xfcf8142601e,5, node:_tls_common:1:1,0xfcf81425da8,~
script-source,244,node:_tls_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst tls = require('tls');\n\nconst {\n  ArrayPrototypePush\x2C\n  ObjectCreate\x2C\n  StringPrototypeReplace\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_TLS_INVALID_PROTOCOL_VERSION\x2C\n    ERR_TLS_PROTOCOL_VERSION_CONFLICT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  crypto: {\n    SSL_OP_CIPHER_SERVER_PREFERENCE\x2C\n    TLS1_VERSION\x2C\n    TLS1_1_VERSION\x2C\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\n\nconst {\n  configSecureContext\x2C\n} = require('internal/tls/secure-context');\n\nconst {\n  parseCertString\x2C\n} = require('internal/tls/parse-cert-string');\n\nfunction toV(which\x2C v\x2C def) {\n  if (v == null) v = def;\n  if (v === 'TLSv1') return TLS1_VERSION;\n  if (v === 'TLSv1.1') return TLS1_1_VERSION;\n  if (v === 'TLSv1.2') return TLS1_2_VERSION;\n  if (v === 'TLSv1.3') return TLS1_3_VERSION;\n  throw new ERR_TLS_INVALID_PROTOCOL_VERSION(v\x2C which);\n}\n\nconst {\n  SecureContext: NativeSecureContext\x2C\n} = internalBinding('crypto');\n\nfunction SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C maxVersion) {\n  if (!(this instanceof SecureContext)) {\n    return new SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C\n                             maxVersion);\n  }\n\n  if (secureProtocol) {\n    if (minVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(minVersion\x2C secureProtocol);\n    if (maxVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(maxVersion\x2C secureProtocol);\n  }\n\n  this.context = new NativeSecureContext();\n  this.context.init(secureProtocol\x2C\n                    toV('minimum'\x2C minVersion\x2C tls.DEFAULT_MIN_VERSION)\x2C\n                    toV('maximum'\x2C maxVersion\x2C tls.DEFAULT_MAX_VERSION));\n\n  if (secureOptions) {\n    validateInteger(secureOptions\x2C 'secureOptions');\n    this.context.setOptions(secureOptions);\n  }\n}\n\nfunction createSecureContext(options) {\n  if (!options) options = {};\n\n  const {\n    honorCipherOrder\x2C\n    minVersion\x2C\n    maxVersion\x2C\n    secureProtocol\x2C\n  } = options;\n\n  let { secureOptions } = options;\n\n  if (honorCipherOrder)\n    secureOptions |= SSL_OP_CIPHER_SERVER_PREFERENCE;\n\n  const c = new SecureContext(secureProtocol\x2C secureOptions\x2C\n                              minVersion\x2C maxVersion);\n\n  configSecureContext(c.context\x2C options);\n\n  return c;\n}\n\n// Translate some fields from the handle's C-friendly format into more idiomatic\n// javascript object representations before passing them back to the user.  Can\n// be used on any cert object\x2C but changing the name would be semver-major.\nfunction translatePeerCertificate(c) {\n  if (!c)\n    return null;\n\n  if (c.issuer != null) c.issuer = parseCertString(c.issuer);\n  if (c.issuerCertificate != null && c.issuerCertificate !== c) {\n    c.issuerCertificate = translatePeerCertificate(c.issuerCertificate);\n  }\n  if (c.subject != null) c.subject = parseCertString(c.subject);\n  if (c.infoAccess != null) {\n    const info = c.infoAccess;\n    c.infoAccess = ObjectCreate(null);\n\n    // XXX: More key validation?\n    StringPrototypeReplace(info\x2C /([^\\n:]*):([^\\n]*)(?:\\n|$)/g\x2C\n                           (all\x2C key\x2C val) => {\n                             if (key in c.infoAccess)\n                               ArrayPrototypePush(c.infoAccess[key]\x2C val);\n                             else\n                               c.infoAccess[key] = [val];\n                           });\n  }\n  return c;\n}\n\nmodule.exports = {\n  SecureContext\x2C\n  createSecureContext\x2C\n  translatePeerCertificate\x2C\n};\n
code-source-info,0xfcf8142601e,244,0,4647,C0O0C4O4647,,
code-creation,Function,10,195333,0xfcf81426326,255, node:_tls_common:1:1,0xfcf81425f88,~
code-source-info,0xfcf81426326,244,0,4647,C0O0C73O1161C76O1161C80O1161C82O1188C88O1210C94O1226C100O1373C103O1373C108O1373C113O1291C119O1329C125O1546C128O1546C133O1546C138O1426C144O1463C150O1481C156O1501C162O1521C168O1608C171O1608C176O1587C182O1676C185O1676C190O1651C196O1748C199O1748C204O1727C210O2137C213O2137C218O2112C224O4557C231O4578C237O4595C243O4618C249O4572C254O4646,,
tick,0x100e2998c,195416,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf8141596a,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,195541,0xfcf814271ae,5, node:internal/tls/secure-context:1:1,0xfcf81426ec8,~
script-source,245,node:internal/tls/secure-context,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  toBuf\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nfunction getDefaultEcdhCurve() {\n  // We do it this way because DEFAULT_ECDH_CURVE can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_ECDH_CURVE || 'auto';\n}\n\nfunction getDefaultCiphers() {\n  // We do it this way because DEFAULT_CIPHERS can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_CIPHERS;\n}\n\nfunction addCACerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.addCACert(cert);\n  });\n}\n\nfunction setCerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.setCert(cert);\n  });\n}\n\nfunction validateKeyOrCertOption(name\x2C value) {\n  if (typeof value !== 'string' && !isArrayBufferView(value)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      value\n    );\n  }\n}\n\nfunction setKey(context\x2C key\x2C passphrase\x2C name) {\n  validateKeyOrCertOption(`${name}.key`\x2C key);\n  if (passphrase != null)\n    validateString(passphrase\x2C `${name}.passphrase`);\n  context.setKey(key\x2C passphrase);\n}\n\nfunction processCiphers(ciphers\x2C name) {\n  ciphers = StringPrototypeSplit(ciphers || getDefaultCiphers()\x2C ':');\n\n  const cipherList =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            !StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  const cipherSuites =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  // Specifying empty cipher suites for both TLS1.2 and TLS1.3 is invalid\x2C its\n  // not possible to handshake with no suites.\n  if (cipherSuites === '' && cipherList === '')\n    throw new ERR_INVALID_ARG_VALUE(name\x2C ciphers);\n\n  return { cipherList\x2C cipherSuites };\n}\n\nfunction configSecureContext(context\x2C options = {}\x2C name = 'options') {\n  validateObject(options\x2C name);\n\n  const {\n    ca\x2C\n    cert\x2C\n    ciphers = getDefaultCiphers()\x2C\n    clientCertEngine\x2C\n    crl\x2C\n    dhparam\x2C\n    ecdhCurve = getDefaultEcdhCurve()\x2C\n    key\x2C\n    passphrase\x2C\n    pfx\x2C\n    privateKeyIdentifier\x2C\n    privateKeyEngine\x2C\n    sessionIdContext\x2C\n    sessionTimeout\x2C\n    sigalgs\x2C\n    ticketKeys\x2C\n  } = options;\n\n  // Add CA before the cert to be able to load cert's issuer in C++ code.\n  // NOTE(@jasnell): ca\x2C cert\x2C and key are permitted to be falsy\x2C so do not\n  // change the checks to !== undefined checks.\n  if (ca) {\n    addCACerts(context\x2C ArrayIsArray(ca) ? ca : [ca]\x2C `${name}.ca`);\n  } else {\n    context.addRootCerts();\n  }\n\n  if (cert) {\n    setCerts(context\x2C ArrayIsArray(cert) ? cert : [cert]\x2C `${name}.cert`);\n  }\n\n  // Set the key after the cert.\n  // `ssl_set_pkey` returns `0` when the key does not match the cert\x2C but\n  // `ssl_set_cert` returns `1` and nullifies the key in the SSL structure\n  // which leads to the crash later on.\n  if (key) {\n    if (ArrayIsArray(key)) {\n      for (let i = 0; i < key.length; ++i) {\n        const val = key[i];\n        // eslint-disable-next-line eqeqeq\n        const pem = (val != undefined && val.pem !== undefined ? val.pem : val);\n        setKey(context\x2C pem\x2C val.passphrase || passphrase\x2C name);\n      }\n    } else {\n      setKey(context\x2C key\x2C passphrase\x2C name);\n    }\n  }\n\n  if (sigalgs !== undefined) {\n    validateString(sigalgs\x2C `${name}.sigalgs`);\n\n    if (sigalgs === '')\n      throw new ERR_INVALID_ARG_VALUE(`${name}.sigalgs`\x2C sigalgs);\n\n    context.setSigalgs(sigalgs);\n  }\n\n  if (privateKeyIdentifier !== undefined) {\n    if (privateKeyEngine === undefined) {\n      // Engine is required when privateKeyIdentifier is present\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyEngine`\x2C\n                                      privateKeyEngine);\n    }\n    if (key) {\n      // Both data key and engine key can't be set at the same time\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyIdentifier`\x2C\n                                      privateKeyIdentifier);\n    }\n\n    if (typeof privateKeyIdentifier === 'string' &&\n        typeof privateKeyEngine === 'string') {\n      if (context.setEngineKey)\n        context.setEngineKey(privateKeyIdentifier\x2C privateKeyEngine);\n      else\n        throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    } else if (typeof privateKeyIdentifier !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyIdentifier`\x2C\n                                     ['string'\x2C 'undefined']\x2C\n                                     privateKeyIdentifier);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyEngine`\x2C\n                                     ['string'\x2C 'undefined']\x2C\n                                     privateKeyEngine);\n    }\n  }\n\n  if (ciphers != null)\n    validateString(ciphers\x2C `${name}.ciphers`);\n\n  // Work around an OpenSSL API quirk. cipherList is for TLSv1.2 and below\x2C\n  // cipherSuites is for TLSv1.3 (and presumably any later versions). TLSv1.3\n  // cipher suites all have a standard name format beginning with TLS_\x2C so split\n  // the ciphers and pass them to the appropriate API.\n  const {\n    cipherList\x2C\n    cipherSuites\x2C\n  } = processCiphers(ciphers\x2C `${name}.ciphers`);\n\n  context.setCipherSuites(cipherSuites);\n  context.setCiphers(cipherList);\n\n  if (cipherSuites === '' &&\n      context.getMaxProto() > TLS1_2_VERSION &&\n      context.getMinProto() < TLS1_3_VERSION) {\n    context.setMaxProto(TLS1_2_VERSION);\n  }\n\n  if (cipherList === '' &&\n      context.getMinProto() < TLS1_3_VERSION &&\n      context.getMaxProto() > TLS1_2_VERSION) {\n    context.setMinProto(TLS1_3_VERSION);\n  }\n\n  validateString(ecdhCurve\x2C `${name}.ecdhCurve`);\n  context.setECDHCurve(ecdhCurve);\n\n  if (dhparam !== undefined) {\n    validateKeyOrCertOption(`${name}.dhparam`\x2C dhparam);\n    const warning = context.setDHParam(dhparam);\n    if (warning)\n      process.emitWarning(warning\x2C 'SecurityWarning');\n  }\n\n  if (crl !== undefined) {\n    if (ArrayIsArray(crl)) {\n      for (const val of crl) {\n        validateKeyOrCertOption(`${name}.crl`\x2C val);\n        context.addCRL(val);\n      }\n    } else {\n      validateKeyOrCertOption(`${name}.crl`\x2C crl);\n      context.addCRL(crl);\n    }\n  }\n\n  if (sessionIdContext !== undefined) {\n    validateString(sessionIdContext\x2C `${name}.sessionIdContext`);\n    context.setSessionIdContext(sessionIdContext);\n  }\n\n  if (pfx !== undefined) {\n    if (ArrayIsArray(pfx)) {\n      ArrayPrototypeForEach(pfx\x2C (val) => {\n        const raw = val.buf ? val.buf : val;\n        const pass = val.passphrase || passphrase;\n        if (pass !== undefined) {\n          context.loadPKCS12(toBuf(raw)\x2C toBuf(pass));\n        } else {\n          context.loadPKCS12(toBuf(raw));\n        }\n      });\n    } else if (passphrase) {\n      context.loadPKCS12(toBuf(pfx)\x2C toBuf(passphrase));\n    } else {\n      context.loadPKCS12(toBuf(pfx));\n    }\n  }\n\n  if (typeof clientCertEngine === 'string') {\n    if (typeof context.setClientCertEngine !== 'function')\n      throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    else\n      context.setClientCertEngine(clientCertEngine);\n  } else if (clientCertEngine !== undefined) {\n    throw new ERR_INVALID_ARG_TYPE(`${name}.clientCertEngine`\x2C\n                                   ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                   clientCertEngine);\n  }\n\n  if (ticketKeys !== undefined) {\n    if (!isArrayBufferView(ticketKeys)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        `${name}.ticketKeys`\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ticketKeys);\n    }\n    if (ticketKeys.byteLength !== 48) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `${name}.ticketKeys`\x2C\n        ticketKeys.byteLength\x2C\n        'must be exactly 48 bytes');\n    }\n    context.setTicketKeys(ticketKeys);\n  }\n\n  if (sessionTimeout !== undefined) {\n    validateInt32(sessionTimeout\x2C `${name}.sessionTimeout`);\n    context.setSessionTimeout(sessionTimeout);\n  }\n}\n\nmodule.exports = {\n  configSecureContext\x2C\n};\n
code-source-info,0xfcf814271ae,245,0,8911,C0O0C4O8911,,
code-creation,Function,10,195875,0xfcf814275f6,285, node:internal/tls/secure-context:1:1,0xfcf81427118,~
code-source-info,0xfcf814275f6,245,0,8911,C0O0C108O25C114O41C120O65C126O90C132O112C138O136C144O306C150O306C155O306C160O204C166O248C172O274C178O368C184O368C189O345C195O466C201O466C206O411C212O428C218O446C224O520C230O520C235O509C241O623C244O623C249O623C254O578C260O598C266O8866C273O8887C279O8881C284O8910,,
code-creation,Eval,10,196083,0xfcf8142938e,5, node:internal/crypto/util:1:1,0xfcf81428fe8,~
script-source,246,node:internal/crypto/util,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  Number\x2C\n  ObjectKeys\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  getCiphers: _getCiphers\x2C\n  getCurves: _getCurves\x2C\n  getHashes: _getHashes\x2C\n  setEngine: _setEngine\x2C\n  secureHeapUsed: _secureHeapUsed\x2C\n} = internalBinding('crypto');\n\nconst { getOptionValue } = require('internal/options');\n\nconst {\n  crypto: {\n    ENGINE_METHOD_ALL\n  }\n} = internalBinding('constants');\n\nconst normalizeHashName = require('internal/crypto/hashnames');\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateString\n} = require('internal/validators');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  cachedResult\x2C\n  filterDuplicateStrings\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst kHandle = Symbol('kHandle');\nconst kKeyObject = Symbol('kKeyObject');\n\nconst lazyRequireCache = {};\n\nfunction lazyRequire(name) {\n  let ret = lazyRequireCache[name];\n  if (ret === undefined)\n    ret = lazyRequireCache[name] = require(name);\n  return ret;\n}\n\nvar defaultEncoding = 'buffer';\n\nfunction setDefaultEncoding(val) {\n  defaultEncoding = val;\n}\n\nfunction getDefaultEncoding() {\n  return defaultEncoding;\n}\n\n// This is here because many functions accepted binary strings without\n// any explicit encoding in older versions of node\x2C and we don't want\n// to break them unnecessarily.\nfunction toBuf(val\x2C encoding) {\n  if (typeof val === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(val\x2C encoding);\n  }\n  return val;\n}\n\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\n\nfunction setEngine(id\x2C flags) {\n  validateString(id\x2C 'id');\n  if (flags)\n    validateNumber(flags\x2C 'flags');\n  flags = flags >>> 0;\n\n  // Use provided engine for everything by default\n  if (flags === 0)\n    flags = ENGINE_METHOD_ALL;\n\n  if (!_setEngine(id\x2C flags))\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\n}\n\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\n  if (isAnyArrayBuffer(buffer))\n    return buffer;\n  if (typeof buffer === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(buffer\x2C encoding);\n  }\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'ArrayBuffer'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      buffer\n    );\n  }\n  return buffer;\n});\n\n// The maximum buffer size that we'll support in the WebCrypto impl\nconst kMaxBufferLength = (2 ** 31) - 1;\n\n// The EC named curves that we currently support via the Web Crypto API.\nconst kNamedCurveAliases = {\n  'P-256': 'prime256v1'\x2C\n  'P-384': 'secp384r1'\x2C\n  'P-521': 'secp521r1'\x2C\n  'NODE-ED25519': 'ed25519'\x2C\n  'NODE-ED448': 'ed448'\x2C\n  'NODE-X25519': 'x25519'\x2C\n  'NODE-X448': 'x448'\x2C\n};\n\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\n\n// These are the only algorithms we currently support\n// via the Web Crypto API\nconst kAlgorithms = {\n  'rsassa-pkcs1-v1_5': 'RSASSA-PKCS1-v1_5'\x2C\n  'rsa-pss': 'RSA-PSS'\x2C\n  'rsa-oaep': 'RSA-OAEP'\x2C\n  'ecdsa': 'ECDSA'\x2C\n  'ecdh': 'ECDH'\x2C\n  'aes-ctr': 'AES-CTR'\x2C\n  'aes-cbc': 'AES-CBC'\x2C\n  'aes-gcm': 'AES-GCM'\x2C\n  'aes-kw': 'AES-KW'\x2C\n  'hmac': 'HMAC'\x2C\n  'sha-1': 'SHA-1'\x2C\n  'sha-256': 'SHA-256'\x2C\n  'sha-384': 'SHA-384'\x2C\n  'sha-512': 'SHA-512'\x2C\n  'hkdf': 'HKDF'\x2C\n  'pbkdf2': 'PBKDF2'\x2C\n  // Following here are Node.js specific extensions. All\n  // should be prefixed with 'node-'\n  'node-dsa': 'NODE-DSA'\x2C\n  'node-dh': 'NODE-DH'\x2C\n  'node-scrypt': 'NODE-SCRYPT'\x2C\n  'node-ed25519': 'NODE-ED25519'\x2C\n  'node-ed448': 'NODE-ED448'\x2C\n};\nconst kAlgorithmsKeys = ObjectKeys(kAlgorithms);\n\n// These are the only export and import formats we currently\n// support via the Web Crypto API\nconst kExportFormats = [\n  'raw'\x2C\n  'pkcs8'\x2C\n  'spki'\x2C\n  'jwk'\x2C\n  'node.keyObject'];\n\n// These are the only hash algorithms we currently support via\n// the Web Crypto API.\nconst kHashTypes = [\n  'SHA-1'\x2C\n  'SHA-256'\x2C\n  'SHA-384'\x2C\n  'SHA-512'\x2C\n];\n\nfunction validateMaxBufferLength(data\x2C name) {\n  if (data.byteLength > kMaxBufferLength) {\n    throw lazyDOMException(\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\n      'OperationError');\n  }\n}\n\nfunction normalizeAlgorithm(algorithm\x2C label = 'algorithm') {\n  if (algorithm != null) {\n    if (typeof algorithm === 'string')\n      algorithm = { name: algorithm };\n\n    if (typeof algorithm === 'object') {\n      const { name } = algorithm;\n      let hash;\n      if (typeof name !== 'string' ||\n          !ArrayPrototypeIncludes(\n            kAlgorithmsKeys\x2C\n            StringPrototypeToLowerCase(name))) {\n        throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      if (algorithm.hash !== undefined) {\n        hash = normalizeAlgorithm(algorithm.hash\x2C 'algorithm.hash');\n        if (!ArrayPrototypeIncludes(kHashTypes\x2C hash.name))\n          throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      return {\n        ...algorithm\x2C\n        name: kAlgorithms[StringPrototypeToLowerCase(name)]\x2C\n        hash\x2C\n      };\n    }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nfunction hasAnyNotIn(set\x2C checks) {\n  for (const s of set)\n    if (!ArrayPrototypeIncludes(checks\x2C s))\n      return true;\n  return false;\n}\n\nfunction validateBitLength(length\x2C name\x2C required = false) {\n  if (length !== undefined || required) {\n    validateNumber(length\x2C name);\n    if (length < 0)\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\n    if (length % 8) {\n      throw new ERR_INVALID_ARG_VALUE(\n        name\x2C\n        length\x2C\n        'must be a multiple of 8');\n    }\n  }\n}\n\nfunction validateByteLength(buf\x2C name\x2C target) {\n  if (buf.byteLength !== target) {\n    throw lazyDOMException(\n      `${name} must contain exactly ${target} bytes`\x2C\n      'OperationError');\n  }\n}\n\nconst validateByteSource = hideStackFrames((val\x2C name) => {\n  val = toBuf(val);\n\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\n    return;\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    [\n      'string'\x2C\n      'ArrayBuffer'\x2C\n      'TypedArray'\x2C\n      'DataView'\x2C\n      'Buffer'\x2C\n    ]\x2C\n    val);\n});\n\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\n  if (err) return reject(err);\n  resolve(result);\n}\n\nfunction jobPromise(job) {\n  return new Promise((resolve\x2C reject) => {\n    job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\n    job.run();\n  });\n}\n\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\n// number of leading zero bits. Our conventional APIs for reading\n// an unsigned int from a Buffer are not adequate. The implementation\n// here is adapted from the chromium implementation here:\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\n// Returns undefined if the conversion was unsuccessful.\nfunction bigIntArrayToUnsignedInt(input) {\n  let result = 0;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    if (n_reversed >= 4 && input[n])\n      return;  // Too large\n    result |= input[n] << 8 * n_reversed;\n  }\n\n  return result;\n}\n\nfunction bigIntArrayToUnsignedBigInt(input) {\n  let result = 0n;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\n  }\n\n  return result;\n}\n\nfunction getStringOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null)\n    validateString(value\x2C `options.${key}`);\n  return value;\n}\n\nfunction getUsagesUnion(usageSet\x2C ...usages) {\n  const newset = [];\n  for (let n = 0; n < usages.length; n++) {\n    if (usageSet.has(usages[n]))\n      ArrayPrototypePush(newset\x2C usages[n]);\n  }\n  return newset;\n}\n\nfunction getHashLength(name) {\n  switch (name) {\n    case 'SHA-1': return 160;\n    case 'SHA-256': return 256;\n    case 'SHA-384': return 384;\n    case 'SHA-512': return 512;\n  }\n}\n\nconst kKeyOps = {\n  sign: 1\x2C\n  verify: 2\x2C\n  encrypt: 3\x2C\n  decrypt: 4\x2C\n  wrapKey: 5\x2C\n  unwrapKey: 6\x2C\n  deriveKey: 7\x2C\n  deriveBits: 8\x2C\n};\n\nfunction validateKeyOps(keyOps\x2C usagesSet) {\n  if (keyOps === undefined) return;\n  validateArray(keyOps\x2C 'keyData.key_ops');\n  let flags = 0;\n  for (let n = 0; n < keyOps.length; n++) {\n    const op = keyOps[n];\n    const op_flag = kKeyOps[op];\n    // Skipping unknown key ops\n    if (op_flag === undefined)\n      continue;\n    // Have we seen it already? if so\x2C error\n    if (flags & (1 << op_flag))\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\n    flags |= (1 << op_flag);\n\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\n    // key usage combinations. Specifically\x2C it says that unrelated key\n    // ops SHOULD NOT be used together. We're not yet validating that here.\n  }\n\n  if (usagesSet !== undefined) {\n    for (const use of usagesSet) {\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\n        throw lazyDOMException(\n          'Key operations and usage mismatch'\x2C\n          'DataError');\n      }\n    }\n  }\n}\n\nfunction secureHeapUsed() {\n  const val = _secureHeapUsed();\n  if (val === undefined)\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\n  const used = Number(_secureHeapUsed());\n  const total = Number(getOptionValue('--secure-heap'));\n  const min = Number(getOptionValue('--secure-heap-min'));\n  const utilization = used / total;\n  return { total\x2C used\x2C utilization\x2C min };\n}\n\nmodule.exports = {\n  getArrayBufferOrView\x2C\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  toBuf\x2C\n\n  kHashTypes\x2C\n  kNamedCurveAliases\x2C\n  kAesKeyLengths\x2C\n  kExportFormats\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  hasAnyNotIn\x2C\n  validateBitLength\x2C\n  validateByteLength\x2C\n  validateByteSource\x2C\n  validateKeyOps\x2C\n  jobPromise\x2C\n  lazyRequire\x2C\n  validateMaxBufferLength\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n  bigIntArrayToUnsignedInt\x2C\n  getStringOption\x2C\n  getUsagesUnion\x2C\n  getHashLength\x2C\n  secureHeapUsed\x2C\n};\n
code-source-info,0xfcf8142938e,246,0,10573,C0O0C4O10573,,
code-creation,Function,10,196541,0xfcf8142a3fe,848, node:internal/crypto/util:1:1,0xfcf814292f8,~
code-source-info,0xfcf8142a3fe
tick,0x100c56644,196583,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf814276dc,0x311ed227c90d,0x311ed227bbdd,0xfcf814263df,0x311ed227c90d,0x311ed227bbdd,0xfcf8141596a,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,196708,0xfcf8142c0ce,5, node:internal/crypto/hashnames:1:1,0xfcf8142bf48,~
script-source,247,node:internal/crypto/hashnames,'use strict';\n\nconst {\n  ObjectKeys\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst kHashContextNode = 1;\nconst kHashContextWebCrypto = 2;\nconst kHashContextJwkRsa = 3;\nconst kHashContextJwkRsaPss = 4;\nconst kHashContextJwkRsaOaep = 5;\nconst kHashContextJwkHmac = 6;\nconst kHashContextJwkDsa = 7;\n\n// WebCrypto and JWK use a bunch of different names for the\n// standard set of SHA-* digest algorithms... which is ... fun.\n// Here we provide a utility for mapping between them in order\n// make it easier in the code.\n\nconst kHashNames = {\n  sha1: {\n    [kHashContextNode]: 'sha1'\x2C\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\n    [kHashContextJwkRsa]: 'RS1'\x2C\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\n    [kHashContextJwkHmac]: 'HS1'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-1'\x2C\n  }\x2C\n  sha256: {\n    [kHashContextNode]: 'sha256'\x2C\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\n    [kHashContextJwkRsa]: 'RS256'\x2C\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\n    [kHashContextJwkHmac]: 'HS256'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-256'\x2C\n  }\x2C\n  sha384: {\n    [kHashContextNode]: 'sha384'\x2C\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\n    [kHashContextJwkRsa]: 'RS384'\x2C\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\n    [kHashContextJwkHmac]: 'HS384'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-384'\x2C\n  }\x2C\n  sha512: {\n    [kHashContextNode]: 'sha512'\x2C\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\n    [kHashContextJwkRsa]: 'RS512'\x2C\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\n    [kHashContextJwkHmac]: 'HS512'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-512'\x2C\n  }\n};\n\n{\n  // Index the aliases\n  const keys = ObjectKeys(kHashNames);\n  for (let n = 0; n < keys.length; n++) {\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\n    for (let i = 0; i < contexts.length; i++) {\n      const alias =\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\n      if (kHashNames[alias] === undefined)\n        kHashNames[alias] = kHashNames[keys[n]];\n    }\n  }\n}\n\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\n  if (typeof name !== 'string')\n    return name;\n  name = StringPrototypeToLowerCase(name);\n  const alias = kHashNames[name] && kHashNames[name][context];\n  return alias || name;\n}\n\nnormalizeHashName.kContextNode = kHashContextNode;\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\nnormalizeHashName.kContextJwkDsa = kHashContextJwkDsa;\n\nmodule.exports = normalizeHashName;\n
code-source-info,0xfcf8142c0ce,247,0,2786,C0O0C4O2786,,
code-creation,Function,10,196833,0xfcf8142c3d6,584, node:internal/crypto/hashnames:1:1,0xfcf8142c038,~
code-source-info,0xfcf8142c3d
code-creation,LazyCompile,10,196916,0xfcf8142ce46,20,cachedResult node:internal/util:244:22,0x1910fc7ea140,~
code-source-info,0xfcf8142ce46,12,6754,6889,C0O6754C12O6767C13O6767C15O6777C19O6887,,
code-creation,Eval,10,197000,0xfcf8142d3c6,5, node:internal/tls/parse-cert-string:1:1,0xfcf8142d200,~
script-source,248,node:internal/tls/parse-cert-string,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  ObjectCreate\x2C\n} = primordials;\n\n// Example:\n// C=US\\nST=CA\\nL=SF\\nO=Joyent\\nOU=Node.js\\nCN=ca1\\nemailAddress=ry@clouds.org\nfunction parseCertString(s) {\n  const out = ObjectCreate(null);\n  ArrayPrototypeForEach(StringPrototypeSplit(s\x2C '\\n')\x2C (part) => {\n    const sepIndex = StringPrototypeIndexOf(part\x2C '=');\n    if (sepIndex > 0) {\n      const key = StringPrototypeSlice(part\x2C 0\x2C sepIndex);\n      const value = StringPrototypeSlice(part\x2C sepIndex + 1);\n      if (key in out) {\n        if (!ArrayIsArray(out[key])) {\n          out[key] = [out[key]];\n        }\n        ArrayPrototypePush(out[key]\x2C value);\n      } else {\n        out[key] = value;\n      }\n    }\n  });\n  return out;\n}\n\nexports.parseCertString = parseCertString;\n
code-source-info,0xfcf8142d3c6,248,0,889,C0O0C4O889,,
code-creation,Function,10,197041,0xfcf8142d4ee,81, node:internal/tls/parse-cert-string:1:1,0xfcf8142d330,~
code-source-info,0xfcf8142d4ee,248,0,889,C0O0C31O25C37O41C43O66C49O88C55O114C61O138C67O162C73O846C75O870C80O888,,
code-creation,Eval,10,197625,0xfcf8142f47e,5, node:_tls_wrap:1:1,0xfcf8142ecd8,~
script-source,249,node:_tls_wrap,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototype\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\n} = require('internal/util');\n\nassertCrypto();\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst crypto = require('crypto');\nconst EE = require('events');\nconst net = require('net');\nconst tls = require('tls');\nconst common = require('_tls_common');\nconst JSStreamSocket = require('internal/js_stream_socket');\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('tls'\x2C (fn) => {\n  debug = fn;\n});\nconst { TCP\x2C constants: TCPConstants } = internalBinding('tcp_wrap');\nconst tls_wrap = internalBinding('tls_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { isArrayBufferView } = require('internal/util/types');\nconst { SecureContext: NativeSecureContext } = internalBinding('crypto');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_SOCKET_CLOSED\x2C\n  ERR_TLS_DH_PARAM_SIZE\x2C\n  ERR_TLS_HANDSHAKE_TIMEOUT\x2C\n  ERR_TLS_INVALID_CONTEXT\x2C\n  ERR_TLS_RENEGOTIATION_DISABLED\x2C\n  ERR_TLS_REQUIRED_SERVER_NAME\x2C\n  ERR_TLS_SESSION_ATTACK\x2C\n  ERR_TLS_SNI_FROM_SERVER\x2C\n  ERR_TLS_INVALID_STATE\n} = codes;\nconst { onpskexchange: kOnPskExchange } = internalBinding('symbols');\nconst {\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n} = require('internal/options');\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  InternalX509Certificate\n} = require('internal/crypto/x509');\nconst traceTls = getOptionValue('--trace-tls');\nconst tlsKeylog = getOptionValue('--tls-keylog');\nconst { appendFile } = require('fs');\nconst kConnectOptions = Symbol('connect-options');\nconst kDisableRenegotiation = Symbol('disable-renegotiation');\nconst kErrorEmitted = Symbol('error-emitted');\nconst kHandshakeTimeout = Symbol('handshake-timeout');\nconst kRes = Symbol('res');\nconst kSNICallback = Symbol('snicallback');\nconst kEnableTrace = Symbol('enableTrace');\nconst kPskCallback = Symbol('pskcallback');\nconst kPskIdentityHint = Symbol('pskidentityhint');\nconst kPendingSession = Symbol('pendingSession');\nconst kIsVerified = Symbol('verified');\n\nconst noop = FunctionPrototype;\n\nlet ipServernameWarned = false;\nlet tlsTracingWarned = false;\n\n// Server side times how long a handshake is taking to protect against slow\n// handshakes being used for DoS.\nfunction onhandshakestart(now) {\n  debug('server onhandshakestart');\n\n  const { lastHandshakeTime } = this;\n  assert(now >= lastHandshakeTime\x2C\n         `now (${now}) < lastHandshakeTime (${lastHandshakeTime})`);\n\n  this.lastHandshakeTime = now;\n\n  // If this is the first handshake we can skip the rest of the checks.\n  if (lastHandshakeTime === 0)\n    return;\n\n  if ((now - lastHandshakeTime) >= tls.CLIENT_RENEG_WINDOW * 1000)\n    this.handshakes = 1;\n  else\n    this.handshakes++;\n\n  const owner = this[owner_symbol];\n\n  assert(owner._tlsOptions.isServer);\n\n  if (this.handshakes > tls.CLIENT_RENEG_LIMIT) {\n    owner._emitTLSError(new ERR_TLS_SESSION_ATTACK());\n    return;\n  }\n\n  if (owner[kDisableRenegotiation])\n    owner._emitTLSError(new ERR_TLS_RENEGOTIATION_DISABLED());\n}\n\nfunction onhandshakedone() {\n  debug('server onhandshakedone');\n\n  const owner = this[owner_symbol];\n  assert(owner._tlsOptions.isServer);\n\n  // `newSession` callback wasn't called yet\n  if (owner._newSessionPending) {\n    owner._securePending = true;\n    return;\n  }\n\n  owner._finishInit();\n}\n\n\nfunction loadSession(hello) {\n  debug('server onclienthello'\x2C\n        'sessionid.len'\x2C hello.sessionId.length\x2C\n        'ticket?'\x2C hello.tlsTicket\n  );\n  const owner = this[owner_symbol];\n\n  let once = false;\n  function onSession(err\x2C session) {\n    debug('server resumeSession callback(err %j\x2C sess? %s)'\x2C err\x2C !!session);\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    owner._handle.loadSession(session);\n    // Session is loaded. End the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n\n  if (hello.sessionId.length <= 0 ||\n      hello.tlsTicket ||\n      (owner.server &&\n      !owner.server.emit('resumeSession'\x2C hello.sessionId\x2C onSession))) {\n    // Sessions without identifiers can't be resumed.\n    // Sessions with tickets can be resumed directly from the ticket\x2C no server\n    // session storage is necessary.\n    // Without a call to a resumeSession listener\x2C a session will never be\n    // loaded\x2C so end the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n}\n\n\nfunction loadSNI(info) {\n  const owner = this[owner_symbol];\n  const servername = info.servername;\n  if (!servername || !owner._SNICallback)\n    return requestOCSP(owner\x2C info);\n\n  let once = false;\n  owner._SNICallback(servername\x2C (err\x2C context) => {\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    // TODO(indutny): eventually disallow raw `SecureContext`\n    if (context)\n      owner._handle.sni_context = context.context || context;\n\n    requestOCSP(owner\x2C info);\n  });\n}\n\n\nfunction requestOCSP(socket\x2C info) {\n  if (!info.OCSPRequest || !socket.server)\n    return requestOCSPDone(socket);\n\n  let ctx = socket._handle.sni_context;\n\n  if (!ctx) {\n    ctx = socket.server._sharedCreds;\n\n    // TLS socket is using a `net.Server` instead of a tls.TLSServer.\n    // Some TLS properties like `server._sharedCreds` will not be present\n    if (!ctx)\n      return requestOCSPDone(socket);\n  }\n\n  // TODO(indutny): eventually disallow raw `SecureContext`\n  if (ctx.context)\n    ctx = ctx.context;\n\n  if (socket.server.listenerCount('OCSPRequest') === 0) {\n    return requestOCSPDone(socket);\n  }\n\n  let once = false;\n  const onOCSP = (err\x2C response) => {\n    debug('server OCSPRequest done'\x2C 'handle?'\x2C !!socket._handle\x2C 'once?'\x2C once\x2C\n          'response?'\x2C !!response\x2C 'err?'\x2C err);\n    if (once)\n      return socket.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return socket.destroy(err);\n\n    if (socket._handle === null)\n      return socket.destroy(new ERR_SOCKET_CLOSED());\n\n    if (response)\n      socket._handle.setOCSPResponse(response);\n    requestOCSPDone(socket);\n  };\n\n  debug('server oncertcb emit OCSPRequest');\n  socket.server.emit('OCSPRequest'\x2C\n                     ctx.getCertificate()\x2C\n                     ctx.getIssuer()\x2C\n                     onOCSP);\n}\n\nfunction requestOCSPDone(socket) {\n  debug('server certcb done');\n  try {\n    socket._handle.certCbDone();\n  } catch (e) {\n    debug('server certcb done errored'\x2C e);\n    socket.destroy(e);\n  }\n}\n\nfunction onnewsessionclient(sessionId\x2C session) {\n  debug('client emit session');\n  const owner = this[owner_symbol];\n  if (owner[kIsVerified]) {\n    owner.emit('session'\x2C session);\n  } else {\n    owner[kPendingSession] = session;\n  }\n}\n\nfunction onnewsession(sessionId\x2C session) {\n  debug('onnewsession');\n  const owner = this[owner_symbol];\n\n  // TODO(@sam-github) no server to emit the event on\x2C but handshake won't\n  // continue unless newSessionDone() is called\x2C should it be\x2C or is that\n  // situation unreachable\x2C or only occurring during shutdown?\n  if (!owner.server)\n    return;\n\n  let once = false;\n  const done = () => {\n    debug('onnewsession done');\n    if (once)\n      return;\n    once = true;\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    this.newSessionDone();\n\n    owner._newSessionPending = false;\n    if (owner._securePending)\n      owner._finishInit();\n    owner._securePending = false;\n  };\n\n  owner._newSessionPending = true;\n  if (!owner.server.emit('newSession'\x2C sessionId\x2C session\x2C done))\n    done();\n}\n\nfunction onPskServerCallback(identity\x2C maxPskLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](owner\x2C identity);\n  if (ret == null)\n    return undefined;\n\n  let psk;\n  if (isArrayBufferView(ret)) {\n    psk = ret;\n  } else {\n    if (typeof ret !== 'object') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'ret'\x2C\n        ['Object'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ret\n      );\n    }\n    psk = ret.psk;\n    validateBuffer(psk\x2C 'psk');\n  }\n\n  if (psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  return psk;\n}\n\nfunction onPskClientCallback(hint\x2C maxPskLen\x2C maxIdentityLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](hint);\n  if (ret == null)\n    return undefined;\n\n  validateObject(ret\x2C 'ret');\n\n  validateBuffer(ret.psk\x2C 'psk');\n  if (ret.psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      ret.psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  validateString(ret.identity\x2C 'identity');\n  if (Buffer.byteLength(ret.identity) > maxIdentityLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'identity'\x2C\n      ret.identity\x2C\n      `PSK identity exceeds ${maxIdentityLen} bytes`\n    );\n  }\n\n  return { psk: ret.psk\x2C identity: ret.identity };\n}\n\nfunction onkeylog(line) {\n  debug('onkeylog');\n  this[owner_symbol].emit('keylog'\x2C line);\n}\n\nfunction onocspresponse(resp) {\n  debug('client onocspresponse');\n  this[owner_symbol].emit('OCSPResponse'\x2C resp);\n}\n\nfunction onerror(err) {\n  const owner = this[owner_symbol];\n  debug('%s onerror %s had? %j'\x2C\n        owner._tlsOptions.isServer ? 'server' : 'client'\x2C err\x2C\n        owner._hadError);\n\n  if (owner._hadError)\n    return;\n\n  owner._hadError = true;\n\n  // Destroy socket if error happened before handshake's finish\n  if (!owner._secureEstablished) {\n    // When handshake fails control is not yet released\x2C\n    // so self._tlsError will return null instead of actual error\n    owner.destroy(err);\n  } else if (owner._tlsOptions.isServer &&\n             owner._rejectUnauthorized &&\n             RegExpPrototypeTest(/peer did not return a certificate/\x2C\n                                 err.message)) {\n    // Ignore server's authorization errors\n    owner.destroy();\n  } else {\n    // Emit error\n    owner._emitTLSError(err);\n  }\n}\n\n// Used by both client and server TLSSockets to start data flowing from _handle\x2C\n// read(0) causes a StreamBase::ReadStart\x2C via Socket._read.\nfunction initRead(tlsSocket\x2C socket) {\n  debug('%s initRead'\x2C\n        tlsSocket._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!tlsSocket._handle\x2C\n        'buffered?'\x2C !!socket && socket.readableLength\n  );\n  // If we were destroyed already don't bother reading\n  if (!tlsSocket._handle)\n    return;\n\n  // Socket already has some buffered data - emulate receiving it\n  if (socket && socket.readableLength) {\n    let buf;\n    while ((buf = socket.read()) !== null)\n      tlsSocket._handle.receive(buf);\n  }\n\n  tlsSocket.read(0);\n}\n\n/**\n * Provides a wrap of socket stream to do encrypted communication.\n */\n\nfunction TLSSocket(socket\x2C opts) {\n  const tlsOptions = { ...opts };\n  let enableTrace = tlsOptions.enableTrace;\n\n  if (enableTrace == null) {\n    enableTrace = traceTls;\n\n    if (enableTrace && !tlsTracingWarned) {\n      tlsTracingWarned = true;\n      process.emitWarning('Enabling --trace-tls can expose sensitive data in ' +\n                          'the resulting log.');\n    }\n  } else {\n    validateBoolean(enableTrace\x2C 'options.enableTrace');\n  }\n\n  if (tlsOptions.ALPNProtocols)\n    tls.convertALPNProtocols(tlsOptions.ALPNProtocols\x2C tlsOptions);\n\n  this._tlsOptions = tlsOptions;\n  this._secureEstablished = false;\n  this._securePending = false;\n  this._newSessionPending = false;\n  this._controlReleased = false;\n  this.secureConnecting = true;\n  this._SNICallback = null;\n  this.servername = null;\n  this.alpnProtocol = null;\n  this.authorized = false;\n  this.authorizationError = null;\n  this[kRes] = null;\n  this[kIsVerified] = false;\n  this[kPendingSession] = null;\n\n  let wrap;\n  if ((socket instanceof net.Socket && socket._handle) || !socket) {\n    // 1. connected socket\n    // 2. no socket\x2C one will be created with net.Socket().connect\n    wrap = socket;\n  } else {\n    // 3. socket has no handle so it is js not c++\n    // 4. unconnected sockets are wrapped\n    // TLS expects to interact from C++ with a net.Socket that has a C++ stream\n    // handle\x2C but a JS stream doesn't have one. Wrap it up to make it look like\n    // a socket.\n    wrap = new JSStreamSocket(socket);\n  }\n\n  // Just a documented property to make secure sockets\n  // distinguishable from regular ones.\n  this.encrypted = true;\n\n  ReflectApply(net.Socket\x2C this\x2C [{\n    handle: this._wrapHandle(wrap)\x2C\n    allowHalfOpen: socket ? socket.allowHalfOpen : tlsOptions.allowHalfOpen\x2C\n    pauseOnCreate: tlsOptions.pauseOnConnect\x2C\n    manualStart: true\x2C\n    highWaterMark: tlsOptions.highWaterMark\x2C\n    onread: !socket ? tlsOptions.onread : null\x2C\n    signal: tlsOptions.signal\x2C\n  }]);\n\n  // Proxy for API compatibility\n  this.ssl = this._handle;  // C++ TLSWrap object\n\n  this.on('error'\x2C this._tlsError);\n\n  this._init(socket\x2C wrap);\n\n  if (enableTrace && this._handle)\n    this._handle.enableTrace();\n\n  // Read on next tick so the caller has a chance to setup listeners\n  process.nextTick(initRead\x2C this\x2C socket);\n}\nObjectSetPrototypeOf(TLSSocket.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(TLSSocket\x2C net.Socket);\nexports.TLSSocket = TLSSocket;\n\nconst proxiedMethods = [\n  'ref'\x2C 'unref'\x2C 'open'\x2C 'bind'\x2C 'listen'\x2C 'connect'\x2C 'bind6'\x2C\n  'connect6'\x2C 'getsockname'\x2C 'getpeername'\x2C 'setNoDelay'\x2C 'setKeepAlive'\x2C\n  'setSimultaneousAccepts'\x2C 'setBlocking'\x2C\n\n  // PipeWrap\n  'setPendingInstances'\x2C\n];\n\n// Proxy HandleWrap\x2C PipeWrap and TCPWrap methods\nfunction makeMethodProxy(name) {\n  return function methodProxy(...args) {\n    if (this._parent[name])\n      return ReflectApply(this._parent[name]\x2C this._parent\x2C args);\n  };\n}\nfor (const proxiedMethod of proxiedMethods) {\n  tls_wrap.TLSWrap.prototype[proxiedMethod] =\n    makeMethodProxy(proxiedMethod);\n}\n\ntls_wrap.TLSWrap.prototype.close = function close(cb) {\n  let ssl;\n  if (this[owner_symbol]) {\n    ssl = this[owner_symbol].ssl;\n    this[owner_symbol].ssl = null;\n  }\n\n  // Invoke `destroySSL` on close to clean up possibly pending write requests\n  // that may self-reference TLSWrap\x2C leading to leak\n  const done = () => {\n    if (ssl) {\n      ssl.destroySSL();\n      if (ssl._secureContext.singleUse) {\n        ssl._secureContext.context.close();\n        ssl._secureContext.context = null;\n      }\n    }\n    if (cb)\n      cb();\n  };\n\n  if (this._parentWrap && this._parentWrap._handle === this._parent) {\n    this._parentWrap.once('close'\x2C done);\n    return this._parentWrap.destroy();\n  }\n  return this._parent.close(done);\n};\n\nTLSSocket.prototype.disableRenegotiation = function disableRenegotiation() {\n  this[kDisableRenegotiation] = true;\n};\n\nTLSSocket.prototype._wrapHandle = function(wrap) {\n  let handle;\n\n  if (wrap)\n    handle = wrap._handle;\n\n  const options = this._tlsOptions;\n  if (!handle) {\n    handle = options.pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    handle[owner_symbol] = this;\n  }\n\n  // Wrap socket's handle\n  const context = options.secureContext ||\n                  options.credentials ||\n                  tls.createSecureContext(options);\n  assert(handle.isStreamBase\x2C 'handle must be a StreamBase');\n  if (!(context.context instanceof NativeSecureContext)) {\n    throw new ERR_TLS_INVALID_CONTEXT('context');\n  }\n  const res = tls_wrap.wrap(handle\x2C context.context\x2C !!options.isServer);\n  res._parent = handle;  // C++ "wrap" object: TCPWrap\x2C JSStream\x2C ...\n  res._parentWrap = wrap;  // JS object: net.Socket\x2C JSStreamSocket\x2C ...\n  res._secureContext = context;\n  res.reading = handle.reading;\n  this[kRes] = res;\n  defineHandleReading(this\x2C handle);\n\n  this.on('close'\x2C onSocketCloseDestroySSL);\n\n  return res;\n};\n\n// This eliminates a cyclic reference to TLSWrap\n// Ref: https://github.com/nodejs/node/commit/f7620fb96d339f704932f9bb9a0dceb9952df2d4\nfunction defineHandleReading(socket\x2C handle) {\n  ObjectDefineProperty(handle\x2C 'reading'\x2C {\n    get: () => {\n      return socket[kRes].reading;\n    }\x2C\n    set: (value) => {\n      socket[kRes].reading = value;\n    }\n  });\n}\n\nfunction onSocketCloseDestroySSL() {\n  // Make sure we are not doing it on OpenSSL's stack\n  setImmediate(destroySSL\x2C this);\n  this[kRes] = null;\n}\n\nfunction destroySSL(self) {\n  self._destroySSL();\n}\n\nTLSSocket.prototype._destroySSL = function _destroySSL() {\n  if (!this.ssl) return;\n  this.ssl.destroySSL();\n  if (this.ssl._secureContext.singleUse) {\n    this.ssl._secureContext.context.close();\n    this.ssl._secureContext.context = null;\n  }\n  this.ssl = null;\n  this[kPendingSession] = null;\n  this[kIsVerified] = false;\n};\n\n// Constructor guts\x2C arbitrarily factored out.\nlet warnOnTlsKeylog = true;\nlet warnOnTlsKeylogError = true;\nTLSSocket.prototype._init = function(socket\x2C wrap) {\n  const options = this._tlsOptions;\n  const ssl = this._handle;\n  this.server = options.server;\n\n  debug('%s _init'\x2C\n        options.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!ssl\n  );\n\n  // Clients (!isServer) always request a cert\x2C servers request a client cert\n  // only on explicit configuration.\n  const requestCert = !!options.requestCert || !options.isServer;\n  const rejectUnauthorized = !!options.rejectUnauthorized;\n\n  this._requestCert = requestCert;\n  this._rejectUnauthorized = rejectUnauthorized;\n  if (requestCert || rejectUnauthorized)\n    ssl.setVerifyMode(requestCert\x2C rejectUnauthorized);\n\n  // Only call .onkeylog if there is a keylog listener.\n  ssl.onkeylog = onkeylog;\n  this.on('newListener'\x2C keylogNewListener);\n\n  function keylogNewListener(event) {\n    if (event !== 'keylog')\n      return;\n\n    // Guard against enableKeylogCallback after destroy\n    if (!this._handle) return;\n    this._handle.enableKeylogCallback();\n\n    // Remove this listener since it's no longer needed.\n    this.removeListener('newListener'\x2C keylogNewListener);\n  }\n\n  if (options.isServer) {\n    ssl.onhandshakestart = onhandshakestart;\n    ssl.onhandshakedone = onhandshakedone;\n    ssl.onclienthello = loadSession;\n    ssl.oncertcb = loadSNI;\n    ssl.onnewsession = onnewsession;\n    ssl.lastHandshakeTime = 0;\n    ssl.handshakes = 0;\n\n    if (this.server) {\n      if (this.server.listenerCount('resumeSession') > 0 ||\n          this.server.listenerCount('newSession') > 0) {\n        // Also starts the client hello parser as a side effect.\n        ssl.enableSessionCallbacks();\n      }\n      if (this.server.listenerCount('OCSPRequest') > 0)\n        ssl.enableCertCb();\n    }\n  } else {\n    ssl.onhandshakestart = noop;\n    ssl.onhandshakedone = () => {\n      debug('client onhandshakedone');\n      this._finishInit();\n    };\n    ssl.onocspresponse = onocspresponse;\n\n    if (options.session)\n      ssl.setSession(options.session);\n\n    ssl.onnewsession = onnewsessionclient;\n\n    // Only call .onnewsession if there is a session listener.\n    this.on('newListener'\x2C newListener);\n\n    function newListener(event) {\n      if (event !== 'session')\n        return;\n\n      // Guard against enableSessionCallbacks after destroy\n      if (!this._handle) return;\n      this._handle.enableSessionCallbacks();\n\n      // Remove this listener since it's no longer needed.\n      this.removeListener('newListener'\x2C newListener);\n    }\n  }\n\n  if (tlsKeylog) {\n    if (warnOnTlsKeylog) {\n      warnOnTlsKeylog = false;\n      process.emitWarning('Using --tls-keylog makes TLS connections insecure ' +\n        'by writing secret key material to file ' + tlsKeylog);\n    }\n    this.on('keylog'\x2C (line) => {\n      appendFile(tlsKeylog\x2C line\x2C { mode: 0o600 }\x2C (err) => {\n        if (err && warnOnTlsKeylogError) {\n          warnOnTlsKeylogError = false;\n          process.emitWarning('Failed to write TLS keylog (this warning ' +\n            'will not be repeated): ' + err);\n        }\n      });\n    });\n  }\n\n  ssl.onerror = onerror;\n\n  // If custom SNICallback was given\x2C or if\n  // there're SNI contexts to perform match against -\n  // set `.onsniselect` callback.\n  if (options.isServer &&\n      options.SNICallback &&\n      (options.SNICallback !== SNICallback ||\n       (options.server && options.server._contexts.length))) {\n    assert(typeof options.SNICallback === 'function');\n    this._SNICallback = options.SNICallback;\n    ssl.enableCertCb();\n  }\n\n  if (options.ALPNProtocols) {\n    // Keep reference in secureContext not to be GC-ed\n    ssl._secureContext.alpnBuffer = options.ALPNProtocols;\n    ssl.setALPNProtocols(ssl._secureContext.alpnBuffer);\n  }\n\n  if (options.pskCallback && ssl.enablePskCallback) {\n    validateFunction(options.pskCallback\x2C 'pskCallback');\n\n    ssl[kOnPskExchange] = options.isServer ?\n      onPskServerCallback : onPskClientCallback;\n\n    this[kPskCallback] = options.pskCallback;\n    ssl.enablePskCallback();\n\n    if (options.pskIdentityHint) {\n      validateString(options.pskIdentityHint\x2C 'options.pskIdentityHint');\n      ssl.setPskIdentityHint(options.pskIdentityHint);\n    }\n  }\n\n\n  if (options.handshakeTimeout > 0)\n    this.setTimeout(options.handshakeTimeout\x2C this._handleTimeout);\n\n  if (socket instanceof net.Socket) {\n    this._parent = socket;\n\n    // To prevent assertion in afterConnect() and properly kick off readStart\n    this.connecting = socket.connecting || !socket._handle;\n    socket.once('connect'\x2C () => {\n      this.connecting = false;\n      this.emit('connect');\n    });\n  }\n\n  // Assume `tls.connect()`\n  if (wrap) {\n    wrap.on('error'\x2C (err) => this._emitTLSError(err));\n  } else {\n    assert(!socket);\n    this.connecting = true;\n  }\n};\n\nTLSSocket.prototype.renegotiate = function(options\x2C callback) {\n  validateObject(options\x2C 'options');\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  debug('%s renegotiate()'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'destroyed?'\x2C this.destroyed\n  );\n\n  if (this.destroyed)\n    return;\n\n  let requestCert = !!this._requestCert;\n  let rejectUnauthorized = !!this._rejectUnauthorized;\n\n  if (options.requestCert !== undefined)\n    requestCert = !!options.requestCert;\n  if (options.rejectUnauthorized !== undefined)\n    rejectUnauthorized = !!options.rejectUnauthorized;\n\n  if (requestCert !== this._requestCert ||\n      rejectUnauthorized !== this._rejectUnauthorized) {\n    this._handle.setVerifyMode(requestCert\x2C rejectUnauthorized);\n    this._requestCert = requestCert;\n    this._rejectUnauthorized = rejectUnauthorized;\n  }\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  try {\n    this._handle.renegotiate();\n  } catch (err) {\n    if (callback) {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  if (callback) {\n    this.once('secure'\x2C () => callback(null));\n  }\n\n  return true;\n};\n\nTLSSocket.prototype.exportKeyingMaterial = function(length\x2C label\x2C context) {\n  validateUint32(length\x2C 'length'\x2C true);\n  validateString(label\x2C 'label');\n  if (context !== undefined)\n    validateBuffer(context\x2C 'context');\n\n  if (!this._secureEstablished)\n    throw new ERR_TLS_INVALID_STATE();\n\n  return this._handle.exportKeyingMaterial(length\x2C label\x2C context);\n};\n\nTLSSocket.prototype.setMaxSendFragment = function setMaxSendFragment(size) {\n  validateInt32(size\x2C 'size');\n  return this._handle.setMaxSendFragment(size) === 1;\n};\n\nTLSSocket.prototype._handleTimeout = function() {\n  this._emitTLSError(new ERR_TLS_HANDSHAKE_TIMEOUT());\n};\n\nTLSSocket.prototype._emitTLSError = function(err) {\n  const e = this._tlsError(err);\n  if (e)\n    this.emit('error'\x2C e);\n};\n\nTLSSocket.prototype._tlsError = function(err) {\n  this.emit('_tlsError'\x2C err);\n  if (this._controlReleased)\n    return err;\n  return null;\n};\n\nTLSSocket.prototype._releaseControl = function() {\n  if (this._controlReleased)\n    return false;\n  this._controlReleased = true;\n  this.removeListener('error'\x2C this._tlsError);\n  return true;\n};\n\nTLSSocket.prototype._finishInit = function() {\n  // Guard against getting onhandshakedone() after .destroy().\n  // * 1.2: If destroy() during onocspresponse()\x2C then write of next handshake\n  // record fails\x2C the handshake done info callbacks does not occur\x2C and the\n  // socket closes.\n  // * 1.3: The OCSP response comes in the same record that finishes handshake\x2C\n  // so even after .destroy()\x2C the handshake done info callback occurs\n  // immediately after onocspresponse(). Ignore it.\n  if (!this._handle)\n    return;\n\n  this.alpnProtocol = this._handle.getALPNNegotiatedProtocol();\n  // The servername could be set by TLSWrap::SelectSNIContextCallback().\n  if (this.servername === null) {\n    this.servername = this._handle.getServername();\n  }\n\n  debug('%s _finishInit'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'alpn'\x2C this.alpnProtocol\x2C\n        'servername'\x2C this.servername);\n\n  this._secureEstablished = true;\n  if (this._tlsOptions.handshakeTimeout > 0)\n    this.setTimeout(0\x2C this._handleTimeout);\n  this.emit('secure');\n};\n\nTLSSocket.prototype._start = function() {\n  debug('%s _start'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'connecting?'\x2C this.connecting\x2C\n        'requestOCSP?'\x2C !!this._tlsOptions.requestOCSP\x2C\n  );\n  if (this.connecting) {\n    this.once('connect'\x2C this._start);\n    return;\n  }\n\n  // Socket was destroyed before the connection was established\n  if (!this._handle)\n    return;\n\n  if (this._tlsOptions.requestOCSP)\n    this._handle.requestOCSP();\n  this._handle.start();\n};\n\nTLSSocket.prototype.setServername = function(name) {\n  validateString(name\x2C 'name');\n\n  if (this._tlsOptions.isServer) {\n    throw new ERR_TLS_SNI_FROM_SERVER();\n  }\n\n  this._handle.setServername(name);\n};\n\nTLSSocket.prototype.setSession = function(session) {\n  if (typeof session === 'string')\n    session = Buffer.from(session\x2C 'latin1');\n  this._handle.setSession(session);\n};\n\nTLSSocket.prototype.getPeerCertificate = function(detailed) {\n  if (this._handle) {\n    return common.translatePeerCertificate(\n      this._handle.getPeerCertificate(detailed)) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getCertificate = function() {\n  if (this._handle) {\n    // It's not a peer cert\x2C but the formatting is identical.\n    return common.translatePeerCertificate(\n      this._handle.getCertificate()) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getPeerX509Certificate = function(detailed) {\n  const cert = this._handle?.getPeerX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\nTLSSocket.prototype.getX509Certificate = function() {\n  const cert = this._handle?.getX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\n// Proxy TLSSocket handle methods\nfunction makeSocketMethodProxy(name) {\n  return function socketMethodProxy(...args) {\n    if (this._handle)\n      return ReflectApply(this._handle[name]\x2C this._handle\x2C args);\n    return null;\n  };\n}\n\nArrayPrototypeForEach([\n  'getCipher'\x2C\n  'getSharedSigalgs'\x2C\n  'getEphemeralKeyInfo'\x2C\n  'getFinished'\x2C\n  'getPeerFinished'\x2C\n  'getProtocol'\x2C\n  'getSession'\x2C\n  'getTLSTicket'\x2C\n  'isSessionReused'\x2C\n  'enableTrace'\x2C\n]\x2C (method) => {\n  TLSSocket.prototype[method] = makeSocketMethodProxy(method);\n});\n\n// TODO: support anonymous (nocert)\n\n\nfunction onServerSocketSecure() {\n  if (this._requestCert) {\n    const verifyError = this._handle.verifyError();\n    if (verifyError) {\n      this.authorizationError = verifyError.code;\n\n      if (this._rejectUnauthorized)\n        this.destroy();\n    } else {\n      this.authorized = true;\n    }\n  }\n\n  if (!this.destroyed && this._releaseControl()) {\n    debug('server emit secureConnection');\n    this.secureConnecting = false;\n    this._tlsOptions.server.emit('secureConnection'\x2C this);\n  }\n}\n\nfunction onSocketTLSError(err) {\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    debug('server emit tlsClientError:'\x2C err);\n    this._tlsOptions.server.emit('tlsClientError'\x2C err\x2C this);\n  }\n}\n\nfunction onSocketKeylog(line) {\n  this._tlsOptions.server.emit('keylog'\x2C line\x2C this);\n}\n\nfunction onSocketClose(err) {\n  // Closed because of error - no need to emit it twice\n  if (err)\n    return;\n\n  // Emit ECONNRESET\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    const connReset = connResetException('socket hang up');\n    this._tlsOptions.server.emit('tlsClientError'\x2C connReset\x2C this);\n  }\n}\n\nfunction tlsConnectionListener(rawSocket) {\n  debug('net.Server.on(connection): new TLSSocket');\n  const socket = new TLSSocket(rawSocket\x2C {\n    secureContext: this._sharedCreds\x2C\n    isServer: true\x2C\n    server: this\x2C\n    requestCert: this.requestCert\x2C\n    rejectUnauthorized: this.rejectUnauthorized\x2C\n    handshakeTimeout: this[kHandshakeTimeout]\x2C\n    ALPNProtocols: this.ALPNProtocols\x2C\n    SNICallback: this[kSNICallback] || SNICallback\x2C\n    enableTrace: this[kEnableTrace]\x2C\n    pauseOnConnect: this.pauseOnConnect\x2C\n    pskCallback: this[kPskCallback]\x2C\n    pskIdentityHint: this[kPskIdentityHint]\x2C\n  });\n\n  socket.on('secure'\x2C onServerSocketSecure);\n\n  if (this.listenerCount('keylog') > 0)\n    socket.on('keylog'\x2C onSocketKeylog);\n\n  socket[kErrorEmitted] = false;\n  socket.on('close'\x2C onSocketClose);\n  socket.on('_tlsError'\x2C onSocketTLSError);\n}\n\n// AUTHENTICATION MODES\n//\n// There are several levels of authentication that TLS/SSL supports.\n// Read more about this in "man SSL_set_verify".\n//\n// 1. The server sends a certificate to the client but does not request a\n// cert from the client. This is common for most HTTPS servers. The browser\n// can verify the identity of the server\x2C but the server does not know who\n// the client is. Authenticating the client is usually done over HTTP using\n// login boxes and cookies and stuff.\n//\n// 2. The server sends a cert to the client and requests that the client\n// also send it a cert. The client knows who the server is and the server is\n// requesting the client also identify themselves. There are several\n// outcomes:\n//\n//   A) verifyError returns null meaning the client's certificate is signed\n//   by one of the server's CAs. The server now knows the client's identity\n//   and the client is authorized.\n//\n//   B) For some reason the client's certificate is not acceptable -\n//   verifyError returns a string indicating the problem. The server can\n//   either (i) reject the client or (ii) allow the client to connect as an\n//   unauthorized connection.\n//\n// The mode is controlled by two boolean variables.\n//\n// requestCert\n//   If true the server requests a certificate from client connections. For\n//   the common HTTPS case\x2C users will want this to be false\x2C which is what\n//   it defaults to.\n//\n// rejectUnauthorized\n//   If true clients whose certificates are invalid for any reason will not\n//   be allowed to make connections. If false\x2C they will simply be marked as\n//   unauthorized but secure communication will continue. By default this is\n//   true.\n//\n//\n//\n// Options:\n// - requestCert. Send verify request. Default to false.\n// - rejectUnauthorized. Boolean\x2C default to true.\n// - key. string.\n// - cert: string.\n// - clientCertEngine: string.\n// - ca: string or array of strings.\n// - sessionTimeout: integer.\n//\n// emit 'secureConnection'\n//   function (tlsSocket) { }\n//\n//   "UNABLE_TO_GET_ISSUER_CERT"\x2C "UNABLE_TO_GET_CRL"\x2C\n//   "UNABLE_TO_DECRYPT_CERT_SIGNATURE"\x2C "UNABLE_TO_DECRYPT_CRL_SIGNATURE"\x2C\n//   "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"\x2C "CERT_SIGNATURE_FAILURE"\x2C\n//   "CRL_SIGNATURE_FAILURE"\x2C "CERT_NOT_YET_VALID" "CERT_HAS_EXPIRED"\x2C\n//   "CRL_NOT_YET_VALID"\x2C "CRL_HAS_EXPIRED" "ERROR_IN_CERT_NOT_BEFORE_FIELD"\x2C\n//   "ERROR_IN_CERT_NOT_AFTER_FIELD"\x2C "ERROR_IN_CRL_LAST_UPDATE_FIELD"\x2C\n//   "ERROR_IN_CRL_NEXT_UPDATE_FIELD"\x2C "OUT_OF_MEM"\x2C\n//   "DEPTH_ZERO_SELF_SIGNED_CERT"\x2C "SELF_SIGNED_CERT_IN_CHAIN"\x2C\n//   "UNABLE_TO_GET_ISSUER_CERT_LOCALLY"\x2C "UNABLE_TO_VERIFY_LEAF_SIGNATURE"\x2C\n//   "CERT_CHAIN_TOO_LONG"\x2C "CERT_REVOKED" "INVALID_CA"\x2C\n//   "PATH_LENGTH_EXCEEDED"\x2C "INVALID_PURPOSE" "CERT_UNTRUSTED"\x2C\n//   "CERT_REJECTED"\n//\nfunction Server(options\x2C listener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C listener);\n\n  if (typeof options === 'function') {\n    listener = options;\n    options = {};\n  } else if (options == null || typeof options === 'object') {\n    options = options || {};\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._contexts = [];\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n\n  this.setSecureContext(options);\n\n  this[kHandshakeTimeout] = options.handshakeTimeout || (120 * 1000);\n  this[kSNICallback] = options.SNICallback;\n  this[kPskCallback] = options.pskCallback;\n  this[kPskIdentityHint] = options.pskIdentityHint;\n\n  validateNumber(this[kHandshakeTimeout]\x2C 'options.handshakeTimeout');\n\n  if (this[kSNICallback] && typeof this[kSNICallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.SNICallback'\x2C 'function'\x2C options.SNICallback);\n  }\n\n  if (this[kPskCallback] && typeof this[kPskCallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskCallback'\x2C 'function'\x2C options.pskCallback);\n  }\n  if (this[kPskIdentityHint] && typeof this[kPskIdentityHint] !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskIdentityHint'\x2C\n      'string'\x2C\n      options.pskIdentityHint\n    );\n  }\n\n  // constructor call\n  ReflectApply(net.Server\x2C this\x2C [options\x2C tlsConnectionListener]);\n\n  if (listener) {\n    this.on('secureConnection'\x2C listener);\n  }\n\n  this[kEnableTrace] = options.enableTrace;\n}\n\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\nexports.Server = Server;\nexports.createServer = function createServer(options\x2C listener) {\n  return new Server(options\x2C listener);\n};\n\n\nServer.prototype.setSecureContext = function(options) {\n  validateObject(options\x2C 'options');\n\n  if (options.pfx)\n    this.pfx = options.pfx;\n  else\n    this.pfx = undefined;\n\n  if (options.key)\n    this.key = options.key;\n  else\n    this.key = undefined;\n\n  if (options.passphrase)\n    this.passphrase = options.passphrase;\n  else\n    this.passphrase = undefined;\n\n  if (options.cert)\n    this.cert = options.cert;\n  else\n    this.cert = undefined;\n\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  else\n    this.clientCertEngine = undefined;\n\n  if (options.ca)\n    this.ca = options.ca;\n  else\n    this.ca = undefined;\n\n  if (options.minVersion)\n    this.minVersion = options.minVersion;\n  else\n    this.minVersion = undefined;\n\n  if (options.maxVersion)\n    this.maxVersion = options.maxVersion;\n  else\n    this.maxVersion = undefined;\n\n  if (options.secureProtocol)\n    this.secureProtocol = options.secureProtocol;\n  else\n    this.secureProtocol = undefined;\n\n  if (options.crl)\n    this.crl = options.crl;\n  else\n    this.crl = undefined;\n\n  this.sigalgs = options.sigalgs;\n\n  if (options.ciphers)\n    this.ciphers = options.ciphers;\n  else\n    this.ciphers = undefined;\n\n  this.ecdhCurve = options.ecdhCurve;\n\n  if (options.dhparam)\n    this.dhparam = options.dhparam;\n  else\n    this.dhparam = undefined;\n\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n\n  const secureOptions = options.secureOptions || 0;\n\n  if (secureOptions)\n    this.secureOptions = secureOptions;\n  else\n    this.secureOptions = undefined;\n\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  this.privateKeyIdentifier = options.privateKeyIdentifier;\n  this.privateKeyEngine = options.privateKeyEngine;\n\n  this._sharedCreds = tls.createSecureContext({\n    pfx: this.pfx\x2C\n    key: this.key\x2C\n    passphrase: this.passphrase\x2C\n    cert: this.cert\x2C\n    clientCertEngine: this.clientCertEngine\x2C\n    ca: this.ca\x2C\n    ciphers: this.ciphers\x2C\n    sigalgs: this.sigalgs\x2C\n    ecdhCurve: this.ecdhCurve\x2C\n    dhparam: this.dhparam\x2C\n    minVersion: this.minVersion\x2C\n    maxVersion: this.maxVersion\x2C\n    secureProtocol: this.secureProtocol\x2C\n    secureOptions: this.secureOptions\x2C\n    honorCipherOrder: this.honorCipherOrder\x2C\n    crl: this.crl\x2C\n    sessionIdContext: this.sessionIdContext\x2C\n    ticketKeys: this.ticketKeys\x2C\n    sessionTimeout: this.sessionTimeout\x2C\n    privateKeyIdentifier: this.privateKeyIdentifier\x2C\n    privateKeyEngine: this.privateKeyEngine\x2C\n  });\n};\n\n\nServer.prototype._getServerData = function() {\n  return {\n    ticketKeys: this.getTicketKeys().toString('hex')\n  };\n};\n\n\nServer.prototype._setServerData = function(data) {\n  this.setTicketKeys(Buffer.from(data.ticketKeys\x2C 'hex'));\n};\n\n\nServer.prototype.getTicketKeys = function getTicketKeys() {\n  return this._sharedCreds.context.getTicketKeys();\n};\n\n\nServer.prototype.setTicketKeys = function setTicketKeys(keys) {\n  validateBuffer(keys);\n  assert(keys.byteLength === 48\x2C\n         'Session ticket keys must be a 48-byte buffer');\n  this._sharedCreds.context.setTicketKeys(keys);\n};\n\n\nServer.prototype.setOptions = deprecate(function(options) {\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.pfx) this.pfx = options.pfx;\n  if (options.key) this.key = options.key;\n  if (options.passphrase) this.passphrase = options.passphrase;\n  if (options.cert) this.cert = options.cert;\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  if (options.ca) this.ca = options.ca;\n  if (options.minVersion) this.minVersion = options.minVersion;\n  if (options.maxVersion) this.maxVersion = options.maxVersion;\n  if (options.secureProtocol) this.secureProtocol = options.secureProtocol;\n  if (options.crl) this.crl = options.crl;\n  if (options.ciphers) this.ciphers = options.ciphers;\n  if (options.ecdhCurve !== undefined)\n    this.ecdhCurve = options.ecdhCurve;\n  if (options.dhparam) this.dhparam = options.dhparam;\n  if (options.sessionTimeout) this.sessionTimeout = options.sessionTimeout;\n  if (options.ticketKeys) this.ticketKeys = options.ticketKeys;\n  const secureOptions = options.secureOptions || 0;\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n  if (secureOptions) this.secureOptions = secureOptions;\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n  if (options.pskCallback) this[kPskCallback] = options.pskCallback;\n  if (options.pskIdentityHint) this[kPskIdentityHint] = options.pskIdentityHint;\n  if (options.sigalgs) this.sigalgs = options.sigalgs;\n  if (options.privateKeyIdentifier !== undefined)\n    this.privateKeyIdentifier = options.privateKeyIdentifier;\n  if (options.privateKeyEngine !== undefined)\n    this.privateKeyEngine = options.privateKeyEngine;\n}\x2C 'Server.prototype.setOptions() is deprecated'\x2C 'DEP0122');\n\n// SNI Contexts High-Level API\nServer.prototype.addContext = function(servername\x2C context) {\n  if (!servername) {\n    throw new ERR_TLS_REQUIRED_SERVER_NAME();\n  }\n\n  const re = new RegExp('^' + StringPrototypeReplace(\n    StringPrototypeReplace(servername\x2C /([.^$+?\\-\\\\[\\]{}])/g\x2C '\\\\$1')\x2C\n    /\\*/g\x2C '[^.]*'\n  ) + '$');\n  ArrayPrototypePush(this._contexts\x2C\n                     [re\x2C tls.createSecureContext(context).context]);\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'secureConnection':\n      sock.destroy(err);\n      break;\n    default:\n      ReflectApply(net.Server.prototype[SymbolFor('nodejs.rejection')]\x2C this\x2C\n                   [err\x2C event\x2C sock]);\n  }\n};\n\nfunction SNICallback(servername\x2C callback) {\n  const contexts = this.server._contexts;\n\n  for (let i = contexts.length - 1; i >= 0; --i) {\n    const elem = contexts[i];\n    if (RegExpPrototypeTest(elem[0]\x2C servername)) {\n      callback(null\x2C elem[1]);\n      return;\n    }\n  }\n\n  callback(null\x2C undefined);\n}\n\n\n// Target API:\n//\n//  let s = tls.connect({port: 8000\x2C host: "google.com"}\x2C function() {\n//    if (!s.authorized) {\n//      s.destroy();\n//      return;\n//    }\n//\n//    // s.socket;\n//\n//    s.end("hello world\\n");\n//  });\n//\n//\nfunction normalizeConnectArgs(listArgs) {\n  const args = net._normalizeArgs(listArgs);\n  const options = args[0];\n  const cb = args[1];\n\n  // If args[0] was options\x2C then normalize dealt with it.\n  // If args[0] is port\x2C or args[0]\x2C args[1] is host\x2C port\x2C we need to\n  // find the options and merge them in\x2C normalize's options has only\n  // the host/port/path args that it knows about\x2C not the tls options.\n  // This means that options.host overrides a host arg.\n  if (listArgs[1] !== null && typeof listArgs[1] === 'object') {\n    ObjectAssign(options\x2C listArgs[1]);\n  } else if (listArgs[2] !== null && typeof listArgs[2] === 'object') {\n    ObjectAssign(options\x2C listArgs[2]);\n  }\n\n  return cb ? [options\x2C cb] : [options];\n}\n\nfunction onConnectSecure() {\n  const options = this[kConnectOptions];\n\n  // Check the size of DHE parameter above minimum requirement\n  // specified in options.\n  const ekeyinfo = this.getEphemeralKeyInfo();\n  if (ekeyinfo.type === 'DH' && ekeyinfo.size < options.minDHSize) {\n    const err = new ERR_TLS_DH_PARAM_SIZE(ekeyinfo.size);\n    debug('client emit:'\x2C err);\n    this.emit('error'\x2C err);\n    this.destroy();\n    return;\n  }\n\n  let verifyError = this._handle.verifyError();\n\n  // Verify that server's identity matches it's certificate's names\n  // Unless server has resumed our existing session\n  if (!verifyError && !this.isSessionReused()) {\n    const hostname = options.servername ||\n                   options.host ||\n                   (options.socket && options.socket._host) ||\n                   'localhost';\n    const cert = this.getPeerCertificate(true);\n    verifyError = options.checkServerIdentity(hostname\x2C cert);\n  }\n\n  if (verifyError) {\n    this.authorized = false;\n    this.authorizationError = verifyError.code || verifyError.message;\n\n    // rejectUnauthorized property can be explicitly defined as `undefined`\n    // causing the assignment to default value (`true`) fail. Before assigning\n    // it to the tlssock connection options\x2C explicitly check if it is false\n    // and update rejectUnauthorized property. The property gets used by\n    // TLSSocket connection handler to allow or reject connection if\n    // unauthorized.\n    // This check is potentially redundant\x2C however it is better to keep it\n    // in case the option object gets modified somewhere.\n    if (options.rejectUnauthorized !== false) {\n      this.destroy(verifyError);\n      return;\n    }\n    debug('client emit secureConnect. rejectUnauthorized: %s\x2C ' +\n          'authorizationError: %s'\x2C options.rejectUnauthorized\x2C\n          this.authorizationError);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  } else {\n    this.authorized = true;\n    debug('client emit secureConnect. authorized:'\x2C this.authorized);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  }\n\n  this[kIsVerified] = true;\n  const session = this[kPendingSession];\n  this[kPendingSession] = null;\n  if (session)\n    this.emit('session'\x2C session);\n\n  this.removeListener('end'\x2C onConnectEnd);\n}\n\nfunction onConnectEnd() {\n  // NOTE: This logic is shared with _http_client.js\n  if (!this._hadError) {\n    const options = this[kConnectOptions];\n    this._hadError = true;\n    const error = connResetException('Client network socket disconnected ' +\n                                     'before secure TLS connection was ' +\n                                     'established');\n    error.path = options.path;\n    error.host = options.host;\n    error.port = options.port;\n    error.localAddress = options.localAddress;\n    this.destroy(error);\n  }\n}\n\n// Arguments: [port\x2C] [host\x2C] [options\x2C] [cb]\nexports.connect = function connect(...args) {\n  args = normalizeConnectArgs(args);\n  let options = args[0];\n  const cb = args[1];\n  const allowUnauthorized = getAllowUnauthorized();\n\n  options = {\n    rejectUnauthorized: !allowUnauthorized\x2C\n    ciphers: tls.DEFAULT_CIPHERS\x2C\n    checkServerIdentity: tls.checkServerIdentity\x2C\n    minDHSize: 1024\x2C\n    ...options\n  };\n\n  if (!options.keepAlive)\n    options.singleUse = true;\n\n  assert(typeof options.checkServerIdentity === 'function');\n  assert(typeof options.minDHSize === 'number'\x2C\n         'options.minDHSize is not a number: ' + options.minDHSize);\n  assert(options.minDHSize > 0\x2C\n         'options.minDHSize is not a positive number: ' +\n         options.minDHSize);\n\n  const context = options.secureContext || tls.createSecureContext(options);\n\n  const tlssock = new TLSSocket(options.socket\x2C {\n    allowHalfOpen: options.allowHalfOpen\x2C\n    pipe: !!options.path\x2C\n    secureContext: context\x2C\n    isServer: false\x2C\n    requestCert: true\x2C\n    rejectUnauthorized: options.rejectUnauthorized !== false\x2C\n    session: options.session\x2C\n    ALPNProtocols: options.ALPNProtocols\x2C\n    requestOCSP: options.requestOCSP\x2C\n    enableTrace: options.enableTrace\x2C\n    pskCallback: options.pskCallback\x2C\n    highWaterMark: options.highWaterMark\x2C\n    onread: options.onread\x2C\n    signal: options.signal\x2C\n  });\n\n  // rejectUnauthorized property can be explicitly defined as `undefined`\n  // causing the assignment to default value (`true`) fail. Before assigning\n  // it to the tlssock connection options\x2C explicitly check if it is false\n  // and update rejectUnauthorized property. The property gets used by TLSSocket\n  // connection handler to allow or reject connection if unauthorized\n  options.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  tlssock[kConnectOptions] = options;\n\n  if (cb)\n    tlssock.once('secureConnect'\x2C cb);\n\n  if (!options.socket) {\n    // If user provided the socket\x2C it's their responsibility to manage its\n    // connectivity. If we created one internally\x2C we connect it.\n    if (options.timeout) {\n      tlssock.setTimeout(options.timeout);\n    }\n\n    tlssock.connect(options\x2C tlssock._start);\n  }\n\n  tlssock._releaseControl();\n\n  if (options.session)\n    tlssock.setSession(options.session);\n\n  if (options.servername) {\n    if (!ipServernameWarned && net.isIP(options.servername)) {\n      process.emitWarning(\n        'Setting the TLS ServerName to an IP address is not permitted by ' +\n        'RFC 6066. This will be ignored in a future version.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0123'\n      );\n      ipServernameWarned = true;\n    }\n    tlssock.setServername(options.servername);\n  }\n\n  if (options.socket)\n    tlssock._start();\n\n  tlssock.on('secure'\x2C onConnectSecure);\n  tlssock.prependListener('end'\x2C onConnectEnd);\n\n  return tlssock;\n};\n
code-source-info,0xfcf8142f47e,249,0,49531,C0O0C4O49531,,
code-creation,Function,10,199500,0xfcf8143158e,2023, node:_tls_wrap:1:1,0xfcf8142f3e8,~
code-source-info,0xfcf8143158e,249,0,49531,C0O0C401O1159C406O1184C412O1206C418O1228C423O1249C429O1265C435O1289C440O1313C446O1329C452O1339C458O1362C464O1388C470O1412C475O1422C481O1491C485O1491C490O1461C495O1477C500O1518C503O1560C507O1560C512O1543C518O1594C522O1594C526O1594C528O1637C532O1637C536O1637C538O1667C542O1667C547O1698C551O1698C555O1698C557O1726C561O1726C565O1726C567O1757C571O1757C575O1757C577O1804C581O1804C585O1804C587O1861C591O1861C596O1850C602O1892C606O1892C612O1925C627O1926C633O1892C635O2011C639O2011C644O1978C650O1994C656O2057C660O2057C664O2057C666O2129C670O2129C675O2094C681O2111C687O2184C691O2184C696O2215C701O2167C707O2255C711O2255C716O2233C722O2334C726O2334C731O2310C737O2399C741O2399C746O2369C752O2389C757O2437C763O2461C769O2486C775O2511C781O2532C787O2557C793O2586C799O2613C805O2647C811O2679C817O2705C823O2732C829O2807C833O2807C838O2788C844O2889C848O2889C853O2845C858O2863C864O3096C868O3096C873O2928C879O2947C885O2965C891O2985C897O3005C903O3022C909O3040C915O3058C921O3076C927O3166C931O3166C936O3138C942O3216C946O3216C950O3216C952O3265C956O3265C960O3265C962O3320C966O3320C971O3305C977O3359C981O3359C985O3359C987O3416C991O3416C995O3416C997O3471C1001O3471C1005O3471C1007O3522C1011O3522C1015O3522C1017O3564C1021O3564C1025O3564C1027O3600C1031O3600C1035O3600C1037O3644C1041O3644C1045O3644C1047O3688C1051O3688C1055O3688C1057O3736C1061O3736C1065O3736C1067O3787C1071O3787C1075O3787C1077O3833C1081O3833C1085O3833C1087O3867C1089O3867C1091O3912C1092O3912C1094O3942C1095O3942C1097O15068C1101O15099C1111O15114C1117O15121C1123O15068C1128O15133C1136O15169C1142O15133C1147O15178C1149O15196C1153O15233C1158O15714C1185O15697C1216O15697C1219O15734C1223O15743C1229O15751C1235O15782C1239O15776C1246O15686C1317O15817C1320O15826C1325O15834C1334O15850C1338O16548C1341O16558C1350O16589C1354O16667C1357O16677C1366O16699C1370O18268C1373O18278C1382O18300C1386O18666C1387O18666C1389O18699C1390O18699C1392O18705C1395O18715C1404O18731C1408O23464C1411O23474C1420O23496C1424O24735C1427O24745C1436O24776C1440O25103C1443O25113C1452O25142C1456O25269C1459O25279C1468O25304C1472O25378C1475O25388C1484O25412C1488O25503C1491O25513C1500O25533C1504O25646C1507O25656C1516O25682C1520O25843C1523O25853C1532O25875C1536O26939C1539O26949C1548O26966C1552O27470C1555O27480C1564O27504C1568O27677C1571O27687C1580O27708C1584O27851C1587O27861C1596O27890C1604O28059C1607O28069C1616O28094C1624O28305C1627O28315C1636O28348C1644O28493C1647O28503C1656O28532C1664O28899C1679O28899C1689O35855C1693O35883C1707O35898C1717O35905C1727O35855C1737O35917C1745O35950C1755O35917C1765O35959C1767O35974C1775O35984C1779O36005C1787O36095C1790O36102C1803O36129C1811O39038C1814O39045C1827O39070C1835O39159C1838O39166C1851O39191C1859O39274C1862O39281C1875O39305C1883O39391C1886O39398C1899O39422C1907O39624C1910O39631C1919O39654C1933O39654C1943O39652C1951O41823C1954O41830C1967O41851C1975O42224C1978O42231C1987O42244C2001O42268C2009O46700C2013O46716C2022O49530,,
tick,0x1a363621c,199625,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a3726358,199625,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,199833,0xfcf81436b9e,5, node:crypto:1:1,0xfcf81436978,~
script-source,250,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\n// binary-encoded strings rather than buffers.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\n} = require('internal/util');\nassertCrypto();\n\nconst {\n  ERR_CRYPTO_FIPS_FORCED\x2C\n} = require('internal/errors').codes;\nconst constants = internalBinding('constants').crypto;\nconst { getOptionValue } = require('internal/options');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\nconst fipsForced = getOptionValue('--force-fips');\nconst {\n  getFipsCrypto\x2C\n  setFipsCrypto\x2C\n  timingSafeEqual\x2C\n} = internalBinding('crypto');\nconst {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n} = require('internal/crypto/random');\nconst {\n  pbkdf2\x2C\n  pbkdf2Sync\n} = require('internal/crypto/pbkdf2');\nconst {\n  scrypt\x2C\n  scryptSync\n} = require('internal/crypto/scrypt');\nconst {\n  hkdf\x2C\n  hkdfSync\n} = require('internal/crypto/hkdf');\nconst {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n} = require('internal/crypto/keygen');\nconst {\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n} = require('internal/crypto/keys');\nconst {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\n} = require('internal/crypto/diffiehellman');\nconst {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n} = require('internal/crypto/cipher');\nconst {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\n} = require('internal/crypto/sig');\nconst {\n  Hash\x2C\n  Hmac\n} = require('internal/crypto/hash');\nconst {\n  X509Certificate\n} = require('internal/crypto/x509');\nconst {\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  lazyRequire\x2C\n  secureHeapUsed\x2C\n} = require('internal/crypto/util');\nconst Certificate = require('internal/crypto/certificate');\n\n// These helper functions are needed because the constructors can\n// use new\x2C in which case V8 cannot inline the recursive constructor call\nfunction createHash(algorithm\x2C options) {\n  return new Hash(algorithm\x2C options);\n}\n\nfunction createCipher(cipher\x2C password\x2C options) {\n  return new Cipher(cipher\x2C password\x2C options);\n}\n\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDecipher(cipher\x2C password\x2C options) {\n  return new Decipher(cipher\x2C password\x2C options);\n}\n\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n}\n\nfunction createDiffieHellmanGroup(name) {\n  return new DiffieHellmanGroup(name);\n}\n\nfunction createECDH(curve) {\n  return new ECDH(curve);\n}\n\nfunction createHmac(hmac\x2C key\x2C options) {\n  return new Hmac(hmac\x2C key\x2C options);\n}\n\nfunction createSign(algorithm\x2C options) {\n  return new Sign(algorithm\x2C options);\n}\n\nfunction createVerify(algorithm\x2C options) {\n  return new Verify(algorithm\x2C options);\n}\n\nmodule.exports = {\n  // Methods\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  createCipheriv\x2C\n  createDecipheriv\x2C\n  createDiffieHellman\x2C\n  createDiffieHellmanGroup\x2C\n  createECDH\x2C\n  createHash\x2C\n  createHmac\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  createSecretKey\x2C\n  createSign\x2C\n  createVerify\x2C\n  diffieHellman\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  getCiphers\x2C\n  getCipherInfo\x2C\n  getCurves\x2C\n  getDiffieHellman: createDiffieHellmanGroup\x2C\n  getHashes\x2C\n  hkdf\x2C\n  hkdfSync\x2C\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n  scrypt\x2C\n  scryptSync\x2C\n  sign: signOneShot\x2C\n  setEngine\x2C\n  timingSafeEqual\x2C\n  getFips: fipsForced ? getFipsForced : getFipsCrypto\x2C\n  setFips: fipsForced ? setFipsForced : setFipsCrypto\x2C\n  verify: verifyOneShot\x2C\n\n  // Classes\n  Certificate\x2C\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  Hash\x2C\n  Hmac\x2C\n  KeyObject\x2C\n  Sign\x2C\n  Verify\x2C\n  X509Certificate\x2C\n  secureHeapUsed\x2C\n};\n\nfunction setFipsForced(val) {\n  if (val) return;\n  throw new ERR_CRYPTO_FIPS_FORCED();\n}\n\nfunction getFipsForced() {\n  return 1;\n}\n\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\n  value: getOptionValue('--tls-cipher-list')\n});\n\nObjectDefineProperties(module.exports\x2C {\n  createCipher: {\n    enumerable: false\x2C\n    value: deprecate(createCipher\x2C\n                     'crypto.createCipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  createDecipher: {\n    enumerable: false\x2C\n    value: deprecate(createDecipher\x2C\n                     'crypto.createDecipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\n  fips: {\n    get: fipsForced ? getFipsForced : getFipsCrypto\x2C\n    set: fipsForced ? setFipsForced : setFipsCrypto\n  }\x2C\n  DEFAULT_ENCODING: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: deprecate(getDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\x2C\n    set: deprecate(setDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\n  }\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  webcrypto: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    get() { return lazyRequire('internal/crypto/webcrypto').crypto; }\n  }\x2C\n\n  // Aliases for randomBytes are deprecated.\n  // The ecosystem needs those to exist for backwards compatibility.\n  prng: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.prng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  pseudoRandomBytes: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C\n                'crypto.pseudoRandomBytes is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  rng: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.rng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\n});\n
code-source-info,0xfcf81436b9e,250,0,7610,C0O0C4O7610,,
code-creation,Function,10,200166,0xfcf81437c76,1692, node:crypto:1:1,0xfcf81436b08,~
code-source-info,0xfcf81437c
tick,0x1a36c69f8,200250,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,200500,0xfcf81439d36,5, node:internal/crypto/random:1:1,0xfcf81439820,~
script-source,251,node:internal/crypto/random,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  NumberIsSafeInteger\x2C\n  NumberPrototypeToString\x2C\n  StringPrototypePadStart\x2C\n} = primordials;\n\nconst {\n  RandomBytesJob\x2C\n  RandomPrimeJob\x2C\n  CheckPrimeJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  secureBuffer\x2C\n} = internalBinding('crypto');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst { Buffer\x2C kMaxLength } = require('buffer');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_OPERATION_FAILED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateNumber\x2C\n  validateBoolean\x2C\n  validateCallback\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n} = require('internal/util/types');\n\nconst { FastBuffer } = require('internal/buffer');\n\nconst kMaxInt32 = 2 ** 31 - 1;\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\n\nfunction assertOffset(offset\x2C elementSize\x2C length) {\n  validateNumber(offset\x2C 'offset');\n  offset *= elementSize;\n\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\n  }\n\n  return offset >>> 0;  // Convert to uint32.\n}\n\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\n  validateNumber(size\x2C 'size');\n  size *= elementSize;\n\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\n  }\n\n  if (size + offset > length) {\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\n  }\n\n  return size >>> 0;  // Convert to uint32.\n}\n\nfunction randomBytes(size\x2C callback) {\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  const buf = new FastBuffer(size);\n\n  if (callback === undefined) {\n    randomFillSync(buf.buffer\x2C 0\x2C size);\n    return buf;\n  }\n\n  // Keep the callback as a regular function so this is propagated.\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\n    if (error) FunctionPrototypeCall(callback\x2C this\x2C error);\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n  });\n}\n\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0)\n    return buf;\n\n  const job = new RandomBytesJob(\n    kCryptoJobSync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n\n  const err = job.run()[0];\n  if (err)\n    throw err;\n\n  return buf;\n}\n\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  if (typeof offset === 'function') {\n    callback = offset;\n    offset = 0;\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    callback = size;\n    size = buf.length - offset;\n  } else {\n    validateCallback(callback);\n  }\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0) {\n    callback(null\x2C buf);\n    return;\n  }\n\n  const job = new RandomBytesJob(\n    kCryptoJobAsync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\n  job.run();\n}\n\n// Largest integer we can read from a buffer.\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\n\n// Cache random data to use in randomInt. The cache size must be evenly\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\nconst randomCache = new FastBuffer(6 * 1024);\nlet randomCacheOffset = randomCache.length;\nlet asyncCacheFillInProgress = false;\nconst asyncCachePendingTasks = [];\n\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\n// exclusive.\nfunction randomInt(min\x2C max\x2C callback) {\n  // Detect optional min syntax\n  // randomInt(max)\n  // randomInt(max\x2C callback)\n  const minNotSpecified = typeof max === 'undefined' ||\n    typeof max === 'function';\n\n  if (minNotSpecified) {\n    callback = max;\n    max = min;\n    min = 0;\n  }\n\n  const isSync = typeof callback === 'undefined';\n  if (!isSync) {\n    validateCallback(callback);\n  }\n  if (!NumberIsSafeInteger(min)) {\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\n  }\n  if (!NumberIsSafeInteger(max)) {\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\n  }\n  if (max <= min) {\n    throw new ERR_OUT_OF_RANGE(\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\n    );\n  }\n\n  // First we generate a random int between [0..range)\n  const range = max - min;\n\n  if (!(range <= RAND_MAX)) {\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\n                               `<= ${RAND_MAX}`\x2C range);\n  }\n\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\n  // less than range\x2C x must be drawn randomly from the set of integers greater\n  // than or equal to 0 and less than randLimit.\n  const randLimit = RAND_MAX - (RAND_MAX % range);\n\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\n  // do this synchronously\x2C which is super fast.\n  while (isSync || (randomCacheOffset < randomCache.length)) {\n    if (randomCacheOffset === randomCache.length) {\n      // This might block the thread for a bit\x2C but we are in sync mode.\n      randomFillSync(randomCache);\n      randomCacheOffset = 0;\n    }\n\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\n    randomCacheOffset += 6;\n\n    if (x < randLimit) {\n      const n = (x % range) + min;\n      if (isSync) return n;\n      process.nextTick(callback\x2C undefined\x2C n);\n      return;\n    }\n  }\n\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\n  // simply refill the cache\x2C because another async call to randomInt might\n  // already be doing that. Instead\x2C queue this call for when the cache has\n  // been refilled.\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\n  asyncRefillRandomIntCache();\n}\n\nfunction asyncRefillRandomIntCache() {\n  if (asyncCacheFillInProgress)\n    return;\n\n  asyncCacheFillInProgress = true;\n  randomFill(randomCache\x2C (err) => {\n    asyncCacheFillInProgress = false;\n\n    const tasks = asyncCachePendingTasks;\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\n    if (!err)\n      randomCacheOffset = 0;\n\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\n    // callback (errorReceiver) about it. This way\x2C every async call to\n    // randomInt has a chance of being successful\x2C and it avoids complex\n    // exception handling here.\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\n      randomInt(task.min\x2C task.max\x2C task.callback);\n    });\n\n    // This is the only call that might throw\x2C and is therefore done at the end.\n    if (errorReceiver)\n      errorReceiver.callback(err);\n  });\n}\n\n\nfunction onJobDone(buf\x2C callback\x2C error) {\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n}\n\n// Really just the Web Crypto API alternative\n// to require('crypto').randomFillSync() with an\n// additional limitation that the input buffer is\n// not allowed to exceed 65536 bytes\x2C and can only\n// be an integer-type TypedArray.\nfunction getRandomValues(data) {\n  if (!isArrayBufferView(data) ||\n      isFloat32Array(data) ||\n      isFloat64Array(data)) {\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\n    // the Web Crypto API and web platform tests expect this to\n    // be a DOMException with type TypeMismatchError.\n    throw lazyDOMException(\n      'The data argument must be an integer-type TypedArray'\x2C\n      'TypeMismatchError');\n  }\n  if (data.byteLength > 65536) {\n    throw lazyDOMException(\n      'The requested length exceeds 65\x2C536 bytes'\x2C\n      'QuotaExceededError');\n  }\n  randomFillSync(data\x2C 0);\n  return data;\n}\n\n// Implements an RFC 4122 version 4 random UUID.\n// To improve performance\x2C random data is generated in batches\n// large enough to cover kBatchSize UUID's at a time. The uuidData\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\n// from the buffer.\n\nconst kBatchSize = 128;\nlet uuidData;\nlet uuidNotBuffered;\nlet uuidBatch = 0;\n\nlet hexBytesCache;\nfunction getHexBytes() {\n  if (hexBytesCache === undefined) {\n    hexBytesCache = new Array(256);\n    for (let i = 0; i < hexBytesCache.length; i++) {\n      const hex = NumberPrototypeToString(i\x2C 16);\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\n    }\n  }\n  return hexBytesCache;\n}\n\nfunction serializeUUID(buf\x2C offset = 0) {\n  const kHexBytes = getHexBytes();\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n  return kHexBytes[buf[offset]] +\n    kHexBytes[buf[offset + 1]] +\n    kHexBytes[buf[offset + 2]] +\n    kHexBytes[buf[offset + 3]] +\n    '-' +\n    kHexBytes[buf[offset + 4]] +\n    kHexBytes[buf[offset + 5]] +\n    '-' +\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\n    kHexBytes[buf[offset + 7]] +\n    '-' +\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\n    kHexBytes[buf[offset + 9]] +\n    '-' +\n    kHexBytes[buf[offset + 10]] +\n    kHexBytes[buf[offset + 11]] +\n    kHexBytes[buf[offset + 12]] +\n    kHexBytes[buf[offset + 13]] +\n    kHexBytes[buf[offset + 14]] +\n    kHexBytes[buf[offset + 15]];\n}\n\nfunction getBufferedUUID() {\n  uuidData ??= secureBuffer(16 * kBatchSize);\n  if (uuidData === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n\n  if (uuidBatch === 0) randomFillSync(uuidData);\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\n}\n\nfunction getUnbufferedUUID() {\n  uuidNotBuffered ??= secureBuffer(16);\n  if (uuidNotBuffered === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n  randomFillSync(uuidNotBuffered);\n  return serializeUUID(uuidNotBuffered);\n}\n\nfunction randomUUID(options) {\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n  const {\n    disableEntropyCache = false\x2C\n  } = options || {};\n\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\n\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\n}\n\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\n  validateObject(options\x2C 'options');\n\n  const {\n    safe = false\x2C\n    bigint = false\x2C\n  } = options;\n  let {\n    add\x2C\n    rem\x2C\n  } = options;\n\n  validateBoolean(safe\x2C 'options.safe');\n  validateBoolean(bigint\x2C 'options.bigint');\n\n  if (add !== undefined) {\n    if (typeof add === 'bigint') {\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.add'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        add);\n    }\n  }\n\n  if (rem !== undefined) {\n    if (typeof rem === 'bigint') {\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.rem'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        rem);\n    }\n  }\n\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\n  return job;\n}\n\nfunction generatePrime(size\x2C options\x2C callback) {\n  validateUint32(size\x2C 'size'\x2C true);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  validateCallback(callback);\n\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\n  job.ondone = (err\x2C prime) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    callback(\n      undefined\x2C\n      job.result(prime));\n  };\n  job.run();\n}\n\nfunction generatePrimeSync(size\x2C options = {}) {\n  validateUint32(size\x2C 'size'\x2C true);\n\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\n  const { 0: err\x2C 1: prime } = job.run();\n  if (err)\n    throw err;\n  return job.result(prime);\n}\n\nfunction arrayBufferToUnsignedBigInt(arrayBuffer) {\n  return BigInt(`0x${Buffer.from(arrayBuffer).toString('hex')}`);\n}\n\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\n  if (bigint < 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\n  }\n\n  const hex = bigint.toString(16);\n  const padded = hex.padStart(hex.length + (hex.length % 2)\x2C 0);\n  return Buffer.from(padded\x2C 'hex');\n}\n\nfunction checkPrime(candidate\x2C options = {}\x2C callback) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  validateCallback(callback);\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\n  job.ondone = callback;\n  job.run();\n}\n\nfunction checkPrimeSync(candidate\x2C options = {}) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\n  const { 0: err\x2C 1: result } = job.run();\n  if (err)\n    throw err;\n\n  return result;\n}\n\nmodule.exports = {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  getRandomValues\x2C\n  randomUUID\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n};\n
code-source-info,0xfcf81439d36,251,0,15068,C0O0C4O15068,,
code-creation,Function,10,201083,0xfcf8143a7b6,678, node:internal/crypto/random:1:1,0xfcf81439ca0,~
code-source-info,0xfcf8143a7b6,251,0,15068,C0O0C263O25C269O34C275O59C281O81C287O104C293O128C299O138C305O163C311O188C317O199C323O214C329O237C335O264C341O425C344O425C349O317C355O335C361O353C367O370C373O389C379O407C385O485C388O485C393O463C399O543C402O543C407O520C413O528C418O664C421O664C426O664C431O586C437O612C443O634C449O798C452O798C457O703C463O721C469O740C475O760C481O778C487O920C490O920C495O841C501O862C507O882C513O900C519O976C522O976C527O961C533O1023C540O1063C543O1063C548O1063C550O4284C552O4284C554O4471C564O4471C569O4471C571O4521C574O4533C578O4521C580O4572C581O4572C583O4610C585O4610C587O9116C591O9116C593O9125C594O9125C596O9139C597O9139C599O9172C600O9172C602O9180C603O9180C605O14883C612O14904C618O14918C624O14936C630O14951C636O14965C642O14983C648O14996C654O15015C660O15029C666O15046C672O14898C677O15067,,
code-creation,Eval,10,201208,0xfcf8143c4a6,5, node:internal/crypto/pbkdf2:1:1,0xfcf8143c230,~
script-source,252,node:internal/crypto/pbkdf2,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  PBKDF2Job\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { ERR_MISSING_OPTION } = require('internal/errors').codes;\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  normalizeHashName\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  validateCallback(callback);\n\n  const job = new PBKDF2Job(\n    kCryptoJobAsync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (err\x2C result) => {\n    if (err !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  const job = new PBKDF2Job(\n    kCryptoJobSync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const { 0: err\x2C 1: result } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  validateString(digest\x2C 'digest');\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateUint32(iterations\x2C 'iterations'\x2C true);\n  validateUint32(keylen\x2C 'keylen');\n\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\n}\n\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { iterations } = algorithm;\n  let { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n  validateInteger(iterations\x2C 'algorithm.iterations'\x2C 1);\n\n  hash = normalizeHashName(hash.name);\n\n  const raw = baseKey[kKeyObject].export();\n\n  let byteLength = 64;  // the default\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    pbkdf2(raw\x2C salt\x2C iterations\x2C byteLength\x2C hash\x2C (err\x2C result) => {\n      if (err) return reject(err);\n      resolve(result.buffer);\n    });\n  });\n}\n\nmodule.exports = {\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  pbkdf2DeriveBits\x2C\n};\n
code-source-info,0xfcf8143c4a6,252,0,3284,C0O0C4O3284,,
code-creation,Function,10,201375,0xfcf8143c7be,255, node:internal/crypto/pbkdf2:1:1,0xfcf8143c410,~
code-source-info,0xfcf8143c7be,252,0,3284,C0O0C75O25C81O50C87O96C90O96C95O85C101O178C104O178C109O126C115O139C121O158C127O293C130O293C135O216C141O236C147O255C153O273C159O357C162O357C167O383C172O334C178O485C181O485C186O402C192O426C198O448C204O469C210O551C213O551C218O529C224O3218C231O3239C237O3249C243O3263C249O3233C254O3283,,
tick,0x10113c9d4,201458,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81437dc5,0x311ed227c90d,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,201500,0xfcf8143d27e,5, node:internal/crypto/scrypt:1:1,0xfcf8143cff8,~
script-source,253,node:internal/crypto/scrypt,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  ScryptJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateInt32\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst defaults = {\n  N: 16384\x2C\n  r: 8\x2C\n  p: 1\x2C\n  maxmem: 32 << 20\x2C  // 32 MB\x2C matches SCRYPT_MAX_MEM.\n};\n\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\n  if (callback === defaults) {\n    callback = options;\n    options = defaults;\n  }\n\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n\n  validateCallback(callback);\n\n  const job = new ScryptJob(\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (error\x2C result) => {\n    if (error !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n  const job = new ScryptJob(\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n  const { 0: err\x2C 1: result } = job.run();\n\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C keylen\x2C options) {\n  if (ScryptJob === undefined)\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\n\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\n  if (options && options !== defaults) {\n    let has_N\x2C has_r\x2C has_p;\n    if (has_N = (options.N !== undefined)) {\n      N = options.N;\n      validateUint32(N\x2C 'N');\n    }\n    if (options.cost !== undefined) {\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      N = options.cost;\n      validateUint32(N\x2C 'cost');\n    }\n    if (has_r = (options.r !== undefined)) {\n      r = options.r;\n      validateUint32(r\x2C 'r');\n    }\n    if (options.blockSize !== undefined) {\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      r = options.blockSize;\n      validateUint32(r\x2C 'blockSize');\n    }\n    if (has_p = (options.p !== undefined)) {\n      p = options.p;\n      validateUint32(p\x2C 'p');\n    }\n    if (options.parallelization !== undefined) {\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      p = options.parallelization;\n      validateUint32(p\x2C 'parallelization');\n    }\n    if (options.maxmem !== undefined) {\n      maxmem = options.maxmem;\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\n    }\n    if (N === 0) N = defaults.N;\n    if (r === 0) r = defaults.r;\n    if (p === 0) p = defaults.p;\n    if (maxmem === 0) maxmem = defaults.maxmem;\n  }\n\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\n}\n\nasync function scryptDeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const {\n    N = 16384\x2C\n    r = 8\x2C\n    p = 1\x2C\n    maxmem = 32 * 1024 * 1024\x2C\n    encoding\x2C\n  } = algorithm;\n  validateUint32(N\x2C 'algorithm.N');\n  validateUint32(r\x2C 'algorithm.r');\n  validateUint32(p\x2C 'algorithm.p');\n  validateUint32(maxmem\x2C 'algorithm.maxmem');\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt'\x2C encoding);\n\n  const raw = baseKey[kKeyObject].export();\n\n  let byteLength = 64;  // the default\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    scrypt(raw\x2C salt\x2C byteLength\x2C { N\x2C r\x2C p\x2C maxmem }\x2C (err\x2C result) => {\n      if (err) return reject(err);\n      resolve(result.buffer);\n    });\n  });\n}\n\nmodule.exports = {\n  scrypt\x2C\n  scryptSync\x2C\n  scryptDeriveBits\x2C\n};\n
code-source-info,0xfcf8143d27e,253,0,4693,C0O0C4O4693,,
code-creation,Function,10,201708,0xfcf8143d5f6,264, node:internal/crypto/scrypt:1:1,0xfcf8143d1e8,~
code-source-info,0xfcf8143d5f6,253,0,4693,C0O0C78O25C84O50C90O96C93O96C98O85C104O178C107O178C112O126C118O139C124O158C130O292C133O292C138O216C144O236C150O255C156O272C162O430C165O430C170O430C175O348C181O389C187O531C190O531C195O469C201O493C207O515C213O597C216O597C221O575C227O641C231O641C233O4627C240O4648C246O4658C252O4672C258O4642C263O4692,,
code-creation,Eval,10,201833,0xfcf8143e2c6,5, node:internal/crypto/hkdf:1:1,0xfcf8143dfc0,~
script-source,254,node:internal/crypto/hkdf,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  HKDFJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { kMaxLength } = require('buffer');\n\nconst {\n  getArrayBufferOrView\x2C\n  normalizeHashName\x2C\n  toBuf\x2C\n  validateByteSource\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  createSecretKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\n\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\n  key = prepareKey(key);\n  salt = toBuf(salt);\n  info = toBuf(info);\n\n  validateString(hash\x2C 'digest');\n  validateByteSource(salt\x2C 'salt');\n  validateByteSource(info\x2C 'info');\n\n  validateInteger(length\x2C 'length'\x2C 0\x2C kMaxLength);\n\n  if (info.byteLength > 1024) {\n    throw ERR_OUT_OF_RANGE(\n      'info'\x2C\n      'must not contain more than 1024 bytes'\x2C\n      info.byteLength);\n  }\n\n  return {\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  };\n});\n\nfunction prepareKey(key) {\n  if (isKeyObject(key))\n    return key;\n\n  // TODO(@jasnell): createSecretKey should allow using an ArrayBuffer\n  if (isAnyArrayBuffer(key))\n    return createSecretKey(new Uint8Array(key));\n\n  key = toBuf(key);\n\n  if (!isArrayBufferView(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'ikm'\x2C\n      [\n        'string'\x2C\n        'SecretKeyObject'\x2C\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n        'Buffer'\x2C\n      ]\x2C\n      key);\n  }\n\n  return createSecretKey(key);\n}\n\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  validateCallback(callback);\n\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n\n  job.run();\n}\n\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n  const { 0: err\x2C 1: bits } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  return bits;\n}\n\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  const info = getArrayBufferOrView(algorithm.info\x2C 'algorithm.info');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n\n  let byteLength = 512 / 8;\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    hkdf(\n      normalizeHashName(hash.name)\x2C\n      baseKey[kKeyObject]\x2C\n      salt\x2C\n      info\x2C\n      byteLength\x2C\n      (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n}\n\nmodule.exports = {\n  hkdf\x2C\n  hkdfSync\x2C\n  hkdfDeriveBits\x2C\n};\n
code-source-info,0xfcf8143e2c6,254,0,3678,C0O0C4O3678,,
code-creation,Function,10,202000,0xfcf8143e68e,362, node:internal/crypto/hkdf:1:1,0xfcf8143e230,~
code-source-info,0xfcf8143e68e,254,0,3678,C0O0C102O25C108O50C114O61C120O151C123O151C128O101C134O112C140O131C146O266C149O266C154O189C160O209C166O228C172O246C178O322C181O322C186O307C192O444C195O444C200O352C206O376C212O397C218O406C224O428C230O524C233O524C238O488C244O507C250O590C253O590C258O568C264O670C267O670C272O627C278O647C284O822C287O822C292O822C297O726C303O752C309O774C315O801C320O878C325O878C329O878C331O3618C338O3639C344O3647C350O3659C356O3633C361O3677,,
new,MemoryChunk,0xb249f5c0000,262144
code-creation,Eval,10,202333,0xfcf8143fdc6,5, node:internal/crypto/keys:1:1,0xfcf8143f890,~
script-source,255,node:internal/crypto/keys,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  KeyObjectHandle\x2C\n  createNativeKeyObjectClass\x2C\n  kKeyTypeSecret\x2C\n  kKeyTypePublic\x2C\n  kKeyTypePrivate\x2C\n  kKeyFormatPEM\x2C\n  kKeyFormatDER\x2C\n  kKeyFormatJWK\x2C\n  kKeyEncodingPKCS1\x2C\n  kKeyEncodingPKCS8\x2C\n  kKeyEncodingSPKI\x2C\n  kKeyEncodingSEC1\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_CRYPTO_INVALID_JWK\x2C\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  kHandle\x2C\n  kKeyObject\x2C\n  getArrayBufferOrView\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst kAlgorithm = Symbol('kAlgorithm');\nconst kExtractable = Symbol('kExtractable');\nconst kKeyType = Symbol('kKeyType');\nconst kKeyUsages = Symbol('kKeyUsages');\n\n// Key input contexts.\nconst kConsumePublic = 0;\nconst kConsumePrivate = 1;\nconst kCreatePublic = 2;\nconst kCreatePrivate = 3;\n\nconst encodingNames = [];\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\n  encodingNames[m[0]] = m[1];\n\n// Creating the KeyObject class is a little complicated due to inheritance\n// and that fact that KeyObjects should be transferrable between threads\x2C\n// which requires the KeyObject base class to be implemented in C++.\n// The creation requires a callback to make sure that the NativeKeyObject\n// base class cannot exist without the other KeyObject implementations.\nconst {\n  0: KeyObject\x2C\n  1: SecretKeyObject\x2C\n  2: PublicKeyObject\x2C\n  3: PrivateKeyObject\x2C\n} = createNativeKeyObjectClass((NativeKeyObject) => {\n  // Publicly visible KeyObject class.\n  class KeyObject extends NativeKeyObject {\n    constructor(type\x2C handle) {\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\n\n      super(handle);\n\n      this[kKeyType] = type;\n\n      ObjectDefineProperty(this\x2C kHandle\x2C {\n        value: handle\x2C\n        enumerable: false\x2C\n        configurable: false\x2C\n        writable: false\n      });\n    }\n\n    get type() {\n      return this[kKeyType];\n    }\n\n    static from(key) {\n      if (!isCryptoKey(key))\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n      return key[kKeyObject];\n    }\n  }\n\n  class SecretKeyObject extends KeyObject {\n    constructor(handle) {\n      super('secret'\x2C handle);\n    }\n\n    get symmetricKeySize() {\n      return this[kHandle].getSymmetricKeySize();\n    }\n\n    export(options) {\n      if (options !== undefined) {\n        validateObject(options\x2C 'options');\n        validateOneOf(\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\n        if (options.format === 'jwk') {\n          return this[kHandle].exportJwk({});\n        }\n      }\n      return this[kHandle].export();\n    }\n  }\n\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\n\n  function normalizeKeyDetails(details = {}) {\n    if (details.publicExponent !== undefined) {\n      return {\n        ...details\x2C\n        publicExponent:\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\n      };\n    }\n    return details;\n  }\n\n  class AsymmetricKeyObject extends KeyObject {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(type\x2C handle) {\n      super(type\x2C handle);\n    }\n\n    get asymmetricKeyType() {\n      return this[kAsymmetricKeyType] ||\n             (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());\n    }\n\n    get asymmetricKeyDetails() {\n      switch (this.asymmetricKeyType) {\n        case 'rsa':\n        case 'rsa-pss':\n        case 'dsa':\n        case 'ec':\n          return this[kAsymmetricKeyDetails] ||\n             (this[kAsymmetricKeyDetails] = normalizeKeyDetails(\n               this[kHandle].keyDetail({})\n             ));\n        default:\n          return {};\n      }\n    }\n  }\n\n  class PublicKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('public'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        return this[kHandle].exportJwk({});\n      }\n      const {\n        format\x2C\n        type\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type);\n    }\n  }\n\n  class PrivateKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('private'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        if (options.passphrase !== undefined) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            'jwk'\x2C 'does not support encryption');\n        }\n        return this[kHandle].exportJwk({});\n      }\n      const {\n        format\x2C\n        type\x2C\n        cipher\x2C\n        passphrase\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\n    }\n  }\n\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\n});\n\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\n  if (formatStr === undefined && defaultFormat !== undefined)\n    return defaultFormat;\n  else if (formatStr === 'pem')\n    return kKeyFormatPEM;\n  else if (formatStr === 'der')\n    return kKeyFormatDER;\n  else if (formatStr === 'jwk')\n    return kKeyFormatJWK;\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\n}\n\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\n  if (typeStr === undefined && !required) {\n    return undefined;\n  } else if (typeStr === 'pkcs1') {\n    if (keyType !== undefined && keyType !== 'rsa') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for RSA keys');\n    }\n    return kKeyEncodingPKCS1;\n  } else if (typeStr === 'spki' && isPublic !== false) {\n    return kKeyEncodingSPKI;\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\n    return kKeyEncodingPKCS8;\n  } else if (typeStr === 'sec1' && isPublic !== true) {\n    if (keyType !== undefined && keyType !== 'ec') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for EC keys');\n    }\n    return kKeyEncodingSEC1;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\n}\n\nfunction option(name\x2C objName) {\n  return objName === undefined ?\n    `options.${name}` : `options.${objName}.${name}`;\n}\n\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\n  const { format: formatStr\x2C type: typeStr } = enc;\n\n  const isInput = keyType === undefined;\n  const format = parseKeyFormat(formatStr\x2C\n                                isInput ? kKeyFormatPEM : undefined\x2C\n                                option('format'\x2C objName));\n\n  const isRequired = (!isInput ||\n                      format === kKeyFormatDER) &&\n                      format !== kKeyFormatJWK;\n  const type = parseKeyType(typeStr\x2C\n                            isRequired\x2C\n                            keyType\x2C\n                            isPublic\x2C\n                            option('type'\x2C objName));\n  return { format\x2C type };\n}\n\nfunction isStringOrBuffer(val) {\n  return typeof val === 'string' ||\n         isArrayBufferView(val) ||\n         isAnyArrayBuffer(val);\n}\n\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\n  if (enc === null || typeof enc !== 'object')\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'object'\x2C enc);\n\n  const isInput = keyType === undefined;\n\n  const {\n    format\x2C\n    type\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\n\n  let cipher\x2C passphrase\x2C encoding;\n  if (isPublic !== true) {\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\n\n    if (!isInput) {\n      if (cipher != null) {\n        if (typeof cipher !== 'string')\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n        if (format === kKeyFormatDER &&\n            (type === kKeyEncodingPKCS1 ||\n             type === kKeyEncodingSEC1)) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            encodingNames[type]\x2C 'does not support encryption');\n        }\n      } else if (passphrase !== undefined) {\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n      }\n    }\n\n    if ((isInput && passphrase !== undefined &&\n         !isStringOrBuffer(passphrase)) ||\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\n                                      passphrase);\n    }\n  }\n\n  if (passphrase !== undefined)\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\n\n  return { format\x2C type\x2C cipher\x2C passphrase };\n}\n\n// Parses the public key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\n}\n\n// Parses the private key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\n}\n\nfunction getKeyObjectHandle(key\x2C ctx) {\n  if (ctx === kCreatePrivate) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      key\n    );\n  }\n\n  if (key.type !== 'private') {\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\n    if (key.type !== 'public') {\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\n                                                   'private or public');\n    }\n  }\n\n  return key[kHandle];\n}\n\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\n  const types = [\n    'ArrayBuffer'\x2C\n    'Buffer'\x2C\n    'TypedArray'\x2C\n    'DataView'\x2C\n    'string'\x2C // Only if bufferOnly == false\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\n  ];\n  if (bufferOnly) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\n  } else if (!allowKeyObject) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\n  }\n  return types;\n}\n\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\n  validateObject(key\x2C 'key');\n  validateOneOf(\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\n\n  if (key.kty === 'OKP') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\n    validateString(key.x\x2C 'key.x');\n\n    if (!isPublic)\n      validateString(key.d\x2C 'key.d');\n\n    let keyData;\n    if (isPublic)\n      keyData = Buffer.from(key.x\x2C 'base64');\n    else\n      keyData = Buffer.from(key.d\x2C 'base64');\n\n    switch (key.crv) {\n      case 'Ed25519':\n      case 'X25519':\n        if (keyData.byteLength !== 32) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'Ed448':\n        if (keyData.byteLength !== 57) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'X448':\n        if (keyData.byteLength !== 56) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n    }\n\n    const handle = new KeyObjectHandle();\n    if (isPublic) {\n      handle.initEDRaw(\n        `NODE-${key.crv.toUpperCase()}`\x2C\n        keyData\x2C\n        kKeyTypePublic);\n    } else {\n      handle.initEDRaw(\n        `NODE-${key.crv.toUpperCase()}`\x2C\n        keyData\x2C\n        kKeyTypePrivate);\n    }\n\n    return handle;\n  }\n\n  if (key.kty === 'EC') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\n    validateString(key.x\x2C 'key.x');\n    validateString(key.y\x2C 'key.y');\n\n    const jwk = {\n      kty: key.kty\x2C\n      crv: key.crv\x2C\n      x: key.x\x2C\n      y: key.y\n    };\n\n    if (!isPublic) {\n      validateString(key.d\x2C 'key.d');\n      jwk.d = key.d;\n    }\n\n    const handle = new KeyObjectHandle();\n    const type = handle.initJwk(jwk\x2C jwk.crv);\n    if (type === undefined)\n      throw new ERR_CRYPTO_INVALID_JWK();\n\n    return handle;\n  }\n\n  // RSA\n  validateString(key.n\x2C 'key.n');\n  validateString(key.e\x2C 'key.e');\n\n  const jwk = {\n    kty: key.kty\x2C\n    n: key.n\x2C\n    e: key.e\n  };\n\n  if (!isPublic) {\n    validateString(key.d\x2C 'key.d');\n    validateString(key.p\x2C 'key.p');\n    validateString(key.q\x2C 'key.q');\n    validateString(key.dp\x2C 'key.dp');\n    validateString(key.dq\x2C 'key.dq');\n    validateString(key.qi\x2C 'key.qi');\n    jwk.d = key.d;\n    jwk.p = key.p;\n    jwk.q = key.q;\n    jwk.dp = key.dp;\n    jwk.dq = key.dq;\n    jwk.qi = key.qi;\n  }\n\n  const handle = new KeyObjectHandle();\n  const type = handle.initJwk(jwk);\n  if (type === undefined)\n    throw new ERR_CRYPTO_INVALID_JWK();\n\n  return handle;\n}\n\nfunction prepareAsymmetricKey(key\x2C ctx) {\n  if (isKeyObject(key)) {\n    // Best case: A key object\x2C as simple as that.\n    return { data: getKeyObjectHandle(key\x2C ctx) };\n  } else if (isCryptoKey(key)) {\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\n  } else if (isStringOrBuffer(key)) {\n    // Expect PEM by default\x2C mostly for backward compatibility.\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\n  } else if (typeof key === 'object') {\n    const { key: data\x2C encoding\x2C format } = key;\n    // The 'key' property can be a KeyObject as well to allow specifying\n    // additional options such as padding along with the key.\n    if (isKeyObject(data))\n      return { data: getKeyObjectHandle(data\x2C ctx) };\n    else if (isCryptoKey(data))\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\n    else if (isJwk(data) && format === 'jwk')\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\n    // Either PEM or DER using PKCS#1 or SPKI.\n    if (!isStringOrBuffer(data)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'key.key'\x2C\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\n        data);\n    }\n\n    const isPublic =\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\n    return {\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\n    };\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'key'\x2C\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\n    key);\n}\n\nfunction preparePrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\n}\n\nfunction preparePublicOrPrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\n}\n\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\n  if (!bufferOnly) {\n    if (isKeyObject(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kHandle];\n    } else if (isCryptoKey(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kKeyObject][kHandle];\n    }\n  }\n  if (typeof key !== 'string' &&\n      !isArrayBufferView(key) &&\n      !isAnyArrayBuffer(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\n      key);\n  }\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n}\n\nfunction createSecretKey(key\x2C encoding) {\n  key = prepareSecretKey(key\x2C encoding\x2C true);\n  if (key.byteLength === 0)\n    throw new ERR_OUT_OF_RANGE('key.byteLength'\x2C '> 0'\x2C key.byteLength);\n  const handle = new KeyObjectHandle();\n  handle.init(kKeyTypeSecret\x2C key);\n  return new SecretKeyObject(handle);\n}\n\nfunction createPublicKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePublic);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PublicKeyObject(handle);\n}\n\nfunction createPrivateKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PrivateKeyObject(handle);\n}\n\nfunction isKeyObject(obj) {\n  return obj != null && obj[kKeyType] !== undefined;\n}\n\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\n// that adapts it to the standard interface. This implementation also\n// extends the JSTransferable class\x2C allowing the CryptoKey to be cloned\n// to Workers.\n// TODO(@jasnell): Embedder environments like electron may have issues\n// here similar to other things like URL. A chromium provided CryptoKey\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\n// would be fantastic if we could find a way of making those interop.\nclass CryptoKey extends JSTransferable {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `CryptoKey ${inspect({\n      type: this.type\x2C\n      extractable: this.extractable\x2C\n      algorithm: this.algorithm\x2C\n      usages: this.usages\n    }\x2C opts)}`;\n  }\n\n  get type() {\n    return this[kKeyObject].type;\n  }\n\n  get extractable() {\n    return this[kExtractable];\n  }\n\n  get algorithm() {\n    return this[kAlgorithm];\n  }\n\n  get usages() {\n    return ArrayFrom(this[kKeyUsages]);\n  }\n\n  [kClone]() {\n    const keyObject = this[kKeyObject];\n    const algorithm = this.algorithm;\n    const extractable = this.extractable;\n    const usages = this.usages;\n\n    return {\n      data: {\n        keyObject\x2C\n        algorithm\x2C\n        usages\x2C\n        extractable\x2C\n      }\x2C\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\n    };\n  }\n\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kKeyUsages] = usages;\n    this[kExtractable] = extractable;\n  }\n}\n\n// All internal code must use new InternalCryptoKey to create\n// CryptoKey instances. The CryptoKey class is exposed to end\n// user code but is not permitted to be constructed directly.\nclass InternalCryptoKey extends JSTransferable {\n  constructor(\n    keyObject\x2C\n    algorithm\x2C\n    keyUsages\x2C\n    extractable) {\n    super();\n    // Using symbol properties here currently instead of private\n    // properties because (for now) the performance penalty of\n    // private fields is still too high.\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kExtractable] = extractable;\n    this[kKeyUsages] = keyUsages;\n  }\n}\n\nInternalCryptoKey.prototype.constructor = CryptoKey;\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\n\nfunction isCryptoKey(obj) {\n  return obj != null && obj[kKeyObject] !== undefined;\n}\n\nfunction isJwk(obj) {\n  return obj != null && obj.kty !== undefined;\n}\n\nmodule.exports = {\n  // Public API.\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n\n  // These are designed for internal use only and should not be exposed.\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  parseKeyEncoding\x2C\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n  SecretKeyObject\x2C\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  isKeyObject\x2C\n  isCryptoKey\x2C\n  isJwk\x2C\n};\n
code-source-info,0xfcf8143fdc6,255,0,20506,C0O0C4O20506,,
code-creation,Function,10,203125,0xb249f5c1996,1232, node:internal/crypto/keys:1:1,0xfcf8143fd30,~
code-source-info,0xb249f5c1996,255,0,20506,C0O0C264O25C270O38C276O61C282O85C287O109C293O119C299O398C303O398C309O159C315O178C320O208C326O226C332O244C338O263C344O280C350O297C356O314C362O335C368O356C374O376C380O491C384O491C390O436C396O454C402O471C408O764C412O764C418O764C424O547C430O588C436O628C442O656C448O685C454O711C460O738C466O885C470O885C476O803C482O814C488O828C494O852C500O972C504O972C510O929C516O949C522O1061C526O1061C532O1015C537O1033C542O1043C547O1151C551O1151C557O1137C562O1198C566O1198C572O1186C578O1252C582O1252C588O1241C594O1291C602O1291C606O1291C608O1334C616O1334C620O1334C622O1375C630O1375C634O1375C636O1414C644O1414C648O1414C650O1483C651O1483C653O1510C655O1510C657O1535C659O1535C661O1561C663O1561C665O1587C667O1587C669O1607C689O1609C714O1639C739O1686C764O1714C802O1602C833O1602C836O1744C841O1759C848O1767C851O1764C858O1591C929O2232C935O2232C941O2150C948O2166C957O2188C966O2210C975O17896C983O17980C1017O18559C1027O18914C1055O19339C1081O19782C1089O19804C1093O19856C1099O19877C1105O19817C1110O20048C1118O20086C1124O20105C1130O20124C1136O20144C1142O20157C1148O20170C1154O20265C1160O20291C1166O20318C1172O20338C1178O20359C1184O20388C1190O20408C1196O20427C1202O20446C1208O20466C1214O20481C1220O20496C1226O20063C1231O20505,,
tick,0x100e1c848,203208,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf8143e777,0x311ed227c90d,0x311ed227bbdd,0xfcf81437ddb,0x311ed227c90d,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,203333,0xb249f5c4c46,247, node:internal/crypto/keys:97:32,0x12ae912bfc68,~
code-source-info,0xb249f5c4c46,255,2259,5875,C0O2259C17O2347C50O3130C83O3672C93O3672C97O3672C99O3734C109O3734C113O3734C115O4076C148O4785C176O5197C204O5802C213O5810C222O5821C231O5838C240O5855C246O5873,,
code-creation,Eval,10,203541,0xb249f5c6ff6,5, node:internal/crypto/keygen:1:1,0xb249f5c6c00,~
script-source,256,node:internal/crypto/keygen,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  SafeArrayIterator\x2C\n} = primordials;\n\nconst {\n  DhKeyPairGenJob\x2C\n  DsaKeyPairGenJob\x2C\n  EcKeyPairGenJob\x2C\n  NidKeyPairGenJob\x2C\n  RsaKeyPairGenJob\x2C\n  SecretKeyGenJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kKeyVariantRSA_PSS\x2C\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\n  EVP_PKEY_ED25519\x2C\n  EVP_PKEY_ED448\x2C\n  EVP_PKEY_X25519\x2C\n  EVP_PKEY_X448\x2C\n  OPENSSL_EC_NAMED_CURVE\x2C\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  SecretKeyObject\x2C\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  isJwk\n} = require('internal/crypto/keys');\n\nconst {\n  kAesKeyLengths\x2C\n} = require('internal/crypto/util');\n\nconst { customPromisifyArgs } = require('internal/util');\n\nconst {\n  isInt32\x2C\n  isUint32\x2C\n  validateCallback\x2C\n  validateString\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\n} = require('internal/errors');\n\nconst { isArrayBufferView } = require('internal/util/types');\n\nfunction wrapKey(key\x2C ctor) {\n  if (typeof key === 'string' ||\n      isArrayBufferView(key) ||\n      isJwk(key))\n    return key;\n  return new ctor(key);\n}\n\nfunction generateKeyPair(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  validateCallback(callback);\n\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    // If no encoding was chosen\x2C return key objects instead.\n    let { 0: pubkey\x2C 1: privkey } = result;\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\n  };\n\n  job.run();\n}\n\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\n  value: ['publicKey'\x2C 'privateKey']\x2C\n  enumerable: false\n});\n\nfunction generateKeyPairSync(type\x2C options) {\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nfunction handleError(ret) {\n  if (ret == null)\n    return; // async\n\n  const { 0: err\x2C 1: keys } = ret;\n  if (err !== undefined)\n    throw err;\n\n  const { 0: publicKey\x2C 1: privateKey } = keys;\n\n  // If no encoding was chosen\x2C return key objects instead.\n  return {\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\n  };\n}\n\nfunction parseKeyEncoding(keyType\x2C options = {}) {\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\n\n  let publicFormat\x2C publicType;\n  if (publicKeyEncoding == null) {\n    publicFormat = publicType = undefined;\n  } else if (typeof publicKeyEncoding === 'object') {\n    ({\n      format: publicFormat\x2C\n      type: publicType\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\n                               'publicKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\n                                    publicKeyEncoding);\n  }\n\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\n  if (privateKeyEncoding == null) {\n    privateFormat = privateType = undefined;\n  } else if (typeof privateKeyEncoding === 'object') {\n    ({\n      format: privateFormat\x2C\n      type: privateType\x2C\n      cipher\x2C\n      passphrase\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\n                                'privateKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\n                                    privateKeyEncoding);\n  }\n\n  return [\n    publicFormat\x2C\n    publicType\x2C\n    privateFormat\x2C\n    privateType\x2C\n    cipher\x2C\n    passphrase\x2C\n  ];\n}\n\nfunction createJob(mode\x2C type\x2C options) {\n  validateString(type\x2C 'type');\n\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\n\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n\n  switch (type) {\n    case 'rsa':\n    case 'rsa-pss':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { publicExponent } = options;\n      if (publicExponent == null) {\n        publicExponent = 0x10001;\n      } else if (!isUint32(publicExponent)) {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.publicExponent'\x2C\n          publicExponent);\n      }\n\n      if (type === 'rsa') {\n        return new RsaKeyPairGenJob(\n          mode\x2C\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\n          modulusLength\x2C\n          publicExponent\x2C\n          ...encoding);\n      }\n\n      const { hash\x2C mgf1Hash\x2C saltLength } = options;\n      if (hash !== undefined && typeof hash !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\n      if (mgf1Hash !== undefined && typeof mgf1Hash !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\n      if (saltLength !== undefined && (!isInt32(saltLength) || saltLength < 0))\n        throw new ERR_INVALID_ARG_VALUE('options.saltLength'\x2C saltLength);\n\n      return new RsaKeyPairGenJob(\n        mode\x2C\n        kKeyVariantRSA_PSS\x2C\n        modulusLength\x2C\n        publicExponent\x2C\n        hash\x2C\n        mgf1Hash\x2C\n        saltLength\x2C\n        ...encoding);\n    }\n    case 'dsa':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { divisorLength } = options;\n      if (divisorLength == null) {\n        divisorLength = -1;\n      } else if (!isInt32(divisorLength) || divisorLength < 0) {\n        throw new ERR_INVALID_ARG_VALUE('options.divisorLength'\x2C divisorLength);\n      }\n\n      return new DsaKeyPairGenJob(\n        mode\x2C\n        modulusLength\x2C\n        divisorLength\x2C\n        ...encoding);\n    }\n    case 'ec':\n    {\n      validateObject(options\x2C 'options');\n      const { namedCurve } = options;\n      if (typeof namedCurve !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.namedCurve'\x2C namedCurve);\n      let { paramEncoding } = options;\n      if (paramEncoding == null || paramEncoding === 'named')\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\n      else if (paramEncoding === 'explicit')\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\n      else\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\n\n      return new EcKeyPairGenJob(\n        mode\x2C\n        namedCurve\x2C\n        paramEncoding\x2C\n        ...encoding);\n    }\n    case 'ed25519':\n    case 'ed448':\n    case 'x25519':\n    case 'x448':\n    {\n      let id;\n      switch (type) {\n        case 'ed25519':\n          id = EVP_PKEY_ED25519;\n          break;\n        case 'ed448':\n          id = EVP_PKEY_ED448;\n          break;\n        case 'x25519':\n          id = EVP_PKEY_X25519;\n          break;\n        case 'x448':\n          id = EVP_PKEY_X448;\n          break;\n      }\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\n    }\n    case 'dh':\n    {\n      validateObject(options\x2C 'options');\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\n      if (group != null) {\n        if (prime != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\n        if (generator != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\n        if (typeof group !== 'string')\n          throw new ERR_INVALID_ARG_VALUE('options.group'\x2C group);\n\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\n      }\n\n      if (prime != null) {\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\n        if (!isArrayBufferView(prime))\n          throw new ERR_INVALID_ARG_VALUE('options.prime'\x2C prime);\n      } else if (primeLength != null) {\n        if (!isInt32(primeLength) || primeLength < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.primeLength'\x2C primeLength);\n      } else {\n        throw new ERR_MISSING_OPTION(\n          'At least one of the group\x2C prime\x2C or primeLength options');\n      }\n\n      if (generator != null) {\n        if (!isInt32(generator) || generator < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.generator'\x2C generator);\n      }\n      return new DhKeyPairGenJob(\n        mode\x2C\n        prime != null ? prime : primeLength\x2C\n        generator == null ? 2 : generator\x2C\n        ...encoding);\n    }\n    default:\n      // Fall through\n  }\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\n}\n\n// Symmetric Key Generation\n\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\n  validateString(keyType\x2C 'type');\n  validateObject(options\x2C 'options');\n  const { length } = options;\n  switch (keyType) {\n    case 'hmac':\n      validateInteger(length\x2C 'options.length'\x2C 1\x2C 2 ** 31 - 1);\n      break;\n    case 'aes':\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\n      break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE(\n        'type'\x2C\n        keyType\x2C\n        'must be a supported key type');\n  }\n\n  return new SecretKeyGenJob(mode\x2C length);\n}\n\nfunction handleGenerateKeyError(ret) {\n  if (ret === undefined)\n    return; // async\n\n  const { 0: err\x2C 1: key } = ret;\n  if (err !== undefined)\n    throw err;\n\n  return wrapKey(key\x2C SecretKeyObject);\n}\n\nfunction generateKey(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateCallback(callback);\n\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C key) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\n  };\n\n  handleGenerateKeyError(job.run());\n}\n\nfunction generateKeySync(type\x2C options) {\n  return handleGenerateKeyError(\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nmodule.exports = {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n};\n
code-source-info,0xb249f5c6ff6,256,0,10291,C0O0C4O10291,,
code-creation,Function,10,203958,0xb249f5c7666,509, node:internal/crypto/keygen:1:1,0xb249f5c6f60,~
code-source-info,0xb249f5c7666,256,0,10291,C0O0C169O25C175O50C180O74C186O461C189O461C194O121C200O140C206O160C212O179C218O199C224O219C230O238C236O257C242O275C248O297C254O330C260O350C266O368C272O387C278O404C284O430C290O620C293O620C298O499C304O518C310O538C316O557C322O583C328O610C334O684C337O684C342O664C348O750C351O750C356O726C361O904C364O904C369O787C375O798C381O810C387O830C393O848C399O867C405O885C411O1049C414O1049C419O1049C424O960C430O994C436O1021C442O1108C445O1108C450O1086C456O1961C467O1923C472O10193C479O10214C485O10233C491O10256C497O10271C503O10208C508O10290,,
tick,0x100c56808,204000,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81437df1,0x311ed227c90d,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,204250,0xb249f5c92ce,5, node:internal/crypto/diffiehellman:1:1,0xb249f5c8dd8,~
script-source,257,node:internal/crypto/diffiehellman,'use strict';\n\nconst {\n  ArrayBufferPrototypeSlice\x2C\n  FunctionPrototypeCall\x2C\n  MathFloor\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  DHBitsJob\x2C\n  DHKeyExportJob\x2C\n  DiffieHellman: _DiffieHellman\x2C\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\n  ECDH: _ECDH\x2C\n  ECDHBitsJob\x2C\n  ECDHConvertKey: _ECDHConvertKey\x2C\n  statelessDH\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  codes: {\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  KeyObject\x2C\n  InternalCryptoKey\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  isCryptoKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  generateKeyPair\x2C\n} = require('internal/crypto/keygen');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  getUsagesUnion\x2C\n  hasAnyNotIn\x2C\n  jobPromise\x2C\n  toBuf\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    POINT_CONVERSION_COMPRESSED\x2C\n    POINT_CONVERSION_HYBRID\x2C\n    POINT_CONVERSION_UNCOMPRESSED\x2C\n  }\n} = internalBinding('constants');\n\nconst DH_GENERATOR = 2;\n\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  if (!(this instanceof DiffieHellman))\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n\n  if (typeof sizeOrKey !== 'number' &&\n      typeof sizeOrKey !== 'string' &&\n      !isArrayBufferView(sizeOrKey) &&\n      !isAnyArrayBuffer(sizeOrKey)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'sizeOrKey'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      sizeOrKey\n    );\n  }\n\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\n  // and that's why we do that here too.\n  if (typeof sizeOrKey === 'number')\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\n\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\n      keyEncoding !== 'buffer') {\n    genEncoding = generator;\n    generator = keyEncoding;\n    keyEncoding = false;\n  }\n\n  const encoding = getDefaultEncoding();\n  keyEncoding = keyEncoding || encoding;\n  genEncoding = genEncoding || encoding;\n\n  if (typeof sizeOrKey !== 'number')\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\n\n  if (!generator) {\n    generator = DH_GENERATOR;\n  } else if (typeof generator === 'number') {\n    validateInt32(generator\x2C 'generator');\n  } else if (typeof generator === 'string') {\n    generator = toBuf(generator\x2C genEncoding);\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'generator'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      generator\n    );\n  }\n\n\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nfunction DiffieHellmanGroup(name) {\n  if (!(this instanceof DiffieHellmanGroup))\n    return new DiffieHellmanGroup(name);\n  this[kHandle] = new _DiffieHellmanGroup(name);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nDiffieHellmanGroup.prototype.generateKeys =\n    DiffieHellman.prototype.generateKeys =\n    dhGenerateKeys;\n\nfunction dhGenerateKeys(encoding) {\n  const keys = this[kHandle].generateKeys();\n  encoding = encoding || getDefaultEncoding();\n  return encode(keys\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.computeSecret =\n    DiffieHellman.prototype.computeSecret =\n    dhComputeSecret;\n\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\n  const encoding = getDefaultEncoding();\n  inEnc = inEnc || encoding;\n  outEnc = outEnc || encoding;\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\n  const ret = this[kHandle].computeSecret(key);\n  if (typeof ret === 'string')\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\n  return encode(ret\x2C outEnc);\n}\n\n\nDiffieHellmanGroup.prototype.getPrime =\n    DiffieHellman.prototype.getPrime =\n    dhGetPrime;\n\nfunction dhGetPrime(encoding) {\n  const prime = this[kHandle].getPrime();\n  encoding = encoding || getDefaultEncoding();\n  return encode(prime\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getGenerator =\n    DiffieHellman.prototype.getGenerator =\n    dhGetGenerator;\n\nfunction dhGetGenerator(encoding) {\n  const generator = this[kHandle].getGenerator();\n  encoding = encoding || getDefaultEncoding();\n  return encode(generator\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPublicKey =\n    DiffieHellman.prototype.getPublicKey =\n    dhGetPublicKey;\n\nfunction dhGetPublicKey(encoding) {\n  const key = this[kHandle].getPublicKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPrivateKey =\n    DiffieHellman.prototype.getPrivateKey =\n    dhGetPrivateKey;\n\nfunction dhGetPrivateKey(encoding) {\n  const key = this[kHandle].getPrivateKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPublicKey(key);\n  return this;\n};\n\n\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPrivateKey(key);\n  return this;\n};\n\n\nfunction ECDH(curve) {\n  if (!(this instanceof ECDH))\n    return new ECDH(curve);\n\n  validateString(curve\x2C 'curve');\n  this[kHandle] = new _ECDH(curve);\n}\n\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\n\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\n  this[kHandle].generateKeys();\n\n  return this.getPublicKey(encoding\x2C format);\n};\n\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\n  const f = getFormat(format);\n  const key = this[kHandle].getPublicKey(f);\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n};\n\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\n  validateString(curve\x2C 'curve');\n  const encoding = inEnc || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  outEnc = outEnc || encoding;\n  const f = getFormat(format);\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\n  return encode(convertedKey\x2C outEnc);\n};\n\nfunction encode(buffer\x2C encoding) {\n  if (encoding && encoding !== 'buffer')\n    buffer = buffer.toString(encoding);\n  return buffer;\n}\n\nfunction getFormat(format) {\n  if (format) {\n    if (format === 'compressed')\n      return POINT_CONVERSION_COMPRESSED;\n    if (format === 'hybrid')\n      return POINT_CONVERSION_HYBRID;\n    if (format !== 'uncompressed')\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\n  }\n  return POINT_CONVERSION_UNCOMPRESSED;\n}\n\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\n\nfunction diffieHellman(options) {\n  validateObject(options\x2C 'options');\n\n  const { privateKey\x2C publicKey } = options;\n  if (!(privateKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\n\n  if (!(publicKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\n\n  if (privateKey.type !== 'private')\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\n\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\n                                                 'private or public');\n  }\n\n  const privateType = privateKey.asymmetricKeyType;\n  const publicType = publicKey.asymmetricKeyType;\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\n                                          `${privateType} and ${publicType}`);\n  }\n\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\n}\n\n// The deriveBitsECDH function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nfunction deriveBitsECDH(name\x2C publicKey\x2C privateKey\x2C callback) {\n  validateString(name\x2C 'name');\n  validateObject(publicKey\x2C 'publicKey');\n  validateObject(privateKey\x2C 'privateKey');\n  validateCallback(callback);\n  const job = new ECDHBitsJob(kCryptoJobAsync\x2C name\x2C publicKey\x2C privateKey);\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n  job.run();\n}\n\n// The deriveBitsDH function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nfunction deriveBitsDH(publicKey\x2C privateKey\x2C callback) {\n  validateObject(publicKey\x2C 'publicKey');\n  validateObject(privateKey\x2C 'privateKey');\n  validateCallback(callback);\n  const job = new DHBitsJob(kCryptoJobAsync\x2C publicKey\x2C privateKey);\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n  job.run();\n}\n\nfunction verifyAcceptableDhKeyUse(name\x2C type\x2C usages) {\n  let checkSet;\n  switch (type) {\n    case 'private':\n      checkSet = ['deriveBits'\x2C 'deriveKey'];\n      break;\n    case 'public':\n      checkSet = [];\n      break;\n  }\n  if (hasAnyNotIn(usages\x2C checkSet)) {\n    throw lazyDOMException(\n      `Unsupported key usage for an ${name} key`\x2C\n      'SyntaxError');\n  }\n}\n\nasync function dhGenerateKey(\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  const usageSet = new SafeSet(keyUsages);\n\n  if (hasAnyNotIn(usageSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      'Unsupported key usage for a DH key'\x2C\n      'SyntaxError');\n  }\n\n  const {\n    name\x2C\n    primeLength\x2C\n    generator\x2C\n    group\n  } = algorithm;\n  let { prime } = algorithm;\n\n  if (prime !== undefined)\n    prime = getArrayBufferOrView(prime);\n\n  return new Promise((resolve\x2C reject) => {\n    generateKeyPair('dh'\x2C {\n      prime\x2C\n      primeLength\x2C\n      generator\x2C\n      group\x2C\n    }\x2C (err\x2C pubKey\x2C privKey) => {\n      if (err) {\n        return reject(lazyDOMException(\n          'The operation failed for an operation-specific reason'\x2C\n          'OperationError'));\n      }\n\n      const algorithm = { name\x2C prime\x2C primeLength\x2C generator\x2C group };\n\n      const publicKey = new InternalCryptoKey(pubKey\x2C algorithm\x2C []\x2C true);\n\n      const privateKey =\n        new InternalCryptoKey(\n          privKey\x2C\n          algorithm\x2C\n          getUsagesUnion(usageSet\x2C 'deriveBits'\x2C 'deriveKey')\x2C\n          extractable);\n\n      resolve({ publicKey\x2C privateKey });\n    });\n  });\n}\n\nasync function asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n\n  // Null means that we're not asking for a specific number of bits\x2C just\n  // give us everything that is generated.\n  if (length !== null)\n    validateUint32(length\x2C 'length');\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== 'ECDH') {\n    throw lazyDOMException('Keys must be ECDH keys'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  if (key.algorithm.namedCurve !== baseKey.algorithm.namedCurve)\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\n\n  const bits = await new Promise((resolve\x2C reject) => {\n    deriveBitsECDH(\n      baseKey.algorithm.namedCurve\x2C\n      key[kKeyObject][kHandle]\x2C\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8\x2C it will be truncated\n  // down to the nearest multiple of 8.\n  length = MathFloor(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nasync function asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n  // Null has a specific meaning for DH\n  if (length !== null)\n    validateUint32(length\x2C 'length');\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== 'NODE-DH')\n    throw lazyDOMException('Keys must be DH keys'\x2C 'InvalidAccessError');\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  const bits = await new Promise((resolve\x2C reject) => {\n    deriveBitsDH(\n      key[kKeyObject][kHandle]\x2C\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8\x2C it will be truncated\n  // down to the nearest multiple of 8.\n  length = MathFloor(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nfunction dhExportKey(key\x2C format) {\n  return jobPromise(new DHKeyExportJob(\n    kCryptoJobAsync\x2C\n    format\x2C\n    key[kKeyObject][kHandle]));\n}\n\nasync function dhImportKey(\n  format\x2C\n  keyData\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  let keyObject;\n  switch (format) {\n    case 'node.keyObject': {\n      if (!isKeyObject(keyData))\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\n      if (keyData.type === 'secret')\n        throw lazyDOMException('Invalid key type'\x2C 'InvalidAccessException');\n      verifyAcceptableDhKeyUse(algorithm.name\x2C keyData.type\x2C usagesSet);\n      keyObject = keyData;\n      break;\n    }\n    case 'spki': {\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'public'\x2C usagesSet);\n      keyObject = createPublicKey({\n        key: keyData\x2C\n        format: 'der'\x2C\n        type: 'spki'\n      });\n      break;\n    }\n    case 'pkcs8': {\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'private'\x2C usagesSet);\n      keyObject = createPrivateKey({\n        key: keyData\x2C\n        format: 'der'\x2C\n        type: 'pkcs8'\n      });\n      break;\n    }\n    default:\n      throw lazyDOMException(\n        `Unable to import DH key with format ${format}`\x2C\n        'NotSupportedError');\n  }\n\n  const {\n    prime\x2C\n    primeLength\x2C\n    generator\x2C\n    group\x2C\n  } = keyObject[kHandle].keyDetail({});\n\n  return new InternalCryptoKey(keyObject\x2C {\n    name: algorithm.name\x2C\n    prime\x2C\n    primeLength\x2C\n    generator\x2C\n    group\x2C\n  }\x2C keyUsages\x2C extractable);\n}\n\nmodule.exports = {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\x2C\n  deriveBitsECDH\x2C\n  deriveBitsDH\x2C\n  dhGenerateKey\x2C\n  asyncDeriveBitsECDH\x2C\n  asyncDeriveBitsDH\x2C\n  dhExportKey\x2C\n  dhImportKey\x2C\n};\n
code-source-info,0xb249f5c92ce,257,0,16942,C0O0C4O16942,,
code-creation,Function,10,204916,0xb249f5c9f86,1080, node:internal/crypto/diffiehellman:1:1,0xb249f5c9238,~
code-source-info,0xb249f5c9f
code-creation,Eval,10,205166,0xb249f5cc63e,5, node:internal/crypto/cipher:1:1,0xb249f5cc2d8,~
script-source,258,node:internal/crypto/cipher,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CipherBase\x2C\n  privateDecrypt: _privateDecrypt\x2C\n  privateEncrypt: _privateEncrypt\x2C\n  publicDecrypt: _publicDecrypt\x2C\n  publicEncrypt: _publicEncrypt\x2C\n  getCipherInfo: _getCipherInfo\x2C\n} = internalBinding('crypto');\n\nconst {\n  crypto: {\n    RSA_PKCS1_OAEP_PADDING\x2C\n    RSA_PKCS1_PADDING\x2C\n  }\n} = internalBinding('constants');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INVALID_STATE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getDefaultEncoding\x2C\n  getArrayBufferOrView\x2C\n  getStringOption\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst { normalizeEncoding } = require('internal/util');\n\nconst { StringDecoder } = require('string_decoder');\n\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\n  return (options\x2C buffer) => {\n    const { format\x2C type\x2C data\x2C passphrase } =\n      keyType === 'private' ?\n        preparePrivateKey(options) :\n        preparePublicOrPrivateKey(options);\n    const padding = options.padding || defaultPadding;\n    const { oaepHash\x2C encoding } = options;\n    let { oaepLabel } = options;\n    if (oaepHash !== undefined)\n      validateString(oaepHash\x2C 'key.oaepHash');\n    if (oaepLabel !== undefined)\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\n                  oaepLabel);\n  };\n}\n\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                     'public');\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\n                                     'public');\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\n                                      'private');\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                      'private');\n\nfunction getDecoder(decoder\x2C encoding) {\n  encoding = normalizeEncoding(encoding);\n  decoder = decoder || new StringDecoder(encoding);\n  assert(decoder.encoding === encoding\x2C 'Cannot change encoding');\n  return decoder;\n}\n\nfunction getUIntOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null) {\n    if (value >>> 0 !== value)\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\n    return value;\n  }\n  return -1;\n}\n\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\n  this[kHandle] = new CipherBase(decipher);\n  if (iv === undefined) {\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\n  } else {\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\n  }\n  this._decoder = null;\n\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nfunction createCipher(cipher\x2C password\x2C options\x2C decipher) {\n  validateString(cipher\x2C 'cipher');\n  password = getArrayBufferOrView(password\x2C 'password');\n\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C password\x2C options\x2C decipher]);\n}\n\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\n  validateString(cipher\x2C 'cipher');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\n}\n\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Cipher))\n    return new Cipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C true]);\n}\n\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\n\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this.push(this[kHandle].update(chunk\x2C encoding));\n  callback();\n};\n\nCipher.prototype._flush = function _flush(callback) {\n  try {\n    this.push(this[kHandle].final());\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback();\n};\n\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\n  const encoding = getDefaultEncoding();\n  inputEncoding = inputEncoding || encoding;\n  outputEncoding = outputEncoding || encoding;\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C inputEncoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  const ret = this[kHandle].update(data\x2C inputEncoding);\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.write(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.final = function final(outputEncoding) {\n  outputEncoding = outputEncoding || getDefaultEncoding();\n  const ret = this[kHandle].final();\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.end(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\n  if (!this[kHandle].setAutoPadding(!!ap))\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\n  return this;\n};\n\nCipher.prototype.getAuthTag = function getAuthTag() {\n  const ret = this[kHandle].getAuthTag();\n  if (ret === undefined)\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\n  return ret;\n};\n\n\nfunction setAuthTag(tagbuf\x2C encoding) {\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\n  if (!this[kHandle].setAuthTag(tagbuf))\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\n  return this;\n}\n\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\n  const encoding = getStringOption(options\x2C 'encoding');\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\n  return this;\n};\n\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Cipheriv))\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\n}\n\nfunction addCipherPrototypeFunctions(constructor) {\n  constructor.prototype._transform = Cipher.prototype._transform;\n  constructor.prototype._flush = Cipher.prototype._flush;\n  constructor.prototype.update = Cipher.prototype.update;\n  constructor.prototype.final = Cipher.prototype.final;\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\n  if (constructor === Cipheriv) {\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\n  } else {\n    constructor.prototype.setAuthTag = setAuthTag;\n  }\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\n}\n\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Cipheriv);\n\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Decipher))\n    return new Decipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C false]);\n}\n\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipher);\n\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Decipheriv))\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\n}\n\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipheriv);\n\nfunction getCipherInfo(nameOrNid\x2C options) {\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'nameOrNid'\x2C\n      ['string'\x2C 'number']\x2C\n      nameOrNid);\n  }\n  if (typeof nameOrNid === 'number')\n    validateInt32(nameOrNid\x2C 'nameOrNid');\n  let keyLength\x2C ivLength;\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n    ({ keyLength\x2C ivLength } = options);\n    if (keyLength !== undefined)\n      validateInt32(keyLength\x2C 'options.keyLength');\n    if (ivLength !== undefined)\n      validateInt32(ivLength\x2C 'options.ivLength');\n  }\n\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\n  if (ret !== undefined) {\n    if (ret.name) ret.name = StringPrototypeToLowerCase(ret.name);\n    if (ret.type) ret.type = StringPrototypeToLowerCase(ret.type);\n  }\n  return ret;\n}\n\nmodule.exports = {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n};\n
code-source-info,0xb249f5cc63e,258,0,10241,C0O0C4O10241,,
code-creation,Function,10,205583,0xb249f5cd016,843, node:internal/crypto/cipher:1:1,0xb249f5cc5a8,~
code-source-info,0xb249f5cd
tick,0x1a362a394,205666,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81437e57,0x311ed227c90d,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,205708,0xb249f5ce506,5, node:internal/streams/lazy_transform:1:1,0xb249f5ce380,~
script-source,259,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\n// This is used for performance with bi-API-ship: when two APIs are available\n// for the stream\x2C one conventional and one non-conventional.\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst stream = require('stream');\n\nconst {\n  getDefaultEncoding\n} = require('internal/crypto/util');\n\nmodule.exports = LazyTransform;\n\nfunction LazyTransform(options) {\n  this._options = options;\n}\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\n\nfunction makeGetter(name) {\n  return function() {\n    stream.Transform.call(this\x2C this._options);\n    this._writableState.decodeStrings = false;\n\n    if (!this._options || !this._options.defaultEncoding) {\n      this._writableState.defaultEncoding = getDefaultEncoding();\n    }\n\n    return this[name];\n  };\n}\n\nfunction makeSetter(name) {\n  return function(val) {\n    ObjectDefineProperty(this\x2C name\x2C {\n      value: val\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\n    });\n  };\n}\n\nObjectDefineProperties(LazyTransform.prototype\x2C {\n  _readableState: {\n    get: makeGetter('_readableState')\x2C\n    set: makeSetter('_readableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\x2C\n  _writableState: {\n    get: makeGetter('_writableState')\x2C\n    set: makeSetter('_writableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\n});\n
code-source-info,0xb249f5ce506,259,0,1518,C0O0C4O1518,,
code-creation,Function,10,205791,0xb249f5ce856,193, node:internal/streams/lazy_transform:1:1,0xb249f5ce470,~
code-source-info,0xb249f5ce856,259,0,1518,C0O0C29O243C34O269C40O293C45O348C48O348C52O348C54O401C57O401C62O378C68O435C70O450C74O566C82O584C87O594C92O531C97O606C100O649C105O606C110O1206C120O1237C128O1248C139O1287C153O1385C161O1396C172O1435C186O1169C192O1517,,
code-creation,LazyCompile,10,205833,0xb249f5ced9e,14,makeGetter node:internal/streams/lazy_transform:26:20,0xb249f5ce588,~
code-source-info,0xb249f5ced9e,259,681,970,C0O681C9O692C13O968,,
code-creation,LazyCompile,10,205833,0xb249f5cf136,14,makeSetter node:internal/streams/lazy_transform:39:20,0xb249f5ce600,~
code-source-info,0xb249f5cf136,259,991,1167,C0O991C9O1002C13O1165,,
code-creation,LazyCompile,10,205875,0xb249f5cf34e,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0xb249f5cc670,~
code-source-info,0xb249f5cf34e,258,1250,1975,C0O1250C17O1288C21O1973,,
code-creation,LazyCompile,10,205916,0xb249f5d00f6,169,addCipherPrototypeFunctions node:internal/crypto/cipher:246:37,0xb249f5cc940,~
code-source-info,0xb249f5d00f6,258,7273,7828,C0O7303C8O7333C13O7343C17O7324C21O7369C29O7395C34O7405C38O7386C42O7427C50O7453C55O7463C59O7444C63O7485C71O7510C76O7520C80O7501C84O7541C92O7575C97O7585C101O7566C105O7603C107O7619C112O7651C120O7681C125O7691C129O7672C135O7730C142O7751C146O7783C154O7809C159O7819C163O7800C168O7827,,
code-creation,Eval,10,206083,0xb249f5d08f6,5, node:internal/crypto/sig:1:1,0xb249f5d05b0,~
script-source,260,node:internal/crypto/sig,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  Sign: _Sign\x2C\n  SignJob\x2C\n  Verify: _Verify\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kSigEncDER\x2C\n  kSigEncP1363\x2C\n  kSignJobModeSign\x2C\n  kSignJobModeVerify\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n} = require('internal/crypto/keys');\n\nconst { Writable } = require('stream');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nfunction Sign(algorithm\x2C options) {\n  if (!(this instanceof Sign))\n    return new Sign(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Sign();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Sign\x2C Writable);\n\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\n  this.update(chunk\x2C encoding);\n  callback();\n};\n\nSign.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  this[kHandle].update(data\x2C encoding);\n  return this;\n};\n\nfunction getPadding(options) {\n  return getIntOption('padding'\x2C options);\n}\n\nfunction getSaltLength(options) {\n  return getIntOption('saltLength'\x2C options);\n}\n\nfunction getDSASignatureEncoding(options) {\n  if (typeof options === 'object') {\n    const { dsaEncoding = 'der' } = options;\n    if (dsaEncoding === 'der')\n      return kSigEncDER;\n    else if (dsaEncoding === 'ieee-p1363')\n      return kSigEncP1363;\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\n  }\n\n  return kSigEncDER;\n}\n\nfunction getIntOption(name\x2C options) {\n  const value = options[name];\n  if (value !== undefined) {\n    if (value === value >> 0) {\n      return value;\n    }\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\n  }\n  return undefined;\n}\n\nSign.prototype.sign = function sign(options\x2C encoding) {\n  if (!options)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\n                                 pssSaltLength\x2C dsaSigEnc);\n\n  encoding = encoding || getDefaultEncoding();\n  if (encoding && encoding !== 'buffer')\n    return ret.toString(encoding);\n\n  return ret;\n};\n\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!key)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeSign\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc);\n\n  if (!callback) {\n    const { 0: err\x2C 1: signature } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return Buffer.from(signature);\n  }\n\n  job.ondone = (error\x2C signature) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\n  };\n  job.run();\n}\n\nfunction Verify(algorithm\x2C options) {\n  if (!(this instanceof Verify))\n    return new Verify(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Verify();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Verify\x2C Writable);\n\nVerify.prototype._write = Sign.prototype._write;\nVerify.prototype.update = Sign.prototype.update;\n\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\n  const {\n    data\x2C\n    format\x2C\n    type\x2C\n    passphrase\n  } = preparePublicOrPrivateKey(options\x2C true);\n\n  sigEncoding = sigEncoding || getDefaultEncoding();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\n\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\n};\n\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      data\n    );\n  }\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  if (!isArrayBufferView(signature)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'signature'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      signature\n    );\n  }\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePublicOrPrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeVerify\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc\x2C\n    signature);\n\n  if (!callback) {\n    const { 0: err\x2C 1: result } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return result;\n  }\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\n  };\n  job.run();\n}\n\nmodule.exports = {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\x2C\n};\n
code-source-info,0xb249f5d08f6,260,0,7083,C0O0C4O7083,,
code-creation,Function,10,206333,0xb249f5d0f5e,563, node:internal/crypto/sig:1:1,0xb249f5d0860,~
code-source-info,0xb249f5d0f5e,260,0,7083,C0O0C126O25C132O50C137O74C143O220C146O220C151O220C156O129C162O163C168O189C174O319C177O319C182O259C188O279C194O299C200O518C203O518C208O368C214O377C220O396C226O407C232O426C238O444C244O458C250O474C256O494C262O615C265O615C270O556C276O580C282O602C288O711C291O711C296O659C302O680C308O766C311O766C316O753C322O805C325O805C330O794C336O858C339O858C344O835C350O1152C353O1178C361O1198C366O1152C371O1210C377O1210C382O1249C385O1254C394O1271C398O1368C401O1373C410O1390C414O2517C417O2522C426O2537C430O4681C433O4709C441O4729C446O4681C451O4741C457O4741C462O4782C465O4789C473O4813C478O4823C482O4806C486O4831C489O4838C497O4862C502O4872C506O4855C510O4881C513O4888C522O4905C526O7011C533O7032C539O7040C545O7055C551O7065C557O7026C562O7082,,
tick,0x10115de90,206458,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf81437eb9,0x311ed227c90d,0x311ed227bbdd,0xfcf814317a2,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,206500,0xb249f5d23be,5, node:internal/crypto/hash:1:1,0xb249f5d20b8,~
script-source,261,node:internal/crypto/hash,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  Hash: _Hash\x2C\n  HashJob\x2C\n  Hmac: _Hmac\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  getStringOption\x2C\n  jobPromise\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  Buffer\x2C\n} = require('buffer');\n\nconst {\n  codes: {\n    ERR_CRYPTO_HASH_FINALIZED\x2C\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst kState = Symbol('kState');\nconst kFinalized = Symbol('kFinalized');\n\nfunction Hash(algorithm\x2C options) {\n  if (!(this instanceof Hash))\n    return new Hash(algorithm\x2C options);\n  if (!(algorithm instanceof _Hash))\n    validateString(algorithm\x2C 'algorithm');\n  const xofLen = typeof options === 'object' && options !== null ?\n    options.outputLength : undefined;\n  if (xofLen !== undefined)\n    validateUint32(xofLen\x2C 'options.outputLength');\n  this[kHandle] = new _Hash(algorithm\x2C xofLen);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\n\nHash.prototype.copy = function copy(options) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  return new Hash(this[kHandle]\x2C options);\n};\n\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this[kHandle].update(chunk\x2C encoding);\n  callback();\n};\n\nHash.prototype._flush = function _flush(callback) {\n  this.push(this[kHandle].digest());\n  callback();\n};\n\nHash.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  if (!this[kHandle].update(data\x2C encoding))\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\n  return this;\n};\n\n\nHash.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nfunction Hmac(hmac\x2C key\x2C options) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hmac\x2C key\x2C options);\n  validateString(hmac\x2C 'hmac');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  this[kHandle] = new _Hmac();\n  this[kHandle].init(hmac\x2C key);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\n\nHmac.prototype.update = Hash.prototype.update;\n\nHmac.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  if (state[kFinalized]) {\n    const buf = Buffer.from('');\n    return outputEncoding === 'buffer' ? buf : buf.toString(outputEncoding);\n  }\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nHmac.prototype._flush = Hash.prototype._flush;\nHmac.prototype._transform = Hash.prototype._transform;\n\n// Implementation for WebCrypto subtle.digest()\n\nasync function asyncDigest(algorithm\x2C data) {\n  algorithm = normalizeAlgorithm(algorithm);\n  data = getArrayBufferOrView(data\x2C 'data');\n  validateMaxBufferLength(data\x2C 'data');\n\n  if (algorithm.length !== undefined)\n    validateUint32(algorithm.length\x2C 'algorithm.length');\n\n  return jobPromise(new HashJob(\n    kCryptoJobAsync\x2C\n    normalizeHashName(algorithm.name)\x2C\n    data\x2C\n    algorithm.length));\n}\n\nmodule.exports = {\n  Hash\x2C\n  Hmac\x2C\n  asyncDigest\x2C\n};\n
code-source-info,0xb249f5d23be,261,0,4550,C0O0C4O4550,,
code-creation,Function,10,206708,0xb249f5d290e,590, node:internal/crypto/hash:1:1,0xb249f5d2328,~
code-source-info,0xb249f5d290e
code-creation,Eval,10,206916,0xb249f5d3d46,5, node:internal/crypto/x509:1:1,0xb249f5d3970,~
script-source,262,node:internal/crypto/x509,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  parseX509\x2C\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst kInternalState = Symbol('kInternalState');\n\nfunction isX509Certificate(value) {\n  return value[kInternalState] !== undefined;\n}\n\nfunction getFlags(options = {}) {\n  validateObject(options\x2C 'options');\n  const {\n    subject = 'always'\x2C  // Can be 'always' or 'never'\n    wildcards = true\x2C\n    partialWildcards = true\x2C\n    multiLabelWildcards = false\x2C\n    singleLabelSubdomains = false\x2C\n  } = { ...options };\n  let flags = 0;\n  validateString(subject\x2C 'options.subject');\n  validateBoolean(wildcards\x2C 'options.wildcards');\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\n  switch (subject) {\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\n  }\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\n  return flags;\n}\n\nclass InternalX509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nclass X509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(buffer) {\n    if (typeof buffer === 'string')\n      buffer = Buffer.from(buffer);\n    if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        buffer);\n    }\n    super();\n    this[kHandle] = parseX509(buffer);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `X509Certificate ${inspect({\n      subject: this.subject\x2C\n      subjectAltName: this.subjectAltName\x2C\n      issuer: this.issuer\x2C\n      infoAccess: this.infoAccess\x2C\n      validFrom: this.validFrom\x2C\n      validTo: this.validTo\x2C\n      fingerprint: this.fingerprint\x2C\n      fingerprint256: this.fingerprint256\x2C\n      keyUsage: this.keyUsage\x2C\n      serialNumber: this.serialNumber\x2C\n    }\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n\n  get subject() {\n    let value = this[kInternalState].get('subject');\n    if (value === undefined) {\n      value = this[kHandle].subject();\n      this[kInternalState].set('subject'\x2C value);\n    }\n    return value;\n  }\n\n  get subjectAltName() {\n    let value = this[kInternalState].get('subjectAltName');\n    if (value === undefined) {\n      value = this[kHandle].subjectAltName();\n      this[kInternalState].set('subjectAltName'\x2C value);\n    }\n    return value;\n  }\n\n  get issuer() {\n    let value = this[kInternalState].get('issuer');\n    if (value === undefined) {\n      value = this[kHandle].issuer();\n      this[kInternalState].set('issuer'\x2C value);\n    }\n    return value;\n  }\n\n  get issuerCertificate() {\n    let value = this[kInternalState].get('issuerCertificate');\n    if (value === undefined) {\n      const cert = this[kHandle].getIssuerCert();\n      if (cert)\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\n      this[kInternalState].set('issuerCertificate'\x2C value);\n    }\n    return value;\n  }\n\n  get infoAccess() {\n    let value = this[kInternalState].get('infoAccess');\n    if (value === undefined) {\n      value = this[kHandle].infoAccess();\n      this[kInternalState].set('infoAccess'\x2C value);\n    }\n    return value;\n  }\n\n  get validFrom() {\n    let value = this[kInternalState].get('validFrom');\n    if (value === undefined) {\n      value = this[kHandle].validFrom();\n      this[kInternalState].set('validFrom'\x2C value);\n    }\n    return value;\n  }\n\n  get validTo() {\n    let value = this[kInternalState].get('validTo');\n    if (value === undefined) {\n      value = this[kHandle].validTo();\n      this[kInternalState].set('validTo'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint() {\n    let value = this[kInternalState].get('fingerprint');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint();\n      this[kInternalState].set('fingerprint'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint256() {\n    let value = this[kInternalState].get('fingerprint256');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint256();\n      this[kInternalState].set('fingerprint256'\x2C value);\n    }\n    return value;\n  }\n\n  get keyUsage() {\n    let value = this[kInternalState].get('keyUsage');\n    if (value === undefined) {\n      value = this[kHandle].keyUsage();\n      this[kInternalState].set('keyUsage'\x2C value);\n    }\n    return value;\n  }\n\n  get serialNumber() {\n    let value = this[kInternalState].get('serialNumber');\n    if (value === undefined) {\n      value = this[kHandle].serialNumber();\n      this[kInternalState].set('serialNumber'\x2C value);\n    }\n    return value;\n  }\n\n  get raw() {\n    let value = this[kInternalState].get('raw');\n    if (value === undefined) {\n      value = this[kHandle].raw();\n      this[kInternalState].set('raw'\x2C value);\n    }\n    return value;\n  }\n\n  get publicKey() {\n    let value = this[kInternalState].get('publicKey');\n    if (value === undefined) {\n      value = new PublicKeyObject(this[kHandle].publicKey());\n      this[kInternalState].set('publicKey'\x2C value);\n    }\n    return value;\n  }\n\n  toString() {\n    let value = this[kInternalState].get('pem');\n    if (value === undefined) {\n      value = this[kHandle].pem();\n      this[kInternalState].set('pem'\x2C value);\n    }\n    return value;\n  }\n\n  // There's no standardized JSON encoding for X509 certs so we\n  // fallback to providing the PEM encoding as a string.\n  toJSON() { return this.toString(); }\n\n  get ca() {\n    let value = this[kInternalState].get('ca');\n    if (value === undefined) {\n      value = this[kHandle].checkCA();\n      this[kInternalState].set('ca'\x2C value);\n    }\n    return value;\n  }\n\n  checkHost(name\x2C options) {\n    validateString(name\x2C 'name');\n    return this[kHandle].checkHost(name\x2C getFlags(options));\n  }\n\n  checkEmail(email\x2C options) {\n    validateString(email\x2C 'email');\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\n  }\n\n  checkIP(ip\x2C options) {\n    validateString(ip\x2C 'ip');\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\n  }\n\n  checkIssued(otherCert) {\n    if (!isX509Certificate(otherCert))\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\n    return this[kHandle].checkIssued(otherCert[kHandle]);\n  }\n\n  checkPrivateKey(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'private')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\n  }\n\n  verify(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'public')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].verify(pkey[kHandle]);\n  }\n\n  toLegacyObject() {\n    return this[kHandle].toLegacy();\n  }\n}\n\nInternalX509Certificate.prototype.constructor = X509Certificate;\nObjectSetPrototypeOf(\n  InternalX509Certificate.prototype\x2C\n  X509Certificate.prototype);\n\nmodule.exports = {\n  X509Certificate\x2C\n  InternalX509Certificate\x2C\n  isX509Certificate\x2C\n};\n
code-source-info,0xb249f5d3d46,262,0,8836,C0O0C4O8836,,
code-creation,Function,10,207250,0xb249f5d56be,651, node:internal/crypto/x509:1:1,0xb249f5d3cb0,~
code-source-info,0xb249f5d56be,262,0,8836,C0O0C80O25C85O49C91O60C96O346C99O346C104O96C110O109C116O149C122O188C128O220C134O260C140O301C146O420C149O420C154O384C160O403C166O499C169O499C174O485C179O593C182O593C187O536C193O555C199O573C205O646C208O646C213O634C219O700C222O700C227O689C233O753C236O753C241O730C247O866C250O866C255O866C260O809C266O835C272O951C275O951C280O905C285O923C290O933C295O1019C298O1019C303O1006C309O1076C312O1076C316O1076C325O2380C333O2400C368O2342C377O2536C385O2556C395O2919C403O3503C412O3671C588O8592C591O8616C598O8638C602O8657C605O8705C610O8734C615O8657C620O8747C627O8768C633O8787C639O8814C645O8762C650O8835,,
code-creation,Function,10,207291,0xb249f5d5ac6,26,<instance_members_initializer> node:internal/crypto/x509:103:3,0xb249f5d48d8,~
code-source-info,0xb249f5d5ac6,262,2555,2587,C3O2574C10O2574C25O2587,,
code-creation,Function,10,207291,0xb249f5d5b76,26,<instance_members_initializer> node:internal/crypto/x509:94:3,0xb249f5d3e68,~
code-source-info,0xb249f5d5b76,262,2399,2431,C3O2418C10O2418C25O2431,,
code-creation,Eval,10,207375,0xb249f5d6f36,5, node:internal/crypto/certificate:1:1,0xb249f5d6d90,~
script-source,263,node:internal/crypto/certificate,'use strict';\n\nconst {\n  certExportChallenge\x2C\n  certExportPublicKey\x2C\n  certVerifySpkac\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n} = require('internal/crypto/util');\n\n// The functions contained in this file cover the SPKAC format\n// (also referred to as Netscape SPKI). A general description of\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\n\nfunction verifySpkac(spkac\x2C encoding) {\n  return certVerifySpkac(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportPublicKey(spkac\x2C encoding) {\n  return certExportPublicKey(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportChallenge(spkac\x2C encoding) {\n  return certExportChallenge(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\n// The legacy implementation of this exposed the Certificate\n// object and required that users create an instance before\n// calling the member methods. This API pattern has been\n// deprecated\x2C however\x2C as the method implementations do not\n// rely on any object state.\n\n// For backwards compatibility reasons\x2C this cannot be converted into a\n// ES6 Class.\nfunction Certificate() {\n  if (!(this instanceof Certificate))\n    return new Certificate();\n}\n\nCertificate.prototype.verifySpkac = verifySpkac;\nCertificate.prototype.exportPublicKey = exportPublicKey;\nCertificate.prototype.exportChallenge = exportChallenge;\n\nCertificate.exportChallenge = exportChallenge;\nCertificate.exportPublicKey = exportPublicKey;\nCertificate.verifySpkac = verifySpkac;\n\nmodule.exports = Certificate;\n
code-source-info,0xb249f5d6f36,263,0,1546,C0O0C4O1546,,
code-creation,Function,10,207458,0xb249f5d717e,155, node:internal/crypto/certificate:1:1,0xb249f5d6ea0,~
code-source-info,0xb249f5d717e,263,0,1546,C0O0C38O92C41O92C46O25C52O48C58O71C64O156C67O156C72O130C78O1218C81O1230C88O1252C92O1267C95O1279C102O1305C106O1324C109O1336C116O1362C120O1382C125O1410C129O1429C134O1457C138O1476C143O1500C147O1516C149O1531C154O1545,,
code-creation,Eval,10,207708,0xb249f5d7c2e,5, node:internal/js_stream_socket:1:1,0xb249f5d79a0,~
script-source,264,node:internal/js_stream_socket,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst { Socket } = require('net');\nconst { JSStream } = internalBinding('js_stream');\nconst uv = internalBinding('uv');\nlet debug = require('internal/util/debuglog').debuglog(\n  'stream_socket'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { ERR_STREAM_WRAP } = require('internal/errors').codes;\n\nconst kCurrentWriteRequest = Symbol('kCurrentWriteRequest');\nconst kCurrentShutdownRequest = Symbol('kCurrentShutdownRequest');\nconst kPendingShutdownRequest = Symbol('kPendingShutdownRequest');\n\nfunction checkReusedHandle(self) {\n  let socket = self[owner_symbol];\n\n  if (socket.constructor.name === 'ReusedHandle')\n    socket = socket.handle;\n\n  return socket;\n}\n\nfunction isClosing() {\n  const socket = checkReusedHandle(this);\n\n  return socket.isClosing();\n}\n\nfunction onreadstart() {\n  const socket = checkReusedHandle(this);\n\n  return socket.readStart();\n}\n\nfunction onreadstop() {\n  const socket = checkReusedHandle(this);\n\n  return socket.readStop();\n}\n\nfunction onshutdown(req) {\n  const socket = checkReusedHandle(this);\n\n  return socket.doShutdown(req);\n}\n\nfunction onwrite(req\x2C bufs) {\n  const socket = checkReusedHandle(this);\n\n  return socket.doWrite(req\x2C bufs);\n}\n\n/* This class serves as a wrapper for when the C++ side of Node wants access\n * to a standard JS stream. For example\x2C TLS or HTTP do not operate on network\n * resources conceptually\x2C although that is the common case and what we are\n * optimizing for; in theory\x2C they are completely composable and can work with\n * any stream resource they see.\n *\n * For the common case\x2C i.e. a TLS socket wrapping around a net.Socket\x2C we\n * can skip going through the JS layer and let TLS access the raw C++ handle\n * of a net.Socket. The flipside of this is that\x2C to maintain composability\x2C\n * we need a way to create "fake" net.Socket instances that call back into a\n * "real" JavaScript stream. JSStreamSocket is exactly this.\n */\nclass JSStreamSocket extends Socket {\n  constructor(stream) {\n    const handle = new JSStream();\n    handle.close = (cb) => {\n      debug('close');\n      this.doClose(cb);\n    };\n    // Inside of the following functions\x2C `this` refers to the handle\n    // and `this[owner_symbol]` refers to this JSStreamSocket instance.\n    handle.isClosing = isClosing;\n    handle.onreadstart = onreadstart;\n    handle.onreadstop = onreadstop;\n    handle.onshutdown = onshutdown;\n    handle.onwrite = onwrite;\n\n    stream.pause();\n    stream.on('error'\x2C (err) => this.emit('error'\x2C err));\n    const ondata = (chunk) => {\n      if (typeof chunk === 'string' ||\n          stream.readableObjectMode === true) {\n        // Make sure that no further `data` events will happen.\n        stream.pause();\n        stream.removeListener('data'\x2C ondata);\n\n        this.emit('error'\x2C new ERR_STREAM_WRAP());\n        return;\n      }\n\n      debug('data'\x2C chunk.length);\n      if (this._handle)\n        this._handle.readBuffer(chunk);\n    };\n    stream.on('data'\x2C ondata);\n    stream.once('end'\x2C () => {\n      debug('end');\n      if (this._handle)\n        this._handle.emitEOF();\n    });\n    // Some `Stream` don't pass `hasError` parameters when closed.\n    stream.once('close'\x2C () => {\n      // Errors emitted from `stream` have also been emitted to this instance\n      // so that we don't pass errors to `destroy()` again.\n      this.destroy();\n    });\n\n    super({ handle\x2C manualStart: true });\n    this.stream = stream;\n    this[kCurrentWriteRequest] = null;\n    this[kCurrentShutdownRequest] = null;\n    this[kPendingShutdownRequest] = null;\n    this.readable = stream.readable;\n    this.writable = stream.writable;\n\n    // Start reading.\n    this.read(0);\n  }\n\n  // Allow legacy requires in the test suite to keep working:\n  //   const { StreamWrap } = require('internal/js_stream_socket')\n  static get StreamWrap() {\n    return JSStreamSocket;\n  }\n\n  isClosing() {\n    return !this.readable || !this.writable;\n  }\n\n  readStart() {\n    this.stream.resume();\n    return 0;\n  }\n\n  readStop() {\n    this.stream.pause();\n    return 0;\n  }\n\n  doShutdown(req) {\n    // TODO(addaleax): It might be nice if we could get into a state where\n    // DoShutdown() is not called on streams while a write is still pending.\n    //\n    // Currently\x2C the only part of the code base where that happens is the\n    // TLS implementation\x2C which calls both DoWrite() and DoShutdown() on the\n    // underlying network stream inside of its own DoShutdown() method.\n    // Working around that on the native side is not quite trivial (yet?)\x2C\n    // so for now that is supported here.\n\n    if (this[kCurrentWriteRequest] !== null) {\n      this[kPendingShutdownRequest] = req;\n      return 0;\n    }\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n    this[kCurrentShutdownRequest] = req;\n\n    const handle = this._handle;\n\n    setImmediate(() => {\n      // Ensure that write is dispatched asynchronously.\n      this.stream.end(() => {\n        this.finishShutdown(handle\x2C 0);\n      });\n    });\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishShutdown(handle\x2C errCode) {\n    // The shutdown request might already have been cancelled.\n    if (this[kCurrentShutdownRequest] === null)\n      return;\n    const req = this[kCurrentShutdownRequest];\n    this[kCurrentShutdownRequest] = null;\n    handle.finishShutdown(req\x2C errCode);\n  }\n\n  doWrite(req\x2C bufs) {\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n\n    const handle = this._handle;\n    const self = this;\n\n    let pending = bufs.length;\n\n    this.stream.cork();\n    // Use `var` over `let` for performance optimization.\n    for (var i = 0; i < bufs.length; ++i)\n      this.stream.write(bufs[i]\x2C done);\n    this.stream.uncork();\n\n    // Only set the request here\x2C because the `write()` calls could throw.\n    this[kCurrentWriteRequest] = req;\n\n    function done(err) {\n      if (!err && --pending !== 0)\n        return;\n\n      // Ensure that this is called once in case of error\n      pending = 0;\n\n      let errCode = 0;\n      if (err) {\n        errCode = uv[`UV_${err.code}`] || uv.UV_EPIPE;\n      }\n\n      // Ensure that write was dispatched\n      setImmediate(() => {\n        self.finishWrite(handle\x2C errCode);\n      });\n    }\n\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishWrite(handle\x2C errCode) {\n    // The write request might already have been cancelled.\n    if (this[kCurrentWriteRequest] === null)\n      return;\n    const req = this[kCurrentWriteRequest];\n    this[kCurrentWriteRequest] = null;\n\n    handle.finishWrite(req\x2C errCode);\n    if (this[kPendingShutdownRequest]) {\n      const req = this[kPendingShutdownRequest];\n      this[kPendingShutdownRequest] = null;\n      this.doShutdown(req);\n    }\n  }\n\n  doClose(cb) {\n    const handle = this._handle;\n\n    // When sockets of the "net" module destroyed\x2C they will call\n    // `this._handle.close()` which will also emit EOF if not emitted before.\n    // This feature makes sockets on the other side emit "end" and "close"\n    // even though we haven't called `end()`. As `stream` are likely to be\n    // instances of `net.Socket`\x2C calling `stream.destroy()` manually will\n    // avoid issues that don't properly close wrapped connections.\n    this.stream.destroy();\n\n    setImmediate(() => {\n      // Should be already set by net.js\n      assert(this._handle === null);\n\n      this.finishWrite(handle\x2C uv.UV_ECANCELED);\n      this.finishShutdown(handle\x2C uv.UV_ECANCELED);\n\n      cb();\n    });\n  }\n}\n\nmodule.exports = JSStreamSocket;\n
code-source-info,0xb249f5d7c2e,264,0,7784,C0O0C4O7784,,
code-creation,Function,10,208000,0xb249f5d85c6,318, node:internal/js_stream_socket:1:1,0xb249f5d7b98,~
code-source-info,0xb249f5d85c6,264,0,7784,C0O0C71O25C76O76C79O76C84O59C90O110C93O110C97O110C99O157C102O157C107O146C112O194C115O194C120O181C126O235C129O235C133O235C135O270C138O270C143O303C156O304C162O270C164O393C167O393C172O424C177O376C183O462C186O462C191O488C196O442C202O526C205O526C209O526C211O590C214O590C218O590C220O657C223O657C227O657C236O2124C310O7751C312O7766C317O7783,,
tick,0x10111c5a4,208041,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xfcf814317d3,0x311ed227c90d,0x311ed227bbdd,0xfcf81415972,0x311ed227c90d,0x311ed227bbdd,0xfcf814131ed,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x17d3055204c8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,208208,0xb249f5de5ae,14,makeMethodProxy node:_tls_wrap:551:25,0xfcf8142f988,~
code-source-info,0xb249f5de5ae,249,15534,15685,C0O15534C9O15545C13O15683,,
code-creation,LazyCompile,10,208208,0xb249f5e20ce,21, node:_tls_wrap:1033:4,0xfcf81430940,~
code-source-info,0xb249f5e20ce,249,29115,29193,C0O29131C3O29141C11O29161C15O29159C20O29192,,
code-creation,LazyCompile,10,208250,0xb249f5e2236,14,makeSocketMethodProxy node:_tls_wrap:1014:31,0xfcf8142faf0,~
code-source-info,0xb249f5e2236,249,28729,28897,C0O28729C9O28740C13O28895,,
code-creation,Eval,10,208291,0xb249f5e29ce,5, node:internal/tls/secure-pair:1:1,0xb249f5e27e8,~
script-source,265,node:internal/tls/secure-pair,'use strict';\n\nconst EventEmitter = require('events');\nconst { Duplex } = require('stream');\nconst _tls_wrap = require('_tls_wrap');\nconst _tls_common = require('_tls_common');\n\nconst {\n  Symbol\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\n\nclass DuplexSocket extends Duplex {\n  constructor() {\n    super();\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this[kOtherSide].push(chunk);\n      this[kOtherSide][kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this[kOtherSide].on('end'\x2C callback);\n    this[kOtherSide].push(null);\n  }\n}\n\nclass DuplexPair {\n  constructor() {\n    this.socket1 = new DuplexSocket();\n    this.socket2 = new DuplexSocket();\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\n\nclass SecurePair extends EventEmitter {\n  constructor(secureContext = _tls_common.createSecureContext()\x2C\n              isServer = false\x2C\n              requestCert = !isServer\x2C\n              rejectUnauthorized = false\x2C\n              options = {}) {\n    super();\n    const { socket1\x2C socket2 } = new DuplexPair();\n\n    this.server = options.server;\n    this.credentials = secureContext;\n\n    this.encrypted = socket1;\n    this.cleartext = new _tls_wrap.TLSSocket(socket2\x2C {\n      secureContext\x2C\n      isServer\x2C\n      requestCert\x2C\n      rejectUnauthorized\x2C\n      ...options\n    });\n    this.cleartext.once('secure'\x2C () => this.emit('secure'));\n  }\n\n  destroy() {\n    this.cleartext.destroy();\n    this.encrypted.destroy();\n  }\n}\n\nexports.createSecurePair = function createSecurePair(...args) {\n  return ReflectConstruct(SecurePair\x2C args);\n};\n
code-source-info,0xb249f5e29ce,265,0,1929,C0O0C4O1929,,
code-creation,Function,10,208416,0xb249f5e318e,202, node:internal/tls/secure-pair:1:1,0xb249f5e2938,~
code-source-info,0xb249f5e318e,265,0,1929,C0O0C33O36C36O36C41O74C44O74C49O63C54O111C57O111C61O111C63O153C66O153C70O153C72O188C77O198C83O252C86O252C90O252C92O291C95O291C99O291C101O336C138O309C161O878C163O1115C190O1090C192O1817C196O1842C201O1928,,
code-creation,LazyCompile,10,208500,0xb249f5e3af6,88,Agent node:https:176:15,0xfcf81412c48,~
code-source-info,0xb249f5e3af6,242,4905,5281,C0O4919C2O4930C7O4953C12O4960C17O4979C18O4983C25O5005C34O4983C39O5034C43O5051C47O5060C49O5074C53O5118C58O5126C62O5111C66O5156C72O5193C74O5216C78O5226C82O5245C87O5280,,
code-creation,Eval,10,208833,0xb249f5e5b36,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-types/index.js:1:1,0xb249f5e5990,~
script-source,266,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-types/index.js,/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions\x2C exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension ("ext" or ".ext" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions\x2C types) {\n  // source preference (least -> most)\n  var preference = ['nginx'\x2C 'apache'\x2C undefined\x2C 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0\x2C 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n
code-source-info,0xb249f5e5b36,266,0,3663,C0O0C4O3663,,
code-creation,Function,10,209000,0xb249f5e5e46,194, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-types/index.js:1:1,0xb249f5e5aa0,~
code-source-info,0xb249f5e5e46,266,0,3663,C0O0C34O189C37O189C41O189C43O222C46O222C51O237C55O222C57O315C61O315C63O364C67O364C69O415C74O431C78O441C88O470C94O458C98O480C103O500C107O514C112O532C116O544C119O565C123O572C130O572C135O563C139O585C144O600C148O609C151O625C155O632C162O632C167O623C171O684C174O705C182O725C187O684C193O3662,,
tick,0x1a375c16c,209041,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204f6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,209166,0xb249f5e8a36,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-db/index.js:1:1,0xb249f5e88e0,~
script-source,267,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-db/index.js,/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n
code-source-info,0xb249f5e8a36,267,0,136,C0O0C4O136,,
code-creation,Function,10,209208,0xb249f5e8ace,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-db/index.js:1:1,0xb249f5e89a0,~
code-source-info,0xb249f5e8ace,267,0,136,C0O98C3O115C7O113C12O135,,
code-creation,LazyCompile,10,209250,0xb249f5e8e16,134,Module._extensions..json node:internal/modules/cjs/loader:1158:39,0x3a1583d20248,~
code-source-info,0xb249f5e8e16,98,36440,36796,C0O36479C5O36482C13O36482C20O36517C27O36527C36O36563C41O36563C46O36592C51O36599C56O36608C61O36608C70O36662C72O36679C77O36689C80O36689C85O36679C89O36677C106O36731C111O36754C118O36767C122O36761C125O36743C129O36780C131O36780C133O36795,,
new,MemoryChunk,0x32df6c340000,196608
code-creation,LazyCompile,10,209375,0xb249f5e8fe6,39,stripBOM node:internal/modules/cjs/helpers:127:18,0x3a1583d19d88,~
code-source-info,0xb249f5e8fe6,97,3743,3881,C0O3757C5O3761C16O3796C21O3814C29O3824C36O3864C38O3879,,
tick,0x1010eb684,210250,0,0x0,0,0x0,0xb249f5e8e6b,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xb249f5e8ad1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xb249f5e5e6b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204f6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
new,MemoryChunk,0x2779b46c0000,262144
code-creation,LazyCompile,10,210583,0x2779b46caa46,67,populateMaps /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-types/index.js:154:23,0xb249f5e5ca8,~
code-source-info,0x2779b46caa46,266,2766,3662,C0O2766C13O2846C22O2866C28O2846C30O2888C34O2895C44O2895C50O2903C60O2904C66O3661,,
code-creation,LazyCompile,10,210750,0x2779b46cac0e,201,forEachMimeType /Users/carloscalvo/code/Coder/backend/entregas/node_modules/mime-types/index.js:158:52,0x2779b46ca928,~
code-source-info,0x2779b46cac0e,266,2937,3659,C0O2961C7O2963C11O2990C16O3006C18O3025C24O3041C25O3047C26O3085C31O3102C35O3152C37O3164C41O3157C46O3201C48O3205C52O3216C57O3225C62O3259C65O3270C80O3286C83O3280C87O3299C92O3270C98O3324C101O3335C106O3348C111O3335C117O3365C122O3374C128O3386C135O3436C142O3450C152O3465C156O3477C166O3477C175O3491C180O3557C182O3626C187O3643C191O3173C196O3139C200O3658,,
tick,0x1a3726538,211541,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204ff,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,211583,0x2779b46cba9e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/index.js:1:1,0x2779b46cb948,~
script-source,268,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/index.js,module.exports =\n{\n  parallel      : require('./parallel.js')\x2C\n  serial        : require('./serial.js')\x2C\n  serialOrdered : require('./serialOrdered.js')\n};\n
code-source-info,0x2779b46cba9e,268,0,156,C0O0C4O156,,
code-creation,Function,10,211625,0x2779b46cbbae,46, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/index.js:1:1,0x2779b46cba08,~
code-source-info,0x2779b46cbbae,268,0,156,C0O0C8O37C19O81C30O123C40O15C45O155,,
code-creation,Eval,10,211875,0x2779b46cc0ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/parallel.js:1:1,0x2779b46cbf28,~
script-source,269,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/parallel.js,var iterate    = require('./lib/iterate.js')\n  \x2C initState  = require('./lib/state.js')\n  \x2C terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list\x2C iterator\x2C callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list\x2C iterator\x2C state\x2C function(error\x2C result)\n    {\n      if (error)\n      {\n        callback(error\x2C result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null\x2C state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state\x2C callback);\n}\n
code-source-info,0x2779b46cc0ae,269,0,1017,C0O0C4O1017,,
code-creation,Function,10,211916,0x2779b46cc1de,45, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/parallel.js:1:1,0x2779b46cc018,~
code-source-info,0x2779b46cc1de,269,0,1017,C0O0C10O17C13O17C17O17C19O62C22O62C26O62C28O105C31O105C35O105C37O155C39O170C44O1016,,
code-creation,Eval,10,212166,0x2779b46cc886,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/iterate.js:1:1,0x2779b46cc700,~
script-source,270,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/iterate.js,var async = require('./async.js')\n  \x2C abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list\x2C iterator\x2C state\x2C callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator\x2C key\x2C list[key]\x2C function(error\x2C output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error\x2C state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator\x2C key\x2C item\x2C callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item\x2C async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item\x2C key\x2C async(callback));\n  }\n\n  return aborter;\n}\n
code-source-info,0x2779b46cc886,270,0,1794,C0O0C4O1794,,
code-creation,Function,10,212250,0x2779b46cca06,42, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/iterate.js:1:1,0x2779b46cc7f0,~
code-source-info,0x2779b46cca06,270,0,1794,C0O0C16O12C19O12C23O12C25O46C28O46C32O46C34O80C36O95C41O1793,,
code-creation,Eval,10,212500,0x2779b46cd14e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/async.js:1:1,0x2779b46ccfe8,~
script-source,271,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/async.js,var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err\x2C result)\n  {\n    if (isAsync)\n    {\n      callback(err\x2C result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err\x2C result);\n      });\n    }\n  };\n}\n
code-source-info,0x2779b46cd14e,271,0,599,C0O0C4O599,,
code-creation,Function,10,212500,0x2779b46cd296,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/async.js:1:1,0x2779b46cd0b8,~
code-source-info,0x2779b46cd296,271,0,599,C0O0C10O12C13O12C17O12C19O43C21O58C26O598,,
code-creation,Eval,10,212666,0x2779b46cd9be,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/defer.js:1:1,0x2779b46cd868,~
script-source,272,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/defer.js,module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn\x2C 0);\n  }\n}\n
code-source-info,0x2779b46cd9be,272,0,441,C0O0C4O441,,
code-creation,Function,10,212708,0x2779b46cdaa6,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/defer.js:1:1,0x2779b46cd928,~
code-source-info,0x2779b46cdaa6,272,0,441,C0O0C5O0C7O15C12O440,,
scavenge,begin,0,310549,1643426345696
new,MemoryChunk,0x36631f5c0000,262144
tick,0x1014a67a0,212833,0,0x0,0,0x172aed0513f9,0x172aed050af7,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46cca22,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46cc1eb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46cbbb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204ff,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
new,MemoryChunk,0x2500b47c0000,262144
new,MemoryChunk,0x395d7b300000,262144
delete,MemoryChunk,0x32df6c340000
scavenge,end,0,311243,1643426345696
code-creation,Eval,10,213291,0x2779b46cdf8e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/abort.js:1:1,0x2779b46cde28,~
script-source,273,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/abort.js,// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n
code-source-info,0x2779b46cdf8e,273,0,497,C0O0C4O497,,
code-creation,Function,10,213333,0x2779b46ce0d6,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/abort.js:1:1,0x2779b46cdef8,~
code-source-info,0x2779b46ce0d6,273,0,497,C0O0C16O7C18O22C23O496,,
code-creation,Eval,10,213458,0x2779b46ce62e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/state.js:1:1,0x2779b46ce4d8,~
script-source,274,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/state.js,// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort\x2C\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list\x2C sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    \x2C initState =\n    {\n      index    : 0\x2C\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null\x2C\n      jobs     : {}\x2C\n      results  : isNamedList ? {} : []\x2C\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a\x2C b)\n    {\n      return sortMethod(list[a]\x2C list[b]);\n    });\n  }\n\n  return initState;\n}\n
code-source-info,0x2779b46ce62e,274,0,941,C0O0C4O941,,
code-creation,Function,10,213500,0x2779b46ce73e,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/state.js:1:1,0x2779b46ce598,~
code-source-info,0x2779b46ce73e,274,0,941,C0O0C5O7C7O22C12O940,,
tick,0x10158e2ac,214000,0,0x0,4,0x0,0x172aed05ecb8,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46cc1fd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46cbbb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055204ff,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551e24a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,214291,0x2779b46cec86,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/terminator.js:1:1,0x2779b46ceb10,~
script-source,275,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/terminator.js,var abort = require('./abort.js')\n  \x2C async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null\x2C this.results);\n}\n
code-source-info,0x2779b46cec86,275,0,533,C0O0C4O533,,
code-creation,Function,10,214333,0x2779b46ced86,36, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/lib/terminator.js:1:1,0x2779b46cebf0,~
code-source-info,0x2779b46ced86,275,0,533,C0O0C10O12C13O12C17O12C19O46C22O46C26O46C28O80C30O95C35O532,,
code-creation,Eval,10,214541,0x2779b46cf28e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serial.js:1:1,0x2779b46cf128,~
script-source,276,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serial.js,var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list\x2C iterator\x2C callback)\n{\n  return serialOrdered(list\x2C iterator\x2C null\x2C callback);\n}\n
code-source-info,0x2779b46cf28e,276,0,501,C0O0C4O501,,
code-creation,Function,10,214583,0x2779b46cf386,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serial.js:1:1,0x2779b46cf1f8,~
code-source-info,0x2779b46cf386,276,0,501,C0O0C10O20C13O20C17O20C19O66C21O81C26O500,,
code-creation,Eval,10,214833,0x2779b46cf8de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serialOrdered.js:1:1,0x2779b46cf748,~
script-source,277,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serialOrdered.js,var iterate    = require('./lib/iterate.js')\n  \x2C initState  = require('./lib/state.js')\n  \x2C terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list\x2C iterator\x2C sortMethod\x2C callback)\n{\n  var state = initState(list\x2C sortMethod);\n\n  iterate(list\x2C iterator\x2C state\x2C function iteratorHandler(error\x2C result)\n  {\n    if (error)\n    {\n      callback(error\x2C result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list\x2C iterator\x2C state\x2C iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null\x2C state.results);\n  });\n\n  return terminator.bind(state\x2C callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a\x2C b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a\x2C b)\n{\n  return -1 * ascending(a\x2C b);\n}\n
code-source-info,0x2779b46cf8de,277,0,1751,C0O0C4O1751,,
code-creation,Function,10,214916,0x2779b46cface,78, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/asynckit/serialOrdered.js:1:1,0x2779b46cf848,~
code-source-info,0x2779b46cface,277,0,1751,C0O0C21O17C24O17C28O17C30O62C33O62C37O62C39O105C42O105C46O105C48O155C50O170C54O213C61O232C65O252C72O271C77O1750,,
code-creation,Eval,10,215125,0x2779b46d0256,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/populate.js:1:1,0x2779b46d0100,~
script-source,278,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/populate.js,// populates missing values\nmodule.exports = function(dst\x2C src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n
code-source-info,0x2779b46d0256,278,0,177,C0O0C4O177,,
code-creation,Function,10,215166,0x2779b46d0396,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/form-data/lib/populate.js:1:1,0x2779b46d01c0,~
code-source-info,0x2779b46d0396,278,0,177,C0O28C4O43C9O176,,
tick,0x1a37263d4,215250,1,0x100cd0724,6,0x0,0x172aed06021d,0x172aed05fb4e,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b0fc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,215416,0x2779b46d0dde,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/parseHAR.js:1:1,0x2779b46d0c78,~
script-source,279,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/parseHAR.js,'use strict'\n\n// given we support node v8\n// eslint-disable-next-line node/no-deprecated-api\nconst { parse } = require('url')\n\nfunction parseHAR (har) {\n  const requestsPerOrigin = new Map()\n  try {\n    if (!har || typeof har !== 'object' || typeof har.log !== 'object' || !Array.isArray(har.log.entries) || !har.log.entries.length) {\n      throw new Error('no entries found')\n    }\n    let i = 0\n    for (const entry of har.log.entries) {\n      i++\n      if (!entry || typeof entry !== 'object' || !entry.request || typeof entry.request !== 'object') {\n        throw new Error(`invalid request in entry #${i}`)\n      }\n      const { request: { method\x2C url\x2C headers: headerArray\x2C postData } } = entry\n      // turn headers array to headers object\n      const headers = {}\n      if (!Array.isArray(headerArray)) {\n        throw new Error(`invalid headers array in entry #${i}`)\n      }\n      let j = 0\n      for (const header of headerArray) {\n        j++\n        if (!header || typeof header !== 'object' || typeof header.name !== 'string' || typeof header.value !== 'string') {\n          throw new Error(`invalid name or value in header #${j} of entry #${i}`)\n        }\n        const { name\x2C value } = header\n        headers[name] = value\n      }\n      const { path\x2C hash\x2C host\x2C protocol } = parse(url)\n      const origin = `${protocol}//${host}`\n\n      let requests = requestsPerOrigin.get(origin)\n      if (!requests) {\n        requests = []\n        requestsPerOrigin.set(origin\x2C requests)\n      }\n      const request = {\n        origin\x2C\n        method\x2C\n        // only keep path & hash as our HttpClient will handle origin\n        path: `${path}${hash || ''}`\x2C\n        headers\n      }\n      if (typeof postData === 'object' && typeof postData.text === 'string') {\n        request.body = postData.text\n      }\n      requests.push(request)\n    }\n  } catch (err) {\n    throw new Error(`Could not parse HAR content: ${err.message}`)\n  }\n  return requestsPerOrigin\n}\n\nexports.parseHAR = parseHAR\n
code-source-info,0x2779b46d0dde,279,0,1995,C0O0C4O1995,,
code-creation,Function,10,215500,0x2779b46d0ede,35, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/parseHAR.js:1:1,0x2779b46d0d48,~
code-source-info,0x2779b46d0ede,279,0,1995,C0O0C13O111C16O111C21O101C27O1967C29O1984C34O1994,,
code-creation,Eval,10,215666,0x2779b46d1566,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/util.js:1:1,0x2779b46d1410,~
script-source,280,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/util.js,'use strict'\n\nconst semver = require('semver')\nconst hasWorkerSupport = semver.gte(process.versions.node\x2C '11.7.0')\n\nmodule.exports = { hasWorkerSupport }\n
code-source-info,0x2779b46d1566,280,0,155,C0O0C4O155,,
code-creation,Function,10,215708,0x2779b46d165e,56, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/util.js:1:1,0x2779b46d14d0,~
code-source-info,0x2779b46d165e,280,0,155,C0O29C3O29C8O79C13O83C17O91C22O100C30O79C37O117C44O136C50O132C55O154,,
code-creation,Eval,10,216083,0x2779b46d299e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/index.js:1:1,0x2779b46d2848,~
script-source,281,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/index.js,// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re\x2C\n  src: internalRe.src\x2C\n  tokens: internalRe.t\x2C\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION\x2C\n  SemVer: require('./classes/semver')\x2C\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers\x2C\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers\x2C\n  parse: require('./functions/parse')\x2C\n  valid: require('./functions/valid')\x2C\n  clean: require('./functions/clean')\x2C\n  inc: require('./functions/inc')\x2C\n  diff: require('./functions/diff')\x2C\n  major: require('./functions/major')\x2C\n  minor: require('./functions/minor')\x2C\n  patch: require('./functions/patch')\x2C\n  prerelease: require('./functions/prerelease')\x2C\n  compare: require('./functions/compare')\x2C\n  rcompare: require('./functions/rcompare')\x2C\n  compareLoose: require('./functions/compare-loose')\x2C\n  compareBuild: require('./functions/compare-build')\x2C\n  sort: require('./functions/sort')\x2C\n  rsort: require('./functions/rsort')\x2C\n  gt: require('./functions/gt')\x2C\n  lt: require('./functions/lt')\x2C\n  eq: require('./functions/eq')\x2C\n  neq: require('./functions/neq')\x2C\n  gte: require('./functions/gte')\x2C\n  lte: require('./functions/lte')\x2C\n  cmp: require('./functions/cmp')\x2C\n  coerce: require('./functions/coerce')\x2C\n  Comparator: require('./classes/comparator')\x2C\n  Range: require('./classes/range')\x2C\n  satisfies: require('./functions/satisfies')\x2C\n  toComparators: require('./ranges/to-comparators')\x2C\n  maxSatisfying: require('./ranges/max-satisfying')\x2C\n  minSatisfying: require('./ranges/min-satisfying')\x2C\n  minVersion: require('./ranges/min-version')\x2C\n  validRange: require('./ranges/valid')\x2C\n  outside: require('./ranges/outside')\x2C\n  gtr: require('./ranges/gtr')\x2C\n  ltr: require('./ranges/ltr')\x2C\n  intersects: require('./ranges/intersects')\x2C\n  simplifyRange: require('./ranges/simplify')\x2C\n  subset: require('./ranges/subset')\x2C\n}\n
code-source-info,0x2779b46d299e,281,0,1982,C0O0C4O1982,,
code-creation,Function,10,216208,0x2779b46d2fbe,511, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/index.js:1:1,0x2779b46d2908,~
code-source-info,0x2779b46d2fbe,281,0,1982,C0O79C3O79C8O104C13O140C21O162C29O188C40O214C45O245C56O277C67O328C72O361C83O405C88O438C99O469C110O508C121O547C132O584C143O620C154O658C165O697C176O736C187O780C198O826C209O870C220O919C231O973C242O1019C253O1057C264O1093C275O1126C286O1159C297O1193C308O1228C319O1263C330O1298C341O1336C352O1381C363O1423C374O1464C385O1515C396O1568C407O1621C418O1671C429O1718C440O1756C451O1792C462O1824C473O1863C484O1912C495O1952C505O119C510O1981,,
tick,0x10113c8f0,216500,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d2fc1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,216625,0x2779b46d44ce,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/re.js:1:1,0x2779b46d4328,~
script-source,282,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/re.js,const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name\x2C value\x2C isGlobal) => {\n  const index = R++\n  debug(index\x2C value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value\x2C isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing\x2C\n// validating\x2C and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`\x2C or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER'\x2C '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE'\x2C '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits\x2C followed by a letter or hyphen\x2C and then zero or\n// more letters\x2C digits\x2C or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER'\x2C '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION'\x2C `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE'\x2C `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier\x2C or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER'\x2C `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE'\x2C `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen\x2C followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE'\x2C `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE'\x2C `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits\x2C letters\x2C or hyphens.\n\ncreateToken('BUILDIDENTIFIER'\x2C '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign\x2C followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD'\x2C `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version\x2C followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major\x2C minor\x2C patch\x2C and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group\x2C because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN'\x2C `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL'\x2C `^${src[t.FULLPLAIN]}$`)\n\n// like full\x2C but allows v1.2.3 and =1.2.3\x2C which people do sometimes.\n// also\x2C 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN'\x2C `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE'\x2C `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT'\x2C '((?:<|>)?=?)')\n\n// Something like "2.*" or "1.2.x".\n// Note that "x.x" is a valid xRange identifer\x2C meaning "any version"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE'\x2C `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER'\x2C `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN'\x2C `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE'\x2C `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE'\x2C `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE'\x2C `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE'\x2C `${'(^|[^\\\\d])' +\n              '(\\\\d{1\x2C'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1\x2C${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1\x2C${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL'\x2C src[t.COERCE]\x2C true)\n\n// Tilde ranges.\n// Meaning is "reasonably at or greater than"\ncreateToken('LONETILDE'\x2C '(?:~>?)')\n\ncreateToken('TILDETRIM'\x2C `(\\\\s*)${src[t.LONETILDE]}\\\\s+`\x2C true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE'\x2C `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE'\x2C `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is "at least and backwards compatible with"\ncreateToken('LONECARET'\x2C '(?:\\\\^)')\n\ncreateToken('CARETTRIM'\x2C `(\\\\s*)${src[t.LONECARET]}\\\\s+`\x2C true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET'\x2C `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE'\x2C `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing\x2C or just "" to indicate "any version"\ncreateToken('COMPARATORLOOSE'\x2C `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR'\x2C `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies\x2C so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM'\x2C `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`\x2C true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form\x2C because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE'\x2C `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE'\x2C `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR'\x2C '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0'\x2C '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE'\x2C '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n
code-source-info,0x2779b46d44ce,282,0,6662,C0O0C4O6662,,
code-creation,Function,10,216875,0x2779b46d48be,2388, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/re.js:1:1,0x2779b46d4438,~
code-source-info,0x2779b46d48be
code-creation,Eval,10,217125,0x2779b46d5f4e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/constants.js:1:1,0x2779b46d5df8,~
script-source,283,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/constants.js,// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION\x2C\n  MAX_LENGTH\x2C\n  MAX_SAFE_INTEGER\x2C\n  MAX_SAFE_COMPONENT_LENGTH\n}\n
code-source-info,0x2779b46d5f4e,283,0,468,C0O0C4O468,,
code-creation,Function,10,217166,0x2779b46d6086,61, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/constants.js:1:1,0x2779b46d5eb8,~
code-source-info,0x2779b46d6086,283,0,468,C0O152C3O180C8O209C12O216C21O358C24O362C31O383C37O406C43O420C49O440C55O377C60O467,,
code-creation,Eval,10,217291,0x2779b46d65ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/debug.js:1:1,0x2779b46d6458,~
script-source,284,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/debug.js,const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER'\x2C ...args)\n  : () => {}\n\nmodule.exports = debug\n
code-source-info,0x2779b46d65ae,284,0,226,C0O0C4O226,,
code-creation,Function,10,217333,0x2779b46d6716,82, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/debug.js:1:1,0x2779b46d6518,~
code-source-info,0x2779b46d6716,284,0,226,C0O14C7O51C11O59C17O68C21O76C26O80C37O110C42O115C46O123C51O127C56O110C74O203C76O218C81O225,,
code-creation,LazyCompile,10,217375,0x2779b46d695e,91,createToken /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/re.js:11:21,0x2779b46d4500,~
code-source-info,0x2779b46d695e,282,276,447,C0O321C12O322C21O327C26O327C31O349C38O357C42O367C49O378C53O388C58O404C70O418C80O400C85O398C90O446,,
code-creation,LazyCompile,10,217375,0x2779b46d6aa6,2,debug /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/debug.js:7:5,0x2779b46d6630,~
code-source-info,0x2779b46d6aa6,284,193,201,C1O200,,
tick,0x1a3726538,217875,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d2ff6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,219041,0,0x0,4,0x0,0x172aed05dd8d,0x172aed061b5e,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d2ff6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,219708,0x10750f100,4212,Module._nodeModulePaths node:internal/modules/cjs/loader:629:37,0x3a1583d1fd08,*
code-source-info,0x10750fxe898a5e8648S0x30d75b99d28S0xe898a5e8160S0xe898a5e80c0
code-creation,Eval,10,219916,0x2779b46da4ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:1:1,0x2779b46da2b0,~
script-source,285,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js,const debug = require('../internal/debug')\nconst { MAX_LENGTH\x2C MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re\x2C t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version\x2C options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer'\x2C version\x2C options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions\x2C but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare'\x2C this.version\x2C this.options\x2C other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other\x2C this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other\x2C this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major\x2C other.major) ||\n      compareIdentifiers(this.minor\x2C other.minor) ||\n      compareIdentifiers(this.patch\x2C other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other\x2C this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare'\x2C i\x2C a\x2C b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a\x2C b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other\x2C this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare'\x2C i\x2C a\x2C b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a\x2C b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release\x2C and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release\x2C identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre'\x2C identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre'\x2C identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease\x2C it will bump to the next version\n        // drop any prereleases that might already exist\x2C since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch'\x2C identifier)\n        this.inc('pre'\x2C identifier)\n        break\n      // If the input is a non-prerelease version\x2C this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch'\x2C identifier)\n        }\n        this.inc('pre'\x2C identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version\x2C bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version\x2C bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version\x2C it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2\x2C\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier\x2C 0]\n            }\n          } else {\n            this.prerelease = [identifier\x2C 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n
code-source-info,0x2779b46da4ae,285,0,7985,C0O0C4O7985,,
code-creation,Function,10,220208,0x2779b46daa46,174, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:1:1,0x2779b46da418,~
code-source-info,0x2779b46daa46,285,0,7985,C0O0C26O14C29O14C33O14C35O84C38O84C43O51C49O63C55O135C58O135C63O125C69O129C75O183C78O183C82O183C84O251C87O251C92O228C166O7961C168O7976C173O7984,,
tick,0x1a373068c,220291,1,0x100cd50c4,6,0x0,0x172aed051007,0x172aed050ac9,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46daa6c,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d2ff6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,220541,0x2779b46dbcd6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/parse-options.js:1:1,0x2779b46dbb70,~
script-source,286,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/parse-options.js,// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease'\x2C 'loose'\x2C 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options\x2C k) => {\n    options[k] = true\n    return options\n  }\x2C {})\nmodule.exports = parseOptions\n
code-source-info,0x2779b46dbcd6,286,0,401,C0O0C4O401,,
code-creation,Function,10,220583,0x2779b46dbe0e,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/parse-options.js:1:1,0x2779b46dbc40,~
code-source-info,0x2779b46dbe0e,286,0,401,C0O0C8O127C12O127C14O186C19O371C21O386C26O400,,
code-creation,Eval,10,220833,0x2779b46dc35e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/identifiers.js:1:1,0x2779b46dc1e8,~
script-source,287,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/identifiers.js,const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a\x2C b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a\x2C b) => compareIdentifiers(b\x2C a)\n\nmodule.exports = {\n  compareIdentifiers\x2C\n  rcompareIdentifiers\n}\n
code-source-info,0x2779b46dc35e,287,0,409,C0O0C4O409,,
code-creation,Function,10,220875,0x2779b46dc4fe,53, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/identifiers.js:1:1,0x2779b46dc2c8,~
code-source-info,0x2779b46dc4fe,287,0,409,C0O0C11O16C15O16C17O54C21O54C23O308C28O344C35O365C41O387C47O359C52O408,,
code-creation,Eval,10,221125,0x2779b46dcc56,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/parse.js:1:1,0x2779b46dcab0,~
script-source,288,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/parse.js,const {MAX_LENGTH} = require('../internal/constants')\nconst { re\x2C t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version\x2C options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version\x2C options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n
code-source-info,0x2779b46dcc56,288,0,660,C0O0C4O660,,
code-creation,Function,10,221166,0x2779b46dcd7e,85, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/parse.js:1:1,0x2779b46dcbc0,~
code-source-info,0x2779b46dcd7e,288,0,660,C0O0C20O21C23O21C28O7C34O72C37O72C42O62C48O66C54O113C57O113C61O113C63O164C66O164C70O164C72O215C77O637C79O652C84O659,,
code-creation,Eval,10,221500,0x2779b46dd7c6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/valid.js:1:1,0x2779b46dd660,~
script-source,289,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/valid.js,const parse = require('./parse')\nconst valid = (version\x2C options) => {\n  const v = parse(version\x2C options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n
code-source-info,0x2779b46dd7c6,289,0,162,C0O0C4O162,,
code-creation,Function,10,221500,0x2779b46dd8be,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/valid.js:1:1,0x2779b46dd730,~
code-source-info,0x2779b46dd8be,289,0,162,C0O0C8O14C11O14C15O14C17O47C22O139C24O154C29O161,,
tick,0x107508fd0,221541,0,0x0,0,0x3a1583d0757f,0x172aed04fbf3,0x172aed04f8e0,0x172aed04f5a7,0x172aed04e9d9,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46dd8c9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d302c,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,221750,0x2779b46dde76,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/clean.js:1:1,0x2779b46ddd10,~
script-source,290,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/clean.js,const parse = require('./parse')\nconst clean = (version\x2C options) => {\n  const s = parse(version.trim().replace(/^[=v]+/\x2C '')\x2C options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n
code-source-info,0x2779b46dde76,290,0,191,C0O0C4O191,,
code-creation,Function,10,221791,0x2779b46ddf6e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/clean.js:1:1,0x2779b46ddde0,~
code-source-info,0x2779b46ddf6e,290,0,191,C0O0C8O14C11O14C15O14C17O47C22O168C24O183C29O190,,
code-creation,Eval,10,221958,0x2779b46de40e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/inc.js:1:1,0x2779b46de2a8,~
script-source,291,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/inc.js,const SemVer = require('../classes/semver')\n\nconst inc = (version\x2C release\x2C options\x2C identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version\x2C options).inc(release\x2C identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n
code-source-info,0x2779b46de40e,291,0,336,C0O0C4O336,,
code-creation,Function,10,222000,0x2779b46de506,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/inc.js:1:1,0x2779b46de378,~
code-source-info,0x2779b46de506,291,0,336,C0O0C8O15C11O15C15O15C17O57C22O315C24O330C29O335,,
code-creation,Eval,10,222166,0x2779b46deaae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/diff.js:1:1,0x2779b46de938,~
script-source,292,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/diff.js,const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1\x2C version2) => {\n  if (eq(version1\x2C version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n
code-source-info,0x2779b46deaae,292,0,634,C0O0C4O634,,
code-creation,Function,10,222208,0x2779b46debae,42, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/diff.js:1:1,0x2779b46dea18,~
code-source-info,0x2779b46debae,292,0,634,C0O0C11O14C14O14C18O14C20O44C23O44C27O44C29O74C34O612C36O627C41O633,,
code-creation,Eval,10,222333,0x2779b46df106,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/eq.js:1:1,0x2779b46defa0,~
script-source,293,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/eq.js,const compare = require('./compare')\nconst eq = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) === 0\nmodule.exports = eq\n
code-source-info,0x2779b46df106,293,0,112,C0O0C4O112,,
code-creation,Function,10,222333,0x2779b46df1fe,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/eq.js:1:1,0x2779b46df070,~
code-source-info,0x2779b46df1fe,293,0,112,C0O0C8O16C11O16C15O16C17O48C22O92C24O107C29O111,,
code-creation,Eval,10,222458,0x2779b46df686,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare.js:1:1,0x2779b46df520,~
script-source,294,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare.js,const SemVer = require('../classes/semver')\nconst compare = (a\x2C b\x2C loose) =>\n  new SemVer(a\x2C loose).compare(new SemVer(b\x2C loose))\n\nmodule.exports = compare\n
code-source-info,0x2779b46df686,294,0,156,C0O0C4O156,,
code-creation,Function,10,222500,0x2779b46df77e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare.js:1:1,0x2779b46df5f0,~
code-source-info,0x2779b46df77e,294,0,156,C0O0C8O15C11O15C15O15C17O60C22O131C24O146C29O155,,
code-creation,Eval,10,222625,0x2779b46dfc16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/major.js:1:1,0x2779b46dfab0,~
script-source,295,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/major.js,const SemVer = require('../classes/semver')\nconst major = (a\x2C loose) => new SemVer(a\x2C loose).major\nmodule.exports = major\n
code-source-info,0x2779b46dfc16,295,0,122,C0O0C4O122,,
code-creation,Function,10,222625,0x2779b46dfd0e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/major.js:1:1,0x2779b46dfb80,~
code-source-info,0x2779b46dfd0e,295,0,122,C0O0C8O15C11O15C15O15C17O58C22O99C24O114C29O121,,
tick,0x1a3726538,222833,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d3063,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,222833,0x2779b46e0196,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/minor.js:1:1,0x2779b46e0030,~
script-source,296,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/minor.js,const SemVer = require('../classes/semver')\nconst minor = (a\x2C loose) => new SemVer(a\x2C loose).minor\nmodule.exports = minor\n
code-source-info,0x2779b46e0196,296,0,122,C0O0C4O122,,
code-creation,Function,10,222875,0x2779b46e028e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/minor.js:1:1,0x2779b46e0100,~
code-source-info,0x2779b46e028e,296,0,122,C0O0C8O15C11O15C15O15C17O58C22O99C24O114C29O121,,
code-creation,Eval,10,223083,0x2779b46e0716,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/patch.js:1:1,0x2779b46e05b0,~
script-source,297,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/patch.js,const SemVer = require('../classes/semver')\nconst patch = (a\x2C loose) => new SemVer(a\x2C loose).patch\nmodule.exports = patch\n
code-source-info,0x2779b46e0716,297,0,122,C0O0C4O122,,
code-creation,Function,10,223083,0x2779b46e080e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/patch.js:1:1,0x2779b46e0680,~
code-source-info,0x2779b46e080e,297,0,122,C0O0C8O15C11O15C15O15C17O58C22O99C24O114C29O121,,
code-creation,Eval,10,223208,0x2779b46e0cae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/prerelease.js:1:1,0x2779b46e0b48,~
script-source,298,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/prerelease.js,const parse = require('./parse')\nconst prerelease = (version\x2C options) => {\n  const parsed = parse(version\x2C options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n
code-source-info,0x2779b46e0cae,298,0,220,C0O0C4O220,,
code-creation,Function,10,223250,0x2779b46e0da6,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/prerelease.js:1:1,0x2779b46e0c18,~
code-source-info,0x2779b46e0da6,298,0,220,C0O0C8O14C11O14C15O14C17O52C22O192C24O207C29O219,,
code-creation,Eval,10,223375,0x2779b46e1346,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rcompare.js:1:1,0x2779b46e11e0,~
script-source,299,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rcompare.js,const compare = require('./compare')\nconst rcompare = (a\x2C b\x2C loose) => compare(b\x2C a\x2C loose)\nmodule.exports = rcompare\n
code-source-info,0x2779b46e1346,299,0,118,C0O0C4O118,,
code-creation,Function,10,223416,0x2779b46e143e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rcompare.js:1:1,0x2779b46e12b0,~
code-source-info,0x2779b46e143e,299,0,118,C0O0C8O16C11O16C15O16C17O54C22O92C24O107C29O117,,
code-creation,Eval,10,223541,0x2779b46e18de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-loose.js:1:1,0x2779b46e1778,~
script-source,300,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-loose.js,const compare = require('./compare')\nconst compareLoose = (a\x2C b) => compare(a\x2C b\x2C true)\nmodule.exports = compareLoose\n
code-source-info,0x2779b46e18de,300,0,118,C0O0C4O118,,
code-creation,Function,10,223541,0x2779b46e19d6,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-loose.js:1:1,0x2779b46e1848,~
code-source-info,0x2779b46e19d6,300,0,118,C0O0C8O16C11O16C15O16C17O58C22O88C24O103C29O117,,
code-creation,Eval,10,223666,0x2779b46e1ea6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-build.js:1:1,0x2779b46e1d40,~
script-source,301,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-build.js,const SemVer = require('../classes/semver')\nconst compareBuild = (a\x2C b\x2C loose) => {\n  const versionA = new SemVer(a\x2C loose)\n  const versionB = new SemVer(b\x2C loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n
code-source-info,0x2779b46e1ea6,301,0,267,C0O0C4O267,,
code-creation,Function,10,223708,0x2779b46e1f9e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare-build.js:1:1,0x2779b46e1e10,~
code-source-info,0x2779b46e1f9e,301,0,267,C0O0C8O15C11O15C15O15C17O65C22O237C24O252C29O266,,
code-creation,Eval,10,223916,0x2779b46e246e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/sort.js:1:1,0x2779b46e2308,~
script-source,302,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/sort.js,const compareBuild = require('./compare-build')\nconst sort = (list\x2C loose) => list.sort((a\x2C b) => compareBuild(a\x2C b\x2C loose))\nmodule.exports = sort\n
code-source-info,0x2779b46e246e,302,0,147,C0O0C4O147,,
code-creation,Function,10,223958,0x2779b46e2566,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/sort.js:1:1,0x2779b46e23d8,~
code-source-info,0x2779b46e2566,302,0,147,C0O0C8O21C11O21C15O21C17O61C22O125C24O140C29O146,,
tick,0x1014a6080,224041,0,0x0,0,0x172aed0601c3,0x172aed05fb4e,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d30bb,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,224125,0x2779b46e2b06,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rsort.js:1:1,0x2779b46e29a0,~
script-source,303,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rsort.js,const compareBuild = require('./compare-build')\nconst rsort = (list\x2C loose) => list.sort((a\x2C b) => compareBuild(b\x2C a\x2C loose))\nmodule.exports = rsort\n
code-source-info,0x2779b46e2b06,303,0,149,C0O0C4O149,,
code-creation,Function,10,224166,0x2779b46e2bfe,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/rsort.js:1:1,0x2779b46e2a70,~
code-source-info,0x2779b46e2bfe,303,0,149,C0O0C8O21C11O21C15O21C17O62C22O126C24O141C29O148,,
code-creation,Eval,10,224291,0x2779b46e3086,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gt.js:1:1,0x2779b46e2f20,~
script-source,304,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gt.js,const compare = require('./compare')\nconst gt = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) > 0\nmodule.exports = gt\n
code-source-info,0x2779b46e3086,304,0,110,C0O0C4O110,,
code-creation,Function,10,224333,0x2779b46e317e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gt.js:1:1,0x2779b46e2ff0,~
code-source-info,0x2779b46e317e,304,0,110,C0O0C8O16C11O16C15O16C17O48C22O90C24O105C29O109,,
code-creation,Eval,10,224458,0x2779b46e3606,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lt.js:1:1,0x2779b46e34a0,~
script-source,305,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lt.js,const compare = require('./compare')\nconst lt = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) < 0\nmodule.exports = lt\n
code-source-info,0x2779b46e3606,305,0,110,C0O0C4O110,,
code-creation,Function,10,224458,0x2779b46e36fe,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lt.js:1:1,0x2779b46e3570,~
code-source-info,0x2779b46e36fe,305,0,110,C0O0C8O16C11O16C15O16C17O48C22O90C24O105C29O109,,
code-creation,Eval,10,224583,0x2779b46e3c86,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/neq.js:1:1,0x2779b46e3b20,~
script-source,306,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/neq.js,const compare = require('./compare')\nconst neq = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) !== 0\nmodule.exports = neq\n
code-source-info,0x2779b46e3c86,306,0,114,C0O0C4O114,,
code-creation,Function,10,224625,0x2779b46e3d7e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/neq.js:1:1,0x2779b46e3bf0,~
code-source-info,0x2779b46e3d7e,306,0,114,C0O0C8O16C11O16C15O16C17O49C22O93C24O108C29O113,,
code-creation,Eval,10,224750,0x2779b46e4206,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gte.js:1:1,0x2779b46e40a0,~
script-source,307,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gte.js,const compare = require('./compare')\nconst gte = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) >= 0\nmodule.exports = gte\n
code-source-info,0x2779b46e4206,307,0,113,C0O0C4O113,,
code-creation,Function,10,224750,0x2779b46e42fe,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gte.js:1:1,0x2779b46e4170,~
code-source-info,0x2779b46e42fe,307,0,113,C0O0C8O16C11O16C15O16C17O49C22O92C24O107C29O112,,
code-creation,Eval,10,224875,0x2779b46e4786,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lte.js:1:1,0x2779b46e4620,~
script-source,308,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lte.js,const compare = require('./compare')\nconst lte = (a\x2C b\x2C loose) => compare(a\x2C b\x2C loose) <= 0\nmodule.exports = lte\n
code-source-info,0x2779b46e4786,308,0,113,C0O0C4O113,,
code-creation,Function,10,224875,0x2779b46e487e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/lte.js:1:1,0x2779b46e46f0,~
code-source-info,0x2779b46e487e,308,0,113,C0O0C8O16C11O16C15O16C17O49C22O92C24O107C29O112,,
code-creation,Eval,10,225083,0x2779b46e4e86,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/cmp.js:1:1,0x2779b46e4cd0,~
script-source,309,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/cmp.js,const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a\x2C op\x2C b\x2C loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a\x2C b\x2C loose)\n\n    case '!=':\n      return neq(a\x2C b\x2C loose)\n\n    case '>':\n      return gt(a\x2C b\x2C loose)\n\n    case '>=':\n      return gte(a\x2C b\x2C loose)\n\n    case '<':\n      return lt(a\x2C b\x2C loose)\n\n    case '<=':\n      return lte(a\x2C b\x2C loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n
code-source-info,0x2779b46e4e86,309,0,907,C0O0C4O907,,
code-creation,Function,10,225166,0x2779b46e4fa6,90, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/cmp.js:1:1,0x2779b46e4df0,~
code-source-info,0x2779b46e4fa6,309,0,907,C0O0C23O11C26O11C30O11C32O39C35O39C39O39C41O67C44O67C48O67C50O95C53O95C57O95C59O123C62O123C66O123C68O151C71O151C75O151C77O181C82O886C84O901C89O906,,
tick,0x101491224,225291,0,0x0,0,0x172aed061a7d,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d3113,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,225458,0x2779b46e5b26,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/coerce.js:1:1,0x2779b46e5990,~
script-source,310,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/coerce.js,const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re\x2C t} = require('../internal/re')\n\nconst coerce = (version\x2C options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg\x2C '1.2.3.4' wants to coerce '2.3.4'\x2C not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end\x2C since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`\x2C options)\n}\nmodule.exports = coerce\n
code-source-info,0x2779b46e5b26,310,0,1497,C0O0C4O1497,,
code-creation,Function,10,225541,0x2779b46e5c3e,68, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/coerce.js:1:1,0x2779b46e5a90,~
code-source-info,0x2779b46e5c3e,310,0,1497,C0O0C17O15C20O15C24O15C26O58C29O58C33O58C35O93C38O93C43O84C49O88C55O135C60O1473C62O1488C67O1496,,
code-creation,Eval,10,225750,0x2779b46e64ee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/comparator.js:1:1,0x2779b46e62e0,~
script-source,311,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/comparator.js,const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp\x2C options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator'\x2C comp\x2C options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp'\x2C this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2]\x2C this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test'\x2C version\x2C this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version\x2C this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version\x2C this.operator\x2C this.semver\x2C this.options)\n  }\n\n  intersects (comp\x2C options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options\x2C\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value\x2C options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value\x2C options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver\x2C '<'\x2C comp.semver\x2C options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver\x2C '>'\x2C comp.semver\x2C options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re\x2C t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n
code-source-info,0x2779b46e64ee,311,0,3606,C0O0C4O3606,,
code-creation,Function,10,225916,0x2779b46e69d6,173, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/comparator.js:1:1,0x2779b46e6458,~
code-source-info,0x2779b46e69d6,311,0,3606,C0O0C29O12C36O12C40O12C100O3326C102O3341C106O3376C109O3376C113O3376C115O3429C118O3429C123O3420C129O3424C135O3467C138O3467C142O3467C144O3509C147O3509C151O3509C153O3553C156O3553C160O3553C162O3587C165O3587C169O3587C172O3605,,
code-creation,Eval,10,226333,0x2779b46e8096,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/range.js:1:1,0x2779b46e7d78,~
script-source,312,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/range.js,// hoisted class for cyclic dependency\nclass Range {\n  constructor (range\x2C options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw\x2C options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First\x2C split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range\x2C which is allowed\n      // in loose mode\x2C but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set\x2C throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one\x2C in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *\x2C then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path\x2C and fully deterministic.\n    const memoOpts = Object.keys(this.options).join('\x2C')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr\x2C hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace'\x2C range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM]\x2C comparatorTrimReplace)\n    debug('comparator trim'\x2C range\x2C re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM]\x2C tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM]\x2C caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point\x2C the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp\x2C this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp\x2C this.options))\n      // in loose mode\x2C throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp\x2C this.options))\n\n    // if any comparators are the null set\x2C then replace with JUST null set\n    // if more than one comparator\x2C remove any * comparators\n    // also\x2C don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value\x2C comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey\x2C result)\n    return result\n  }\n\n  intersects (range\x2C options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators\x2C options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators\x2C options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator\x2C options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators\x2C then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version\x2C this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i]\x2C version\x2C this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re\x2C\n  t\x2C\n  comparatorTrimReplace\x2C\n  tildeTrimReplace\x2C\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators\x2C options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator\x2C options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges\x2C tildes\x2C stars\x2C and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp\x2C options) => {\n  debug('comp'\x2C comp\x2C options)\n  comp = replaceCarets(comp\x2C options)\n  debug('caret'\x2C comp)\n  comp = replaceTildes(comp\x2C options)\n  debug('tildes'\x2C comp)\n  comp = replaceXRanges(comp\x2C options)\n  debug('xrange'\x2C comp)\n  comp = replaceStars(comp\x2C options)\n  debug('stars'\x2C comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~\x2C ~> --> * (any\x2C kinda silly)\n// ~2\x2C ~2.x\x2C ~2.x.x\x2C ~>2\x2C ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0\x2C ~2.0.x\x2C ~>2.0\x2C ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2\x2C ~1.2.x\x2C ~>1.2\x2C ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3\x2C ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0\x2C ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp\x2C options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp\x2C options)\n  }).join(' ')\n\nconst replaceTilde = (comp\x2C options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r\x2C (_\x2C M\x2C m\x2C p\x2C pr) => {\n    debug('tilde'\x2C comp\x2C _\x2C M\x2C m\x2C p\x2C pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr'\x2C pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return'\x2C ret)\n    return ret\n  })\n}\n\n// ^ --> * (any\x2C kinda silly)\n// ^2\x2C ^2.x\x2C ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0\x2C ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2\x2C ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp\x2C options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp\x2C options)\n  }).join(' ')\n\nconst replaceCaret = (comp\x2C options) => {\n  debug('caret'\x2C comp\x2C options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r\x2C (_\x2C M\x2C m\x2C p\x2C pr) => {\n    debug('caret'\x2C comp\x2C _\x2C M\x2C m\x2C p\x2C pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr'\x2C pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return'\x2C ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp\x2C options) => {\n  debug('replaceXRanges'\x2C comp\x2C options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp\x2C options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp\x2C options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r\x2C (ret\x2C gtlt\x2C M\x2C m\x2C p\x2C pr) => {\n    debug('xRange'\x2C comp\x2C ret\x2C gtlt\x2C M\x2C m\x2C p\x2C pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match\x2C then we need\n    // to fix this to -0\x2C the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x\x2C because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0\x2C since any 0.7.x should\n        // pass.  Similarly\x2C <=7.x is actually <8.0.0\x2C etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return'\x2C ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator\x2C\n// and '' means "any version"\x2C just remove the *s entirely.\nconst replaceStars = (comp\x2C options) => {\n  debug('replaceStars'\x2C comp\x2C options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR]\x2C '')\n}\n\nconst replaceGTE0 = (comp\x2C options) => {\n  debug('replaceGTE0'\x2C comp\x2C options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0]\x2C '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M\x2C m\x2C patch\x2C prerelease\x2C build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0\x2C\n  from\x2C fM\x2C fm\x2C fp\x2C fpr\x2C fb\x2C\n  to\x2C tM\x2C tm\x2C tp\x2C tpr\x2C tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set\x2C version\x2C options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example\x2C ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However\x2C `1.2.4-alpha.notready` should NOT be allowed\x2C\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre\x2C but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n
code-source-info,0x2779b46e8096,312,0,13989,C0O0C4O13989,,
code-creation,Function,10,226875,0x2779b46e8aae,332, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/range.js:1:1,0x2779b46e8000,~
code-source-info,0x2779b46e8aae
tick,0x1a3726358,226916,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46e6a7b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d311e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,227250,0x2779b46ead46,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/index.js:1:1,0x2779b46eaad0,~
script-source,313,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/index.js,'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item\x2C and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity\x2C but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value\x2C hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn\x2C thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this\x2C fn\x2C walker\x2C thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn\x2C thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this\x2C fn\x2C walker\x2C thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key\x2C hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this\x2C hit) ? false : {\n        k: hit.key\x2C\n        v: hit.value\x2C\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key\x2C value\x2C maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value\x2C key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this\x2C this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key\x2C item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key\x2C value\x2C len\x2C now\x2C maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key\x2C value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key\x2C this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this\x2C hit)\n  }\n\n  get (key) {\n    return get(this\x2C key\x2C true)\n  }\n\n  peek (key) {\n    return get(this\x2C key\x2C false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this\x2C node)\n    return node.value\n  }\n\n  del (key) {\n    del(this\x2C this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k\x2C hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k\x2C hit.v\x2C maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value\x2C key) => get(this\x2C key\x2C false))\n  }\n}\n\nconst get = (self\x2C key\x2C doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self\x2C hit)) {\n      del(self\x2C node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self\x2C hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one\x2C and also\n      // what the next least recently used key will be\x2C so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self\x2C walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self\x2C node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key\x2C hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key\x2C value\x2C length\x2C now\x2C maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self\x2C fn\x2C node\x2C thisp) => {\n  let hit = node.value\n  if (isStale(self\x2C hit)) {\n    del(self\x2C node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp\x2C hit.value\x2C hit.key\x2C self)\n}\n\nmodule.exports = LRUCache\n
code-source-info,0x2779b46ead46,313,0,8186,C0O0C4O8186,,
code-creation,Function,10,227541,0x2779b46ec03e,427, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/index.js:1:1,0x2779b46eacb0,~
code-source-info,0x2779b46ec03e,313,0,8186,C0O0C59O83C62O83C66O83C68O115C75O115C79O115C81O144C88O144C92O144C94O187C101O187C105O187C107O234C114O234C118O234C120O271C127O271C131O271C133O304C140O304C144O304C146O348C153O348C157O348C159O390C166O390C170O390C172O422C179O422C183O422C185O464C192O464C196O464C198O510C202O510C366O6475C370O6475C372O6889C376O6889C378O7109C382O7109C384O7511C388O7511C411O7740C413O7947C417O7947C419O8160C421O8175C426O8185,,
tick,0x10115dab8,227833,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46ec07c,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46e8b41,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46e6a7b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d311e,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,227875,0x2779b46edb06,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/yallist.js:1:1,0x2779b46ed928,~
script-source,314,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/yallist.js,'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0\x2C l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0\x2C l = arguments.length; i < l; i++) {\n    push(this\x2C arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0\x2C l = arguments.length; i < l; i++) {\n    unshift(this\x2C arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn\x2C thisp) {\n  thisp = thisp || this\n  for (var walker = this.head\x2C i = 0; walker !== null; i++) {\n    fn.call(thisp\x2C walker.value\x2C i\x2C this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn\x2C thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail\x2C i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp\x2C walker.value\x2C i\x2C this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0\x2C walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0\x2C walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn\x2C thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp\x2C walker.value\x2C this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn\x2C thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp\x2C walker.value\x2C this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn\x2C initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc\x2C walker.value\x2C i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn\x2C initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc\x2C walker.value\x2C i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0\x2C walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0\x2C walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from\x2C to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0\x2C walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++\x2C walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from\x2C to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length\x2C walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--\x2C walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start\x2C deleteCount\x2C ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0\x2C walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this\x2C walker\x2C nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self\x2C node\x2C value) {\n  var inserted = node === self.head ?\n    new Node(value\x2C null\x2C node\x2C self) :\n    new Node(value\x2C node\x2C node.next\x2C self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self\x2C item) {\n  self.tail = new Node(item\x2C self.tail\x2C null\x2C self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self\x2C item) {\n  self.head = new Node(item\x2C null\x2C self.head\x2C self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value\x2C prev\x2C next\x2C list) {\n  if (!(this instanceof Node)) {\n    return new Node(value\x2C prev\x2C next\x2C list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n
code-source-info,0x2779b46edb06,314,0,8411,C0O0C4O8411,,
code-creation,Function,10,228208,0x2779b46eea76,430, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/yallist.js:1:1,0x2779b46eda70,~
code-source-info,0x2779b46eea76,314,0,8411,C0O0C35O13C37O28C41O39C46O52C50O59C55O74C59O519C62O527C71O548C75O1003C78O1011C87O1033C91O1336C94O1344C103O1363C107O1666C110O1674C119O1689C123O1816C126O1824C135O1842C139O1972C142O1980C151O1994C155O2226C158O2234C167O2250C171O2482C174O2490C183O2508C187O2693C190O2701C199O2726C203O2925C206O2933C215O2947C219O3184C222O3192C231O3213C235O3450C238O3458C247O3472C251O3692C254O3700C263O3721C267O3941C270O3949C279O3966C283O4365C286O4373C295O4397C299O4810C302O4818C311O4836C315O5020C318O5028C327O5053C331O5237C334O5245C343O5261C347O5792C350O5800C359O5823C363O6364C366O6372C375O6389C379O7036C382O7044C391O7062C398O8361C401O8361C409O8385C429O8410,,
code-creation,Eval,10,228333,0x2779b46f06be,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/iterator.js:1:1,0x2779b46f0568,~
script-source,315,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/iterator.js,'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n
code-source-info,0x2779b46f06be,315,0,207,C0O0C4O207,,
code-creation,Function,10,228333,0x2779b46f07fe,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/iterator.js:1:1,0x2779b46f0628,~
code-source-info,0x2779b46f07fe,315,0,207,C0O13C4O28C9O206,,
code-creation,LazyCompile,10,228375,0x2779b46f0a6e,24,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/iterator.js:2:27,0x2779b46f06f0,~
code-source-info,0x2779b46f0a6e,315,39,206,C0O61C5O71C9O78C18O88C23O205,,
code-creation,LazyCompile,10,228416,0x2779b46f0ea6,260,LRUCache /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/index.js:28:15,0x2779b46eadc8,~
code-source-info,0x2779b46f0ea6,313,865,1751,C0O881C6O920C13O937C22O952C26O972C29O1002C35O1025C43O1053C49O1057C54O1069C63O1075C68O1069C69O1211C71O1216C74O1231C83O1238C87O1221C94O1271C102O1281C105O1297C107O1302C121O1352C127O1321C131O1373C133O1378C136O1401C146O1391C150O1432C156O1457C164O1484C173O1490C178O1484C179O1535C181O1540C184O1559C194O1549C198O1575C200O1580C203O1599C207O1589C211O1611C213O1616C216O1645C226O1635C230O1673C232O1678C235O1707C245O1697C249O1740C254O1740C259O1750,,
code-creation,LazyCompile,10,228458,0x2779b46f120e,150,reset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/index.js:128:9,0x2779b46eb3b8,~
code-source-info,0x2779b46f120e,313,3508,3858,C0O3508C9O3517C16O3526C18O3525C30O3551C32O3550C44O3577C46O3576C50O3587C56O3603C63O3608C65O3607C69O3618C79O3618C84O3679C91O3684C94O3697C98O3693C103O3691C107O3731C114O3736C121O3752C124O3748C129O3746C133O3807C140O3812C144O3820C149O3857,,
code-creation,LazyCompile,10,228541,0x2779b46f1496,143,Yallist /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lru-cache/node_modules/yallist/yallist.js:7:18,0x2779b46edb38,~
code-source-info,0x2779b46f1496,314,102,517,C0O102C7O124C9O124C11O131C18O142C23O169C28O176C33O174C35O197C39O207C43O216C47O226C51O235C55O247C59O254C63O278C71O313C81O313C88O391C94O398C99O422C101O439C106O449C108O449C113O467C116O472C123O486C127O472C132O455C137O409C140O504C142O515,,
code-creation,LazyCompile,10,228583,0x2779b46f1816,82,getExportsForCircularRequire node:internal/modules/cjs/loader:733:38,0x3a1583d1f688,~
code-source-info,0x2779b46f1816,98,22181,22788,C0O22205C8O22223C11O22238C16O22223C24O22256C27O22284C32O22256C39O22297C41O22293C46O22588C51O22596C57O22674C62O22709C69O22718C72O22674C77O22778C81O22786,,
code-creation,Eval,10,228750,0x2779b46f1d96,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/satisfies.js:1:1,0x2779b46f1c30,~
script-source,316,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/satisfies.js,const Range = require('../classes/range')\nconst satisfies = (version\x2C range\x2C options) => {\n  try {\n    range = new Range(range\x2C options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n
code-source-info,0x2779b46f1d96,316,0,233,C0O0C4O233,,
code-creation,Function,10,228791,0x2779b46f1e8e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/satisfies.js:1:1,0x2779b46f1d00,~
code-source-info,0x2779b46f1e8e,316,0,233,C0O0C8O14C11O14C15O14C17O60C22O206C24O221C29O232,,
code-creation,Eval,10,229000,0x2779b46f24fe,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/to-comparators.js:1:1,0x2779b46f2398,~
script-source,317,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/to-comparators.js,const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range\x2C options) =>\n  new Range(range\x2C options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n
code-source-info,0x2779b46f24fe,317,0,268,C0O0C4O268,,
code-creation,Function,10,229041,0x2779b46f25f6,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/to-comparators.js:1:1,0x2779b46f2468,~
code-source-info,0x2779b46f25f6,317,0,268,C0O0C8O14C11O14C15O14C17O115C22O237C24O252C29O267,,
tick,0x101415930,229083,0,0x0,0,0x3a1583d0757f,0x172aed04fbf3,0x172aed04f8e0,0x172aed04f5a7,0x172aed04e9d9,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46f2601,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d313f,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,229208,0x2779b46f2c16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/max-satisfying.js:1:1,0x2779b46f2aa0,~
script-source,318,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/max-satisfying.js,const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions\x2C range\x2C options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range\x2C options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v\x2C range\x2C options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max\x2C v\x2C true)\n        max = v\n        maxSV = new SemVer(max\x2C options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n
code-source-info,0x2779b46f2c16,318,0,579,C0O0C4O579,,
code-creation,Function,10,229250,0x2779b46f2d16,42, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/max-satisfying.js:1:1,0x2779b46f2b80,~
code-source-info,0x2779b46f2d16,318,0,579,C0O0C11O15C14O15C18O15C20O58C23O58C27O58C29O109C34O548C36O563C41O578,,
scavenge,begin,0,325616,1643426345712
new,MemoryChunk,0x1a43afb80000,262144
new,MemoryChunk,0x324f23c80000,262144
new,MemoryChunk,0xbb714f40000,262144
scavenge,end,0,326340,1643426345713
code-creation,Eval,10,229791,0x2779b46f33b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-satisfying.js:1:1,0x2779b46f3240,~
script-source,319,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-satisfying.js,const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions\x2C range\x2C options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range\x2C options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v\x2C range\x2C options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min\x2C v\x2C true)\n        min = v\n        minSV = new SemVer(min\x2C options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n
code-source-info,0x2779b46f33b6,319,0,577,C0O0C4O577,,
code-creation,Function,10,229833,0x2779b46f34b6,42, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-satisfying.js:1:1,0x2779b46f3320,~
code-source-info,0x2779b46f34b6,319,0,577,C0O0C11O15C14O15C18O15C20O58C23O58C27O58C29O108C34O546C36O561C41O576,,
code-creation,Eval,10,230000,0x2779b46f3b16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-version.js:1:1,0x2779b46f3990,~
script-source,320,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-version.js,const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range\x2C loose) => {\n  range = new Range(range\x2C loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver\x2C setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver\x2C setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n
code-source-info,0x2779b46f3b16,320,0,1492,C0O0C4O1492,,
code-creation,Function,10,230083,0x2779b46f3c1e,54, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/min-version.js:1:1,0x2779b46f3a80,~
code-source-info,0x2779b46f3c1e,320,0,1492,C0O0C14O15C17O15C21O15C23O58C26O58C30O58C32O97C35O97C39O97C41O144C46O1464C48O1479C53O1491,,
tick,0x1014a7cc0,230333,0,0x0,0,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d316b,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,230333,0x2779b46f43a6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/valid.js:1:1,0x2779b46f4240,~
script-source,321,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/valid.js,const Range = require('../classes/range')\nconst validRange = (range\x2C options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range\x2C options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n
code-source-info,0x2779b46f43a6,321,0,312,C0O0C4O312,,
code-creation,Function,10,230375,0x2779b46f449e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/valid.js:1:1,0x2779b46f4310,~
code-source-info,0x2779b46f449e,321,0,312,C0O0C8O14C11O14C15O14C17O61C22O284C24O299C29O311,,
code-creation,Eval,10,230541,0x2779b46f4b66,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/outside.js:1:1,0x2779b46f4980,~
script-source,322,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/outside.js,const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version\x2C range\x2C hilo\x2C options) => {\n  version = new SemVer(version\x2C options)\n  range = new Range(range\x2C options)\n\n  let gtfn\x2C ltefn\x2C ltfn\x2C comp\x2C ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of "<" or ">"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version\x2C range\x2C options)) {\n    return false\n  }\n\n  // From now on\x2C variable terms are as if we're in "gtr" mode.\n  // but note that everything is flipped for the "ltr" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver\x2C high.semver\x2C options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver\x2C low.semver\x2C options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version\x2C low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version\x2C low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n
code-source-info,0x2779b46f4b66,322,0,2188,C0O0C4O2188,,
code-creation,Function,10,230666,0x2779b46f4c9e,126, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/outside.js:1:1,0x2779b46f4ad0,~
code-source-info,0x2779b46f4c9e,322,0,2188,C0O0C32O15C35O15C39O15C41O63C44O63C48O63C50O110C53O103C59O135C62O135C66O135C68O181C71O181C75O181C77O226C80O226C84O226C86O264C89O264C93O264C95O303C98O303C102O303C104O343C107O343C111O343C113O388C118O2163C120O2178C125O2187,,
code-creation,LazyCompile,10,230708,0x2779b46f5256,7,get ANY /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/comparator.js:4:18,0x2779b46e6588,~
code-source-info,0x2779b46f5256,311,108,131,C0O117C6O127,,
code-creation,Eval,10,231000,0x2779b46f5a6e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/gtr.js:1:1,0x2779b46f5908,~
script-source,323,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/gtr.js,// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version\x2C range\x2C options) => outside(version\x2C range\x2C '>'\x2C options)\nmodule.exports = gtr\n
code-source-info,0x2779b46f5a6e,323,0,217,C0O0C4O217,,
code-creation,Function,10,231041,0x2779b46f5b66,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/gtr.js:1:1,0x2779b46f59d8,~
code-source-info,0x2779b46f5b66,323,0,217,C0O0C8O96C11O96C15O96C17O129C22O196C24O211C29O216,,
code-creation,Eval,10,231166,0x2779b46f60de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/ltr.js:1:1,0x2779b46f5f78,~
script-source,324,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/ltr.js,const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version\x2C range\x2C options) => outside(version\x2C range\x2C '<'\x2C options)\nmodule.exports = ltr\n
code-source-info,0x2779b46f60de,324,0,213,C0O0C4O213,,
code-creation,Function,10,231208,0x2779b46f61d6,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/ltr.js:1:1,0x2779b46f6048,~
code-source-info,0x2779b46f61d6,324,0,213,C0O0C8O16C11O16C15O16C17O125C22O192C24O207C29O212,,
code-creation,Eval,10,231333,0x2779b46f6696,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/intersects.js:1:1,0x2779b46f6530,~
script-source,325,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/intersects.js,const Range = require('../classes/range')\nconst intersects = (r1\x2C r2\x2C options) => {\n  r1 = new Range(r1\x2C options)\n  r2 = new Range(r2\x2C options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n
code-source-info,0x2779b46f6696,325,0,201,C0O0C4O201,,
code-creation,Function,10,231333,0x2779b46f678e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/intersects.js:1:1,0x2779b46f6600,~
code-source-info,0x2779b46f678e,325,0,201,C0O0C8O14C11O14C15O14C17O61C22O173C24O188C29O200,,
code-creation,Eval,10,231583,0x2779b46f6d26,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/simplify.js:1:1,0x2779b46f6bb0,~
script-source,326,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/simplify.js,// given a set of versions and a range\x2C create a "simplified" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one\x2C return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions\x2C range\x2C options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a\x2C b) => compare(a\x2C b\x2C options))\n  for (const version of v) {\n    const included = satisfies(version\x2C range\x2C options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min\x2C prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min\x2C null])\n\n  const ranges = []\n  for (const [min\x2C max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n
code-source-info,0x2779b46f6d26,326,0,1287,C0O0C4O1287,,
code-creation,Function,10,231625,0x2779b46f6e5e,39, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/simplify.js:1:1,0x2779b46f6c90,~
code-source-info,0x2779b46f6e5e,326,0,1287,C0O0C11O224C14O224C18O224C20O277C23O277C27O277C29O312C33O327C38O1286,,
tick,0x100c56844,231666,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d31a2,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46d1661,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d30551b10d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183e7,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,231958,0x2779b46f795e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/subset.js:1:1,0x2779b46f7788,~
script-source,327,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/subset.js,const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1\x2C r2\x2C ...` is a null set\x2C OR\n// - Every simple range `r1\x2C r2\x2C ...` which is not a null set is a subset of\n//   some `R1\x2C R2\x2C ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator\x2C return true\n//   - Else if in prerelease mode\x2C return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode\x2C return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one\x2C return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT\x2C and GT.semver > LT.semver\x2C return true (null set)\n// - If any C is a = range\x2C and GT or LT are set\x2C return false\n// - If EQ\n//   - If GT\x2C and EQ does not satisfy GT\x2C return true (null set)\n//   - If LT\x2C and EQ does not satisfy LT\x2C return true (null set)\n//   - If EQ satisfies every C\x2C return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C\x2C return false\n//   - If GT is >=\x2C and GT.semver does not satisfy every C\x2C return false\n//   - If GT.semver has a prerelease\x2C and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple\x2C return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C\x2C return false\n//   - If LT is <=\x2C and LT.semver does not satisfy every C\x2C return false\n//   - If GT.semver has a prerelease\x2C and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple\x2C return false\n// - Else return true\n\nconst subset = (sub\x2C dom\x2C options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub\x2C options)\n  dom = new Range(dom\x2C options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub\x2C simpleDom\x2C options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything\x2C but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range\x2C\n    // then we know this isn't a subset\x2C but if EVERY simple range was null\x2C\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub\x2C dom\x2C options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt\x2C lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt\x2C c\x2C options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt\x2C c\x2C options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver\x2C lt.semver\x2C options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq\x2C String(gt)\x2C options))\n      return null\n\n    if (lt && !satisfies(eq\x2C String(lt)\x2C options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq\x2C String(c)\x2C options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher\x2C lower\n  let hasDomLT\x2C hasDomGT\n  // if the subset has a prerelease\x2C we need a comparator in the superset\n  // with the same tuple and a prerelease\x2C or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt\x2C c\x2C options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver\x2C String(c)\x2C options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt\x2C c\x2C options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver\x2C String(c)\x2C options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >\x2C and nothing in the dom\x2C then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg\x2C >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple\x2C but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0\x2C\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a\x2C b\x2C options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver\x2C b.semver\x2C options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a\x2C b\x2C options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver\x2C b.semver\x2C options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n
code-source-info,0x2779b46f795e,327,0,7224,C0O0C4O7224,,
code-creation,Function,10,232250,0x2779b46f7b7e,105, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/ranges/subset.js:1:1,0x2779b46f78c8,~
code-source-info,0x2779b46f7b7e,327,0,7224,C0O0C29O14C32O14C36O14C38O64C41O64C45O64C47O116C50O108C56O145C59O145C63O145C65O198C68O198C72O198C74O1996C79O2726C83O2726C85O6751C89O6751C91O7000C95O7000C97O7200C99O7215C104O7223,,
code-creation,LazyCompile,10,232333,0x2779b46f86de,25,gte /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/gte.js:2:13,0x2779b46e4238,~
code-source-info,0x2779b46f86de,307,49,91,C0O87C14O66C21O87C24O91,,
code-creation,LazyCompile,10,232333,0x2779b46f87e6,49,compare /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/functions/compare.js:2:17,0x2779b46df6b8,~
code-source-info,0x2779b46f87e6,294,60,129,C0O100C13O79C19O100C26O112C37O108C43O100C48O129,,
code-creation,LazyCompile,10,232416,0x2779b46f8b4e,551,SemVer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:8:15,0x2779b46da4e0,~
code-source-info,0x2779b46f8b4e
code-creation,LazyCompile,10,232458,0x2779b46f90d6,70,parseOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/parse-options.js:4:22,0x2779b46dbd08,~
code-source-info,0x2779b46f90d6,286,186,370,C0O186C9O199C22O232C32O267C35O272C45O272C51O295C63O296C69O370,,
code-creation,LazyCompile,10,232583,0x2779b46f92ee,92,format /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:79:10,0x2779b46da530,~
code-source-info,0x2779b46f92ee,285,2204,2393,C0O2236C12O2250C27O2264C35O2226C39O2285C44O2296C50O2312C58O2337C63O2348C71O2348C83O2325C87O2382C91O2389,,
code-creation,RegExp,3,232666,0x107510380,6376,^v?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][a-zA-Z0-9-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][a-zA-Z0-9-]*))*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$
code-creation,LazyCompile,10,232708,0x2779b46f94ee,115,compare /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:91:11,0x2779b46da5d0,~
code-source-info,0x2779b46f94ee,285,2450,2832,C0O2464C10O2493C15O2507C23O2464C28O2527C30O2550C32O2539C37O2567C43O2615C47O2606C52O2634C53O2642C54O2657C59O2688C69O2665C76O2718C81O2735C85O2726C90O2752C91O2760C92O2784C97O2784C104O2811C109O2811C114O2828,,
code-creation,LazyCompile,10,232750,0x2779b46f96be,102,compareMain /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/classes/semver.js:107:15,0x2779b46da620,~
code-source-info,0x2779b46f96be,285,2848,3127,C0O2862C2O2885C4O2874C9O2902C14O2933C24O2910C31O2953C38O2992C43O3005C48O2968C59O3021C62O3045C67O3058C72O3021C83O3074C86O3098C91O3111C96O3074C101O3123,,
code-creation,LazyCompile,10,232750,0x2779b46f9846,100,compareIdentifiers /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/node_modules/semver/internal/identifiers.js:2:28,0x2779b46dc390,~
code-source-info,0x2779b46f9846,287,54,278,C0O81C5O89C10O89C16O112C21O120C26O120C32O131C38O143C40O155C42O159C46O166C48O170C52O180C54O189C64O206C68O215C76O233C80O242C88O260C99O276,,
code-creation,RegExp,3,232791,0x107511ce0,1032,^[0-9]+$
tick,0x10111c410,232833,0,0x0,0,0x0,0x1013f1668,0x172aed050ff7,0x172aed050a93,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x17d3055183f0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,233041,0x2779b46f9cd6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/noop.js:1:1,0x2779b46f9b80,~
script-source,328,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/noop.js,/* istanbul ignore next */\nmodule.exports = function noop () {}\n
code-source-info,0x2779b46f9cd6,328,0,64,C0O0C4O64,,
code-creation,Function,10,233083,0x2779b46f9dbe,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/noop.js:1:1,0x2779b46f9c40,~
code-source-info,0x2779b46f9dbe,328,0,64,C0O27C4O42C9O63,,
code-creation,Eval,10,233250,0x2779b46fa246,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/runTracker.js:1:1,0x2779b46fa0c0,~
script-source,329,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/runTracker.js,'use strict'\n\nconst EE = require('events').EventEmitter\nconst run = require('./run')\nconst noop = require('./noop')\n\nfunction runTracker (opts\x2C tracker\x2C cb) {\n  cb = cb || noop\n  tracker = tracker || new EE()\n\n  run(opts\x2C tracker\x2C cb)\n\n  return tracker\n}\n\nmodule.exports = runTracker\n
code-source-info,0x2779b46fa246,329,0,284,C0O0C4O284,,
code-creation,Function,10,233291,0x2779b46fa356,59, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/runTracker.js:1:1,0x2779b46fa1b0,~
code-source-info,0x2779b46fa356,329,0,284,C0O0C19O25C22O25C27O42C31O25C33O68C36O68C40O68C42O98C45O98C49O98C51O256C53O271C58O283,,
code-creation,Eval,10,233625,0x2779b46fac26,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:1:1,0x2779b46faa30,~
script-source,330,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js,'use strict'\n\nconst URL = require('url')\nconst reInterval = require('reinterval')\nconst EE = require('events').EventEmitter\nconst Client = require('./httpClient')\nconst { isMainThread } = require('./worker_threads')\nconst { ofURL } = require('./url')\nconst aggregateResult = require('./aggregateResult')\nconst { getHistograms\x2C encodeHist } = require('./histUtil')\n\nconst defaults = {\n  harRequests: new Map()\n}\n\nfunction run (opts\x2C tracker\x2C cb) {\n  opts = Object.assign({}\x2C defaults\x2C opts)\n  tracker = tracker || new EE()\n\n  const histograms = getHistograms(opts.histograms)\n  const { latencies\x2C requests\x2C throughput } = histograms\n\n  const statusCodes = [\n    0\x2C // 1xx\n    0\x2C // 2xx\n    0\x2C // 3xx\n    0\x2C // 4xx\n    0 // 5xx\n  ]\n\n  const statusCodeStats = {}\n\n  if (opts.overallRate && (opts.overallRate < opts.connections)) opts.connections = opts.overallRate\n\n  let counter = 0\n  let bytes = 0\n  let errors = 0\n  let timeouts = 0\n  let mismatches = 0\n  let totalBytes = 0\n  let totalRequests = 0\n  let totalCompletedRequests = 0\n  let resets = 0\n  const amount = opts.amount\n  let stop = false\n  let restart = true\n  let numRunning = opts.connections\n  let startTime = Date.now()\n  const includeErrorStats = !opts.excludeErrorStats\n\n  opts.url = ofURL(opts.url).map((url) => {\n    if (url.indexOf('http') !== 0) return 'http://' + url\n    return url\n  })\n\n  const urls = ofURL(opts.url\x2C true).map(url => {\n    if (url.indexOf('http') !== 0) url = 'http://' + url\n    url = URL.parse(url) // eslint-disable-line node/no-deprecated-api\n\n    // copy over fields so that the client\n    // performs the right HTTP requests\n    url.pipelining = opts.pipelining\n    url.method = opts.method\n    url.body = opts.form ? opts.form.getBuffer() : opts.body\n    url.headers = opts.form ? Object.assign({}\x2C opts.headers\x2C opts.form.getHeaders()) : opts.headers\n    url.setupClient = opts.setupClient\n    url.timeout = opts.timeout\n    url.origin = `${url.protocol}//${url.host}`\n    // only keep requests for that origin\x2C or default to requests from options\n    url.requests = opts.harRequests.get(url.origin) || opts.requests\n    url.reconnectRate = opts.reconnectRate\n    url.responseMax = amount || opts.maxConnectionRequests || opts.maxOverallRequests\n    url.rate = opts.connectionRate || opts.overallRate\n    url.idReplacement = opts.idReplacement\n    url.socketPath = opts.socketPath\n    url.servername = opts.servername\n    url.expectBody = opts.expectBody\n\n    return url\n  })\n\n  let stopTimer\n  let clients = []\n  initialiseClients(clients)\n\n  if (!amount) {\n    stopTimer = setTimeout(() => {\n      stop = true\n    }\x2C opts.duration * 1000)\n  }\n\n  const interval = reInterval(tickInterval\x2C 1000)\n\n  // put the start emit in a setImmediate so trackers can be added\x2C etc.\n  setImmediate(() => { tracker.emit('start') })\n\n  function tickInterval () {\n    totalBytes += bytes\n    totalCompletedRequests += counter\n    requests.recordValue(counter)\n    throughput.recordValue(bytes)\n    tracker.emit('tick'\x2C { counter\x2C bytes })\n    counter = 0\n    bytes = 0\n\n    if (stop) {\n      if (stopTimer) clearTimeout(stopTimer)\n      interval.clear()\n      clients.forEach((client) => client.destroy())\n      const result = {\n        latencies: encodeHist(latencies)\x2C\n        requests: encodeHist(requests)\x2C\n        throughput: encodeHist(throughput)\x2C\n        totalCompletedRequests\x2C\n        totalRequests\x2C\n        totalBytes\x2C\n        errors: errors\x2C\n        timeouts: timeouts\x2C\n        mismatches: mismatches\x2C\n        non2xx: statusCodes[0] + statusCodes[2] + statusCodes[3] + statusCodes[4]\x2C\n        statusCodeStats\x2C\n        resets: resets\x2C\n        duration: Math.round((Date.now() - startTime) / 10) / 100\x2C\n        start: new Date(startTime)\x2C\n        finish: new Date()\n      }\n\n      statusCodes.forEach((code\x2C index) => { result[(index + 1) + 'xx'] = code })\n\n      const resultObj = isMainThread ? aggregateResult(result\x2C opts\x2C histograms) : result\n\n      if (opts.forever) {\n        // we don't call callback when in forever mode\x2C so this is the\n        // only place we could notify user when each round finishes\n        tracker.emit('done'\x2C resultObj)\n      } else {\n        latencies.destroy()\n        requests.destroy()\n        throughput.destroy()\n        cb(null\x2C resultObj)\n      }\n\n      const restartFn = () => {\n        stop = false\n        stopTimer = setTimeout(() => {\n          stop = true\n        }\x2C opts.duration * 1000)\n        errors = 0\n        timeouts = 0\n        mismatches = 0\n        totalBytes = 0\n        totalRequests = 0\n        totalCompletedRequests = 0\n        resets = 0\n        statusCodes.fill(0)\n        requests.reset()\n        latencies.reset()\n        throughput.reset()\n        startTime = Date.now()\n\n        // reinitialise clients\n        if (opts.overallRate && (opts.overallRate < opts.connections)) opts.connections = opts.overallRate\n        clients = []\n        initialiseClients(clients)\n\n        interval.reschedule(1000)\n        tracker.emit('start')\n      }\n\n      // the restart function\n      setImmediate(() => {\n        if (opts.forever && restart && isMainThread) restartFn()\n      })\n    }\n  }\n\n  function initialiseClients (clients) {\n    for (let i = 0; i < opts.connections; i++) {\n      const url = urls[i % urls.length]\n      if (!amount && !opts.maxConnectionRequests && opts.maxOverallRequests) {\n        url.responseMax = distributeNums(opts.maxOverallRequests\x2C i)\n      }\n      if (amount) {\n        url.responseMax = distributeNums(amount\x2C i)\n        if (url.responseMax === 0) {\n          throw Error('connections cannot be greater than amount')\n        }\n      }\n      if (!opts.connectionRate && opts.overallRate) {\n        url.rate = distributeNums(opts.overallRate\x2C i)\n      }\n      if (opts.initialContext) {\n        url.initialContext = opts.initialContext\n      }\n\n      if (opts.tlsOptions) {\n        url.tlsOptions = opts.tlsOptions\n      }\n\n      const client = new Client(url)\n      client.on('response'\x2C onResponse)\n      client.on('connError'\x2C onError)\n      client.on('mismatch'\x2C onExpectMismatch)\n      client.on('reset'\x2C () => { resets++ })\n      client.on('timeout'\x2C onTimeout)\n      client.on('request'\x2C () => { totalRequests++ })\n      client.on('done'\x2C onDone)\n      clients.push(client)\n\n      // we will miss the initial request emits because the client emits request on construction\n      totalRequests += url.pipelining < url.rate ? url.rate : url.pipelining\n    }\n\n    function distributeNums (x\x2C i) {\n      return (Math.floor(x / opts.connections) + (((i + 1) <= (x % opts.connections)) ? 1 : 0))\n    }\n\n    function onResponse (statusCode\x2C resBytes\x2C responseTime\x2C rate) {\n      tracker.emit('response'\x2C this\x2C statusCode\x2C resBytes\x2C responseTime)\n      const codeIndex = Math.floor(parseInt(statusCode) / 100) - 1\n      statusCodes[codeIndex] += 1\n\n      if (!statusCodeStats[statusCode]) {\n        statusCodeStats[statusCode] = { count: 1 }\n      } else {\n        statusCodeStats[statusCode].count++\n      }\n\n      // only recordValue 2xx latencies\n      if (codeIndex === 1 || includeErrorStats) {\n        if (rate && !opts.ignoreCoordinatedOmission) {\n          latencies.recordValueWithExpectedInterval(responseTime\x2C Math.ceil(1 / rate))\n        } else {\n          latencies.recordValue(responseTime)\n        }\n      }\n      if (codeIndex === 1 || includeErrorStats) bytes += resBytes\n      counter++\n    }\n\n    function onError (error) {\n      for (let i = 0; i < opts.pipelining; i++) tracker.emit('reqError'\x2C error)\n      errors++\n      if (opts.debug) console.error(error)\n      if (opts.bailout && errors >= opts.bailout) stop = true\n    }\n\n    function onExpectMismatch (bpdyStr) {\n      for (let i = 0; i < opts.pipelining; i++) {\n        tracker.emit('reqMismatch'\x2C bpdyStr)\n      }\n\n      mismatches++\n      if (opts.bailout && mismatches >= opts.bailout) stop = true\n    }\n\n    // treat a timeout as a special type of error\n    function onTimeout () {\n      const error = new Error('request timed out')\n      for (let i = 0; i < opts.pipelining; i++) tracker.emit('reqError'\x2C error)\n      errors++\n      timeouts++\n      if (opts.bailout && errors >= opts.bailout) stop = true\n    }\n\n    function onDone () {\n      if (!--numRunning) stop = true\n    }\n  }\n\n  tracker.stop = () => {\n    stop = true\n    restart = false\n  }\n\n  return tracker\n} // run\n\nmodule.exports = run\n
code-source-info,0x2779b46fac26,330,0,8370,C0O0C4O8370,,
code-creation,Function,10,233958,0x2779b46fae46,168, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:1:1,0x2779b46fab90,~
code-source-info,0x2779b46fae46,330,0,8370,C0O0C40O26C43O26C47O26C49O60C52O60C56O60C58O93C61O93C66O110C70O93C72O139C75O139C79O139C81O188C84O188C89O171C95O234C98O234C103O224C109O275C112O275C116O275C118O342C121O342C126O312C132O327C138O382C143O403C147O399C158O382C160O8349C162O8364C167O8369,,
tick,0x1a3575468,234083,0,0x0,0,0x1013ef5b8,0x1013f1668,0x172aed050ff7,0x172aed050ac9,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46fae7a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,234291,0x2779b46fc1ee,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js:1:1,0x2779b46fc088,~
script-source,331,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js,'use strict'\n\nfunction ReInterval (callback\x2C interval\x2C args) {\n  var self = this;\n\n  this._callback = callback;\n  this._args = args;\n\n  this._interval = setInterval(callback\x2C interval\x2C this._args);\n\n  this.reschedule = function (interval) {\n    // if no interval entered\x2C use the interval passed in on creation\n    if (!interval)\n      interval = self._interval;\n\n    if (self._interval)\n      clearInterval(self._interval);\n    self._interval = setInterval(self._callback\x2C interval\x2C self._args);\n  };\n\n  this.clear = function () {\n    if (self._interval) {\n      clearInterval(self._interval);\n      self._interval = undefined;\n    }\n  };\n  \n  this.destroy = function () {\n    if (self._interval) {\n      clearInterval(self._interval);\n    }\n    self._callback = undefined;\n    self._interval = undefined;\n    self._args = undefined;\n  };\n}\n\nfunction reInterval () {\n  if (typeof arguments[0] !== 'function')\n    throw new Error('callback needed');\n  if (typeof arguments[1] !== 'number')\n    throw new Error('interval needed');\n\n  var args;\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2];\n    }\n  }\n\n  return new ReInterval(arguments[0]\x2C arguments[1]\x2C args);\n}\n\nmodule.exports = reInterval;\n
code-source-info,0x2779b46fc1ee,331,0,1299,C0O0C4O1299,,
code-creation,Function,10,234333,0x2779b46fc366,24, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js:1:1,0x2779b46fc158,~
code-source-info,0x2779b46fc366,331,0,1299,C0O0C16O1270C18O1285C23O1298,,
code-creation,Eval,10,234625,0x2779b46fcd2e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:1:1,0x2779b46fcb48,~
script-source,332,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js,'use strict'\n\nconst inherits = require('util').inherits\nconst EE = require('events').EventEmitter\nconst net = require('net')\nconst tls = require('tls')\nconst retimer = require('retimer')\nconst HTTPParser = require('http-parser-js').HTTPParser\nconst RequestIterator = require('./requestIterator')\nconst noop = require('./noop')\nconst clone = require('lodash.clonedeep')\nconst PipelinedRequestsQueue = require('./pipelinedRequestsQueue')\n\nfunction Client (opts) {\n  if (!(this instanceof Client)) {\n    return new Client(opts)\n  }\n\n  this.opts = clone(opts)\n\n  this.opts.setupClient = this.opts.setupClient || noop\n  this.opts.pipelining = this.opts.pipelining || 1\n  this.opts.port = this.opts.port || 80\n  this.opts.expectBody = this.opts.expectBody || null\n  this.opts.tlsOptions = this.opts.tlsOptions || {}\n  this.timeout = (this.opts.timeout || 10) * 1000\n  this.ipc = !!this.opts.socketPath\n  this.secure = this.opts.protocol === 'https:'\n  this.auth = this.opts.auth || null\n\n  if (this.secure && this.opts.port === 80) {\n    this.opts.port = 443\n  }\n\n  this.parser = new HTTPParser(HTTPParser.RESPONSE)\n  this.requestIterator = new RequestIterator(this.opts)\n\n  this.reqsMade = 0\n\n  // used for request limiting\n  this.responseMax = this.opts.responseMax\n\n  // used for rate limiting\n  this.reqsMadeThisSecond = 0\n  this.rate = this.opts.rate\n\n  // used for forcing reconnects\n  this.reconnectRate = this.opts.reconnectRate\n\n  this.pipelinedRequests = new PipelinedRequestsQueue()\n  this.destroyed = false\n\n  this.opts.setupClient(this)\n\n  const handleTimeout = () => {\n    this._destroyConnection()\n\n    this.timeoutTicker.reschedule(this.timeout)\n\n    this._connect()\n\n    for (let i = 0; i < this.opts.pipelining; i++) {\n      this.emit('timeout')\n    }\n  }\n\n  if (this.rate) {\n    this.rateInterval = setInterval(() => {\n      this.reqsMadeThisSecond = 0\n      if (this.paused) this._doRequest(this.cer)\n      this.paused = false\n    }\x2C 1000)\n  }\n\n  this.timeoutTicker = retimer(handleTimeout\x2C this.timeout)\n  this.parser[HTTPParser.kOnHeaders] = () => {}\n  this.parser[HTTPParser.kOnHeadersComplete] = (opts) => {\n    this.emit('headers'\x2C opts)\n    this.pipelinedRequests.setHeaders(opts)\n  }\n\n  this.parser[HTTPParser.kOnBody] = (body\x2C start\x2C len) => {\n    this.pipelinedRequests.addBody(body.slice(start\x2C start + len))\n    this.emit('body'\x2C body)\n  }\n\n  this.parser[HTTPParser.kOnMessageComplete] = () => {\n    const resp = this.pipelinedRequests.terminateRequest()\n\n    if (!this.destroyed && this.reconnectRate && this.reqsMade % this.reconnectRate === 0) {\n      return this._resetConnection()\n    }\n    if (!this.destroyed) {\n      if (this.opts.expectBody && this.opts.expectBody !== resp.body) {\n        return this.emit('mismatch'\x2C resp.body)\n      }\n\n      this.requestIterator.recordBody(resp.req\x2C resp.headers.statusCode\x2C resp.body\x2C resp.headers.headers)\n\n      this.emit('response'\x2C resp.headers.statusCode\x2C resp.bytes\x2C resp.duration\x2C this.rate)\n\n      this._doRequest()\n    }\n  }\n\n  this._connect()\n}\n\ninherits(Client\x2C EE)\n\nClient.prototype._connect = function () {\n  if (this.secure) {\n    let servername\n    if (this.opts.servername) {\n      servername = this.opts.servername\n    } else if (!net.isIP(this.opts.hostname)) {\n      servername = this.opts.hostname\n    }\n\n    if (this.ipc) {\n      this.conn = tls.connect(this.opts.socketPath\x2C { ...this.opts.tlsOptions\x2C rejectUnauthorized: false })\n    } else {\n      this.conn = tls.connect(this.opts.port\x2C this.opts.hostname\x2C { ...this.opts.tlsOptions\x2C rejectUnauthorized: false\x2C servername })\n    }\n  } else {\n    if (this.ipc) {\n      this.conn = net.connect(this.opts.socketPath)\n    } else {\n      this.conn = net.connect(this.opts.port\x2C this.opts.hostname)\n    }\n  }\n\n  this.conn.on('error'\x2C (error) => {\n    this.emit('connError'\x2C error)\n    if (!this.destroyed) this._connect()\n  })\n\n  this.conn.on('data'\x2C (chunk) => {\n    this.pipelinedRequests.addByteCount(chunk.length)\n    this.parser.execute(chunk)\n  })\n\n  this.conn.on('end'\x2C () => {\n    if (!this.destroyed) this._connect()\n  })\n\n  for (let i = 0; i < this.opts.pipelining; i++) {\n    this._doRequest()\n  }\n}\n\nClient.prototype._doRequest = function () {\n  if (!this.rate || (this.rate && this.reqsMadeThisSecond++ < this.rate)) {\n    if (!this.destroyed && this.responseMax && this.reqsMade >= this.responseMax) {\n      return this.destroy()\n    }\n    this.emit('request')\n    if (this.reqsMade > 0) {\n      this.requestIterator.nextRequest()\n      if (this.requestIterator.resetted) {\n        this.emit('reset')\n      }\n    }\n    this.pipelinedRequests.insertRequest(this.requestIterator.currentRequest)\n    this.conn.write(this.getRequestBuffer())\n    this.timeoutTicker.reschedule(this.timeout)\n    this.reqsMade++\n  } else {\n    this.paused = true\n  }\n}\n\nClient.prototype._resetConnection = function () {\n  this._destroyConnection()\n  this._connect()\n}\n\nClient.prototype._destroyConnection = function () {\n  this.conn.removeAllListeners('error')\n  this.conn.removeAllListeners('end')\n  this.conn.on('error'\x2C () => {})\n  this.conn.destroy()\n  this.pipelinedRequests.clear()\n}\n\nClient.prototype.destroy = function () {\n  if (!this.destroyed) {\n    this.destroyed = true\n    this.timeoutTicker.clear()\n    if (this.rate) clearInterval(this.rateInterval)\n    this.emit('done')\n    this._destroyConnection()\n  }\n}\n\nClient.prototype.getRequestBuffer = function () {\n  return this.requestIterator.currentRequest.requestBuffer\n}\n\nClient.prototype.setHeaders = function (newHeaders) {\n  this._okayToUpdateCheck()\n  this.requestIterator.setHeaders(newHeaders)\n}\n\nClient.prototype.setBody = function (newBody) {\n  this._okayToUpdateCheck()\n  this.requestIterator.setBody(newBody)\n}\n\nClient.prototype.setHeadersAndBody = function (newHeaders\x2C newBody) {\n  this._okayToUpdateCheck()\n  this.requestIterator.setHeadersAndBody(newHeaders\x2C newBody)\n}\n\nClient.prototype.setRequest = function (newRequest) {\n  this._okayToUpdateCheck()\n  this.requestIterator.setRequest(newRequest)\n}\n\nClient.prototype.setRequests = function (newRequests) {\n  this._okayToUpdateCheck()\n  this.requestIterator.setRequests(newRequests)\n}\n\nClient.prototype._okayToUpdateCheck = function () {\n  if (this.opts.pipelining > 1) {\n    throw new Error('cannot update requests when the piplining factor is greater than 1')\n  }\n}\n\nmodule.exports = Client\n
code-source-info,0x2779b46fcd2e,332,0,6355,C0O0C4O6355,,
code-creation,Function,10,234875,0x2779b46fd5fe,346, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:1:1,0x2779b46fcc98,~
code-source-info,0x2779b46fd5fe,332,0,6355,C0O0C35O31C38O31C43O46C48O67C51O67C56O84C61O110C64O110C68O110C70O137C73O137C77O137C79O168C82O168C86O168C88O206C91O206C96O231C100O206C102O267C105O267C109O267C111O309C114O309C118O309C120O341C123O341C127O341C129O400C132O400C136O400C138O3028C141O3028C146O3050C149O3057C158O3076C162O4153C165O4160C174O4181C178O4802C181O4809C190O4836C194O4901C197O4908C206O4937C210O5123C213O5130C222O5148C226O5357C229O5364C238O5391C242O5469C245O5476C254O5497C258O5600C261O5607C270O5625C274O5719C277O5726C286O5754C290O5882C293O5889C302O5910C306O6013C309O6020C318O6042C322O6148C325O6155C334O6184C338O6331C340O6346C345O6354,,
code-creation,LazyCompile,10,234958,0x2779b46fe4c6,17,get node:tls:108:8,0xfcf81415330,~
code-source-info,0x2779b46fe4c6,243,3744,3895,C0O3815C6O3838C9O3838C12O3867C16O3891,,
code-creation,LazyCompile,10,235000,0x2779b46fefce,29,cacheRootCertificates node:tls:101:31,0xfcf81415100,~
code-source-info,0x2779b46fefce,243,3576,3640,C0O3583C7O3615C10O3615C14O3602C21O3600C28O3639,,
tick,0x100f28bc8,235333,1,0x100cd50c4,5,0x0,0x172aed051007,0x172aed051281,0x172aed051155,0x172aed050b44,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0x2779b46fd650,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,235458,0x2779b46ff7a6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:1:1,0x2779b46ff630,~
script-source,333,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js,'use strict'\n\nconst getTime = require('./time')\n\nclass Retimer {\n  constructor (callback\x2C timeout\x2C args) {\n    const that = this\n\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._args = args\n    this._triggered = false\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started)\n        that._schedule(that._scheduled)\n      } else {\n        that._triggered = true\n        callback.apply(null\x2C that._args)\n      }\n    }\n\n    this._timer = setTimeout(this._timerWrapper\x2C timeout)\n  }\n\n  reschedule (timeout) {\n    if (!timeout) {\n      timeout = this._scheduled\n    }\n    const now = getTime()\n    if ((now + timeout) - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer)\n      this._schedule(timeout)\n    } else if (!this._triggered) {\n      this._started = now\n      this._rescheduled = timeout\n    } else {\n      this._schedule(timeout)\n    }\n  }\n\n  _schedule (timeout) {\n    this._triggered = false\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._timer = setTimeout(this._timerWrapper\x2C timeout)\n  }\n\n  clear () {\n    clearTimeout(this._timer)\n  }\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  let args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    /* eslint-disable no-var */\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0]\x2C arguments[1]\x2C args)\n}\n\nmodule.exports = retimer\n
code-source-info,0x2779b46ff7a6,333,0,1736,C0O0C4O1736,,
code-creation,Function,10,235541,0x2779b46ffb86,71, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:1:1,0x2779b46ff710,~
code-source-info,0x2779b46ffb86,333,0,1736,C0O0C16O30C19O30C23O30C61O49C63O1711C65O1726C70O1735,,
code-creation,Eval,10,235750,0x395d7b335f5e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/time.js:1:1,0x395d7b335e08,~
script-source,334,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/time.js,'use strict'\n\nmodule.exports = function getTime () {\n  const t = process.hrtime()\n  return Math.floor(t[0] * 1000 + t[1] / 1000000)\n}\n
code-source-info,0x395d7b335f5e,334,0,134,C0O0C4O134,,
code-creation,Function,10,235750,0x395d7b336046,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/time.js:1:1,0x395d7b335ec8,~
code-source-info,0x395d7b336046,334,0,134,C0O14C4O29C9O133,,
code-creation,Eval,10,236208,0x395d7b33723e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:1:1,0x395d7b336fe8,~
script-source,335,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js,/*jshint node:true */\n\nvar assert = require('assert');\n\nexports.HTTPParser = HTTPParser;\nfunction HTTPParser(type) {\n  assert.ok(type === HTTPParser.REQUEST || type === HTTPParser.RESPONSE || type === undefined);\n  if (type === undefined) {\n    // Node v12+\n  } else {\n    this.initialize(type);\n  }\n}\nHTTPParser.prototype.initialize = function (type\x2C async_resource) {\n  assert.ok(type === HTTPParser.REQUEST || type === HTTPParser.RESPONSE);\n  this.type = type;\n  this.state = type + '_LINE';\n  this.info = {\n    headers: []\x2C\n    upgrade: false\n  };\n  this.trailers = [];\n  this.line = '';\n  this.isChunked = false;\n  this.connection = '';\n  this.headerSize = 0; // for preventing too big headers\n  this.body_bytes = null;\n  this.isUserCall = false;\n  this.hadError = false;\n};\n\nHTTPParser.encoding = 'ascii';\nHTTPParser.maxHeaderSize = 80 * 1024; // maxHeaderSize (in bytes) is configurable\x2C but 80kb by default;\nHTTPParser.REQUEST = 'REQUEST';\nHTTPParser.RESPONSE = 'RESPONSE';\n\n// Note: *not* starting with kOnHeaders=0 line the Node parser\x2C because any\n//   newly added constants (kOnTimeout in Node v12.19.0) will overwrite 0!\nvar kOnHeaders = HTTPParser.kOnHeaders = 1;\nvar kOnHeadersComplete = HTTPParser.kOnHeadersComplete = 2;\nvar kOnBody = HTTPParser.kOnBody = 3;\nvar kOnMessageComplete = HTTPParser.kOnMessageComplete = 4;\n\n// Some handler stubs\x2C needed for compatibility\nHTTPParser.prototype[kOnHeaders] =\nHTTPParser.prototype[kOnHeadersComplete] =\nHTTPParser.prototype[kOnBody] =\nHTTPParser.prototype[kOnMessageComplete] = function () {};\n\nvar compatMode0_12 = true;\nObject.defineProperty(HTTPParser\x2C 'kOnExecute'\x2C {\n    get: function () {\n      // hack for backward compatibility\n      compatMode0_12 = false;\n      return 99;\n    }\n  });\n\nvar methods = exports.methods = HTTPParser.methods = [\n  'DELETE'\x2C\n  'GET'\x2C\n  'HEAD'\x2C\n  'POST'\x2C\n  'PUT'\x2C\n  'CONNECT'\x2C\n  'OPTIONS'\x2C\n  'TRACE'\x2C\n  'COPY'\x2C\n  'LOCK'\x2C\n  'MKCOL'\x2C\n  'MOVE'\x2C\n  'PROPFIND'\x2C\n  'PROPPATCH'\x2C\n  'SEARCH'\x2C\n  'UNLOCK'\x2C\n  'BIND'\x2C\n  'REBIND'\x2C\n  'UNBIND'\x2C\n  'ACL'\x2C\n  'REPORT'\x2C\n  'MKACTIVITY'\x2C\n  'CHECKOUT'\x2C\n  'MERGE'\x2C\n  'M-SEARCH'\x2C\n  'NOTIFY'\x2C\n  'SUBSCRIBE'\x2C\n  'UNSUBSCRIBE'\x2C\n  'PATCH'\x2C\n  'PURGE'\x2C\n  'MKCALENDAR'\x2C\n  'LINK'\x2C\n  'UNLINK'\n];\nvar method_connect = methods.indexOf('CONNECT');\nHTTPParser.prototype.reinitialize = HTTPParser;\nHTTPParser.prototype.close =\nHTTPParser.prototype.pause =\nHTTPParser.prototype.resume =\nHTTPParser.prototype.free = function () {};\nHTTPParser.prototype._compatMode0_11 = false;\nHTTPParser.prototype.getAsyncId = function() { return 0; };\n\nvar headerState = {\n  REQUEST_LINE: true\x2C\n  RESPONSE_LINE: true\x2C\n  HEADER: true\n};\nHTTPParser.prototype.execute = function (chunk\x2C start\x2C length) {\n  if (!(this instanceof HTTPParser)) {\n    throw new TypeError('not a HTTPParser');\n  }\n\n  // backward compat to node < 0.11.4\n  // Note: the start and length params were removed in newer version\n  start = start || 0;\n  length = typeof length === 'number' ? length : chunk.length;\n\n  this.chunk = chunk;\n  this.offset = start;\n  var end = this.end = start + length;\n  try {\n    while (this.offset < end) {\n      if (this[this.state]()) {\n        break;\n      }\n    }\n  } catch (err) {\n    if (this.isUserCall) {\n      throw err;\n    }\n    this.hadError = true;\n    return err;\n  }\n  this.chunk = null;\n  length = this.offset - start;\n  if (headerState[this.state]) {\n    this.headerSize += length;\n    if (this.headerSize > HTTPParser.maxHeaderSize) {\n      return new Error('max header size exceeded');\n    }\n  }\n  return length;\n};\n\nvar stateFinishAllowed = {\n  REQUEST_LINE: true\x2C\n  RESPONSE_LINE: true\x2C\n  BODY_RAW: true\n};\nHTTPParser.prototype.finish = function () {\n  if (this.hadError) {\n    return;\n  }\n  if (!stateFinishAllowed[this.state]) {\n    return new Error('invalid state for EOF');\n  }\n  if (this.state === 'BODY_RAW') {\n    this.userCall()(this[kOnMessageComplete]());\n  }\n};\n\n// These three methods are used for an internal speed optimization\x2C and it also\n// works if theses are noops. Basically consume() asks us to read the bytes\n// ourselves\x2C but if we don't do it we get them through execute().\nHTTPParser.prototype.consume =\nHTTPParser.prototype.unconsume =\nHTTPParser.prototype.getCurrentBuffer = function () {};\n\n//For correct error handling - see HTTPParser#execute\n//Usage: this.userCall()(userFunction('arg'));\nHTTPParser.prototype.userCall = function () {\n  this.isUserCall = true;\n  var self = this;\n  return function (ret) {\n    self.isUserCall = false;\n    return ret;\n  };\n};\n\nHTTPParser.prototype.nextRequest = function () {\n  this.userCall()(this[kOnMessageComplete]());\n  this.reinitialize(this.type);\n};\n\nHTTPParser.prototype.consumeLine = function () {\n  var end = this.end\x2C\n      chunk = this.chunk;\n  for (var i = this.offset; i < end; i++) {\n    if (chunk[i] === 0x0a) { // \\n\n      var line = this.line + chunk.toString(HTTPParser.encoding\x2C this.offset\x2C i);\n      if (line.charAt(line.length - 1) === '\\r') {\n        line = line.substr(0\x2C line.length - 1);\n      }\n      this.line = '';\n      this.offset = i + 1;\n      return line;\n    }\n  }\n  //line split over multiple chunks\n  this.line += chunk.toString(HTTPParser.encoding\x2C this.offset\x2C this.end);\n  this.offset = this.end;\n};\n\nvar headerExp = /^([^: \\t]+):[ \\t]*((?:.*[^ \\t])|)/;\nvar headerContinueExp = /^[ \\t]+(.*[^ \\t])/;\nHTTPParser.prototype.parseHeader = function (line\x2C headers) {\n  if (line.indexOf('\\r') !== -1) {\n    throw parseErrorCode('HPE_LF_EXPECTED');\n  }\n\n  var match = headerExp.exec(line);\n  var k = match && match[1];\n  if (k) { // skip empty string (malformed header)\n    headers.push(k);\n    headers.push(match[2]);\n  } else {\n    var matchContinue = headerContinueExp.exec(line);\n    if (matchContinue && headers.length) {\n      if (headers[headers.length - 1]) {\n        headers[headers.length - 1] += ' ';\n      }\n      headers[headers.length - 1] += matchContinue[1];\n    }\n  }\n};\n\nvar requestExp = /^([A-Z-]+) ([^ ]+) HTTP\\/(\\d)\\.(\\d)$/;\nHTTPParser.prototype.REQUEST_LINE = function () {\n  var line = this.consumeLine();\n  if (!line) {\n    return;\n  }\n  var match = requestExp.exec(line);\n  if (match === null) {\n    throw parseErrorCode('HPE_INVALID_CONSTANT');\n  }\n  this.info.method = this._compatMode0_11 ? match[1] : methods.indexOf(match[1]);\n  if (this.info.method === -1) {\n    throw new Error('invalid request method');\n  }\n  this.info.url = match[2];\n  this.info.versionMajor = +match[3];\n  this.info.versionMinor = +match[4];\n  this.body_bytes = 0;\n  this.state = 'HEADER';\n};\n\nvar responseExp = /^HTTP\\/(\\d)\\.(\\d) (\\d{3}) ?(.*)$/;\nHTTPParser.prototype.RESPONSE_LINE = function () {\n  var line = this.consumeLine();\n  if (!line) {\n    return;\n  }\n  var match = responseExp.exec(line);\n  if (match === null) {\n    throw parseErrorCode('HPE_INVALID_CONSTANT');\n  }\n  this.info.versionMajor = +match[1];\n  this.info.versionMinor = +match[2];\n  var statusCode = this.info.statusCode = +match[3];\n  this.info.statusMessage = match[4];\n  // Implied zero length.\n  if ((statusCode / 100 | 0) === 1 || statusCode === 204 || statusCode === 304) {\n    this.body_bytes = 0;\n  }\n  this.state = 'HEADER';\n};\n\nHTTPParser.prototype.shouldKeepAlive = function () {\n  if (this.info.versionMajor > 0 && this.info.versionMinor > 0) {\n    if (this.connection.indexOf('close') !== -1) {\n      return false;\n    }\n  } else if (this.connection.indexOf('keep-alive') === -1) {\n    return false;\n  }\n  if (this.body_bytes !== null || this.isChunked) { // || skipBody\n    return true;\n  }\n  return false;\n};\n\nHTTPParser.prototype.HEADER = function () {\n  var line = this.consumeLine();\n  if (line === undefined) {\n    return;\n  }\n  var info = this.info;\n  if (line) {\n    this.parseHeader(line\x2C info.headers);\n  } else {\n    var headers = info.headers;\n    var hasContentLength = false;\n    var currentContentLengthValue;\n    var hasUpgradeHeader = false;\n    for (var i = 0; i < headers.length; i += 2) {\n      switch (headers[i].toLowerCase()) {\n        case 'transfer-encoding':\n          this.isChunked = headers[i + 1].toLowerCase() === 'chunked';\n          break;\n        case 'content-length':\n          currentContentLengthValue = +headers[i + 1];\n          if (hasContentLength) {\n            // Fix duplicate Content-Length header with same values.\n            // Throw error only if values are different.\n            // Known issues:\n            // https://github.com/request/request/issues/2091#issuecomment-328715113\n            // https://github.com/nodejs/node/issues/6517#issuecomment-216263771\n            if (currentContentLengthValue !== this.body_bytes) {\n              throw parseErrorCode('HPE_UNEXPECTED_CONTENT_LENGTH');\n            }\n          } else {\n            hasContentLength = true;\n            this.body_bytes = currentContentLengthValue;\n          }\n          break;\n        case 'connection':\n          this.connection += headers[i + 1].toLowerCase();\n          break;\n        case 'upgrade':\n          hasUpgradeHeader = true;\n          break;\n      }\n    }\n\n    // if both isChunked and hasContentLength\x2C isChunked wins\n    // This is required so the body is parsed using the chunked method\x2C and matches\n    // Chrome's behavior.  We could\x2C maybe\x2C ignore them both (would get chunked\n    // encoding into the body)\x2C and/or disable shouldKeepAlive to be more\n    // resilient.\n    if (this.isChunked && hasContentLength) {\n      hasContentLength = false;\n      this.body_bytes = null;\n    }\n\n    // Logic from https://github.com/nodejs/http-parser/blob/921d5585515a153fa00e411cf144280c59b41f90/http_parser.c#L1727-L1737\n    // "For responses\x2C "Upgrade: foo" and "Connection: upgrade" are\n    //   mandatory only when it is a 101 Switching Protocols response\x2C\n    //   otherwise it is purely informational\x2C to announce support.\n    if (hasUpgradeHeader && this.connection.indexOf('upgrade') != -1) {\n      info.upgrade = this.type === HTTPParser.REQUEST || info.statusCode === 101;\n    } else {\n      info.upgrade = info.method === method_connect;\n    }\n\n    if (this.isChunked && info.upgrade) {\n      this.isChunked = false;\n    }\n\n    info.shouldKeepAlive = this.shouldKeepAlive();\n    //problem which also exists in original node: we should know skipBody before calling onHeadersComplete\n    var skipBody;\n    if (compatMode0_12) {\n      skipBody = this.userCall()(this[kOnHeadersComplete](info));\n    } else {\n      skipBody = this.userCall()(this[kOnHeadersComplete](info.versionMajor\x2C\n          info.versionMinor\x2C info.headers\x2C info.method\x2C info.url\x2C info.statusCode\x2C\n          info.statusMessage\x2C info.upgrade\x2C info.shouldKeepAlive));\n    }\n    if (skipBody === 2) {\n      this.nextRequest();\n      return true;\n    } else if (this.isChunked && !skipBody) {\n      this.state = 'BODY_CHUNKHEAD';\n    } else if (skipBody || this.body_bytes === 0) {\n      this.nextRequest();\n      // For older versions of node (v6.x and older?)\x2C that return skipBody=1 or skipBody=true\x2C\n      //   need this "return true;" if it's an upgrade request.\n      return info.upgrade;\n    } else if (this.body_bytes === null) {\n      this.state = 'BODY_RAW';\n    } else {\n      this.state = 'BODY_SIZED';\n    }\n  }\n};\n\nHTTPParser.prototype.BODY_CHUNKHEAD = function () {\n  var line = this.consumeLine();\n  if (line === undefined) {\n    return;\n  }\n  this.body_bytes = parseInt(line\x2C 16);\n  if (!this.body_bytes) {\n    this.state = 'BODY_CHUNKTRAILERS';\n  } else {\n    this.state = 'BODY_CHUNK';\n  }\n};\n\nHTTPParser.prototype.BODY_CHUNK = function () {\n  var length = Math.min(this.end - this.offset\x2C this.body_bytes);\n  this.userCall()(this[kOnBody](this.chunk\x2C this.offset\x2C length));\n  this.offset += length;\n  this.body_bytes -= length;\n  if (!this.body_bytes) {\n    this.state = 'BODY_CHUNKEMPTYLINE';\n  }\n};\n\nHTTPParser.prototype.BODY_CHUNKEMPTYLINE = function () {\n  var line = this.consumeLine();\n  if (line === undefined) {\n    return;\n  }\n  assert.equal(line\x2C '');\n  this.state = 'BODY_CHUNKHEAD';\n};\n\nHTTPParser.prototype.BODY_CHUNKTRAILERS = function () {\n  var line = this.consumeLine();\n  if (line === undefined) {\n    return;\n  }\n  if (line) {\n    this.parseHeader(line\x2C this.trailers);\n  } else {\n    if (this.trailers.length) {\n      this.userCall()(this[kOnHeaders](this.trailers\x2C ''));\n    }\n    this.nextRequest();\n  }\n};\n\nHTTPParser.prototype.BODY_RAW = function () {\n  var length = this.end - this.offset;\n  this.userCall()(this[kOnBody](this.chunk\x2C this.offset\x2C length));\n  this.offset = this.end;\n};\n\nHTTPParser.prototype.BODY_SIZED = function () {\n  var length = Math.min(this.end - this.offset\x2C this.body_bytes);\n  this.userCall()(this[kOnBody](this.chunk\x2C this.offset\x2C length));\n  this.offset += length;\n  this.body_bytes -= length;\n  if (!this.body_bytes) {\n    this.nextRequest();\n  }\n};\n\n// backward compat to node < 0.11.6\n['Headers'\x2C 'HeadersComplete'\x2C 'Body'\x2C 'MessageComplete'].forEach(function (name) {\n  var k = HTTPParser['kOn' + name];\n  Object.defineProperty(HTTPParser.prototype\x2C 'on' + name\x2C {\n    get: function () {\n      return this[k];\n    }\x2C\n    set: function (to) {\n      // hack for backward compatibility\n      this._compatMode0_11 = true;\n      method_connect = 'CONNECT';\n      return (this[k] = to);\n    }\n  });\n});\n\nfunction parseErrorCode(code) {\n  var err = new Error('Parse Error');\n  err.code = code;\n  return err;\n}\n
code-source-info,0x395d7b33723e,335,0,13290,C0O0C4O13290,,
code-creation,Function,10,236750,0x395d7b33893e,752, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:1:1,0x395d7b3371a8,~
code-source-info,0x395d7b33893e
tick,0x1a36c6a00,236791,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd659,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,237208,0x395d7b33b27e,5, node:assert:1:1,0x395d7b33ac78,~
script-source,336,node:assert,// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the 'Software')\x2C to\n// deal in the Software without restriction\x2C including without limitation the\n// rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or\n// sell copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS'\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN\n// ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  NumberIsNaN\x2C\n  ObjectAssign\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_AMBIGUOUS_ARGUMENT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst AssertionError = require('internal/assert/assertion_error');\nconst { openSync\x2C closeSync\x2C readSync } = require('fs');\nconst { inspect } = require('internal/util/inspect');\nconst { isPromise\x2C isRegExp } = require('internal/util/types');\nconst { EOL } = require('internal/constants');\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst { isError } = require('internal/util');\n\nconst errorCache = new SafeMap();\nconst CallTracker = require('internal/assert/calltracker');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nlet isDeepEqual;\nlet isDeepStrictEqual;\nlet parseExpressionAt;\nlet findNodeAround;\nlet decoder;\n\nfunction lazyLoadComparison() {\n  const comparison = require('internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nconst escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nconst meta = [\n  '\\\\u0000'\x2C '\\\\u0001'\x2C '\\\\u0002'\x2C '\\\\u0003'\x2C '\\\\u0004'\x2C\n  '\\\\u0005'\x2C '\\\\u0006'\x2C '\\\\u0007'\x2C '\\\\b'\x2C ''\x2C\n  ''\x2C '\\\\u000b'\x2C '\\\\f'\x2C ''\x2C '\\\\u000e'\x2C\n  '\\\\u000f'\x2C '\\\\u0010'\x2C '\\\\u0011'\x2C '\\\\u0012'\x2C '\\\\u0013'\x2C\n  '\\\\u0014'\x2C '\\\\u0015'\x2C '\\\\u0016'\x2C '\\\\u0017'\x2C '\\\\u0018'\x2C\n  '\\\\u0019'\x2C '\\\\u001a'\x2C '\\\\u001b'\x2C '\\\\u001c'\x2C '\\\\u001d'\x2C\n  '\\\\u001e'\x2C '\\\\u001f'\x2C\n];\n\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str\x2C 0)];\n\nlet warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nconst assert = module.exports = ok;\n\nconst NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met\x2C with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n\n  throw new AssertionError(obj);\n}\n\n/**\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @param {string} [operator]\n * @param {Function} [stackStartFn]\n * @returns {never}\n */\nfunction fail(actual\x2C expected\x2C message\x2C operator\x2C stackStartFn) {\n  const argsLen = arguments.length;\n\n  let internalMessage = false;\n  if (actual == null && argsLen <= 1) {\n    internalMessage = true;\n    message = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      process.emitWarning(\n        'assert.fail() with more than one argument is deprecated. ' +\n          'Please use assert.strictEqual() instead or only pass a message.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0094'\n      );\n    }\n    if (argsLen === 2)\n      operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n\n  const errArgs = {\n    actual\x2C\n    expected\x2C\n    operator: operator === undefined ? 'fail' : operator\x2C\n    stackStartFn: stackStartFn || fail\x2C\n    message\n  };\n  const err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.generatedMessage = true;\n  }\n  throw err;\n}\n\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\n\nfunction findColumn(fd\x2C column\x2C code) {\n  if (code.length > column + 100) {\n    try {\n      return parseCode(code\x2C column);\n    } catch {\n      // End recursion in case no code could be parsed. The expression should\n      // have been found after 2500 characters\x2C so stop trying.\n      if (code.length - column > 2500) {\n        // eslint-disable-next-line no-throw-literal\n        throw null;\n      }\n    }\n  }\n  // Read up to 2500 bytes more than necessary in columns. That way we address\n  // multi byte characters and read enough data to parse the code.\n  const bytesToRead = column - code.length + 2500;\n  const buffer = Buffer.allocUnsafe(bytesToRead);\n  const bytesRead = readSync(fd\x2C buffer\x2C 0\x2C bytesToRead);\n  code += decoder.write(buffer.slice(0\x2C bytesRead));\n  // EOF: fast path.\n  if (bytesRead < bytesToRead) {\n    return parseCode(code\x2C column);\n  }\n  // Read potentially missing code.\n  return findColumn(fd\x2C column\x2C code);\n}\n\nfunction getCode(fd\x2C line\x2C column) {\n  let bytesRead = 0;\n  if (line === 0) {\n    // Special handle line number one. This is more efficient and simplifies the\n    // rest of the algorithm. Read more than the regular column number in bytes\n    // to prevent multiple reads in case multi byte characters are used.\n    return findColumn(fd\x2C column\x2C '');\n  }\n  let lines = 0;\n  // Prevent blocking the event loop by limiting the maximum amount of\n  // data that may be read.\n  let maxReads = 32; // bytesPerRead * maxReads = 512 kb\n  const bytesPerRead = 16384;\n  // Use a single buffer up front that is reused until the call site is found.\n  let buffer = Buffer.allocUnsafe(bytesPerRead);\n  while (maxReads-- !== 0) {\n    // Only allocate a new buffer in case the needed line is found. All data\n    // before that can be discarded.\n    buffer = lines < line ? buffer : Buffer.allocUnsafe(bytesPerRead);\n    bytesRead = readSync(fd\x2C buffer\x2C 0\x2C bytesPerRead);\n    // Read the buffer until the required code line is found.\n    for (let i = 0; i < bytesRead; i++) {\n      if (buffer[i] === 10 && ++lines === line) {\n        // If the end of file is reached\x2C directly parse the code and return.\n        if (bytesRead < bytesPerRead) {\n          return parseCode(buffer.toString('utf8'\x2C i + 1\x2C bytesRead)\x2C column);\n        }\n        // Check if the read code is sufficient or read more until the whole\n        // expression is read. Make sure multi byte characters are preserved\n        // properly by using the decoder.\n        const code = decoder.write(buffer.slice(i + 1\x2C bytesRead));\n        return findColumn(fd\x2C column\x2C code);\n      }\n    }\n  }\n}\n\nfunction parseCode(code\x2C offset) {\n  // Lazy load acorn.\n  if (parseExpressionAt === undefined) {\n    const Parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n    ({ findNodeAround } = require('internal/deps/acorn/acorn-walk/dist/walk'));\n\n    parseExpressionAt = FunctionPrototypeBind(Parser.parseExpressionAt\x2C Parser);\n  }\n  let node;\n  let start = 0;\n  // Parse the read code until the correct expression is found.\n  do {\n    try {\n      node = parseExpressionAt(code\x2C start\x2C { ecmaVersion: 'latest' });\n      start = node.end + 1 || start;\n      // Find the CallExpression in the tree.\n      node = findNodeAround(node\x2C offset\x2C 'CallExpression');\n    } catch (err) {\n      // Unexpected token error and the like.\n      start += err.raisedAt || 1;\n      if (start > offset) {\n        // No matching expression found. This could happen if the assert\n        // expression is bigger than the provided buffer.\n        // eslint-disable-next-line no-throw-literal\n        throw null;\n      }\n    }\n  } while (node === undefined || node.node.end < offset);\n\n  return [\n    node.node.start\x2C\n    StringPrototypeReplace(StringPrototypeSlice(code\x2C\n                                                node.node.start\x2C node.node.end)\x2C\n                           escapeSequencesRegExp\x2C escapeFn)\x2C\n  ];\n}\n\nfunction getErrMessage(message\x2C fn) {\n  const tmpLimit = Error.stackTraceLimit;\n  const errorStackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n  // Make sure the limit is set to 1. Otherwise it could fail (<= 0) or it\n  // does to much work.\n  if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = 1;\n  // We only need the stack trace. To minimize the overhead use an object\n  // instead of an error.\n  const err = {};\n  ErrorCaptureStackTrace(err\x2C fn);\n  if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = tmpLimit;\n\n  overrideStackTrace.set(err\x2C (_\x2C stack) => stack);\n  const call = err.stack[0];\n\n  const filename = call.getFileName();\n  const line = call.getLineNumber() - 1;\n  let column = call.getColumnNumber() - 1;\n  let identifier;\n  let code;\n\n  if (filename) {\n    identifier = `${filename}${line}${column}`;\n\n    // Skip Node.js modules!\n    if (StringPrototypeStartsWith(filename\x2C 'node:') &&\n        NativeModule.exists(StringPrototypeSlice(filename\x2C 5))) {\n      errorCache.set(identifier\x2C undefined);\n      return;\n    }\n  } else {\n    const fn = call.getFunction();\n    if (!fn) {\n      return message;\n    }\n    code = String(fn);\n    identifier = `${code}${line}${column}`;\n  }\n\n  if (errorCache.has(identifier)) {\n    return errorCache.get(identifier);\n  }\n\n  let fd;\n  try {\n    // Set the stack trace limit to zero. This makes sure unexpected token\n    // errors are handled faster.\n    if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = 0;\n\n    if (filename) {\n      if (decoder === undefined) {\n        const { StringDecoder } = require('string_decoder');\n        decoder = new StringDecoder('utf8');\n      }\n      fd = openSync(filename\x2C 'r'\x2C 0o666);\n      // Reset column and message.\n      ({ 0: column\x2C 1: message } = getCode(fd\x2C line\x2C column));\n      // Flush unfinished multi byte characters.\n      decoder.end();\n    } else {\n      for (let i = 0; i < line; i++) {\n        code = StringPrototypeSlice(code\x2C\n                                    StringPrototypeIndexOf(code\x2C '\\n') + 1);\n      }\n      ({ 0: column\x2C 1: message } = parseCode(code\x2C column));\n    }\n    // Always normalize indentation\x2C otherwise the message could look weird.\n    if (StringPrototypeIncludes(message\x2C '\\n')) {\n      if (EOL === '\\r\\n') {\n        message = StringPrototypeReplace(message\x2C /\\r\\n/g\x2C '\\n');\n      }\n      const frames = StringPrototypeSplit(message\x2C '\\n');\n      message = ArrayPrototypeShift(frames);\n      for (const frame of frames) {\n        let pos = 0;\n        while (pos < column && (frame[pos] === ' ' || frame[pos] === '\\t')) {\n          pos++;\n        }\n        message += `\\n  ${StringPrototypeSlice(frame\x2C pos)}`;\n      }\n    }\n    message = `The expression evaluated to a falsy value:\\n\\n  ${message}\\n`;\n    // Make sure to always set the cache! No matter if the message is\n    // undefined or not\n    errorCache.set(identifier\x2C message);\n\n    return message;\n  } catch {\n    // Invalidate cache to prevent trying to read this part again.\n    errorCache.set(identifier\x2C undefined);\n  } finally {\n    // Reset limit.\n    if (errorStackTraceLimitIsWritable) Error.stackTraceLimit = tmpLimit;\n    if (fd !== undefined)\n      closeSync(fd);\n  }\n}\n\nfunction innerOk(fn\x2C argLen\x2C value\x2C message) {\n  if (!value) {\n    let generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message == null) {\n      generatedMessage = true;\n      message = getErrMessage(message\x2C fn);\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    const err = new AssertionError({\n      actual: value\x2C\n      expected: true\x2C\n      message\x2C\n      operator: '=='\x2C\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n/**\n * Pure assertion tests whether a value is truthy\x2C as determined\n * by !!value.\n * @param {...any} args\n * @returns {void}\n */\nfunction ok(...args) {\n  innerOk(ok\x2C args.length\x2C ...args);\n}\nassert.ok = ok;\n\n/**\n * The equality assertion tests shallow\x2C coercive equality with ==.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected && (!NumberIsNaN(actual) || !NumberIsNaN(expected))) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: '=='\x2C\n      stackStartFn: equal\n    });\n  }\n};\n\n/**\n * The non-equality assertion tests for whether two objects are not\n * equal with !=.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notEqual = function notEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected || (NumberIsNaN(actual) && NumberIsNaN(expected))) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: '!='\x2C\n      stackStartFn: notEqual\n    });\n  }\n};\n\n/**\n * The deep equivalence assertion tests a deep equality relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.deepEqual = function deepEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'deepEqual'\x2C\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n/**\n * The deep non-equivalence assertion tests for any deep inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notDeepEqual = function notDeepEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notDeepEqual'\x2C\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n/**\n * The deep strict equivalence assertion tests a deep strict equality\n * relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.deepStrictEqual = function deepStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'deepStrictEqual'\x2C\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\n/**\n * The deep strict non-equivalence assertion tests for any deep strict\n * inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notDeepStrictEqual'\x2C\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\n/**\n * The strict equivalence assertion tests a strict equality relation.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.strictEqual = function strictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (!ObjectIs(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'strictEqual'\x2C\n      stackStartFn: strictEqual\n    });\n  }\n};\n\n/**\n * The strict non-equivalence assertion tests for any strict inequality.\n * @param {any} actual\n * @param {any} expected\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.notStrictEqual = function notStrictEqual(actual\x2C expected\x2C message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual'\x2C 'expected');\n  }\n  if (ObjectIs(actual\x2C expected)) {\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: 'notStrictEqual'\x2C\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nclass Comparison {\n  constructor(obj\x2C keys\x2C actual) {\n    for (const key of keys) {\n      if (key in obj) {\n        if (actual !== undefined &&\n            typeof actual[key] === 'string' &&\n            isRegExp(obj[key]) &&\n            RegExpPrototypeTest(obj[key]\x2C actual[key])) {\n          this[key] = actual[key];\n        } else {\n          this[key] = obj[key];\n        }\n      }\n    }\n  }\n}\n\nfunction compareExceptionKey(actual\x2C expected\x2C key\x2C message\x2C keys\x2C fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key]\x2C expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      const a = new Comparison(actual\x2C keys);\n      const b = new Comparison(expected\x2C keys\x2C actual);\n\n      const err = new AssertionError({\n        actual: a\x2C\n        expected: b\x2C\n        operator: 'deepStrictEqual'\x2C\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual\x2C expected\x2C message\x2C fn) {\n  let generatedMessage = false;\n  let throwError = false;\n\n  if (typeof expected !== 'function') {\n    // Handle regular expressions.\n    if (isRegExp(expected)) {\n      const str = String(actual);\n      if (RegExpPrototypeTest(expected\x2C str))\n        return;\n\n      if (!message) {\n        generatedMessage = true;\n        message = 'The input did not match the regular expression ' +\n                  `${inspect(expected)}. Input:\\n\\n${inspect(str)}\\n`;\n      }\n      throwError = true;\n      // Handle primitives properly.\n    } else if (typeof actual !== 'object' || actual === null) {\n      const err = new AssertionError({\n        actual\x2C\n        expected\x2C\n        message\x2C\n        operator: 'deepStrictEqual'\x2C\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    } else {\n      // Handle validation objects.\n      const keys = ObjectKeys(expected);\n      // Special handle errors to make sure the name and the message are\n      // compared as well.\n      if (expected instanceof Error) {\n        ArrayPrototypePush(keys\x2C 'name'\x2C 'message');\n      } else if (keys.length === 0) {\n        throw new ERR_INVALID_ARG_VALUE('error'\x2C\n                                        expected\x2C 'may not be an empty object');\n      }\n      if (isDeepEqual === undefined) lazyLoadComparison();\n      for (const key of keys) {\n        if (typeof actual[key] === 'string' &&\n            isRegExp(expected[key]) &&\n            RegExpPrototypeTest(expected[key]\x2C actual[key])) {\n          continue;\n        }\n        compareExceptionKey(actual\x2C expected\x2C key\x2C message\x2C keys\x2C fn);\n      }\n      return;\n    }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  // Check for matching Error classes.\n  } else if (expected.prototype !== undefined && actual instanceof expected) {\n    return;\n  } else if (ObjectPrototypeIsPrototypeOf(Error\x2C expected)) {\n    if (!message) {\n      generatedMessage = true;\n      message = 'The error is expected to be an instance of ' +\n        `"${expected.name}". Received `;\n      if (isError(actual)) {\n        const name = (actual.constructor && actual.constructor.name) ||\n                     actual.name;\n        if (expected.name === name) {\n          message += 'an error with identical name but a different prototype.';\n        } else {\n          message += `"${name}"`;\n        }\n        if (actual.message) {\n          message += `\\n\\nError message:\\n\\n${actual.message}`;\n        }\n      } else {\n        message += `"${inspect(actual\x2C { depth: -1 })}"`;\n      }\n    }\n    throwError = true;\n  } else {\n    // Check validation functions return value.\n    const res = ReflectApply(expected\x2C {}\x2C [actual]);\n    if (res !== true) {\n      if (!message) {\n        generatedMessage = true;\n        const name = expected.name ? `"${expected.name}" ` : '';\n        message = `The ${name}validation function is expected to return` +\n          ` "true". Received ${inspect(res)}`;\n\n        if (isError(actual)) {\n          message += `\\n\\nCaught error:\\n\\n${actual}`;\n        }\n      }\n      throwError = true;\n    }\n  }\n\n  if (throwError) {\n    const err = new AssertionError({\n      actual\x2C\n      expected\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\nfunction getActual(fn) {\n  validateFunction(fn\x2C 'fn');\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  return isPromise(obj) ||\n    (obj !== null && typeof obj === 'object' &&\n    typeof obj.then === 'function' &&\n    typeof obj.catch === 'function');\n}\n\nasync function waitForActual(promiseFn) {\n  let resultPromise;\n  if (typeof promiseFn === 'function') {\n    // Return a rejected promise if `promiseFn` throws synchronously.\n    resultPromise = promiseFn();\n    // Fail in case no promise is returned.\n    if (!checkIsPromise(resultPromise)) {\n      throw new ERR_INVALID_RETURN_VALUE('instance of Promise'\x2C\n                                         'promiseFn'\x2C resultPromise);\n    }\n  } else if (checkIsPromise(promiseFn)) {\n    resultPromise = promiseFn;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(\n      'promiseFn'\x2C ['Function'\x2C 'Promise']\x2C promiseFn);\n  }\n\n  try {\n    await resultPromise;\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction expectsError(stackStartFn\x2C actual\x2C error\x2C message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error'\x2C\n                                     ['Object'\x2C 'Error'\x2C 'Function'\x2C 'RegExp']\x2C\n                                     error);\n    }\n    if (typeof actual === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT(\n          'error/message'\x2C\n          `The error message "${actual.message}" is identical to the message.`\n        );\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT(\n        'error/message'\x2C\n        `The error "${actual}" is identical to the message.`\n      );\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null &&\n             typeof error !== 'object' &&\n             typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error'\x2C\n                                   ['Object'\x2C 'Error'\x2C 'Function'\x2C 'RegExp']\x2C\n                                   error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    let details = '';\n    if (error && error.name) {\n      details += ` (${error.name})`;\n    }\n    details += message ? `: ${message}` : '.';\n    const fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined\x2C\n      expected: error\x2C\n      operator: stackStartFn.name\x2C\n      message: `Missing expected ${fnType}${details}`\x2C\n      stackStartFn\n    });\n  }\n\n  if (!error)\n    return;\n\n  expectedException(actual\x2C error\x2C message\x2C stackStartFn);\n}\n\nfunction hasMatchingError(actual\x2C expected) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) {\n      const str = String(actual);\n      return RegExpPrototypeTest(expected\x2C str);\n    }\n    throw new ERR_INVALID_ARG_TYPE(\n      'expected'\x2C ['Function'\x2C 'RegExp']\x2C expected\n    );\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (ObjectPrototypeIsPrototypeOf(Error\x2C expected)) {\n    return false;\n  }\n  return ReflectApply(expected\x2C {}\x2C [actual]) === true;\n}\n\nfunction expectsNoError(stackStartFn\x2C actual\x2C error\x2C message) {\n  if (actual === NO_EXCEPTION_SENTINEL)\n    return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || hasMatchingError(actual\x2C error)) {\n    const details = message ? `: ${message}` : '.';\n    const fnType = stackStartFn.name === 'doesNotReject' ?\n      'rejection' : 'exception';\n    innerFail({\n      actual\x2C\n      expected: error\x2C\n      operator: stackStartFn.name\x2C\n      message: `Got unwanted ${fnType}${details}\\n` +\n               `Actual message: "${actual && actual.message}"`\x2C\n      stackStartFn\n    });\n  }\n  throw actual;\n}\n\n/**\n * Expects the function `promiseFn` to throw an error.\n * @param {() => any} promiseFn\n * @param {...any} [args]\n * @returns {void}\n */\nassert.throws = function throws(promiseFn\x2C ...args) {\n  expectsError(throws\x2C getActual(promiseFn)\x2C ...args);\n};\n\n/**\n * Expects `promiseFn` function or its value to reject.\n * @param {() => Promise<any>} promiseFn\n * @param {...any} [args]\n * @returns {Promise<void>}\n */\nassert.rejects = async function rejects(promiseFn\x2C ...args) {\n  expectsError(rejects\x2C await waitForActual(promiseFn)\x2C ...args);\n};\n\n/**\n * Asserts that the function `fn` does not throw an error.\n * @param {() => any} fn\n * @param {...any} [args]\n * @returns {void}\n */\nassert.doesNotThrow = function doesNotThrow(fn\x2C ...args) {\n  expectsNoError(doesNotThrow\x2C getActual(fn)\x2C ...args);\n};\n\n/**\n * Expects `fn` or its value to not reject.\n * @param {() => Promise<any>} fn\n * @param {...any} [args]\n * @returns {Promise<void>}\n */\nassert.doesNotReject = async function doesNotReject(fn\x2C ...args) {\n  expectsNoError(doesNotReject\x2C await waitForActual(fn)\x2C ...args);\n};\n\n/**\n * Throws `value` if the value is not `null` or `undefined`.\n * @param {any} err\n * @returns {void}\n */\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    let message = 'ifError got unwanted exception: ';\n    if (typeof err === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    const newErr = new AssertionError({\n      actual: err\x2C\n      expected: null\x2C\n      operator: 'ifError'\x2C\n      message\x2C\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    const origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      const tmp2 = StringPrototypeSplit(origStack\x2C '\\n');\n      ArrayPrototypeShift(tmp2);\n      // Filter all frames existing in err.stack.\n      let tmp1 = StringPrototypeSplit(newErr.stack\x2C '\\n');\n      for (const errFrame of tmp2) {\n        // Find the first occurrence of the frame.\n        const pos = ArrayPrototypeIndexOf(tmp1\x2C errFrame);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = ArrayPrototypeSlice(tmp1\x2C 0\x2C pos);\n          break;\n        }\n      }\n      newErr.stack =\n        `${ArrayPrototypeJoin(tmp1\x2C '\\n')}\\n${ArrayPrototypeJoin(tmp2\x2C '\\n')}`;\n    }\n\n    throw newErr;\n  }\n};\n\nfunction internalMatch(string\x2C regexp\x2C message\x2C fn) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'regexp'\x2C 'RegExp'\x2C regexp\n    );\n  }\n  const match = fn.name === 'match';\n  if (typeof string !== 'string' ||\n      RegExpPrototypeTest(regexp\x2C string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n\n    const generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ?\n      'The "string" argument must be of type string. Received type ' +\n        `${typeof string} (${inspect(string)})` :\n      (match ?\n        'The input did not match the regular expression ' :\n        'The input was expected to not match the regular expression ') +\n          `${inspect(regexp)}. Input:\\n\\n${inspect(string)}\\n`);\n    const err = new AssertionError({\n      actual: string\x2C\n      expected: regexp\x2C\n      message\x2C\n      operator: fn.name\x2C\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n/**\n * Expects the `string` input to match the regular expression.\n * @param {string} string\n * @param {RegExp} regexp\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.match = function match(string\x2C regexp\x2C message) {\n  internalMatch(string\x2C regexp\x2C message\x2C match);\n};\n\n/**\n * Expects the `string` input not to match the regular expression.\n * @param {string} string\n * @param {RegExp} regexp\n * @param {string | Error} [message]\n * @returns {void}\n */\nassert.doesNotMatch = function doesNotMatch(string\x2C regexp\x2C message) {\n  internalMatch(string\x2C regexp\x2C message\x2C doesNotMatch);\n};\n\nassert.CallTracker = CallTracker;\n\n/**\n * Expose a strict only variant of assert.\n * @param {...any} args\n * @returns {void}\n */\nfunction strict(...args) {\n  innerOk(strict\x2C args.length\x2C ...args);\n}\n\nassert.strict = ObjectAssign(strict\x2C assert\x2C {\n  equal: assert.strictEqual\x2C\n  deepEqual: assert.deepStrictEqual\x2C\n  notEqual: assert.notStrictEqual\x2C\n  notDeepEqual: assert.notDeepStrictEqual\n});\n\nassert.strict.strict = assert.strict;\n
code-source-info,0x395d7b33b27e,336,0,31412,C0O0C4O31412,,
code-creation,Function,10,238416,0x395d7b33c49e,959, node:assert:1:1,0x395d7b33b1e8,~
code-source-info,0x395d7b33c49e
tick,0x10100ad60,238458,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x395d7b338952,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd659,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,238750,0x395d7b33fb2e,5, node:internal/assert/assertion_error:1:1,0x395d7b33f808,~
script-source,337,node:internal/assert/assertion_error,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  MathMax\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  removeColors\x2C\n} = require('internal/util');\nconst {\n  validateObject\x2C\n} = require('internal/validators');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\nlet blue = '';\nlet green = '';\nlet red = '';\nlet white = '';\n\nconst kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:'\x2C\n  strictEqual: 'Expected values to be strictly equal:'\x2C\n  strictEqualObject: 'Expected "actual" to be reference-equal to "expected":'\x2C\n  deepEqual: 'Expected values to be loosely deep-equal:'\x2C\n  notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:'\x2C\n  notStrictEqual: 'Expected "actual" to be strictly unequal to:'\x2C\n  notStrictEqualObject:\n    'Expected "actual" not to be reference-equal to "expected":'\x2C\n  notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:'\x2C\n  notIdentical: 'Values have same structure but are not reference-equal:'\x2C\n  notDeepEqualUnequal: 'Expected values not to be loosely deep-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nconst kMaxShortLength = 12;\n\nfunction copyError(source) {\n  const keys = ObjectKeys(source);\n  const target = ObjectCreate(ObjectGetPrototypeOf(source));\n  for (const key of keys) {\n    target[key] = source[key];\n  }\n  ObjectDefineProperty(target\x2C 'message'\x2C { value: source.message });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(\n    val\x2C\n    {\n      compact: false\x2C\n      customInspect: false\x2C\n      depth: 1000\x2C\n      maxArrayLength: Infinity\x2C\n      // Assert compares only enumerable properties (with a few exceptions).\n      showHidden: false\x2C\n      // Assert does not detect proxies currently.\n      showProxy: false\x2C\n      sorted: true\x2C\n      // Inspect getters as we also check them when comparing entries.\n      getters: true\x2C\n    }\n  );\n}\n\nfunction createErrDiff(actual\x2C expected\x2C operator) {\n  let other = '';\n  let res = '';\n  let end = '';\n  let skipped = false;\n  const actualInspected = inspectValue(actual);\n  const actualLines = StringPrototypeSplit(actualInspected\x2C '\\n');\n  const expectedLines = StringPrototypeSplit(inspectValue(expected)\x2C '\\n');\n\n  let i = 0;\n  let indicator = '';\n\n  // In case both values are objects or functions explicitly mark them as not\n  // reference equal for the `strictEqual` operator.\n  if (operator === 'strictEqual' &&\n      ((typeof actual === 'object' && actual !== null &&\n        typeof expected === 'object' && expected !== null) ||\n       (typeof actual === 'function' && typeof expected === 'function'))) {\n    operator = 'strictEqualObject';\n  }\n\n  // If "actual" and "expected" fit on a single line and they are not strictly\n  // equal\x2C check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 &&\n    actualLines[0] !== expectedLines[0]) {\n    // Check for the visible length using the `removeColors()` function\x2C if\n    // appropriate.\n    const c = inspect.defaultOptions.colors;\n    const actualRaw = c ? removeColors(actualLines[0]) : actualLines[0];\n    const expectedRaw = c ? removeColors(expectedLines[0]) : expectedLines[0];\n    const inputLength = actualRaw.length + expectedRaw.length;\n    // If the character length of "actual" and "expected" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`\x2C use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((typeof actual !== 'object' || actual === null) &&\n          (typeof expected !== 'object' || expected === null) &&\n          (actual !== 0 || expected !== 0)) { // -0 === +0\n        return `${kReadableOperator[operator]}\\n\\n` +\n            `${actualLines[0]} !== ${expectedLines[0]}\\n`;\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line\x2C add a mismatch indicator below the output. If it is\n      // not a tty\x2C use a default value of 80 characters.\n      const maxLength = process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualRaw[i] === expectedRaw[i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = `\\n  ${StringPrototypeRepeat(' '\x2C i)}^`;\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  let a = actualLines[actualLines.length - 1];\n  let b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 3) {\n      end = `\\n  ${a}${end}`;\n    } else {\n      other = a;\n    }\n    ArrayPrototypePop(actualLines);\n    ArrayPrototypePop(expectedLines);\n    if (actualLines.length === 0 || expectedLines.length === 0)\n      break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  const maxLines = MathMax(actualLines.length\x2C expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g.\x2C assert.deepStrictEqual({ a: Symbol() }\x2C { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    const actualLines = StringPrototypeSplit(actualInspected\x2C '\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (actualLines.length > 50) {\n      actualLines[46] = `${blue}...${white}`;\n      while (actualLines.length > 47) {\n        ArrayPrototypePop(actualLines);\n      }\n    }\n\n    return `${kReadableOperator.notIdentical}\\n\\n` +\n           `${ArrayPrototypeJoin(actualLines\x2C '\\n')}\\n`;\n  }\n\n  // There were at least five identical lines at the end. Mark a couple of\n  // skipped.\n  if (i >= 5) {\n    end = `\\n${blue}...${white}${end}`;\n    skipped = true;\n  }\n  if (other !== '') {\n    end = `\\n  ${other}${end}`;\n    other = '';\n  }\n\n  let printedLines = 0;\n  let identical = 0;\n  const msg = kReadableOperator[operator] +\n        `\\n${green}+ actual${white} ${red}- expected${white}`;\n  const skippedMsg = ` ${blue}...${white} Lines skipped`;\n\n  let lines = actualLines;\n  let plusMinus = `${green}+${white}`;\n  let maxLength = expectedLines.length;\n  if (actualLines.length < maxLines) {\n    lines = expectedLines;\n    plusMinus = `${red}-${white}`;\n    maxLength = actualLines.length;\n  }\n\n  for (i = 0; i < maxLines; i++) {\n    if (maxLength < i + 1) {\n      // If more than two former lines are identical\x2C print them. Collapse them\n      // in case more than five lines were identical.\n      if (identical > 2) {\n        if (identical > 3) {\n          if (identical > 4) {\n            if (identical === 5) {\n              res += `\\n  ${lines[i - 3]}`;\n              printedLines++;\n            } else {\n              res += `\\n${blue}...${white}`;\n              skipped = true;\n            }\n          }\n          res += `\\n  ${lines[i - 2]}`;\n          printedLines++;\n        }\n        res += `\\n  ${lines[i - 1]}`;\n        printedLines++;\n      }\n      // No identical lines before.\n      identical = 0;\n      // Add the expected line to the cache.\n      if (lines === actualLines) {\n        res += `\\n${plusMinus} ${lines[i]}`;\n      } else {\n        other += `\\n${plusMinus} ${lines[i]}`;\n      }\n      printedLines++;\n    // Only extra actual lines exist\n    // Lines diverge\n    } else {\n      const expectedLine = expectedLines[i];\n      let actualLine = actualLines[i];\n      // If the lines diverge\x2C specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      let divergingLines =\n        actualLine !== expectedLine &&\n        (!StringPrototypeEndsWith(actualLine\x2C '\x2C') ||\n         StringPrototypeSlice(actualLine\x2C 0\x2C -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical\x2C\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines &&\n          StringPrototypeEndsWith(expectedLine\x2C '\x2C') &&\n          StringPrototypeSlice(expectedLine\x2C 0\x2C -1) === actualLine) {\n        divergingLines = false;\n        actualLine += '\x2C';\n      }\n      if (divergingLines) {\n        // If more than two former lines are identical\x2C print them. Collapse\n        // them in case more than five lines were identical.\n        if (identical > 2) {\n          if (identical > 3) {\n            if (identical > 4) {\n              if (identical === 5) {\n                res += `\\n  ${actualLines[i - 3]}`;\n                printedLines++;\n              } else {\n                res += `\\n${blue}...${white}`;\n                skipped = true;\n              }\n            }\n            res += `\\n  ${actualLines[i - 2]}`;\n            printedLines++;\n          }\n          res += `\\n  ${actualLines[i - 1]}`;\n          printedLines++;\n        }\n        // No identical lines before.\n        identical = 0;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += `\\n${green}+${white} ${actualLine}`;\n        other += `\\n${red}-${white} ${expectedLine}`;\n        printedLines += 2;\n      // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        identical++;\n        // The very first identical line since the last diverging line is be\n        // added to the result.\n        if (identical <= 2) {\n          res += `\\n  ${actualLine}`;\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~50 rows max)\n    if (printedLines > 50 && i < maxLines - 2) {\n      return `${msg}${skippedMsg}\\n${res}\\n${blue}...${white}${other}\\n` +\n             `${blue}...${white}`;\n    }\n  }\n\n  return `${msg}${skipped ? skippedMsg : ''}\\n${res}${other}${end}${indicator}`;\n}\n\nfunction addEllipsis(string) {\n  const lines = StringPrototypeSplit(string\x2C '\\n'\x2C 11);\n  if (lines.length > 10) {\n    lines.length = 10;\n    return `${ArrayPrototypeJoin(lines\x2C '\\n')}\\n...`;\n  } else if (string.length > 512) {\n    return `${StringPrototypeSlice(string\x2C 512)}...`;\n  }\n  return string;\n}\n\nclass AssertionError extends Error {\n  constructor(options) {\n    validateObject(options\x2C 'options');\n    const {\n      message\x2C\n      operator\x2C\n      stackStartFn\x2C\n      details\x2C\n      // Compatibility with older versions.\n      stackStartFunction\n    } = options;\n    let {\n      actual\x2C\n      expected\n    } = options;\n\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      super(String(message));\n    } else {\n      if (process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr.hasColors()) {\n          blue = '\\u001b[34m';\n          green = '\\u001b[32m';\n          white = '\\u001b[39m';\n          red = '\\u001b[31m';\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (typeof actual === 'object' && actual !== null &&\n          typeof expected === 'object' && expected !== null &&\n          'stack' in actual && actual instanceof Error &&\n          'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        super(createErrDiff(actual\x2C expected\x2C operator));\n      } else if (operator === 'notDeepStrictEqual' ||\n        operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal\x2C show\n        // the first object and say A equals B\n        let base = kReadableOperator[operator];\n        const res = StringPrototypeSplit(inspectValue(actual)\x2C '\\n');\n\n        // In case "actual" is an object or a function\x2C it should not be\n        // reference equal.\n        if (operator === 'notStrictEqual' &&\n            ((typeof actual === 'object' && actual !== null) ||\n             typeof actual === 'function')) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 50) {\n          res[46] = `${blue}...${white}`;\n          while (res.length > 47) {\n            ArrayPrototypePop(res);\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          super(`${base}${res[0].length > 5 ? '\\n\\n' : ' '}${res[0]}`);\n        } else {\n          super(`${base}\\n\\n${ArrayPrototypeJoin(res\x2C '\\n')}\\n`);\n        }\n      } else {\n        let res = inspectValue(actual);\n        let other = inspectValue(expected);\n        const knownOperator = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' && res === other) {\n          res = `${knownOperator}\\n\\n${res}`;\n          if (res.length > 1024) {\n            res = `${StringPrototypeSlice(res\x2C 0\x2C 1021)}...`;\n          }\n          super(res);\n        } else {\n          if (res.length > 512) {\n            res = `${StringPrototypeSlice(res\x2C 0\x2C 509)}...`;\n          }\n          if (other.length > 512) {\n            other = `${StringPrototypeSlice(other\x2C 0\x2C 509)}...`;\n          }\n          if (operator === 'deepEqual') {\n            res = `${knownOperator}\\n\\n${res}\\n\\nshould loosely deep-equal\\n\\n`;\n          } else {\n            const newOp = kReadableOperator[`${operator}Unequal`];\n            if (newOp) {\n              res = `${newOp}\\n\\n${res}\\n\\nshould not loosely deep-equal\\n\\n`;\n            } else {\n              other = ` ${operator} ${other}`;\n            }\n          }\n          super(`${res}${other}`);\n        }\n      }\n    }\n\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n\n    this.generatedMessage = !message;\n    ObjectDefineProperty(this\x2C 'name'\x2C {\n      value: 'AssertionError [ERR_ASSERTION]'\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\n    });\n    this.code = 'ERR_ASSERTION';\n    if (details) {\n      this.actual = undefined;\n      this.expected = undefined;\n      this.operator = undefined;\n      for (let i = 0; i < details.length; i++) {\n        this['message ' + i] = details[i].message;\n        this['actual ' + i] = details[i].actual;\n        this['expected ' + i] = details[i].expected;\n        this['operator ' + i] = details[i].operator;\n        this['stack trace ' + i] = details[i].stack;\n      }\n    } else {\n      this.actual = actual;\n      this.expected = expected;\n      this.operator = operator;\n    }\n    ErrorCaptureStackTrace(this\x2C stackStartFn || stackStartFunction);\n    // Create error message including the error code in the name.\n    this.stack; // eslint-disable-line no-unused-expressions\n    // Reset the name.\n    this.name = 'AssertionError';\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    // Long strings should not be fully inspected.\n    const tmpActual = this.actual;\n    const tmpExpected = this.expected;\n\n    if (typeof this.actual === 'string') {\n      this.actual = addEllipsis(this.actual);\n    }\n    if (typeof this.expected === 'string') {\n      this.expected = addEllipsis(this.expected);\n    }\n\n    // This limits the `actual` and `expected` property default inspection to\n    // the minimum depth. Otherwise those values would be too verbose compared\n    // to the actual error message which contains a combined view of these two\n    // input values.\n    const result = inspect(this\x2C {\n      ...ctx\x2C\n      customInspect: false\x2C\n      depth: 0\n    });\n\n    // Reset the properties after inspection.\n    this.actual = tmpActual;\n    this.expected = tmpExpected;\n\n    return result;\n  }\n}\n\nmodule.exports = AssertionError;\n
code-source-info,0x395d7b33fb2e,337,0,17184,C0O0C4O17184,,
code-creation,Function,10,239416,0xbb714f4e03e,321, node:internal/assert/assertion_error:1:1,0x395d7b33fa98,~
code-source-info,0xbb714f4e03e,337,0,17184,C0O0C105O25C111O47C117O68C123O77C129O103C135O114C141O130C147O154C153O178C159O192C165O202C171O229C177O254C183O278C189O338C192O338C197O326C203O400C206O400C211O382C217O456C220O456C225O436C231O531C234O531C239O496C245O571C247O571C249O587C251O587C253O601C255O601C257O617C259O617C261O648C265O648C267O1472C269O1472C274O11254C287O16306C290O16306C313O17151C315O17166C320O17183,,
tick,0x100e1c8f0,239416,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0x395d7b33c6a1,0x311ed227c90d,0x172aed068ef2,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0x395d7b338952,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd659,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,239541,0xbb714f4f766,5, node:internal/assert/calltracker:1:1,0xbb714f4f4f8,~
script-source,338,node:internal/assert/calltracker,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  FunctionPrototype\x2C\n  ReflectApply\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_UNAVAILABLE_DURING_EXIT\x2C\n  }\x2C\n} = require('internal/errors');\nconst AssertionError = require('internal/assert/assertion_error');\nconst {\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst noop = FunctionPrototype;\n\nclass CallTracker {\n\n  #callChecks = new SafeSet()\n\n  calls(fn\x2C exact = 1) {\n    if (process._exiting)\n      throw new ERR_UNAVAILABLE_DURING_EXIT();\n    if (typeof fn === 'number') {\n      exact = fn;\n      fn = noop;\n    } else if (fn === undefined) {\n      fn = noop;\n    }\n\n    validateUint32(exact\x2C 'exact'\x2C true);\n\n    const context = {\n      exact\x2C\n      actual: 0\x2C\n      // eslint-disable-next-line no-restricted-syntax\n      stackTrace: new Error()\x2C\n      name: fn.name || 'calls'\n    };\n    const callChecks = this.#callChecks;\n    callChecks.add(context);\n\n    return function() {\n      context.actual++;\n      if (context.actual === context.exact) {\n        // Once function has reached its call count remove it from\n        // callChecks set to prevent memory leaks.\n        callChecks.delete(context);\n      }\n      // If function has been called more than expected times\x2C add back into\n      // callchecks.\n      if (context.actual === context.exact + 1) {\n        callChecks.add(context);\n      }\n      return ReflectApply(fn\x2C this\x2C arguments);\n    };\n  }\n\n  report() {\n    const errors = [];\n    for (const context of this.#callChecks) {\n      // If functions have not been called exact times\n      if (context.actual !== context.exact) {\n        const message = `Expected the ${context.name} function to be ` +\n                        `executed ${context.exact} time(s) but was ` +\n                        `executed ${context.actual} time(s).`;\n        ArrayPrototypePush(errors\x2C {\n          message\x2C\n          actual: context.actual\x2C\n          expected: context.exact\x2C\n          operator: context.name\x2C\n          stack: context.stackTrace\n        });\n      }\n    }\n    return errors;\n  }\n\n  verify() {\n    const errors = this.report();\n    if (errors.length > 0) {\n      throw new AssertionError({\n        message: 'Function(s) were not called the expected number of times'\x2C\n        details: errors\x2C\n      });\n    }\n  }\n}\n\nmodule.exports = CallTracker;\n
code-source-info,0xbb714f4f766,338,0,2344,C0O0C4O2344,,
code-creation,Function,10,239625,0xbb714f4fbbe,181, node:internal/assert/calltracker:1:1,0xbb714f4f6d0,~
code-source-info,0xbb714f4fbbe,338,0,2344,C0O0C33O25C39O47C45O56C50O77C56O93C62O181C65O181C70O181C75O143C81O232C84O232C88O232C90O306C93O306C98O286C104O352C106O352C173O2314C175O2329C180O2343,,
code-creation,Function,10,239666,0xbb714f4fd46,26,<instance_members_initializer> node:internal/assert/calltracker:25:3,0xbb714f4f900,~
code-source-info,0xbb714f4fd46,338,395,422,C3O409C10O409C25O422,,
code-creation,LazyCompile,10,239791,0xbb714f50f3e,79, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:442:76,0x395d7b3383b0,~
code-source-info,0xbb714f50f3e,335,12846,13181,C0O12846C5O12865C15O12882C18O12875C21O12865C23O12893C27O12900C37O12926C47O12942C56O12961C64O13013C72O12900C78O13180,,
code-creation,Eval,10,240083,0xbb714f516ce,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:1:1,0xbb714f51508,~
script-source,339,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js,'use strict'\n\nconst hyperid = require('hyperid')(true)\nconst inherits = require('util').inherits\nconst requestBuilder = require('./httpRequestBuilder')\nconst clone = require('lodash.clonedeep')\nconst chunk = require('lodash.chunk')\nconst flatten = require('lodash.flatten')\n\nconst toHeaderKeyValue = (rawHeaders) => {\n  const tupleHeaders = chunk(rawHeaders\x2C 2)\n  const headers = {}\n  tupleHeaders.forEach((val) => {\n    const currentValue = headers[val[0]]\n    if (!currentValue) {\n      headers[val[0]] = val[1]\n    } else {\n      headers[val[0]] = flatten([currentValue\x2C val[1]])\n    }\n  })\n  return headers\n}\n\nfunction RequestIterator (opts) {\n  if (!(this instanceof RequestIterator)) {\n    return new RequestIterator(opts)\n  }\n\n  this.resetted = false\n  this.headers = {}\n  this.initialContext = opts.initialContext || {}\n  this.resetContext()\n  this.reqDefaults = opts\n  this.requestBuilder = requestBuilder(opts)\n  this.setRequests(opts.requests)\n}\n\ninherits(RequestIterator\x2C Object)\n\nRequestIterator.prototype.resetContext = function () {\n  this.context = clone(this.initialContext)\n}\n\nRequestIterator.prototype.nextRequest = function () {\n  this.resetted = false\n  ++this.currentRequestIndex\n  // when looping over available request\x2C clear context for a fresh start\n  if (this.currentRequestIndex === this.requests.length) {\n    this.resetContext()\n    this.currentRequestIndex = 0\n  }\n  this.currentRequest = this.requests[this.currentRequestIndex]\n  // only builds if it has dynamic setup\n  if (this.reqDefaults.idReplacement || typeof this.currentRequest.setupRequest === 'function') {\n    this.rebuildRequest()\n  }\n  return this.currentRequest\n}\n\nRequestIterator.prototype.nextRequestBuffer = function () {\n  // get next request\n  this.nextRequest()\n  return this.currentRequest.requestBuffer\n}\n\nRequestIterator.prototype.setRequests = function (newRequests) {\n  this.resetted = false\n  this.requests = newRequests || [{}]\n  this.currentRequestIndex = 0\n  // build all request which don't have dynamic setup\x2C except if it's the first one\n  this.requests.forEach((request\x2C i) => {\n    this.currentRequest = request\n    if (i === 0 || typeof request.setupRequest !== 'function') {\n      this.rebuildRequest()\n    }\n  })\n  this.currentRequest = this.requests[0]\n}\n\nRequestIterator.prototype.setHeaders = function (newHeaders) {\n  this.headers = newHeaders || {}\n  this.currentRequest.headers = this.headers\n  this.rebuildRequest()\n}\n\nRequestIterator.prototype.setBody = function (newBody) {\n  this.currentRequest.body = newBody || Buffer.alloc(0)\n  this.rebuildRequest()\n}\n\nRequestIterator.prototype.setHeadersAndBody = function (newHeaders\x2C newBody) {\n  this.headers = newHeaders || {}\n  this.currentRequest.headers = this.headers\n  this.currentRequest.body = newBody || Buffer.alloc(0)\n  this.rebuildRequest()\n}\n\nRequestIterator.prototype.setRequest = function (newRequest) {\n  this.currentRequest = newRequest || {}\n  this.rebuildRequest()\n}\n\nRequestIterator.prototype.rebuildRequest = function () {\n  let data\n  this.resetted = false\n  if (this.currentRequest) {\n    this.currentRequest.headers = this.currentRequest.headers || this.headers\n    data = this.requestBuilder(this.currentRequest\x2C this.context)\n    if (data) {\n      this.currentRequest.requestBuffer = this.reqDefaults.idReplacement\n        ? Buffer.from(data.toString().replace(/\\[<id>\\]/g\x2C hyperid()))\n        : data\n    } else if (this.currentRequestIndex === 0) {\n      // when first request fails to build\x2C we can not reset pipeline\x2C or it'll never end\n      throw new Error('First setupRequest() failed did not returned valid request. Stopping')\n    } else {\n      this.currentRequestIndex = this.requests.length - 1\n      this.nextRequest()\n      this.resetted = true\n    }\n  }\n  return data\n}\n\nRequestIterator.prototype.recordBody = function (request\x2C status\x2C body\x2C headers) {\n  if (request && typeof request.onResponse === 'function') {\n    request.onResponse(status\x2C body\x2C this.context\x2C toHeaderKeyValue(headers || []))\n  }\n}\n\nmodule.exports = RequestIterator\n
code-source-info,0xbb714f516ce,339,0,4048,C0O0C4O4048,,
code-creation,Function,10,240250,0xbb714f51e96,280, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:1:1,0xbb714f51638,~
code-source-info,0xbb714f51e96,339,0,4048,C0O0C29O30C32O30C39O48C43O30C45O72C48O72C53O87C58O120C61O120C65O120C67O166C70O166C74O166C76O208C79O208C83O208C85O248C88O248C92O248C94O300C98O300C100O958C103O984C107O958C112O993C115O1009C124O1032C128O1095C131O1111C140O1133C144O1661C147O1677C156O1705C160O1810C163O1826C172O1848C176O2276C179O2292C188O2313C192O2445C195O2461C204O2479C208O2585C211O2601C220O2629C224O2826C227O2842C236O2863C240O2957C243O2973C252O2998C256O3780C259O3796C268O3817C272O4015C274O4030C279O4047,,
tick,0x100ffa544,240375,0,0x0,0,0x0,0x172aed04fc51,0x1b9b8816ec96,0x172aed050aa8,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,240625,0xbb714f5300e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/hyperid.js:1:1,0xbb714f52e48,~
script-source,340,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/hyperid.js,'use strict'\n\nconst uuidv4 = require('./uuid')\nconst parser = require('uuid-parse')\nconst maxInt = Math.pow(2\x2C 31) - 1\nconst Buffer = require('buffer').Buffer\n\nfunction hyperid (opts) {\n  let fixedLength = false\n  let urlSafe = false\n  if (typeof opts === 'boolean') {\n    fixedLength = opts\n  } else {\n    opts = opts || {}\n    urlSafe = !!opts.urlSafe\n    fixedLength = !!opts.fixedLength\n  }\n\n  generate.uuid = uuidv4()\n  generate.decode = decode\n\n  let id = baseId(generate.uuid\x2C urlSafe)\n  let count = Math.floor(opts.startFrom || 0)\n\n  if (isNaN(count) || !(maxInt > count && count >= 0)) {\n    throw new Error([\n      `when passed\x2C opts.startFrom must be a number between 0 and ${maxInt}.`\x2C\n      'Only the integer part matters.'\x2C\n      `- got: ${opts.startFrom}`\n    ].join('\\n'))\n  }\n\n  return generate\n\n  function generate () {\n    const result = fixedLength\n      ? id + pad(count++)\n      : id + count++\n\n    if (count === maxInt) {\n      generate.uuid = uuidv4()\n      id = baseId(generate.uuid\x2C urlSafe) // rebase\n      count = 0\n    }\n\n    return result\n  }\n}\n\nfunction pad (count) {\n  if (count < 10) return '000000000' + count\n  if (count < 100) return '00000000' + count\n  if (count < 1000) return '0000000' + count\n  if (count < 10000) return '000000' + count\n  if (count < 100000) return '00000' + count\n  if (count < 1000000) return '0000' + count\n  if (count < 10000000) return '000' + count\n  if (count < 100000000) return '00' + count\n  if (count < 1000000000) return '0' + count\n  return count\n}\n\nfunction baseId (id\x2C urlSafe) {\n  let base64Id = Buffer.from(parser.parse(id)).toString('base64')\n  const l = base64Id.length\n  if (urlSafe) {\n    if (base64Id[l - 2] === '=' && base64Id[l - 1] === '=') {\n      base64Id = base64Id.substr(0\x2C l - 2) + '-'\n    }\n    return base64Id.replace(/\\+/g\x2C '-').replace(/\\//g\x2C '_')\n  }\n  if (base64Id[l - 2] === '=' && base64Id[l - 1] === '=') {\n    return base64Id.substr(0\x2C l - 2) + '/'\n  }\n  return base64Id\n}\n\nfunction decode (id\x2C opts) {\n  opts = opts || {}\n  const urlSafe = !!opts.urlSafe\n\n  if (urlSafe) {\n    // need to first convert the last minus to slash\x2C\n    // then the remaining to plus\n    id = id.replace(/-([^-]*)$/\x2C '/' + '$1')\n      .replace(/-/g\x2C '+')\n      .replace(/_/g\x2C '/')\n  }\n\n  const lastSlashIndex = id.lastIndexOf('/')\n  if (lastSlashIndex === -1) {\n    return null\n  }\n  const uuidPart = id.substring(0\x2C lastSlashIndex)\n  const countPart = Number(id.substring(lastSlashIndex + 1))\n  if (!uuidPart || isNaN(countPart)) {\n    return null\n  }\n\n  const result = {\n    uuid: parser.unparse(Buffer.from(uuidPart + '=='\x2C 'base64'))\x2C\n    count: countPart\n  }\n\n  return result\n}\n\nmodule.exports = hyperid\nmodule.exports.decode = decode\n
code-source-info,0xbb714f5300e,340,0,2718,C0O0C4O2718,,
code-creation,Function,10,240708,0xbb714f53266,117, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/hyperid.js:1:1,0xbb714f52f78,~
code-source-info,0xbb714f53266,340,0,2718,C0O0C40O29C43O29C47O29C49O62C52O62C56O62C58O99C62O104C73O104C79O115C82O99C84O134C87O134C92O151C96O134C98O2662C100O2677C104O2694C111O2709C116O2717,,
code-creation,Eval,10,240833,0xbb714f53ab6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/uuid.js:1:1,0xbb714f53960,~
script-source,341,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/uuid.js,'use strict'\n\nconst uuid = require('uuid')\nconst crypto = require('crypto')\nmodule.exports = typeof crypto.randomUUID === 'function'\n  ? crypto.randomUUID\n  : uuid.v4\n
code-source-info,0xbb714f53ab6,341,0,167,C0O0C4O167,,
code-creation,Function,10,240875,0xbb714f53b66,43, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/uuid.js:1:1,0xbb714f53a20,~
code-source-info,0xbb714f53b66,341,0,167,C0O27C3O27C8O58C11O58C16O107C27O144C33O164C37O91C42O166,,
code-creation,RegExp,3,241166,0x107512160,4720,(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)
code-creation,RegExp,3,241208,0x107513440,1096,%2F|%2C
code-creation,Eval,10,241375,0xbb714f558ae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/index.js:1:1,0xbb714f556c8,~
script-source,342,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/index.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nObject.defineProperty(exports\x2C "v1"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports\x2C "v3"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports\x2C "v4"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports\x2C "v5"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports\x2C "NIL"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports\x2C "version"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports\x2C "validate"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports\x2C "stringify"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports\x2C "parse"\x2C {\n  enumerable: true\x2C\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require("./v1.js"));\n\nvar _v2 = _interopRequireDefault(require("./v3.js"));\n\nvar _v3 = _interopRequireDefault(require("./v4.js"));\n\nvar _v4 = _interopRequireDefault(require("./v5.js"));\n\nvar _nil = _interopRequireDefault(require("./nil.js"));\n\nvar _version = _interopRequireDefault(require("./version.js"));\n\nvar _validate = _interopRequireDefault(require("./validate.js"));\n\nvar _stringify = _interopRequireDefault(require("./stringify.js"));\n\nvar _parse = _interopRequireDefault(require("./parse.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
code-source-info,0xbb714f558ae,342,0,1765,C0O0C4O1765,,
code-creation,Function,10,241458,0xbb714f56406,460, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/index.js:1:1,0xbb714f55818,~
code-source-info,0xbb714f56406,342,0,1765,C0O0C10O15C14O22C22O37C30O22C35O80C39O87C47O102C52O146C63O87C68O191C72O198C80O213C85O257C96O198C101O303C105O310C113O325C118O369C129O310C134O415C138O422C146O437C151O481C162O422C167O527C171O534C179O549C184O594C195O534C200O641C204O648C212O663C217O712C228O648C233O763C237O770C245O785C250O835C261O770C266O887C270O894C278O909C283O960C294O894C299O1013C303O1020C311O1035C316O1082C327O1020C332O1141C335O1164C340O1141C344O1141C346O1196C349O1219C354O1196C358O1196C360O1251C363O1274C368O1251C372O1251C374O1306C377O1329C382O1306C386O1306C388O1362C391O1385C396O1362C400O1362C402O1423C405O1446C410O1423C414O1423C416O1489C419O1512C424O1489C428O1489C430O1557C433O1580C438O1557C442O1557C444O1622C447O1645C452O1622C456O1622C459O1764,,
tick,0x1016e6294,241625,1,0x100cbd818,2,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f56555,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53b69,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53291,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,241666,0xbb714f571fe,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v1.js:1:1,0xbb714f57048,~
script-source,343,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v1.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require("./rng.js"));\n\nvar _stringify = _interopRequireDefault(require("./stringify.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options\x2C buf\x2C offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5\x2C create and 48-bit node id\x2C (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01\x2C seedBytes[1]\x2C seedBytes[2]\x2C seedBytes[3]\x2C seedBytes[4]\x2C seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2\x2C randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch\x2C\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this\x2C so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch\x2C 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2\x2C use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2\x2C Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0\x2C _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;
code-source-info,0xbb714f571fe,343,0,3618,C0O0C4O3618,,
code-creation,Function,10,241833,0xbb714f5739e,108, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v1.js:1:1,0xbb714f57168,~
code-source-info,0xbb714f5739e,343,0,3618,C0O0C27O15C31O22C39O37C47O22C52O80C53O96C57O118C60O141C65O118C69O118C71O181C74O204C79O181C83O181C85O474C86O474C88O488C89O488C91O549C92O549C94O569C95O569C97O3587C100O3591C102O3607C107O3617,,
code-creation,Eval,10,241958,0xbb714f57c16,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/rng.js:1:1,0xbb714f57a90,~
script-source,344,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/rng.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require("crypto"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr\x2C poolPtr += 16);\n}
code-source-info,0xbb714f57c16,344,0,549,C0O0C4O549,,
code-creation,Function,10,242000,0xbb714f57dbe,95, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/rng.js:1:1,0xbb714f57b80,~
code-source-info,0xbb714f57dbe,344,0,549,C0O0C21O15C25O22C33O37C41O22C46O80C48O96C52O118C55O141C60O118C64O118C66O277C77O277C82O277C84O351C87O361C91O351C94O548,,
code-creation,LazyCompile,10,242083,0xbb714f5857e,18,get node:crypto:287:8,0xfcf81436fe0,~
code-source-info,0xbb714f5857e,250,6772,6834,C0O6777C8O6784C13O6824C17O6832,,
code-creation,LazyCompile,10,242083,0xbb714f59076,38,lazyRequire node:internal/crypto/util:67:21,0xfcf814293c0,~
code-source-info,0xbb714f59076,246,1210,1345,C0O1231C7O1247C11O1257C13O1284C21O1315C26O1313C35O1332C37O1343,,
code-creation,Eval,10,242375,0xbb714f5a6ae,5, node:internal/crypto/webcrypto:1:1,0xbb714f5a2a8,~
script-source,345,node:internal/crypto/webcrypto,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectDefineProperties\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  StringPrototypeRepeat\x2C\n} = primordials;\n\nconst {\n  kWebCryptoKeyFormatRaw\x2C\n  kWebCryptoKeyFormatPKCS8\x2C\n  kWebCryptoKeyFormatSPKI\x2C\n  kWebCryptoCipherEncrypt\x2C\n  kWebCryptoCipherDecrypt\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n  createSecretKey\x2C\n  isCryptoKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  asyncDigest\x2C\n} = require('internal/crypto/hash');\n\nconst {\n  getArrayBufferOrView\x2C\n  hasAnyNotIn\x2C\n  lazyRequire\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kExportFormats\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  getRandomValues\x2C\n  randomUUID: _randomUUID\x2C\n} = require('internal/crypto/random');\n\nconst randomUUID = () => _randomUUID();\n\nasync function generateKey(\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaKeyGenerate(algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/ec')\n        .ecGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      return lazyRequire('internal/crypto/aes')\n        .aesGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n\n    // Following are Node.js specific extensions. Names must be prefixed\n    // with the `NODE-`\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .dhGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n}\n\nasync function deriveBits(algorithm\x2C baseKey\x2C length) {\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveBits')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveBits usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  switch (algorithm.name) {\n    case 'ECDH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n    case 'HKDF':\n      return lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'PBKDF2':\n      return lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'NODE-SCRYPT':\n      return lazyRequire('internal/crypto/scrypt')\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\n  }\n  throw lazyDOMException('Unrecognized name.');\n}\n\nasync function deriveKey(\n  algorithm\x2C\n  baseKey\x2C\n  derivedKeyAlgorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  algorithm = normalizeAlgorithm(algorithm);\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveKey')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveKey usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  validateObject(derivedKeyAlgorithm\x2C 'derivedKeyAlgorithm'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n\n  const { length } = derivedKeyAlgorithm;\n  let bits;\n  switch (algorithm.name) {\n    case 'ECDH':\n      bits = await lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'HKDF':\n      bits = await lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'PBKDF2':\n      bits = await lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'NODE-SCRYPT':\n      bits = await lazyRequire('internal/crypto/scrypt')\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'NODE-DH':\n      bits = await lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\n      break;\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n\n  return importKey('raw'\x2C bits\x2C derivedKeyAlgorithm\x2C extractable\x2C keyUsages);\n}\n\nasync function exportKeySpki(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-DSA':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/dsa')\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-DH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/diffiehellman')\n          .dhExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyPkcs8(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-DSA':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/dsa')\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-DH':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/diffiehellman')\n          .dhExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyRaw(key) {\n  switch (key.algorithm.name) {\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      // Fall through\n    case 'HMAC':\n      return key[kKeyObject].export().buffer;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyJWK(key) {\n  const jwk = key[kKeyObject][kHandle].exportJwk({\n    key_ops: key.usages\x2C\n    ext: key.extractable\x2C\n  });\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsa);\n      return jwk;\n    case 'RSA-PSS':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaPss);\n      return jwk;\n    case 'RSA-OAEP':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaOaep);\n      return jwk;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      jwk.crv ||= key.algorithm.namedCurve;\n      return jwk;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      jwk.alg = lazyRequire('internal/crypto/aes')\n        .getAlgorithmName(key.algorithm.name\x2C key.algorithm.length);\n      return jwk;\n    case 'HMAC':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkHmac);\n      return jwk;\n    case 'NODE-DSA':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkDsa);\n      return jwk;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      return jwk;\n    default:\n      // Fall through\n  }\n\n  throw lazyDOMException('Not yet supported'\x2C 'NotSupportedError');\n}\n\nasync function exportKey(format\x2C key) {\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n\n  if (!key.extractable)\n    throw lazyDOMException('key is not extractable'\x2C 'InvalidAccessException');\n\n  switch (format) {\n    case 'node.keyObject': return key[kKeyObject];\n    case 'spki': return exportKeySpki(key);\n    case 'pkcs8': return exportKeyPkcs8(key);\n    case 'jwk': return exportKeyJWK(key);\n    case 'raw': return exportKeyRaw(key);\n  }\n  throw lazyDOMException(\n    'Export format is unsupported'\x2C 'NotSupportedError');\n}\n\nasync function importGenericSecretKey(\n  { name\x2C length }\x2C\n  format\x2C\n  keyData\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  if (extractable)\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\n\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      `Unsupported key usage for a ${name} key`\x2C\n      'SyntaxError');\n  }\n\n  switch (format) {\n    case 'node.keyObject': {\n      if (!isKeyObject(keyData))\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\n\n      if (keyData.type === 'secret')\n        return new InternalCryptoKey(keyData\x2C { name }\x2C keyUsages\x2C extractable);\n\n      break;\n    }\n    case 'raw':\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n        throw lazyDOMException(\n          `Unsupported key usage for a ${name} key`\x2C\n          'SyntaxError');\n      }\n\n      const checkLength = keyData.byteLength * 8;\n\n      if (checkLength === 0 || length === 0)\n        throw lazyDOMException('Zero-length key is not supported'\x2C 'DataError');\n\n      // The Web Crypto spec allows for key lengths that are not multiples of\n      // 8. We don't. Our check here is stricter than that defined by the spec\n      // in that we require that algorithm.length match keyData.length * 8 if\n      // algorithm.length is specified.\n      if (length !== undefined && length !== checkLength) {\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\n      }\n\n      const keyObject = createSecretKey(keyData);\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\n  }\n\n  throw lazyDOMException(\n    `Unable to import ${name} key with format ${format}`\x2C\n    'NotSupportedError');\n}\n\nasync function importKey(\n  format\x2C\n  keyData\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (format !== 'node.keyObject' && format !== 'jwk')\n    keyData = getArrayBufferOrView(keyData\x2C 'keyData');\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/ec')\n        .ecImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      return lazyRequire('internal/crypto/aes')\n        .aesImportKey(algorithm\x2C format\x2C keyData\x2C extractable\x2C keyUsages);\n    case 'HKDF':\n      // Fall through\n    case 'NODE-SCRYPT':\n      // Fall through\n    case 'PBKDF2':\n      return importGenericSecretKey(\n        algorithm\x2C\n        format\x2C\n        keyData\x2C\n        extractable\x2C\n        keyUsages);\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .dhImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n  }\n\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\n// by a subtle.encrypt().\nasync function wrapKey(format\x2C key\x2C wrappingKey\x2C algorithm) {\n  algorithm = normalizeAlgorithm(algorithm);\n  let keyData = await exportKey(format\x2C key);\n\n  if (format === 'jwk') {\n    if (keyData == null || typeof keyData !== 'object')\n      throw lazyDOMException('Invalid exported JWK key'\x2C 'DataError');\n    const ec = new TextEncoder();\n    const raw = JSONStringify(keyData);\n    keyData = ec.encode(raw + StringPrototypeRepeat(' '\x2C 8 - (raw.length % 8)));\n  }\n\n  return cipherOrWrap(\n    kWebCryptoCipherEncrypt\x2C\n    algorithm\x2C\n    wrappingKey\x2C\n    keyData\x2C\n    'wrapKey');\n}\n\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\n// by a subtle.importKey().\nasync function unwrapKey(\n  format\x2C\n  wrappedKey\x2C\n  unwrappingKey\x2C\n  unwrapAlgo\x2C\n  unwrappedKeyAlgo\x2C\n  extractable\x2C\n  keyUsages) {\n  wrappedKey = getArrayBufferOrView(wrappedKey\x2C 'wrappedKey');\n\n  let keyData = await cipherOrWrap(\n    kWebCryptoCipherDecrypt\x2C\n    normalizeAlgorithm(unwrapAlgo)\x2C\n    unwrappingKey\x2C\n    wrappedKey\x2C\n    'unwrapKey');\n\n  if (format === 'jwk') {\n    // The fatal: true option is only supported in builds that have ICU.\n    const options = process.versions.icu !== undefined ?\n      { fatal: true } : undefined;\n    const dec = new TextDecoder('utf-8'\x2C options);\n    try {\n      keyData = JSONParse(dec.decode(keyData));\n    } catch {\n      throw lazyDOMException('Invalid imported JWK key'\x2C 'DataError');\n    }\n  }\n\n  return importKey(format\x2C keyData\x2C unwrappedKeyAlgo\x2C extractable\x2C keyUsages);\n}\n\nfunction signVerify(algorithm\x2C key\x2C data\x2C signature) {\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  data = getArrayBufferOrView(data\x2C 'data');\n  let usage = 'sign';\n  if (signature !== undefined) {\n    signature = getArrayBufferOrView(signature\x2C 'signature');\n    usage = 'verify';\n  }\n\n  if (!ArrayPrototypeIncludes(key.usages\x2C usage) ||\n      algorithm.name !== key.algorithm.name) {\n    throw lazyDOMException(\n      `Unable to use this key to ${usage}`\x2C\n      'InvalidAccessError');\n  }\n\n  switch (algorithm.name) {\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSASSA-PKCS1-v1_5':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      return lazyRequire('internal/crypto/ec')\n        .ecdsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    // The following are Node.js specific extensions. They must begin with\n    // the `NODE-` prefix\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n  }\n  throw lazyDOMException('Unrecognized named.'\x2C 'NotSupportedError');\n}\n\nasync function sign(algorithm\x2C key\x2C data) {\n  return signVerify(algorithm\x2C key\x2C data);\n}\n\nasync function verify(algorithm\x2C key\x2C signature\x2C data) {\n  return signVerify(algorithm\x2C key\x2C data\x2C signature);\n}\n\nasync function cipherOrWrap(mode\x2C algorithm\x2C key\x2C data\x2C op) {\n  algorithm = normalizeAlgorithm(algorithm);\n  // We use a Node.js style error here instead of a DOMException because\n  // the WebCrypto spec is not specific what kind of error is to be thrown\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  // The key algorithm and cipher algorithm must match\x2C and the\n  // key must have the proper usage.\n  if (key.algorithm.name !== algorithm.name ||\n      !ArrayPrototypeIncludes(key.usages\x2C op)) {\n    throw lazyDOMException(\n      'The requested operation is not valid for the provided key'\x2C\n      'InvalidAccessError');\n  }\n\n  // For the Web Crypto API\x2C the input data can be any ArrayBuffer\x2C\n  // TypedArray\x2C or DataView.\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  // While WebCrypto allows for larger input buffer sizes\x2C we limit\n  // those to sizes that can fit within uint32_t because of limitations\n  // in the OpenSSL API.\n  validateMaxBufferLength(data\x2C 'data');\n\n  switch (algorithm.name) {\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      return lazyRequire('internal/crypto/aes')\n        .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-KW':\n      if (op === 'wrapKey' || op === 'unwrapKey') {\n        return lazyRequire('internal/crypto/aes')\n          .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n      }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nasync function encrypt(algorithm\x2C key\x2C data) {\n  return cipherOrWrap(kWebCryptoCipherEncrypt\x2C algorithm\x2C key\x2C data\x2C 'encrypt');\n}\n\nasync function decrypt(algorithm\x2C key\x2C data) {\n  return cipherOrWrap(kWebCryptoCipherDecrypt\x2C algorithm\x2C key\x2C data\x2C 'decrypt');\n}\n\n// The SubtleCrypto and Crypto classes are defined as part of the\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\n\nclass SubtleCrypto {}\nconst subtle = new SubtleCrypto();\n\nclass Crypto {}\nconst crypto = new Crypto();\n\nObjectDefineProperties(\n  Crypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'Crypto'\x2C\n    }\x2C\n    subtle: {\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: subtle\x2C\n    }\x2C\n    getRandomValues: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: getRandomValues\x2C\n    }\x2C\n    randomUUID: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: randomUUID\x2C\n    }\x2C\n    CryptoKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: CryptoKey\x2C\n    }\n  });\n\nObjectDefineProperties(\n  SubtleCrypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'SubtleCrypto'\x2C\n    }\x2C\n    encrypt: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: encrypt\x2C\n    }\x2C\n    decrypt: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: decrypt\x2C\n    }\x2C\n    sign: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: sign\x2C\n    }\x2C\n    verify: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: verify\x2C\n    }\x2C\n    digest: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: asyncDigest\x2C\n    }\x2C\n    generateKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: generateKey\x2C\n    }\x2C\n    deriveKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveKey\x2C\n    }\x2C\n    deriveBits: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveBits\x2C\n    }\x2C\n    importKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: importKey\x2C\n    }\x2C\n    exportKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: exportKey\x2C\n    }\x2C\n    wrapKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: wrapKey\x2C\n    }\x2C\n    unwrapKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: unwrapKey\x2C\n    }\n  });\n\nmodule.exports = {\n  Crypto\x2C\n  SubtleCrypto\x2C\n  crypto\x2C\n};\n
code-source-info,0xbb714f5a6ae,345,0,22589,C0O0C4O22589,,
code-creation,Function,10,243291,0xbb714f5ba0e,1061, node:internal/crypto/webcrypto:1:1,0xbb714f5a618,~
code-source-info,0xbb714f5ba0e,345,0,22589,C0O0C207O25C213O51C219O64C225O81C230O107C236O118C241O139C247O327C251O327C257O190C263O216C269O244C275O271C281O298C287O456C291O456C297O365C303O382C309O401C315O419C321O436C327O526C331O526C337O497C343O510C349O610C353O610C359O610C365O580C371O734C375O734C381O649C386O662C392O683C398O702C404O717C410O795C414O795C420O778C425O1008C429O1008C435O839C441O863C447O878C453O893C459O915C465O936C471O963C477O981C483O992C489O1074C493O1074C499O1052C505O1159C509O1159C515O1111C520O1142C526O1214C534O1214C557O20202C559O20202C569O20202C592O20254C594O20254C601O20302C615O20320C617O20340C630O20458C638O20524C653O20560C661O20647C676O20687C684O20774C699O20808C707O20895C718O20269C723O20958C737O20976C739O20996C752O21121C760O21208C775O21237C783O21324C798O21350C806O21437C821O21462C829O21549C844O21576C852O21663C867O21700C875O21787C890O21822C898O21909C913O21943C921O22030C936O22064C944O22151C959O22184C967O22271C982O22302C990O22389C1005O22420C1013O22507C1024O20919C1029O22531C1037O22552C1043O22562C1049O22578C1055O22546C1060O22588,,
tick,0x100e1c8f0,243333,1,0x100d097b0,3,0x0,0x311ed227c8ec,0x311ed227bbdd,0xbb714f5908b,0xbb714f58586,0x101460594,0x1b9b88158d60,0x1b9b88158c11,0x1b9b88158a70,0x100c999d0,0x1b9b881586fa,0x172aed068f35,0x172aed05e3c3,0x172aed04d6de,0x172aed04d2fa,0x172aed068c06,0xbb714f57df5,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f573da,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f56555,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53b69,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53291,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,243416,0xbb714f5dcce,2,SubtleCrypto node:internal/crypto/webcrypto:686:1,0xbb714f5acd0,~
code-source-info,0xbb714f5dcce,345,20165,20165,C1O20165,,
code-creation,LazyCompile,10,243416,0xbb714f5f6ee,2,Crypto node:internal/crypto/webcrypto:689:1,0xbb714f5ad20,~
code-source-info,0xbb714f5f6ee,345,20223,20223,C1O20223,,
code-creation,LazyCompile,10,243500,0xbb714f5f82e,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/rng.js:10:32,0xbb714f57c48,~
code-source-info,0xbb714f5f82e,344,193,257,C0O201C4O219C14O232C21O249C27O255,,
code-creation,LazyCompile,10,243541,0xbb714f5f96e,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v1.js:12:32,0xbb714f57230,~
code-source-info,0xbb714f5f96e,343,264,328,C0O272C4O290C14O303C21O320C27O326,,
code-creation,Eval,10,243666,0xbb714f5fd66,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/stringify.js:1:1,0xbb714f5fbf0,~
script-source,346,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/stringify.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require("./validate.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr\x2C offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws\x2C it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // "undefined" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0\x2C _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;
code-source-info,0xbb714f5fd66,346,0,1667,C0O0C4O1667,,
code-creation,Function,10,243750,0xbb714f5ff16,146, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/stringify.js:1:1,0xbb714f5fcd0,~
code-source-info,0xbb714f5ff16,346,0,1667,C0O0C18O15C22O22C30O37C38O22C43O80C44O96C48O123C51O146C56O123C60O123C62O407C64O407C66O425C68O430C72O430C77O446C80O456C87O464C94O473C102O473C108O485C116O486C122O456C127O439C132O412C135O1629C138O1640C140O1656C145O1666,,
code-creation,Eval,10,243916,0xbb714f6057e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/validate.js:1:1,0xbb714f60418,~
script-source,347,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/validate.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require("./regex.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;
code-source-info,0xbb714f6057e,347,0,410,C0O0C4O410,,
code-creation,Function,10,243958,0xbb714f60716,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/validate.js:1:1,0xbb714f604e8,~
code-source-info,0xbb714f60716,347,0,410,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O120C48O143C53O120C57O120C59O373C62O383C64O399C69O409,,
code-creation,Eval,10,244083,0xbb714f60c76,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/regex.js:1:1,0xbb714f60b20,~
script-source,348,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/regex.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;
code-source-info,0xbb714f60c76,348,0,267,C0O0C4O267,,
code-creation,Function,10,244083,0xbb714f60d56,43, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/regex.js:1:1,0xbb714f60be0,~
code-source-info,0xbb714f60d56,348,0,267,C0O15C4O22C12O37C20O22C25O80C26O96C30O121C35O240C37O256C42O266,,
tick,0x10119b300,244125,0,0x0,0,0x0,0xbb714f60d74,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f60746,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f5ff49,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f573e8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f56555,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53b69,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53291,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,244166,0xbb714f60f16,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/validate.js:10:32,0xbb714f605b0,~
code-source-info,0xbb714f60f16,347,199,263,C0O207C4O225C14O238C21O255C27O261,,
code-creation,LazyCompile,10,244166,0xbb714f61056,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/stringify.js:10:32,0xbb714f5fd98,~
code-source-info,0xbb714f61056,346,205,269,C0O213C4O231C14O244C21O261C27O267,,
code-creation,LazyCompile,10,244208,0xbb714f61366,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/index.js:79:32,0xbb714f558e0,~
code-source-info,0xbb714f61366,342,1701,1765,C0O1709C4O1727C14O1740C21O1757C27O1763,,
code-creation,Eval,10,244416,0xbb714f61746,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v3.js:1:1,0xbb714f615f0,~
script-source,349,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v3.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require("./v35.js"));\n\nvar _md = _interopRequireDefault(require("./md5.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0\x2C _v.default)('v3'\x2C 0x30\x2C _md.default);\nvar _default = v3;\nexports.default = _default;
code-source-info,0xbb714f61746,349,0,414,C0O0C4O414,,
code-creation,Function,10,244416,0xbb714f6188e,92, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v3.js:1:1,0xbb714f616b0,~
code-source-info,0xbb714f6188e,349,0,414,C0O0C5O15C9O22C17O37C25O22C30O80C31O96C35O116C38O139C43O116C48O172C51O195C56O172C61O333C72O358C77O341C83O383C84O387C86O403C91O413,,
code-creation,Eval,10,244625,0xbb714f61eae,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v35.js:1:1,0xbb714f61d08,~
script-source,350,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v35.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require("./stringify.js"));\n\nvar _parse = _interopRequireDefault(require("./parse.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name\x2C version\x2C hashfunc) {\n  function generateUUID(value\x2C namespace\x2C buf\x2C offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0\x2C _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values\x2C 0-255)');\n    } // Compute hash of namespace and value\x2C Per 4.3\n    // Future: Use spread syntax when supported on all platforms\x2C e.g. `bytes =\n    // hashfunc([...namespace\x2C ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value\x2C namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0\x2C _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}
code-source-info,0xbb714f61eae,350,0,2008,C0O0C4O2008,,
code-creation,Function,10,244750,0xbb714f620ee,120, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v35.js:1:1,0xbb714f61e18,~
code-source-info,0xbb714f620ee,350,0,2008,C0O0C27O15C31O22C39O37C47O22C52O80C54O96C58O108C60O134C66O120C70O162C73O185C78O162C82O162C84O227C87O250C92O227C96O227C98O594C100O594C102O634C104O646C108O665C110O665C112O705C114O717C119O2007,,
code-creation,LazyCompile,10,244750,0xbb714f62606,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v35.js:13:32,0xbb714f61ee0,~
code-source-info,0xbb714f62606,350,306,370,C0O314C4O332C14O345C21O362C27O368,,
code-creation,Eval,10,244875,0xbb714f629b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/parse.js:1:1,0xbb714f62850,~
script-source,351,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/parse.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require("./validate.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0\x2C _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0\x2C 8)\x2C 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9\x2C 13)\x2C 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14\x2C 18)\x2C 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19\x2C 23)\x2C 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24\x2C 36)\x2C 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;
code-source-info,0xbb714f629b6,351,0,1380,C0O0C4O1380,,
code-creation,Function,10,244958,0xbb714f62b4e,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/parse.js:1:1,0xbb714f62920,~
code-source-info,0xbb714f62b4e,351,0,1380,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O123C48O146C53O123C57O123C59O1346C62O1353C64O1369C69O1379,,
code-creation,LazyCompile,10,244958,0xbb714f62eb6,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/parse.js:10:32,0xbb714f629e8,~
code-source-info,0xbb714f62eb6,351,205,269,C0O213C4O231C14O244C21O261C27O267,,
code-creation,LazyCompile,10,245000,0xbb714f62fee,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v3.js:12:32,0xbb714f61778,~
code-source-info,0xbb714f62fee,349,249,313,C0O257C4O275C14O288C21O305C27O311,,
code-creation,Eval,10,245166,0xbb714f633b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/md5.js:1:1,0xbb714f63250,~
script-source,352,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/md5.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require("crypto"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes\x2C 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;
code-source-info,0xbb714f633b6,352,0,550,C0O0C4O550,,
code-creation,Function,10,245208,0xbb714f6354e,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/md5.js:1:1,0xbb714f63320,~
code-source-info,0xbb714f6354e,352,0,550,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O121C48O144C53O121C57O121C59O518C62O523C64O539C69O549,,
code-creation,LazyCompile,10,245250,0xbb714f63806,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/md5.js:10:32,0xbb714f633e8,~
code-source-info,0xbb714f63806,352,196,260,C0O204C4O222C14O235C21O252C27O258,,
code-creation,LazyCompile,10,245291,0xbb714f639ee,65,_default /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v35.js:32:18,0xbb714f61f80,~
code-source-info,0xbb714f639ee,350,742,2008,C0O742C21O1809C23O1827C42O1934C46O1953C48O1951C52O1960C56O1979C58O1977C62O1986C64O2006,,
tick,0x1a3726538,245416,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f56571,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53b69,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53291,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,245458,0xbb714f6401e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v4.js:1:1,0xbb714f63ea8,~
script-source,353,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v4.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require("./rng.js"));\n\nvar _stringify = _interopRequireDefault(require("./stringify.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options\x2C buf\x2C offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4\x2C set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer\x2C if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0\x2C _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;
code-source-info,0xbb714f6401e,353,0,860,C0O0C4O860,,
code-creation,Function,10,245500,0xbb714f641be,84, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v4.js:1:1,0xbb714f63f88,~
code-source-info,0xbb714f641be,353,0,860,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O118C48O141C53O118C57O118C59O181C62O204C67O181C71O181C73O829C76O833C78O849C83O859,,
code-creation,LazyCompile,10,245541,0xbb714f644fe,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v4.js:12:32,0xbb714f64050,~
code-source-info,0xbb714f644fe,353,264,328,C0O272C4O290C14O303C21O320C27O326,,
code-creation,Eval,10,245625,0xbb714f648ce,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v5.js:1:1,0xbb714f64778,~
script-source,354,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v5.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require("./v35.js"));\n\nvar _sha = _interopRequireDefault(require("./sha1.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0\x2C _v.default)('v5'\x2C 0x50\x2C _sha.default);\nvar _default = v5;\nexports.default = _default;
code-source-info,0xbb714f648ce,354,0,417,C0O0C4O417,,
code-creation,Function,10,245666,0xbb714f64a16,92, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v5.js:1:1,0xbb714f64838,~
code-source-info,0xbb714f64a16,354,0,417,C0O0C5O15C9O22C17O37C25O22C30O80C31O96C35O116C38O139C43O116C48O173C51O196C56O173C61O335C72O361C77O343C83O386C84O390C86O406C91O416,,
code-creation,LazyCompile,10,245708,0xbb714f64c8e,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/v5.js:12:32,0xbb714f64900,~
code-source-info,0xbb714f64c8e,354,251,315,C0O259C4O277C14O290C21O307C27O313,,
code-creation,Eval,10,245791,0xbb714f6503e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/sha1.js:1:1,0xbb714f64ed8,~
script-source,355,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/sha1.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require("crypto"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes\x2C 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;
code-source-info,0xbb714f6503e,355,0,553,C0O0C4O553,,
code-creation,Function,10,245833,0xbb714f651d6,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/sha1.js:1:1,0xbb714f64fa8,~
code-source-info,0xbb714f651d6,355,0,553,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O121C48O144C53O121C57O121C59O520C62O526C64O542C69O552,,
code-creation,LazyCompile,10,245875,0xbb714f6548e,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/sha1.js:10:32,0xbb714f65070,~
code-source-info,0xbb714f6548e,355,196,260,C0O204C4O222C14O235C21O252C27O258,,
tick,0x1016374d4,246500,0,0x0,4,0x0,0x172aed0513f9,0x172aed050af7,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0xbb714f5658d,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53b69,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f53291,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,247166,0xbb714f65856,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/nil.js:1:1,0xbb714f65700,~
script-source,356,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/nil.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;
code-source-info,0xbb714f65856,356,0,188,C0O0C4O188,,
code-creation,Function,10,247166,0xbb714f65936,41, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/nil.js:1:1,0xbb714f657c0,~
code-source-info,0xbb714f65936,356,0,188,C0O15C4O22C12O37C20O22C25O80C26O96C30O121C33O161C35O177C40O187,,
code-creation,Eval,10,247375,0xbb714f65d6e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/version.js:1:1,0xbb714f65c08,~
script-source,357,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/version.js,"use strict";\n\nObject.defineProperty(exports\x2C "__esModule"\x2C {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require("./validate.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0\x2C _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14\x2C 1)\x2C 16);\n}\n\nvar _default = version;\nexports.default = _default;
code-source-info,0xbb714f65d6e,357,0,474,C0O0C4O474,,
code-creation,Function,10,247416,0xbb714f65f06,70, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/version.js:1:1,0xbb714f65cd8,~
code-source-info,0xbb714f65f06,357,0,474,C0O0C15O15C19O22C27O37C35O22C40O80C41O96C45O123C48O146C53O123C57O123C59O438C62O447C64O463C69O473,,
code-creation,LazyCompile,10,247458,0xbb714f661ae,28,_interopRequireDefault /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid/dist/version.js:10:32,0xbb714f65da0,~
code-source-info,0xbb714f661ae,357,205,269,C0O213C4O231C14O244C21O261C27O267,,
code-creation,Eval,10,247708,0xbb714f6a0de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid-parse/uuid-parse.js:1:1,0xbb714f69f68,~
script-source,358,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid-parse/uuid-parse.js,'use strict';\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s\x2C buf\x2C offset) {\n  var i = (buf && offset) || 0;\n  var ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g\x2C function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf\x2C offset) {\n  var i = offset || 0;\n  var bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = {\n  parse: parse\x2C\n  unparse: unparse\n};\n
code-source-info,0xbb714f6a0de,358,0,1215,C0O0C4O1215,,
code-creation,Function,10,247791,0xbb714f6a2ae,127, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid-parse/uuid-parse.js:1:1,0xbb714f6a048,~
code-source-info,0xbb714f6a2ae,358,0,1215,C0O0C15O77C17O77C19O98C20O98C22O115C24O120C28O120C33O136C38O155C45O164C53O164C59O176C67O177C72O150C76O190C84O211C90O216C94O128C99O102C102O1158C109O1186C115O1204C121O1173C126O1214,,
tick,0x10100ae20,247833,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f5329a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51eb6,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,247916,0xbb714f6bcc6,5,get node:buffer:1263:8,0x30d75ba7180,~
code-source-info,0xbb714f6bcc6,18,37117,37149,C0O37122C4O37147,,
code-creation,LazyCompile,10,248000,0xbb714f6bfbe,255,hyperid /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/hyperid.js:8:18,0xbb714f53040,~
code-source-info,0xbb714f6bfbe,340,177,1074,C0O177C23O206C24O206C26O228C27O228C29O236C35O273C37O285C41O307C48O346C54O337C56O379C62O370C64O398C71O414C74O414C77O412C81O425C88O441C92O462C100O478C108O462C113O462C115O507C119O512C124O523C132O512C137O507C139O542C146O546C156O564C161O571C170O588C175O601C193O687C215O759C227O777C238O777C246O607C251O601C252O796C254O811,,
code-creation,LazyCompile,10,248041,0xbb714f6c28e,63,randomUUID node:internal/crypto/random:395:20,0xfcf8143a1a0,~
code-source-info,0xbb714f6c28e,251,10788,11079,C0O10802C4O10833C12O10833C17O10918C23O10883C31O10936C39O10936C44O11008C51O11037C59O11059C62O11077,,
code-creation,LazyCompile,10,248083,0xbb714f6d636,125,getBufferedUUID node:internal/crypto/random:377:25,0xfcf8143a100,~
code-source-info,0xbb714f6d636,251,10248,10527,C0O10255C10O10268C15O10286C17O10284C21O10268C28O10264C34O10301C40O10333C50O10339C55O10333C56O10385C62O10399C67O10406C72O10421C75O10406C79O10434C83O10457C89O10464C91O10462C97O10444C103O10478C108O10499C113O10509C115O10519C119O10485C124O10525,,
code-creation,LazyCompile,10,248125,0xbb714f6d876,190,randomFillSync node:internal/crypto/random:110:24,0xfcf81439e80,~
code-source-info,0xbb714f6d876,251,2476,3121,C16O2504C21O2509C29O2535C32O2535C38O2565C56O2571C61O2565C62O2695C71O2722C74O2769C85O2731C91O2785C95O2826C102O2837C108O2862C111O2911C125O2869C131O2931C132O2940C137O2951C139O2962C140O2978C147O3002C161O2978C167O3069C172O3069C178O3074C182O3081C184O3094C186O3094C187O3108C189O3119,,
code-creation,LazyCompile,10,248166,0xbb714f6dabe,98,assertOffset node:internal/crypto/random:62:22,0xfcf81439d68,~
code-source-info,0xbb714f6dabe,251,1117,1462,C0O1151C8O1151C13O1187C15O1197C23O1231C30O1247C33O1231C39O1270C44O1274C52O1304C58O1326C63O1337C76O1388C86O1343C91O1337C92O1417C94O1431C97O1437,,
code-creation,LazyCompile,10,248208,0xbb714f6dc2e,293,serializeUUID node:internal/crypto/random:352:23,0xfcf8143a0b0,~
code-source-info,0xbb714f6dc2e,251,9518,10222,C13O9558C16O9558C20O9617C22O9637C25O9633C31O9674C34O9666C37O9662C40O9647C46O9707C49O9699C52O9695C55O9680C61O9740C64O9732C67O9728C70O9713C76O9746C82O9783C85O9775C88O9771C91O9756C97O9816C100O9808C103O9804C106O9789C112O9822C118O9860C121O9852C124O9865C127O9873C130O9847C133O9832C139O9908C142O9900C145O9896C148O9881C154O9914C160O9952C163O9944C166O9957C169O9965C175O9939C178O9924C184O10000C187O9992C190O9988C193O9973C199O10006C205O10043C208O10035C211O10031C214O10016C220O10077C223O10069C226O10065C229O10050C235O10111C238O10103C241O10099C244O10084C250O10145C253O10137C256O10133C259O10118C265O10179C268O10171C271O10167C274O10152C280O10213C283O10205C286O10201C289O10186C292O10220,,
code-creation,LazyCompile,10,248250,0xbb714f6df46,103,getHexBytes node:internal/crypto/random:341:21,0xfcf8143a060,~
code-source-info,0xbb714f6df46,251,9215,9494,C0O9222C6O9261C18O9277C26O9275C32O9310C34O9315C36O9317C39O9331C43O9315C48O9364C56O9364C62O9402C69O9421C81O9421C86O9419C90O9340C95O9297C98O9471C102O9492,,
code-creation,LazyCompile,10,248333,0xbb714f6e1ee,214,baseId /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hyperid/hyperid.js:63:17,0xbb714f53108,~
code-source-info,0xbb714f6e1ee,340,1538,1972,C0O1571C5O1578C12O1583C15O1590C20O1590C26O1578C32O1600C40O1601C46O1641C51O1650C55O1669C57O1684C60O1681C66O1689C73O1711C76O1708C82O1716C87O1753C96O1765C100O1753C109O1770C113O1802C126O1802C133O1821C146O1822C152O1841C153O1848C155O1863C158O1860C164O1868C171O1890C174O1887C180O1895C185O1926C194O1938C198O1926C207O1943C210O1948C211O1955C213O1970,,
code-creation,LazyCompile,10,248375,0xbb714f6e4d6,104,parse /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid-parse/uuid-parse.js:12:15,0xbb714f6a110,~
code-source-info,0xbb714f6e4d6,358,296,642,C0O296C9O325C15O333C18O325C20O358C21O358C23O364C29O368C31O385C36O385C41O398C56O399C62O591C67O591C72O603C80O607C85O613C89O609C94O617C98O581C101O629C103O640,,
code-creation,RegExp,3,248416,0x107513900,984,[0-9a-f]{2}
code-creation,LazyCompile,10,248416,0xbb714f6e766,47, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/uuid-parse/uuid-parse.js:17:51,0xbb714f6e408,~
code-source-info,0xbb714f6e766,358,431,525,C0O443C5O450C10O483C18O487C23O493C27O489C38O509C41O497C46O524,,
code-creation,LazyCompile,10,248458,0xbb714f6e93e,92,fromObject node:buffer:494:20,0x30d75ba4e60,~
code-source-info,0xbb714f6e93e,18,14007,14294,C0O14025C8O14049C11O14070C16O14049C22O14100C30O14129C35O14136C40O14153C41O14164C44O14171C48O14190C49O14206C56O14211C63O14227C66O14244C71O14227C77O14257C80O14282C85O14264C89O14288C91O14293,,
code-creation,LazyCompile,10,248500,0xbb714f6ead6,159,fromArrayLike node:buffer:479:23,0x30d75ba4e10,~
code-source-info,0xbb714f6ead6,18,13614,13986,C0O13632C6O13639C11O13649C16O13656C21O13673C22O13684C30O13701C34O13710C37O13691C42O13732C49O13742C54O13753C56O13751C59O13739C64O13772C67O13772C70O13800C77O13815C82O13826C85O13842C92O13800C98O13855C111O13855C116O13894C121O13912C131O13905C137O13924C140O13924C143O13941C145O13950C146O13957C153O13964C158O13984,,
code-creation,LazyCompile,10,248500,0xbb714f6eca6,12,slice node:buffer:642:12,0x30d75ba6068,~
code-source-info,0xbb714f6eca6,18,18605,18653,C0O18630C5O18630C11O18653,,
code-creation,Eval,10,248833,0xbb714f6f15e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js:1:1,0xbb714f6eff8,~
script-source,359,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js,'use strict'\n\nconst methods = require('./httpMethods')\n\n// this is a build request factory\x2C that curries the build request function\n// and sets the default for it\nfunction requestBuilder (defaults) {\n  // these need to be defined per request builder creation\x2C because of the way\n  // headers don't get deep copied\n  const builderDefaults = {\n    method: 'GET'\x2C\n    path: '/'\x2C\n    headers: {}\x2C\n    body: Buffer.alloc(0)\x2C\n    hostname: 'localhost'\x2C\n    setupRequest: reqData => reqData\x2C\n    port: 80\n  }\n\n  defaults = Object.assign(builderDefaults\x2C defaults)\n\n  // buildRequest takes an object\x2C and turns it into a buffer representing the\n  // http request.\n  // second parameter is passed to setupRequest\x2C when relevant\n  // will return null if setupRequest returns falsey result\n  return function buildRequest (reqData\x2C context) {\n    // below is a hack to enable deep extending of the headers so the default\n    // headers object isn't overwritten by accident\n    reqData = reqData || {}\n    reqData.headers = Object.assign({}\x2C defaults.headers\x2C reqData.headers)\n\n    reqData = Object.assign({}\x2C defaults\x2C reqData)\n\n    reqData = reqData.setupRequest(reqData\x2C context)\n    if (!reqData) {\n      return null\n    }\n\n    // for some reason some tests fail with method === undefined\n    // the reqData.method should be set to SOMETHING in this case\n    // cannot find reason for failure if `|| 'GET'` is taken out\n    const method = reqData.method\n    const path = reqData.path\n    const headers = reqData.headers\n    const body = reqData.body\n\n    let host = reqData.headers.host || reqData.host\n    if (!host) {\n      const hostname = reqData.hostname\n      const port = reqData.port\n      host = hostname + ':' + port\n    }\n\n    if (reqData.auth) {\n      const encodedAuth = Buffer.from(reqData.auth).toString('base64')\n      headers.Authorization = `Basic ${encodedAuth}`\n    }\n\n    if (methods.indexOf(method) < 0) {\n      throw new Error(`${method} HTTP method is not supported`)\n    }\n\n    const baseReq = [\n      `${method} ${path} HTTP/1.1`\x2C\n      `Host: ${host}`\x2C\n      'Connection: keep-alive'\n    ]\n\n    let bodyBuf\n\n    if (typeof body === 'string') {\n      bodyBuf = Buffer.from(body)\n    } else if (Buffer.isBuffer(body)) {\n      bodyBuf = body\n    } else if (body && Array.isArray(body._)) {\n      // when the request body passed on the CLI includes brackets like for\n      // a JSON array\x2C the subarg parser will oddly provide the contents as\n      // `body._`. Work around this specific issue.\n      bodyBuf = Buffer.from(`[${body._}]`)\n    } else if (body) {\n      throw new Error('body must be either a string or a buffer')\n    }\n\n    if (bodyBuf && bodyBuf.length > 0) {\n      const idCount = reqData.idReplacement\n        ? (bodyBuf.toString().match(/\\[<id>\\]/g) || []).length\n        : 0\n      headers['Content-Length'] = `${bodyBuf.length + (idCount * 27)}`\n    }\n\n    for (const [key\x2C header] of Object.entries(headers)) {\n      baseReq.push(`${key}: ${header}`)\n    }\n\n    let req = Buffer.from(baseReq.join('\\r\\n') + '\\r\\n\\r\\n'\x2C 'utf8')\n\n    if (bodyBuf && bodyBuf.length > 0) {\n      req = Buffer.concat([req\x2C bodyBuf])\n    }\n\n    return req\n  }\n}\n\nmodule.exports = requestBuilder\n
code-source-info,0xbb714f6f15e,359,0,3206,C0O0C4O3206,,
code-creation,Function,10,249000,0xbb714f6f27e,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js:1:1,0xbb714f6f0c8,~
code-source-info,0xbb714f6f27e,359,0,3206,C0O0C13O30C16O30C20O30C22O3174C24O3189C29O3205,,
tick,0x1a37298d4,249000,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51ed3,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,249208,0xbb714f6f9de,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpMethods.js:1:1,0xbb714f6f888,~
script-source,360,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpMethods.js,// most http methods taken from RFC 7231\n// PATCH is defined in RFC 5789\nmodule.exports = [\n  'GET'\x2C\n  'HEAD'\x2C\n  'POST'\x2C\n  'PUT'\x2C\n  'DELETE'\x2C\n  'CONNECT'\x2C\n  'OPTIONS'\x2C\n  'TRACE'\x2C\n  'PATCH'\n]\n
code-source-info,0xbb714f6f9de,360,0,191,C0O0C4O191,,
code-creation,Function,10,249250,0xbb714f6fae6,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpMethods.js:1:1,0xbb714f6f948,~
code-source-info,0xbb714f6fae6,360,0,191,C0O73C4O88C9O190,,
code-creation,Eval,10,250125,0xbb714f72286,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1:1,0xbb714f71a00,~
script-source,361,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js,/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports="npm" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas\x2C DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]'\x2C\n    arrayTag = '[object Array]'\x2C\n    boolTag = '[object Boolean]'\x2C\n    dateTag = '[object Date]'\x2C\n    errorTag = '[object Error]'\x2C\n    funcTag = '[object Function]'\x2C\n    genTag = '[object GeneratorFunction]'\x2C\n    mapTag = '[object Map]'\x2C\n    numberTag = '[object Number]'\x2C\n    objectTag = '[object Object]'\x2C\n    promiseTag = '[object Promise]'\x2C\n    regexpTag = '[object RegExp]'\x2C\n    setTag = '[object Set]'\x2C\n    stringTag = '[object String]'\x2C\n    symbolTag = '[object Symbol]'\x2C\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]'\x2C\n    dataViewTag = '[object DataView]'\x2C\n    float32Tag = '[object Float32Array]'\x2C\n    float64Tag = '[object Float64Array]'\x2C\n    int8Tag = '[object Int8Array]'\x2C\n    int16Tag = '[object Int16Array]'\x2C\n    int32Tag = '[object Int32Array]'\x2C\n    uint8Tag = '[object Uint8Array]'\x2C\n    uint8ClampedTag = '[object Uint8ClampedArray]'\x2C\n    uint16Tag = '[object Uint16Array]'\x2C\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map\x2C pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0]\x2C pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set\x2C value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array\x2C iteratee) {\n  var index = -1\x2C\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index]\x2C index\x2C array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array\x2C values) {\n  var index = -1\x2C\n      length = values.length\x2C\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array\x2C iteratee\x2C accumulator\x2C initAccum) {\n  var index = -1\x2C\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator\x2C array[index]\x2C index\x2C array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n\x2C iteratee) {\n  var index = -1\x2C\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object\x2C key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object\x2C else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1\x2C\n      result = Array(map.size);\n\n  map.forEach(function(value\x2C key) {\n    result[++index] = [key\x2C value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func\x2C transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1\x2C\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype\x2C\n    funcProto = Function.prototype\x2C\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar\x2C '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g\x2C '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined\x2C\n    Symbol = root.Symbol\x2C\n    Uint8Array = root.Uint8Array\x2C\n    getPrototype = overArg(Object.getPrototypeOf\x2C Object)\x2C\n    objectCreate = Object.create\x2C\n    propertyIsEnumerable = objectProto.propertyIsEnumerable\x2C\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols\x2C\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined\x2C\n    nativeKeys = overArg(Object.keys\x2C Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root\x2C 'DataView')\x2C\n    Map = getNative(root\x2C 'Map')\x2C\n    Promise = getNative(root\x2C 'Promise')\x2C\n    Set = getNative(root\x2C 'Set')\x2C\n    WeakMap = getNative(root\x2C 'WeakMap')\x2C\n    nativeCreate = getNative(Object\x2C 'create');\n\n/** Used to detect maps\x2C sets\x2C and weakmaps. */\nvar dataViewCtorString = toSource(DataView)\x2C\n    mapCtorString = toSource(Map)\x2C\n    promiseCtorString = toSource(Promise)\x2C\n    setCtorString = toSource(Set)\x2C\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined\x2C\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1\x2C\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0]\x2C entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed\x2C else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data\x2C key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists\x2C else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data\x2C key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key\x2C value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1\x2C\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0]\x2C entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed\x2C else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__\x2C\n      index = assocIndexOf(data\x2C key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data\x2C index\x2C 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__\x2C\n      index = assocIndexOf(data\x2C key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists\x2C else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__\x2C key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key\x2C value) {\n  var data = this.__data__\x2C\n      index = assocIndexOf(data\x2C key);\n\n  if (index < 0) {\n    data.push([key\x2C value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1\x2C\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0]\x2C entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash\x2C\n    'map': new (Map || ListCache)\x2C\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed\x2C else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this\x2C key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this\x2C key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists\x2C else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this\x2C key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key\x2C value) {\n  getMapData(this\x2C key).set(key\x2C value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed\x2C else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists\x2C else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key\x2C value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key\x2C value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key\x2C value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value\x2C inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length\x2C String)\n    : [];\n\n  var length = result.length\x2C\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value\x2C key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key\x2C length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object\x2C key\x2C value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object\x2C key) && eq(objValue\x2C value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value\x2C else `-1`.\n */\nfunction assocIndexOf(array\x2C key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0]\x2C key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object\x2C source) {\n  return object && copyObject(source\x2C keys(source)\x2C object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value\x2C isDeep\x2C isFull\x2C customizer\x2C key\x2C object\x2C stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value\x2C key\x2C object\x2C stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value\x2C result);\n    }\n  } else {\n    var tag = getTag(value)\x2C\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value\x2C isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value\x2C baseAssign(result\x2C value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value\x2C tag\x2C baseClone\x2C isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value\x2C result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value\x2C function(subValue\x2C key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result\x2C key\x2C baseClone(subValue\x2C isDeep\x2C isFull\x2C customizer\x2C key\x2C value\x2C stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object\x2C keysFunc\x2C symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result\x2C symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function\x2C\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object\x2C key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer\x2C isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView\x2C isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer\x2C dataView.byteOffset\x2C dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map\x2C isDeep\x2C cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map)\x2C true) : mapToArray(map);\n  return arrayReduce(array\x2C addMapEntry\x2C new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source\x2C reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set\x2C isDeep\x2C cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set)\x2C true) : setToArray(set);\n  return arrayReduce(array\x2C addSetEntry\x2C new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray\x2C isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer\x2C typedArray.byteOffset\x2C typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source\x2C array) {\n  var index = -1\x2C\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source\x2C props\x2C object\x2C customizer) {\n  object || (object = {});\n\n  var index = -1\x2C\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key]\x2C source[key]\x2C key\x2C object\x2C source)\n      : undefined;\n\n    assignValue(object\x2C key\x2C newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source\x2C object) {\n  return copyObject(source\x2C getSymbols(source)\x2C object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object\x2C keys\x2C getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map\x2C key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native\x2C else `undefined`.\n */\nfunction getNative(object\x2C key) {\n  var value = getValue(object\x2C key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols\x2C Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views\x2C maps\x2C sets\x2C and weak maps in IE 11\x2C\n// for data views in Edge < 14\x2C and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value)\x2C\n        Ctor = result == objectTag ? value.constructor : undefined\x2C\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length\x2C\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array\x2C 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`\x2C `Date`\x2C `Error`\x2C `Number`\x2C `RegExp`\x2C or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object\x2C tag\x2C cloneFunc\x2C isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object\x2C isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object\x2C isDeep);\n\n    case mapTag:\n      return cloneMap(object\x2C isDeep\x2C cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object\x2C isDeep\x2C cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index\x2C else `false`.\n */\nfunction isIndex(value\x2C length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable\x2C else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked\x2C else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype\x2C else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor\x2C\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }\x2C { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value\x2C true\x2C true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent\x2C else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object\x2C object);\n * // => true\n *\n * _.eq(object\x2C other);\n * // => false\n *\n * _.eq('a'\x2C 'a');\n * // => true\n *\n * _.eq('a'\x2C Object('a'));\n * // => false\n *\n * _.eq(NaN\x2C NaN);\n * // => true\n */\nfunction eq(value\x2C other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object\x2C\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1\x2C 2\x2C 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value\x2C 'callee') &&\n    (!propertyIsEnumerable.call(value\x2C 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array\x2C else `false`.\n * @example\n *\n * _.isArray([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like\x2C else `false`.\n * @example\n *\n * _.isArrayLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object\x2C\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer\x2C else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function\x2C else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length\x2C else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays\x2C functions\x2C objects\x2C regexes\x2C `new Number(0)`\x2C and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object\x2C else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of "object".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like\x2C else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a'\x2C 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0'\x2C '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2\x2C _.stubArray);\n *\n * console.log(arrays);\n * // => [[]\x2C []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2\x2C _.stubFalse);\n * // => [false\x2C false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n
code-source-info,0xbb714f72286,361,0,45025,C0O0C4O45025,,
code-creation,Function,10,251833,0xbb714f741ee,2100, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1:1,0xbb714f721f0,~
code-source-info,0xbb714f741ee
code-creation,Function,10,251958,0xbb714f74e4e,61, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:298:27,0xbb714f73c08,~
code-source-info,0xbb714f74e4e,361,8644,8788,C0O8661C5O8670C12O8675C17O8700C26O8719C31O8724C40O8670C46O8743C53O8774C60O8786,,
tick,0x100c56610,251958,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51edc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a375c030,251958,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51edc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,RegExp,3,252041,0x107513d40,984,[\\\\^$.*+?()[\\]{}|]
tick,0x1a37298d4,252750,0,0x0,4,0x0,0x101409050,0xbb714f746c1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51edc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,254000,0,0x0,4,0x0,0x101409050,0xbb714f746c1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51edc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,255291,0,0x0,4,0x0,0x101409050,0xbb714f746c1,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0xbb714f51edc,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,256000,0x107514180,5716,realpathSync node:fs:2408:22,0x6a337a1eab0,*
code-source-info,0xxe898a5db320S0xe898a5db2d0S0x6a337a1ea60S0xe898a5e87d8S0x6a337a1c650S0x6a337a26ea8S0xe898a5e8648S0x30d75b99d28S0x6a337a27880S0x6a337a26e58S0x6a337a26860S0x6a337a26ef8S0x30d75b96d28S0x6a337a1ea10S0x30d75ba4f68
code-creation,RegExp,3,256125,0x107515b60,1888,hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])
code-creation,LazyCompile,10,256125,0xbb714f7cb5e,5,get node:internal/bootstrap/pre_execution:326:8,0x3a1583d1c580,~
code-source-info,0xbb714f7cb5e,91,10306,10338,C0O10317C4O10332,,
code-creation,LazyCompile,10,256166,0xbb714f7cca6,18,overArg /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:266:17,0xbb714f725b0,~
code-source-info,0xbb714f7cca6,361,7915,7999,C0O7915C13O7937C17O7997,,
code-creation,LazyCompile,10,256166,0xbb714f7cdae,24,getNative /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1178:19,0xbb714f73578,~
code-source-info,0xbb714f7cdae,361,31490,31594,C0O31520C3O31520C9O31545C12O31552C23O31592,,
code-creation,LazyCompile,10,256208,0xbb714f7ce96,14,getValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:218:18,0xbb714f72498,~
code-source-info,0xbb714f7ce96,361,6720,6788,C0O6738C10O6780C13O6786,,
code-creation,LazyCompile,10,256208,0xbb714f7cf8e,64,baseIsNative /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:949:22,0xbb714f730c8,~
code-source-info,0xbb714f7cf8e,361,25295,25501,C0O25307C3O25312C12O25331C18O25354C19O25367C20O25388C23O25389C32O25410C45O25477C53O25482C58O25477C63O25499,,
code-creation,LazyCompile,10,256250,0xbb714f7d0d6,23,isObject /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1644:18,0xbb714f73a78,~
code-source-info,0xbb714f7d0d6,361,42976,43076,C0O42999C4O43015C12O43039C19O43059C22O43074,,
code-creation,LazyCompile,10,256250,0xbb714f7d1be,15,isMasked /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1343:18,0xbb714f73758,~
code-source-info,0xbb714f7d1be,361,36203,36260,C0O36214C11O36249C14O36258,,
code-creation,LazyCompile,10,256291,0xbb714f7d2be,40,isFunction /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1581:20,0xbb714f739d8,~
code-source-info,0xbb714f7d2be,361,41428,41701,C0O41607C3O41607C12O41640C17O41640C27O41660C29O41671C36O41689C39O41699,,
code-creation,LazyCompile,10,256291,0xbb714f7d47e,60,toSource /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1368:18,0xbb714f737f8,~
code-source-info,0xbb714f7d47e,361,36807,36978,C0O36818C8O36854C11O36874C16O36874C21O36885C38O36921C40O36934C43O36940C57O36966C59O36976,,
code-creation,RegExp,3,256375,0x107516320,1400,^function.*?\\(\\) \\{ \\[native code\\] \\}$
code-creation,LazyCompile,10,256375,0xbb714f7d62e,14,baseGetTag /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:937:20,0xbb714f73078,~
code-source-info,0xbb714f7d62e,361,25005,25053,C0O25017C3O25039C8O25039C13O25051,,
tick,0x1a372727c,256625,1,0x100cd4c94,6,0x0,0x172aed04ff2e,0x172aed04fc19,0x1b9b8816ec96,0x172aed050aa8,0x172aed04ea37,0x172aed04d638,0x172aed04d2fa,0x172aed068c06,0xbb714f51ee5,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,256958,0xbb714f7e0b6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.chunk/index.js:1:1,0xbb714f7dd90,~
script-source,362,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.chunk/index.js,/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports="npm" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas\x2C DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0\x2C\n    MAX_SAFE_INTEGER = 9007199254740991\x2C\n    MAX_INTEGER = 1.7976931348623157e+308\x2C\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]'\x2C\n    genTag = '[object GeneratorFunction]'\x2C\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil\x2C\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array\x2C start\x2C end) {\n  var index = -1\x2C\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index\x2C else `false`.\n */\nfunction isIndex(value\x2C length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call\x2C\n *  else `false`.\n */\nfunction isIterateeCall(value\x2C index\x2C object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index\x2C object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index]\x2C value);\n  }\n  return false;\n}\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly\x2C the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a'\x2C 'b'\x2C 'c'\x2C 'd']\x2C 2);\n * // => [['a'\x2C 'b']\x2C ['c'\x2C 'd']]\n *\n * _.chunk(['a'\x2C 'b'\x2C 'c'\x2C 'd']\x2C 3);\n * // => [['a'\x2C 'b'\x2C 'c']\x2C ['d']]\n */\nfunction chunk(array\x2C size\x2C guard) {\n  if ((guard ? isIterateeCall(array\x2C size\x2C guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size)\x2C 0);\n  }\n  var length = array ? array.length : 0;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0\x2C\n      resIndex = 0\x2C\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array\x2C index\x2C (index += size));\n  }\n  return result;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent\x2C else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object\x2C object);\n * // => true\n *\n * _.eq(object\x2C other);\n * // => false\n *\n * _.eq('a'\x2C 'a');\n * // => true\n *\n * _.eq('a'\x2C Object('a'));\n * // => false\n *\n * _.eq(NaN\x2C NaN);\n * // => true\n */\nfunction eq(value\x2C other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like\x2C else `false`.\n * @example\n *\n * _.isArrayLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function\x2C else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length\x2C else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays\x2C functions\x2C objects\x2C regexes\x2C `new Number(0)`\x2C and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object\x2C else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of "object".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like\x2C else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol\x2C else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value)\x2C\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim\x2C '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2)\x2C isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = chunk;\n
code-source-info,0xbb714f7e0b6,362,0,11608,C0O0C4O11608,,
code-creation,Function,10,257416,0xbb714f7e6e6,194, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.chunk/index.js:1:1,0xbb714f7e020,~
code-source-info,0xbb714f7e6e6,362,0,11608,C0O0C88O462C90O462C92O492C94O492C96O528C98O528C100O563C102O563C104O629C106O629C108O663C110O663C112O709C114O709C116O796C120O796C122O888C126O888C128O972C132O972C134O1046C138O1046C140O1124C144O1124C146O1230C149O1230C151O1303C155O1310C160O1494C164O1482C166O1611C170O1616C174O1611C176O1638C180O1643C184O1638C186O11584C188O11599C193O11607,,
tick,0x10155f7fc,257791,0,0x0,4,0x0,0x172aed04c92c,0x172aed04d706,0x172aed04d2fa,0x172aed068c06,0xbb714f51eee,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fd667,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fae91,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x2779b46fa37a,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d3055183f9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,258125,0x324f23ca589e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.flatten/index.js:1:1,0xbb714f7fe58,~
script-source,363,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.flatten/index.js,/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports="npm" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas\x2C DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]'\x2C\n    funcTag = '[object Function]'\x2C\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array\x2C values) {\n  var index = -1\x2C\n      length = values.length\x2C\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol\x2C\n    propertyIsEnumerable = objectProto.propertyIsEnumerable\x2C\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array\x2C depth\x2C predicate\x2C isStrict\x2C result) {\n  var index = -1\x2C\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value\x2C depth - 1\x2C predicate\x2C isStrict\x2C result);\n      } else {\n        arrayPush(result\x2C value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable\x2C else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1\x2C [2\x2C [3\x2C [4]]\x2C 5]]);\n * // => [1\x2C 2\x2C [3\x2C [4]]\x2C 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array\x2C 1) : [];\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object\x2C\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1\x2C 2\x2C 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value\x2C 'callee') &&\n    (!propertyIsEnumerable.call(value\x2C 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array\x2C else `false`.\n * @example\n *\n * _.isArray([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like\x2C else `false`.\n * @example\n *\n * _.isArrayLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object\x2C\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function\x2C else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length\x2C else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays\x2C functions\x2C objects\x2C regexes\x2C `new Number(0)`\x2C and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object\x2C else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of "object".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like\x2C else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1\x2C 2\x2C 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = flatten;\n
code-source-info,0x324f23ca589e,363,0,8896,C0O0C4O8896,,
code-creation,Function,10,258500,0x324f23ca5d96,239, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.flatten/index.js:1:1,0x324f23ca5808,~
code-source-info,0x324f23ca5d96,363,0,8896,C0O0C70O470C72O470C74O547C76O547C78O583C80O583C82O617C84O617C86O716C93O745C98O755C102O762C107O773C110O769C115O783C119O843C126O870C131O878C135O883C140O894C143O890C148O904C152O971C158O985C167O997C172O1020C176O1496C180O1503C185O1597C189O1585C191O1786C195O1774C197O1849C202O1896C206O1884C208O1941C212O1957C219O1941C221O4936C225O4942C229O4936C231O8870C233O8885C238O8895,,
code-creation,Eval,10,258791,0x324f23ca72a6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:1:1,0x324f23ca7150,~
script-source,364,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js,'use strict'\n\n/**\n * A queue (FIFO) to hold pipelined requests and link metadata to them as the response is received from the server.\n * This facilitates the handling of responses when the HTTP requests are pipelined.\n * A queue is the best structure for this because the sever reponses are provided in the same order as the requests\n * Cf. https://en.wikipedia.org/wiki/HTTP_pipelining\n *\n * /!\\ it's up to you as a user to ensure that the queue is populated if using\n * the functionality. This implementation will fail silently if e.g. you try to\n * call any function accessing the queue while it's empty.\n */\nclass PipelinedRequestsQueue {\n  constructor () {\n    this.pendingRequests = []\n  }\n\n  insertRequest (req) {\n    this.pendingRequests.push({\n      req\x2C\n      bytes: 0\x2C\n      body: ''\x2C\n      headers: {}\x2C\n      startTime: process.hrtime()\n    })\n  }\n\n  peek () {\n    if (this.pendingRequests.length > 0) {\n      return this.pendingRequests[0]\n    }\n  }\n\n  addByteCount (count) {\n    const req = this.peek()\n    if (req) {\n      req.bytes += count\n    }\n  }\n\n  addBody (data) {\n    const req = this.peek()\n    if (req) {\n      req.body += data\n    }\n  }\n\n  setHeaders (headers) {\n    const req = this.peek()\n    if (req) {\n      req.headers = headers\n    }\n  }\n\n  size () {\n    return this.pendingRequests.length\n  }\n\n  /** Terminates the first-in request\n   * This will calculate the request duration\x2C remove it from the queue and return its data\n   **/\n  terminateRequest () {\n    if (this.pendingRequests.length > 0) {\n      const data = this.pendingRequests.shift()\n      const hrduration = process.hrtime(data.startTime)\n      data.duration = hrduration[0] * 1e3 + hrduration[1] / 1e6\n      return data\n    }\n  }\n\n  clear () {\n    this.pendingRequests = []\n  }\n\n  toArray () {\n    return this.pendingRequests\n  }\n}\n\nmodule.exports = PipelinedRequestsQueue\n
code-source-info,0x324f23ca72a6,364,0,1870,C0O0C4O1870,,
code-creation,Function,10,258875,0x324f23ca78be,75, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:1:1,0x324f23ca7210,~
code-source-info,0x324f23ca78be,364,0,1870,C0O0C67O1830C69O1845C74O1869,,
tick,0x1a37298d4,259041,0,0x0,4,0x0,0x172aed068bfd,0x17d305518402,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,259291,0x107516900,1560,dirname node:path:1275:10,0xe898a5e8828,*
code-source-info,0x107516900,35,38742,39411,C0O38742C56O3416I0C80O38798C100O38805C104O38850C284O38985C288O38992C304O39015C476O38885C484O39050C504O39000C508O38960C528O38992C536O39015C712O39050C728O39084C732O39000C736O38960C764O39270C776O39316C780O39335C788O39372C824O39407C868O39360C876O39284C880O39311C896O38829C904O3457I0C908O38742C956O38850C1032O39015C1116O38960C1208O39015C1320O38960C1416O39372C1436O39407,F0O38755,S0x30d75b99d28
code-creation,Eval,10,259583,0x324f23ca8b76,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:1:1,0x324f23ca8990,~
script-source,365,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js,/**\n * Prints out the test result details. It doesn't have not much business logic.\n * We skip test coverage for this file\n */\n/* istanbul ignore file */\n'use strict'\n\nconst ProgressBar = require('progress')\nconst Chalk = require('chalk')\nconst testColorSupport = require('color-support')\nconst charSpinner = require('char-spinner')\nconst printResult = require('./printResult')\nconst { isMainThread } = require('./worker_threads')\nconst defaults = {\n  // use stderr as its progressBar's default\n  outputStream: process.stderr\x2C\n  renderProgressBar: true\x2C\n  renderResultsTable: true\x2C\n  renderLatencyTable: false\n}\n\nfunction track (instance\x2C opts) {\n  if (!instance) {\n    throw new Error('instance required for tracking')\n  }\n\n  opts = Object.assign({}\x2C defaults\x2C opts)\n\n  const chalk = new Chalk.Instance(testColorSupport({ stream: opts.outputStream\x2C alwaysReturn: true }))\n  // this default needs to be set after chalk is setup\x2C because chalk is now local to this func\n  const runningDescription = opts.warmupRunning ? 'warmup' : 'running'\n  opts.progressBarString = opts.progressBarString || `${chalk.green(runningDescription)} [:bar] :percent`\n\n  const iOpts = instance.opts\n  let durationProgressBar\n  let amountProgressBar\n  let addedListeners = false\n  let spinner\n\n  instance.on('start'\x2C () => {\n    if (opts.renderProgressBar && isMainThread) {\n      const socketPath = iOpts.socketPath ? ` (${iOpts.socketPath})` : ''\n      let msg = `${iOpts.connections} connections`\n\n      if (iOpts.pipelining > 1) {\n        msg += ` with ${iOpts.pipelining} pipelining factor`\n      }\n\n      if (iOpts.workers) {\n        msg += `\\n${iOpts.workers} workers`\n      }\n\n      const runningType = opts.warmupRunning ? 'warmup' : 'test'\n      const message = iOpts.amount\n        ? `Running ${iOpts.amount} requests ${runningType} @ ${iOpts.url}${socketPath}\\n${msg}\\n`\n        : `Running ${iOpts.duration}s ${runningType} @ ${iOpts.url}${socketPath}\\n${msg}\\n`\n\n      logToStream(message)\n\n      if (iOpts.workers) {\n        showSpinner()\n      } else {\n        if (iOpts.amount) {\n          amountProgressBar = trackAmount(instance\x2C opts\x2C iOpts)\n        } else {\n          durationProgressBar = trackDuration(instance\x2C opts\x2C iOpts)\n        }\n      }\n\n      addListener()\n    }\n  })\n\n  instance.on('done'\x2C (result) => {\n    // the code below this `if` just renders the results table...\n    // if the user doesn't want to render the table\x2C we can just return early\n    if (opts.renderResultsTable === false) return\n\n    const tableStrResult = printResult(result\x2C opts)\n    opts.outputStream.write(tableStrResult)\n  })\n\n  function showSpinner () {\n    spinner = charSpinner()\n  }\n\n  function hideSpinner () {\n    if (spinner) {\n      clearInterval(spinner)\n      spinner = null\n    }\n  }\n\n  function addListener () {\n    // add listeners for progress bar to instance here so they aren't\n    // added on restarting\x2C causing listener leaks\n    if (addedListeners) {\n      return\n    }\n\n    addedListeners = true\n\n    // TODO: think about if workers can report progress every second\x2C that\n    // way we could have a progress bar per worker.\n    if (iOpts.workers) {\n      // using `prependOnceListener` to make sure that we hide the spinner\n      // before writing anything else.\n      // if we print anything else to the output\x2C the stale spinner text\n      // is left uncleared and clutters the output.\n      instance.prependOnceListener('done'\x2C hideSpinner)\n      return\n    }\n\n    // note: Attempted to curry the functions below\x2C but that breaks the functionality\n    // as they use the scope/closure of the progress bar variables to allow them to be reset\n    if (opts.outputStream.isTTY) {\n      if (!iOpts.amount) { // duration progress bar\n        instance.on('tick'\x2C () => { durationProgressBar.tick() })\n        instance.on('done'\x2C () => { durationProgressBar.tick(iOpts.duration - 1) })\n        process.once('SIGINT'\x2C () => { durationProgressBar.tick(iOpts.duration - 1) })\n      } else { // amount progress bar\n        instance.on('response'\x2C () => { amountProgressBar.tick() })\n        instance.on('reqError'\x2C () => { amountProgressBar.tick() })\n        instance.on('done'\x2C () => { amountProgressBar.tick(iOpts.amount - 1) })\n        process.once('SIGINT'\x2C () => { amountProgressBar.tick(iOpts.amount - 1) })\n      }\n    }\n  }\n\n  function logToStream (msg) {\n    if (!isMainThread) return\n\n    opts.outputStream.write(msg + '\\n')\n  }\n}\n\nfunction trackDuration (instance\x2C opts\x2C iOpts) {\n  // if switch needed needed to avoid\n  // https://github.com/mcollina/autocannon/issues/60\n  if (!opts.outputStream.isTTY) return\n\n  const progressBar = new ProgressBar(opts.progressBarString\x2C {\n    width: 20\x2C\n    incomplete: ' '\x2C\n    total: iOpts.duration\x2C\n    clear: true\x2C\n    stream: opts.outputStream\n  })\n\n  progressBar.tick(0)\n  return progressBar\n}\n\nfunction trackAmount (instance\x2C opts\x2C iOpts) {\n  // if switch needed needed to avoid\n  // https://github.com/mcollina/autocannon/issues/60\n  if (!opts.outputStream.isTTY) return\n\n  const progressBar = new ProgressBar(opts.progressBarString\x2C {\n    width: 20\x2C\n    incomplete: ' '\x2C\n    total: iOpts.amount\x2C\n    clear: true\x2C\n    stream: opts.outputStream\n  })\n\n  progressBar.tick(0)\n  return progressBar\n}\n\nmodule.exports = track\n
code-source-info,0x324f23ca8b76,365,0,5269,C0O0C4O5269,,
code-creation,Function,10,259833,0x324f23ca8e06,131, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:1:1,0x324f23ca8ae0,~
code-source-info,0x324f23ca8e06,365,0,5269,C0O0C43O188C46O188C50O188C52O222C55O222C59O222C61O264C64O264C68O264C70O309C73O309C77O309C79O353C82O353C86O353C88O403C91O403C96O386C102O448C107O511C111O519C121O448C123O5246C125O5261C130O5268,,
code-creation,Eval,10,260208,0x324f23ca9b0e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/index.js:1:1,0x324f23ca99b8,~
script-source,366,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/index.js,module.exports = require('./lib/node-progress');\n
code-source-info,0x324f23ca9b0e,366,0,49,C0O0C4O49,,
code-creation,Function,10,260208,0x324f23ca9ba6,13, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/index.js:1:1,0x324f23ca9a78,~
code-source-info,0x324f23ca9ba6,366,0,49,C0O0C3O17C7O15C12O48,,
tick,0x1a3726538,260375,1,0x100cd1300,6,0x0,0x172aed061b53,0x172aed06189b,0x172aed05fbb5,0x172aed05f6e2,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x324f23ca9ba9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x324f23ca8e34,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x17d305518402,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b881716d8,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x1b9b8816e7a9,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,260458,0x324f23caa14e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/lib/node-progress.js:1:1,0x324f23ca9ff8,~
script-source,367,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/lib/node-progress.js,/*!\n * node-progress\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Expose `ProgressBar`.\n */\n\nexports = module.exports = ProgressBar;\n\n/**\n * Initialize a `ProgressBar` with the given `fmt` string and `options` or\n * `total`.\n *\n * Options:\n *\n *   - `curr` current completed index\n *   - `total` total number of ticks to complete\n *   - `width` the displayed width of the progress bar defaulting to total\n *   - `stream` the output stream defaulting to stderr\n *   - `head` head character defaulting to complete character\n *   - `complete` completion character defaulting to "="\n *   - `incomplete` incomplete character defaulting to "-"\n *   - `renderThrottle` minimum time between updates in milliseconds defaulting to 16\n *   - `callback` optional function to call when the progress bar completes\n *   - `clear` will clear the progress bar upon termination\n *\n * Tokens:\n *\n *   - `:bar` the progress bar itself\n *   - `:current` current tick number\n *   - `:total` total ticks\n *   - `:elapsed` time elapsed in seconds\n *   - `:percent` completion percentage\n *   - `:eta` eta in seconds\n *   - `:rate` rate of ticks per second\n *\n * @param {string} fmt\n * @param {object|number} options or total\n * @api public\n */\n\nfunction ProgressBar(fmt\x2C options) {\n  this.stream = options.stream || process.stderr;\n\n  if (typeof(options) == 'number') {\n    var total = options;\n    options = {};\n    options.total = total;\n  } else {\n    options = options || {};\n    if ('string' != typeof fmt) throw new Error('format required');\n    if ('number' != typeof options.total) throw new Error('total required');\n  }\n\n  this.fmt = fmt;\n  this.curr = options.curr || 0;\n  this.total = options.total;\n  this.width = options.width || this.total;\n  this.clear = options.clear\n  this.chars = {\n    complete   : options.complete || '='\x2C\n    incomplete : options.incomplete || '-'\x2C\n    head       : options.head || (options.complete || '=')\n  };\n  this.renderThrottle = options.renderThrottle !== 0 ? (options.renderThrottle || 16) : 0;\n  this.lastRender = -Infinity;\n  this.callback = options.callback || function () {};\n  this.tokens = {};\n  this.lastDraw = '';\n}\n\n/**\n * "tick" the progress bar with optional `len` and optional `tokens`.\n *\n * @param {number|object} len or tokens\n * @param {object} tokens\n * @api public\n */\n\nProgressBar.prototype.tick = function(len\x2C tokens){\n  if (len !== 0)\n    len = len || 1;\n\n  // swap tokens\n  if ('object' == typeof len) tokens = len\x2C len = 1;\n  if (tokens) this.tokens = tokens;\n\n  // start time for eta\n  if (0 == this.curr) this.start = new Date;\n\n  this.curr += len\n\n  // try to render\n  this.render();\n\n  // progress complete\n  if (this.curr >= this.total) {\n    this.render(undefined\x2C true);\n    this.complete = true;\n    this.terminate();\n    this.callback(this);\n    return;\n  }\n};\n\n/**\n * Method to render the progress bar with optional `tokens` to place in the\n * progress bar's `fmt` field.\n *\n * @param {object} tokens\n * @api public\n */\n\nProgressBar.prototype.render = function (tokens\x2C force) {\n  force = force !== undefined ? force : false;\n  if (tokens) this.tokens = tokens;\n\n  if (!this.stream.isTTY) return;\n\n  var now = Date.now();\n  var delta = now - this.lastRender;\n  if (!force && (delta < this.renderThrottle)) {\n    return;\n  } else {\n    this.lastRender = now;\n  }\n\n  var ratio = this.curr / this.total;\n  ratio = Math.min(Math.max(ratio\x2C 0)\x2C 1);\n\n  var percent = Math.floor(ratio * 100);\n  var incomplete\x2C complete\x2C completeLength;\n  var elapsed = new Date - this.start;\n  var eta = (percent == 100) ? 0 : elapsed * (this.total / this.curr - 1);\n  var rate = this.curr / (elapsed / 1000);\n\n  /* populate the bar template with percentages and timestamps */\n  var str = this.fmt\n    .replace(':current'\x2C this.curr)\n    .replace(':total'\x2C this.total)\n    .replace(':elapsed'\x2C isNaN(elapsed) ? '0.0' : (elapsed / 1000).toFixed(1))\n    .replace(':eta'\x2C (isNaN(eta) || !isFinite(eta)) ? '0.0' : (eta / 1000)\n      .toFixed(1))\n    .replace(':percent'\x2C percent.toFixed(0) + '%')\n    .replace(':rate'\x2C Math.round(rate));\n\n  /* compute the available space (non-zero) for the bar */\n  var availableSpace = Math.max(0\x2C this.stream.columns - str.replace(':bar'\x2C '').length);\n  if(availableSpace && process.platform === 'win32'){\n    availableSpace = availableSpace - 1;\n  }\n\n  var width = Math.min(this.width\x2C availableSpace);\n\n  /* TODO: the following assumes the user has one ':bar' token */\n  completeLength = Math.round(width * ratio);\n  complete = Array(Math.max(0\x2C completeLength + 1)).join(this.chars.complete);\n  incomplete = Array(Math.max(0\x2C width - completeLength + 1)).join(this.chars.incomplete);\n\n  /* add head to the complete string */\n  if(completeLength > 0)\n    complete = complete.slice(0\x2C -1) + this.chars.head;\n\n  /* fill in the actual progress bar */\n  str = str.replace(':bar'\x2C complete + incomplete);\n\n  /* replace the extra tokens */\n  if (this.tokens) for (var key in this.tokens) str = str.replace(':' + key\x2C this.tokens[key]);\n\n  if (this.lastDraw !== str) {\n    this.stream.cursorTo(0);\n    this.stream.write(str);\n    this.stream.clearLine(1);\n    this.lastDraw = str;\n  }\n};\n\n/**\n * "update" the progress bar to represent an exact percentage.\n * The ratio (between 0 and 1) specified will be multiplied by `total` and\n * floored\x2C representing the closest available "tick." For example\x2C if a\n * progress bar has a length of 3 and `update(0.5)` is called\x2C the progress\n * will be set to 1.\n *\n * A ratio of 0.5 will attempt to set the progress to halfway.\n *\n * @param {number} ratio The ratio (between 0 and 1 inclusive) to set the\n *   overall completion to.\n * @api public\n */\n\nProgressBar.prototype.update = function (ratio\x2C tokens) {\n  var goal = Math.floor(ratio * this.total);\n  var delta = goal - this.curr;\n\n  this.tick(delta\x2C tokens);\n};\n\n/**\n * "interrupt" the progress bar and write a message above it.\n * @param {string} message The message to write.\n * @api public\n */\n\nProgressBar.prototype.interrupt = function (message) {\n  // clear the current line\n  this.stream.clearLine();\n  // move the cursor to the start of the line\n  this.stream.cursorTo(0);\n  // write the message text\n  this.stream.write(message);\n  // terminate the line after writing the message\n  this.stream.write('\\n');\n  // re-display the progress bar with its lastDraw\n  this.stream.write(this.lastDraw);\n};\n\n/**\n * Terminates a progress bar.\n *\n * @api public\n */\n\nProgressBar.prototype.terminate = function () {\n  if (this.clear) {\n    if (this.stream.clearLine) {\n      this.stream.clearLine();\n      this.stream.cursorTo(0);\n    }\n  } else {\n    this.stream.write('\\n');\n  }\n};\n
code-source-info,0x324f23caa14e,367,0,6678,C0O0C4O6678,,
code-creation,Function,10,260750,0x324f23caa56e,81, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/progress/lib/node-progress.js:1:1,0x324f23caa0b8,~
code-source-info,0x324f23caa56e,367,0,6678,C0O0C5O133C7O158C14O2363C23O2378C27O3030C36O3047C40O5705C49O5722C53O6008C62O6028C66O6474C75O6494C80O6677,,
code-creation,Eval,10,261083,0x324f23cab6a6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/char-spinner/spin.js:1:1,0x324f23cab540,~
script-source,368,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/char-spinner/spin.js,module.exports = spinner\n\nfunction spinner(opt) {\n  opt = opt || {}\n  var str = opt.stream || process.stderr\n  var tty = typeof opt.tty === 'boolean' ? opt.tty : true\n  var string = opt.string || '/-\\\\|'\n  var ms = typeof opt.interval === 'number' ? opt.interval : 50\n  if (ms < 0) ms = 0\n  if (tty && !str.isTTY) return false\n  var CR = str.isTTY ? '\\u001b[0G' : '\\u000d';\n  var CLEAR = str.isTTY ? '\\u001b[2K' : '\\u000d \\u000d';\n\n  var s = 0\n  var sprite = string.split('')\n  var wrote = false\n\n  var delay = typeof opt.delay === 'number' ? opt.delay : 2\n\n  var interval = setInterval(function() {\n    if (--delay >= 0) return\n    s = ++s % sprite.length\n    var c = sprite[s]\n    str.write(c + CR)\n    wrote = true\n  }\x2C ms)\n\n  var unref = typeof opt.unref === 'boolean' ? opt.unref : true\n  if (unref && typeof interval.unref === 'function') {\n    interval.unref()\n  }\n\n  var cleanup = typeof opt.cleanup === 'boolean' ? opt.cleanup : true\n  if (cleanup) {\n    process.on('exit'\x2C function() {\n      if (wrote) {\n          str.write(CLEAR);\n      }\n    })\n  }\n\n  module.exports.clear = function () {\n    str.write(CLEAR);\n  };\n  \n  return interval\n}\n\nmodule.exports.clear = function () {};\n\n\n
code-source-info,0x324f23cab6a6,368,0,1194,C0O0C4O1194,,
code-creation,Function,10,261166,0x324f23cab8a6,41, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/char-spinner/spin.js:1:1,0x324f23cab610,~
code-source-info,0x324f23cab8a6,368,0,1194,C0O0C14O0C19O15C23O1153C26O1160C35O1174C40O1193,,
code-creation,Eval,10,261375,0x324f23cac2c6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/subargAliases.js:1:1,0x324f23cac150,~
script-source,369,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/subargAliases.js,'use strict'\n\nconst clone = require('lodash.clonedeep')\n\nconst subArgAlias = {\n  warmup: {\n    c: 'connections'\x2C\n    d: 'duration'\n  }\n}\n\n// Expects args to have already been processed by subarg\nfunction generateSubargAliases (args) {\n  const aliasedArgs = clone(args)\n\n  function isParentAliasInArgs (argKey) {\n    return aliasedArgs[argKey]\n  }\n\n  function isSubargAnAlias (parentAlias\x2C subArg) {\n    return parentAlias[subArg]\n  }\n\n  function mapAliasForSubarg (parentAlias\x2C parentKey) {\n    const parentArgs = aliasedArgs[parentKey]\n    for (const subArg in parentArgs) {\n      if (isSubargAnAlias(parentAlias\x2C subArg)) {\n        parentArgs[parentAlias[subArg]] = parentArgs[subArg]\n      }\n    }\n  }\n\n  for (const parentKey in subArgAlias) {\n    const parentAlias = subArgAlias[parentKey]\n    if (isParentAliasInArgs(parentKey)) {\n      mapAliasForSubarg(parentAlias\x2C parentKey)\n    }\n  }\n\n  return aliasedArgs\n}\n\nmodule.exports = generateSubargAliases\n
code-source-info,0x324f23cac2c6,369,0,958,C0O0C4O958,,
code-creation,Function,10,261458,0x324f23cac45e,39, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/subargAliases.js:1:1,0x324f23cac230,~
code-source-info,0x324f23cac45e,369,0,958,C0O0C16O28C19O28C23O28C25O77C29O77C31O919C33O934C38O957,,
code-creation,LazyCompile,10,261541,0x324f23cacb26,117,runBenchmark /Users/carloscalvo/code/Coder/backend/entregas/benchmark.js:4:22,0x1b9b8816e6c0,~
code-source-info,0x324f23cacb26,136,107,435,C0O107C8O131C10O131C12O157C19O157C25O195C39O210C43O195C48O258C55O269C60O275C67O287C71O269C77O319C90O319C96O371C109O371C116O434,,
tick,0x10113fc7c,261583,0,0x0,2,0x0,0x324f23cacb39,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,261583,0x324f23cacd0e,36,PassThrough node:internal/streams/passthrough:38:21,0x38fe55867850,~
script-source,59,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = PassThrough;\n\nconst Transform = require('internal/streams/transform');\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(PassThrough\x2C Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this\x2C options);\n}\n\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  cb(null\x2C chunk);\n};\n
code-source-info,0x324f23cacd0e,59,1549,1671,C0O1563C2O1574C7O1603C12O1610C17O1635C18O1639C23O1649C28O1649C35O1670,,
code-creation,LazyCompile,10,261666,0x324f23cad00e,109,Transform node:internal/streams/transform:81:19,0x38fe55866bf0,~
script-source,58,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a "filter"\x2C\n// but that's not a great name for it\x2C since that implies a thing where\n// some bits pass through\x2C and others are simply ignored.  (That would\n// be a valid example of a transform\x2C of course.)\n//\n// While the output is causally related to the input\x2C it's not a\n// necessarily symmetric or synchronous transformation.  For example\x2C\n// a zlib stream might take multiple plain-text writes()\x2C and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\n// internally\x2C and returns false if there's a lot of pending writes\n// buffered up.  When you call read()\x2C that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream\x2C the written data is placed in a buffer.  When\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks\x2C then the first\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\n//\n// This way\x2C back-pressure is actually determined by the reading side\x2C\n// since _read has to be called to start processing a new chunk.  However\x2C\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example\x2C imagine a stream where every byte of input is\n// interpreted as an integer from 0-255\x2C and then results in that many\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\n// 1kb of data being output.  In this case\x2C you could write a very small\n// amount of input\x2C and end up with a very large amount of output.  In\n// such a pathological inflating mechanism\x2C there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However\x2C even in such a pathological case\x2C only a single written chunk\n// would be consumed\x2C and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\n} = primordials;\n\nmodule.exports = Transform;\nconst {\n  ERR_METHOD_NOT_IMPLEMENTED\n} = require('internal/errors').codes;\nconst Duplex = require('internal/streams/duplex');\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\nObjectSetPrototypeOf(Transform\x2C Duplex);\n\nconst kCallback = Symbol('kCallback');\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this\x2C options);\n\n  // We have implemented the _read method\x2C and done the other things\n  // that Readable wants before the first _read call\x2C so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this[kCallback] = null;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  // When the writable side finishes\x2C then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish'\x2C prefinish);\n}\n\nfunction final(cb) {\n  let called = false;\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    const result = this._flush((er\x2C data) => {\n      called = true;\n      if (er) {\n        if (cb) {\n          cb(er);\n        } else {\n          this.destroy(er);\n        }\n        return;\n      }\n\n      if (data != null) {\n        this.push(data);\n      }\n      this.push(null);\n      if (cb) {\n        cb();\n      }\n    });\n    if (result !== undefined && result !== null) {\n      try {\n        const then = result.then;\n        if (typeof then === 'function') {\n          then.call(\n            result\x2C\n            (data) => {\n              if (called)\n                return;\n              if (data != null)\n                this.push(data);\n              this.push(null);\n              if (cb)\n                process.nextTick(cb);\n            }\x2C\n            (err) => {\n              if (cb) {\n                process.nextTick(cb\x2C err);\n              } else {\n                process.nextTick(() => this.destroy(err));\n              }\n            });\n        }\n      } catch (err) {\n        process.nextTick(() => this.destroy(err));\n      }\n    }\n  } else {\n    this.push(null);\n    if (cb) {\n      cb();\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this);\n  }\n}\n\nTransform.prototype._final = final;\n\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\n};\n\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\n  const rState = this._readableState;\n  const wState = this._writableState;\n  const length = rState.length;\n\n  let called = false;\n  const result = this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n    called = true;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (val != null) {\n      this.push(val);\n    }\n\n    if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark ||\n      rState.length === 0\n    ) {\n      callback();\n    } else {\n      this[kCallback] = callback;\n    }\n  });\n  if (result !== undefined && result != null) {\n    try {\n      const then = result.then;\n      if (typeof then === 'function') {\n        then.call(\n          result\x2C\n          (val) => {\n            if (called)\n              return;\n\n            if (val != null) {\n              this.push(val);\n            }\n\n            if (\n              wState.ended ||\n              length === rState.length ||\n              rState.length < rState.highWaterMark ||\n              rState.length === 0) {\n              process.nextTick(callback);\n            } else {\n              this[kCallback] = callback;\n            }\n          }\x2C\n          (err) => {\n            process.nextTick(callback\x2C err);\n          });\n      }\n    } catch (err) {\n      process.nextTick(callback\x2C err);\n    }\n  }\n};\n\nTransform.prototype._read = function() {\n  if (this[kCallback]) {\n    const callback = this[kCallback];\n    this[kCallback] = null;\n    callback();\n  }\n};\n
code-source-info,0x324f23cad00e,58,3872,4737,C0O3886C2O3897C7O3924C12O3931C17O3954C18O3958C23O3965C28O3965C34O4152C40O4172C44O4184C46O4189C50O4200C54O4211C58O4249C66O4307C70O4297C74O4342C82O4392C86O4382C90O4708C101O4708C108O4736,,
code-creation,LazyCompile,10,262041,0x324f23cada6e,52,init /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:12:15,0x17d305518158,~
code-source-info,0x324f23cada6e,220,326,572,C0O360C5O389C7O414C13O438C19O454C22O461C26O480C27O500C30O507C34O516C35O538C46O545C51O566,,
code-creation,LazyCompile,10,262083,0x324f23cadc3e,90,run /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:25:14,0x17d3055181a8,~
code-source-info,0x324f23cadc3e,220,587,899,C0O587C12O614C19O614C24O614C26O641C37O641C43O792C46O815C51O820C56O820C61O805C65O836C68O860C73O866C78O866C83O850C87O883C89O897,,
code-creation,LazyCompile,10,262083,0x324f23cade56,42, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:27:31,0x324f23cadb60,~
code-source-info,0x324f23cade56,220,653,788,C0O653C13O680C27O692C35O680C41O787,,
code-creation,LazyCompile,10,262125,0x324f23cae0b6,242,_init /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:63:16,0x17d305518248,~
code-source-info,0x324f23cae0b6,220,1571,2445,C0O1571C25O1614C29O1614C31O1643C39O1654C41O1646C43O1662C51O1687C54O1683C59O1670C61O1695C74O1702C79O1700C81O2009C84O2029C87O2018C92O2042C95O2042C99O2056C101O2070C102O2078C107O2091C111O2101C114O2110C124O2121C128O2141C144O2141C151O2188C167O2188C172O2330C175O2339C179O2346C187O2349C192O2338C200O2373C206O2382C210O2390C215O2397C221O2405C234O2405C239O2429C241O2443,,
code-creation,LazyCompile,10,262208,0x324f23caeaae,868,validateOpts /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:50:40,0x17d30551af58,~
code-source-info,0x324f23caeaae
code-creation,LazyCompile,10,262291,0x324f23caf0ee,12,minIfPresent /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:14:22,0x17d30551af08,~
code-source-info,0x324f23caf0ee,224,554,593,C0O581C3O572C8O588C11O593,,
code-creation,LazyCompile,10,262333,0x324f23caf2d6,159,defaultOpts /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:26:22,0x17d30551adc8,~
code-source-info,0x324f23caf2d6,224,760,1428,C0O760C9O791C12O796C21O811C35O842C40O825C45O875C48O880C57O900C62O909C72O909C81O1281C99O1320C105O1334C114O1350C124O1366C133O1386C142O1399C152O1412C158O1426,,
code-creation,LazyCompile,10,262333,0x324f23caf4fe,33,safeRequire /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:16:22,0x17d30551ad78,~
code-source-info,0x324f23caf4fe,224,616,737,C0O627C9O675C12O682C16O695C30O724C32O735,,
code-creation,LazyCompile,10,262375,0x324f23caf60e,16, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:68:28,0x324f23cae7b0,~
code-source-info,0x324f23caf60e,224,2338,2369,C0O2343C5O2356C10O2344C15O2369,,
code-creation,LazyCompile,10,262375,0x324f23caf6ee,16,isValidFn /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:10:19,0x17d30551ae18,~
code-source-info,0x324f23caf6ee,224,294,365,C0O304C15O365,,
code-creation,LazyCompile,10,262416,0x324f23caf7ce,16, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/validate.js:72:28,0x324f23cae800,~
code-source-info,0x324f23caf7ce,224,2525,2554,C0O2530C5O2543C10O2531C15O2554,,
code-creation,LazyCompile,10,262416,0x324f23caf8ce,36,checkURL /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js:7:19,0x17d30551d888,~
code-source-info,0x324f23caf8ce,227,109,206,C0O119C8O154C10O167C14O173C19O173C26O193C32O200C35O204,,
code-creation,LazyCompile,10,262458,0x324f23cafa36,48,runTracker /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/runTracker.js:7:21,0x2779b46fa278,~
code-source-info,0x324f23cafa36,329,137,254,C0O161C6O172C10O179C16O204C19O200C26O212C40O212C45O238C47O252,,
code-creation,LazyCompile,10,262500,0x324f23cb0116,498,run /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:16:14,0x2779b46fac58,~
code-source-info,0x324f23cb
code-creation,LazyCompile,10,262583,0x324f23cb07d6,117,getHistograms /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js:6:23,0x36998916a4c8,~
code-source-info,0x324f23cb07d6,167,148,831,C4O148C10O153C18O165C21O169C31O169C37O359C45O370C48O374C58O374C64O566C72O579C75O583C85O583C91O789C98O793C104O806C110O818C116O831,,
code-creation,LazyCompile,10,262625,0x324f23cb0966,10,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:40:75,0x36998916c1d0,~
code-source-info,0x324f23cb0966,168,2849,2888,C0O2854C5O2880C9O2886,,
code-creation,LazyCompile,10,262625,0x324f23cb0ac6,137,exports.build /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramBuilder.js:14:17,0x93fa327aab8,~
code-source-info,0x324f23cb0ac6,216,440,1011,C7O459C16O503C20O510C30O529C38O510C44O571C52O589C55O596C61O628C66O642C71O656C76O656C81O674C82O709C87O730C92O767C97O730C103O836C108O871C113O905C120O805C126O976C130O963C134O992C136O1009,,
code-creation,LazyCompile,10,262666,0x324f23cb0d0e,147,build /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:76:17,0x36998917b800,~
code-source-info,0x324f23cb0d0e,179,2946,3477,C8O2957C15O2983C20O2996C25O2996C31O3030C40O3036C45O3030C46O3117C50O3124C61O3135C67O3124C73O3198C80O3233C85O3198C90O3257C99O3286C104O3290C108O3324C113O3359C118O3393C123O3436C130O3282C141O3264C146O3471,,
code-creation,LazyCompile,10,262708,0x324f23cb0ece,7,exports.webAssemblyReady /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:55:28,0x36998917b648,~
code-source-info,0x324f23cb0ece,179,2221,2233,C0O2227C6O2233,,
code-creation,LazyCompile,10,262708,0x324f23cb0fae,21,remoteHistogramClassFor /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:63:33,0x36998917b6d8,~
code-source-info,0x324f23cb0fae,179,2439,2507,C0O2449C2O2454C16O2501C20O2507,,
code-creation,LazyCompile,10,262750,0x324f23cb10c6,45,ctor /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:475:33,0xe757747a710,~
code-source-info,0x324f23cb10c6,198,15901,15994,C0O15901C3O15925C8O15937C15O15942C18O15947C23O15957C33O15957C39O15937C44O15982,,
code-creation,LazyCompile,10,262750,0x324f23cb11f6,37,curr.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:520:36,0xe757747a928,~
code-source-info,0x324f23cb11f6,198,17272,17380,C0O17272C3O17298C10O17322C15O17298C19O17345C25O17352C31O17352C36O17366,,
tick,0x1a3575354,262833,0,0x0,0,0x0,0x2f3ebe226b30,0x2f3ebe21405c,0x2f3ebe222e4c,0x2f3ebe1dea58,0x2f3ebe213320,0x2f3ebe1edbc8,0x10750d928,0x324f23cb1215,0x324f23cb10e7,0x324f23cb0d90,0x324f23cb0b12,0x324f23cb07f5,0x324f23cb01ba,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,263083,0x324f23cb137e,57,ctor.wrap /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:486:32,0xe757747a7b0,~
code-source-info,0x324f23cb137e,198,16149,16347,C0O16175C4O16189C11O16196C14O16201C28O16229C32O16236C39O16261C50O16189C56O16335,,
code-creation,LazyCompile,10,263125,0x324f23cb1b5e,51,WasmHistogram /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:70:16,0x36998917b7b0,~
code-source-info,0x324f23cb1b5e,179,2696,2929,C0O2746C2O2766C6O2792C8O2819C12O2852C16O2863C19O2875C23O2861C27O2891C34O2896C39O2907C44O2896C50O2928,,
code-creation,LazyCompile,10,263125,0x324f23cb1cee,35,curr.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:543:25,0xe757747aa48,~
code-source-info,0x324f23cb1cee,198,18126,18231,C0O18126C3O18153C10O18177C15O18153C19O18198C23O18205C29O18205C34O18219,,
code-creation,LazyCompile,10,263166,0x324f23cb1e0e,10,valueOf /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:480:20,0xe757747a760,~
code-source-info,0x324f23cb1e0e,198,16047,16098,C0O16066C4O16078C6O16077C9O16084,,
code-creation,LazyCompile,10,263250,0x324f23cb200e,72,ofURL /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js:18:16,0x17d30551d8d8,~
code-source-info,0x324f23cb200e,227,278,548,C0O278C13O297C17O307C25O307C32O321C34O331C35O335C41O370C46O385C56O470C57O478C66O484C71O478,,
code-creation,LazyCompile,10,263250,0x324f23cb21b6,33,map /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/url.js:23:11,0x324f23cb1f00,~
code-source-info,0x324f23cb21b6,227,389,464,C0O404C4O417C14O425C24O433C25O442C28O449C32O456,,
code-creation,LazyCompile,10,263291,0x324f23cb22d6,32, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:51:34,0x324f23cafda8,~
code-source-info,0x324f23cb22d6,330,1269,1356,C0O1292C8O1292C15O1308C20O1315C25O1332C28O1337C29O1342C31O1352,,
code-creation,LazyCompile,10,263333,0x324f23cb24f6,375, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:56:42,0x324f23cafdf8,~
code-source-info,0x324f23cb24f
code-creation,LazyCompile,10,263416,0x324f23cb2896,44,urlParse node:url:152:18,0x23e292d091b8,~
script-source,85,node:url,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Int8Array\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { toASCII } = require('internal/idna');\nconst { encodeStr\x2C hexTable } = require('internal/querystring');\nconst querystring = require('querystring');\n\nconst {\n  ERR_INVALID_ARG_TYPE\n} = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// This ensures setURLConstructor() is called before the native\n// URL::ToObject() method is used.\nconst { spliceOne } = require('internal/util');\n\n// WHATWG URL implementation provided by internal/url\nconst {\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  fileURLToPath\x2C\n  formatSymbol\x2C\n  pathToFileURL\x2C\n  urlToHttpOptions\x2C\n} = require('internal/url');\n\n// Original url.parse() API\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986\x2C RFC 1808\x2C RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^[a-z0-9.+-]+:/i;\nconst portPattern = /:[0-9]*$/;\nconst hostPattern = /^\\/\\/[^@/]+@[^@/]+/;\n\n// Special case for a simple path URL\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/;\n\nconst hostnameMaxLen = 255;\n// Protocols that can allow "unsafe" and "unwise" chars.\nconst unsafeProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that never have a hostname.\nconst hostlessProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that always contain a // bit.\nconst slashedProtocol = new SafeSet([\n  'http'\x2C\n  'http:'\x2C\n  'https'\x2C\n  'https:'\x2C\n  'ftp'\x2C\n  'ftp:'\x2C\n  'gopher'\x2C\n  'gopher:'\x2C\n  'file'\x2C\n  'file:'\x2C\n  'ws'\x2C\n  'ws:'\x2C\n  'wss'\x2C\n  'wss:'\x2C\n]);\nconst {\n  CHAR_SPACE\x2C\n  CHAR_TAB\x2C\n  CHAR_CARRIAGE_RETURN\x2C\n  CHAR_LINE_FEED\x2C\n  CHAR_FORM_FEED\x2C\n  CHAR_NO_BREAK_SPACE\x2C\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\x2C\n  CHAR_HASH\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LEFT_SQUARE_BRACKET\x2C\n  CHAR_RIGHT_SQUARE_BRACKET\x2C\n  CHAR_LEFT_ANGLE_BRACKET\x2C\n  CHAR_RIGHT_ANGLE_BRACKET\x2C\n  CHAR_LEFT_CURLY_BRACKET\x2C\n  CHAR_RIGHT_CURLY_BRACKET\x2C\n  CHAR_QUESTION_MARK\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_UPPERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_0\x2C\n  CHAR_9\x2C\n  CHAR_HYPHEN_MINUS\x2C\n  CHAR_PLUS\x2C\n  CHAR_UNDERSCORE\x2C\n  CHAR_DOUBLE_QUOTE\x2C\n  CHAR_SINGLE_QUOTE\x2C\n  CHAR_PERCENT\x2C\n  CHAR_SEMICOLON\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_CIRCUMFLEX_ACCENT\x2C\n  CHAR_GRAVE_ACCENT\x2C\n  CHAR_VERTICAL_LINE\x2C\n  CHAR_AT\x2C\n} = require('internal/constants');\n\nfunction urlParse(url\x2C parseQueryString\x2C slashesDenoteHost) {\n  if (url instanceof Url) return url;\n\n  const urlObject = new Url();\n  urlObject.parse(url\x2C parseQueryString\x2C slashesDenoteHost);\n  return urlObject;\n}\n\nfunction isIpv6Hostname(hostname) {\n  return (\n    StringPrototypeCharCodeAt(hostname\x2C 0) === CHAR_LEFT_SQUARE_BRACKET &&\n    StringPrototypeCharCodeAt(hostname\x2C hostname.length - 1) ===\n    CHAR_RIGHT_SQUARE_BRACKET\n  );\n}\n\nUrl.prototype.parse = function parse(url\x2C parseQueryString\x2C slashesDenoteHost) {\n  validateString(url\x2C 'url');\n\n  // Copy chrome\x2C IE\x2C opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  let hasHash = false;\n  let start = -1;\n  let end = -1;\n  let rest = '';\n  let lastPos = 0;\n  for (let i = 0\x2C inWs = false\x2C split = false; i < url.length; ++i) {\n    const code = url.charCodeAt(i);\n\n    // Find first and last non-whitespace characters for trimming\n    const isWs = code === CHAR_SPACE ||\n                 code === CHAR_TAB ||\n                 code === CHAR_CARRIAGE_RETURN ||\n                 code === CHAR_LINE_FEED ||\n                 code === CHAR_FORM_FEED ||\n                 code === CHAR_NO_BREAK_SPACE ||\n                 code === CHAR_ZERO_WIDTH_NOBREAK_SPACE;\n    if (start === -1) {\n      if (isWs)\n        continue;\n      lastPos = start = i;\n    } else if (inWs) {\n      if (!isWs) {\n        end = -1;\n        inWs = false;\n      }\n    } else if (isWs) {\n      end = i;\n      inWs = true;\n    }\n\n    // Only convert backslashes while we haven't seen a split character\n    if (!split) {\n      switch (code) {\n        case CHAR_HASH:\n          hasHash = true;\n        // Fall through\n        case CHAR_QUESTION_MARK:\n          split = true;\n          break;\n        case CHAR_BACKWARD_SLASH:\n          if (i - lastPos > 0)\n            rest += url.slice(lastPos\x2C i);\n          rest += '/';\n          lastPos = i + 1;\n          break;\n      }\n    } else if (!hasHash && code === CHAR_HASH) {\n      hasHash = true;\n    }\n  }\n\n  // Check if string was non-empty (including strings with only whitespace)\n  if (start !== -1) {\n    if (lastPos === start) {\n      // We didn't convert any backslashes\n\n      if (end === -1) {\n        if (start === 0)\n          rest = url;\n        else\n          rest = url.slice(start);\n      } else {\n        rest = url.slice(start\x2C end);\n      }\n    } else if (end === -1 && lastPos < url.length) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos);\n    } else if (end !== -1 && lastPos < end) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos\x2C end);\n    }\n  }\n\n  if (!slashesDenoteHost && !hasHash) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.slice(1));\n        } else {\n          this.query = this.search.slice(1);\n        }\n      } else if (parseQueryString) {\n        this.search = null;\n        this.query = ObjectCreate(null);\n      }\n      return this;\n    }\n  }\n\n  let proto = protocolPattern.exec(rest);\n  let lowerProto;\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.slice(proto.length);\n  }\n\n  // Figure out if it's got a host\n  // user@server is *always* interpreted as a hostname\x2C and url\n  // resolution will treat //foo/bar as host=foo\x2Cpath=bar because that's\n  // how the browser resolves relative URLs.\n  let slashes;\n  if (slashesDenoteHost || proto || hostPattern.test(rest)) {\n    slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH &&\n              rest.charCodeAt(1) === CHAR_FORWARD_SLASH;\n    if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {\n      rest = rest.slice(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol.has(lowerProto) &&\n      (slashes || (proto && !slashedProtocol.has(proto)))) {\n\n    // there's a hostname.\n    // the first instance of /\x2C ?\x2C ;\x2C or # ends the host.\n    //\n    // If there is an @ in the hostname\x2C then non-host chars *are* allowed\n    // to the left of the last @ sign\x2C unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:b path:/?@c\n\n    let hostEnd = -1;\n    let atSign = -1;\n    let nonHost = -1;\n    for (let i = 0; i < rest.length; ++i) {\n      switch (rest.charCodeAt(i)) {\n        case CHAR_TAB:\n        case CHAR_LINE_FEED:\n        case CHAR_CARRIAGE_RETURN:\n        case CHAR_SPACE:\n        case CHAR_DOUBLE_QUOTE:\n        case CHAR_PERCENT:\n        case CHAR_SINGLE_QUOTE:\n        case CHAR_SEMICOLON:\n        case CHAR_LEFT_ANGLE_BRACKET:\n        case CHAR_RIGHT_ANGLE_BRACKET:\n        case CHAR_BACKWARD_SLASH:\n        case CHAR_CIRCUMFLEX_ACCENT:\n        case CHAR_GRAVE_ACCENT:\n        case CHAR_LEFT_CURLY_BRACKET:\n        case CHAR_VERTICAL_LINE:\n        case CHAR_RIGHT_CURLY_BRACKET:\n          // Characters that are never ever allowed in a hostname from RFC 2396\n          if (nonHost === -1)\n            nonHost = i;\n          break;\n        case CHAR_HASH:\n        case CHAR_FORWARD_SLASH:\n        case CHAR_QUESTION_MARK:\n          // Find the first instance of any host-ending characters\n          if (nonHost === -1)\n            nonHost = i;\n          hostEnd = i;\n          break;\n        case CHAR_AT:\n          // At this point\x2C either we have an explicit point where the\n          // auth portion cannot go past\x2C or the last @ char is the decider.\n          atSign = i;\n          nonHost = -1;\n          break;\n      }\n      if (hostEnd !== -1)\n        break;\n    }\n    start = 0;\n    if (atSign !== -1) {\n      this.auth = decodeURIComponent(rest.slice(0\x2C atSign));\n      start = atSign + 1;\n    }\n    if (nonHost === -1) {\n      this.host = rest.slice(start);\n      rest = '';\n    } else {\n      this.host = rest.slice(start\x2C nonHost);\n      rest = rest.slice(nonHost);\n    }\n\n    // pull out port.\n    this.parseHost();\n\n    // We've indicated that there is a hostname\x2C\n    // so even if it's empty\x2C it has to be present.\n    if (typeof this.hostname !== 'string')\n      this.hostname = '';\n\n    const hostname = this.hostname;\n\n    // If hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = isIpv6Hostname(hostname);\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      rest = getHostname(this\x2C rest\x2C hostname);\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // Hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of "domain".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters\x2C i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n\n      // Use lenient mode (`true`) to try to support even non-compliant\n      // URLs.\n      this.hostname = toASCII(this.hostname\x2C true);\n    }\n\n    const p = this.port ? ':' + this.port : '';\n    const h = this.hostname || '';\n    this.host = h + p;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them\x2C though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.slice(1\x2C -1);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // Now rest is set to the post-host stuff.\n  // Chop off any delim chars.\n  if (!unsafeProtocol.has(lowerProto)) {\n    // First\x2C make 100% sure that any "autoEscape" chars get\n    // escaped\x2C even if encodeURIComponent doesn't think they\n    // need to be.\n    rest = autoEscapeStr(rest);\n  }\n\n  let questionIdx = -1;\n  let hashIdx = -1;\n  for (let i = 0; i < rest.length; ++i) {\n    const code = rest.charCodeAt(i);\n    if (code === CHAR_HASH) {\n      this.hash = rest.slice(i);\n      hashIdx = i;\n      break;\n    } else if (code === CHAR_QUESTION_MARK && questionIdx === -1) {\n      questionIdx = i;\n    }\n  }\n\n  if (questionIdx !== -1) {\n    if (hashIdx === -1) {\n      this.search = rest.slice(questionIdx);\n      this.query = rest.slice(questionIdx + 1);\n    } else {\n      this.search = rest.slice(questionIdx\x2C hashIdx);\n      this.query = rest.slice(questionIdx + 1\x2C hashIdx);\n    }\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n  } else if (parseQueryString) {\n    // No query string\x2C but parseQueryString still requested\n    this.search = null;\n    this.query = ObjectCreate(null);\n  }\n\n  const useQuestionIdx =\n    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);\n  const firstIdx = useQuestionIdx ? questionIdx : hashIdx;\n  if (firstIdx === -1) {\n    if (rest.length > 0)\n      this.pathname = rest;\n  } else if (firstIdx > 0) {\n    this.pathname = rest.slice(0\x2C firstIdx);\n  }\n  if (slashedProtocol.has(lowerProto) &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // To support http.request\n  if (this.pathname || this.search) {\n    const p = this.pathname || '';\n    const s = this.search || '';\n    this.path = p + s;\n  }\n\n  // Finally\x2C reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\nfunction getHostname(self\x2C rest\x2C hostname) {\n  for (let i = 0; i < hostname.length; ++i) {\n    const code = hostname.charCodeAt(i);\n    const isValid = (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z) ||\n                    code === CHAR_DOT ||\n                    (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n                    (code >= CHAR_0 && code <= CHAR_9) ||\n                    code === CHAR_HYPHEN_MINUS ||\n                    code === CHAR_PLUS ||\n                    code === CHAR_UNDERSCORE ||\n                    code > 127;\n\n    // Invalid host character\n    if (!isValid) {\n      self.hostname = hostname.slice(0\x2C i);\n      return `/${hostname.slice(i)}${rest}`;\n    }\n  }\n  return rest;\n}\n\n// Escaped characters. Use empty strings to fill up unused entries.\n// Using Array is faster than Object/Map\nconst escapedCodes = [\n  /* 0 - 9 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%09'\x2C\n  /* 10 - 19 */ '%0A'\x2C ''\x2C ''\x2C '%0D'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 20 - 29 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 30 - 39 */ ''\x2C ''\x2C '%20'\x2C ''\x2C '%22'\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%27'\x2C\n  /* 40 - 49 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 50 - 59 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 60 - 69 */ '%3C'\x2C ''\x2C '%3E'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 70 - 79 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 80 - 89 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 90 - 99 */ ''\x2C ''\x2C '%5C'\x2C ''\x2C '%5E'\x2C ''\x2C '%60'\x2C ''\x2C ''\x2C ''\x2C\n  /* 100 - 109 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 110 - 119 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 120 - 125 */ ''\x2C ''\x2C ''\x2C '%7B'\x2C '%7C'\x2C '%7D'\x2C\n];\n\n// Automatically escape all delimiters and unwise characters from RFC 2396.\n// Also escape single quotes in case of an XSS attack.\n// Return the escaped string.\nfunction autoEscapeStr(rest) {\n  let escaped = '';\n  let lastEscapedPos = 0;\n  for (let i = 0; i < rest.length; ++i) {\n    // `escaped` contains substring up to the last escaped character.\n    const escapedChar = escapedCodes[rest.charCodeAt(i)];\n    if (escapedChar) {\n      // Concat if there are ordinary characters in the middle.\n      if (i > lastEscapedPos)\n        escaped += rest.slice(lastEscapedPos\x2C i);\n      escaped += escapedChar;\n      lastEscapedPos = i + 1;\n    }\n  }\n  if (lastEscapedPos === 0)  // Nothing has been escaped.\n    return rest;\n\n  // There are ordinary characters at the end.\n  if (lastEscapedPos < rest.length)\n    escaped += rest.slice(lastEscapedPos);\n\n  return escaped;\n}\n\n// Format a parsed object into a url string\nfunction urlFormat(urlObject\x2C options) {\n  // Ensure it's an object\x2C and not a string url.\n  // If it's an object\x2C this is a no-op.\n  // this way\x2C you can call urlParse() on strings\n  // to clean up potentially wonky urls.\n  if (typeof urlObject === 'string') {\n    urlObject = urlParse(urlObject);\n  } else if (typeof urlObject !== 'object' || urlObject === null) {\n    throw new ERR_INVALID_ARG_TYPE('urlObject'\x2C\n                                   ['Object'\x2C 'string']\x2C urlObject);\n  } else if (!(urlObject instanceof Url)) {\n    const format = urlObject[formatSymbol];\n    return format ?\n      format.call(urlObject\x2C options) :\n      Url.prototype.format.call(urlObject);\n  }\n  return urlObject.format();\n}\n\n// These characters do not need escaping:\n// ! - . _ ~\n// ' ( ) * :\n// digits\n// alpha (uppercase)\n// alpha (lowercase)\nconst noEscapeAuth = new Int8Array([\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\nUrl.prototype.format = function format() {\n  let auth = this.auth || '';\n  if (auth) {\n    auth = encodeStr(auth\x2C noEscapeAuth\x2C hexTable);\n    auth += '@';\n  }\n\n  let protocol = this.protocol || '';\n  let pathname = this.pathname || '';\n  let hash = this.hash || '';\n  let host = '';\n  let query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (\n      this.hostname.includes(':') && !isIpv6Hostname(this.hostname) ?\n        '[' + this.hostname + ']' :\n        this.hostname\n    );\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query !== null && typeof this.query === 'object') {\n    query = querystring.stringify(this.query);\n  }\n\n  let search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58/* : */)\n    protocol += ':';\n\n  let newPathname = '';\n  let lastPos = 0;\n  for (let i = 0; i < pathname.length; ++i) {\n    switch (pathname.charCodeAt(i)) {\n      case CHAR_HASH:\n        if (i - lastPos > 0)\n          newPathname += pathname.slice(lastPos\x2C i);\n        newPathname += '%23';\n        lastPos = i + 1;\n        break;\n      case CHAR_QUESTION_MARK:\n        if (i - lastPos > 0)\n          newPathname += pathname.slice(lastPos\x2C i);\n        newPathname += '%3F';\n        lastPos = i + 1;\n        break;\n    }\n  }\n  if (lastPos > 0) {\n    if (lastPos !== pathname.length)\n      pathname = newPathname + pathname.slice(lastPos);\n    else\n      pathname = newPathname;\n  }\n\n  // Only the slashedProtocols get the //.  Not mailto:\x2C xmpp:\x2C etc.\n  // unless they had them to begin with.\n  if (this.slashes || slashedProtocol.has(protocol)) {\n    if (this.slashes || host) {\n      if (pathname && pathname.charCodeAt(0) !== CHAR_FORWARD_SLASH)\n        pathname = '/' + pathname;\n      host = '//' + host;\n    } else if (protocol.length >= 4 &&\n               protocol.charCodeAt(0) === 102/* f */ &&\n               protocol.charCodeAt(1) === 105/* i */ &&\n               protocol.charCodeAt(2) === 108/* l */ &&\n               protocol.charCodeAt(3) === 101/* e */) {\n      host = '//';\n    }\n  }\n\n  search = search.replace(/#/g\x2C '%23');\n\n  if (hash && hash.charCodeAt(0) !== CHAR_HASH)\n    hash = '#' + hash;\n  if (search && search.charCodeAt(0) !== CHAR_QUESTION_MARK)\n    search = '?' + search;\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source\x2C relative) {\n  return urlParse(source\x2C false\x2C true).resolve(relative);\n}\n\nUrl.prototype.resolve = function resolve(relative) {\n  return this.resolveObject(urlParse(relative\x2C false\x2C true)).format();\n};\n\nfunction urlResolveObject(source\x2C relative) {\n  if (!source) return relative;\n  return urlParse(source\x2C false\x2C true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function resolveObject(relative) {\n  if (typeof relative === 'string') {\n    const rel = new Url();\n    rel.parse(relative\x2C false\x2C true);\n    relative = rel;\n  }\n\n  const result = new Url();\n  const tkeys = ObjectKeys(this);\n  for (let tk = 0; tk < tkeys.length; tk++) {\n    const tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // Hash is always overridden\x2C no matter what.\n  // even href="" will remove it.\n  result.hash = relative.hash;\n\n  // If the relative url is empty\x2C then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // Hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // Take everything except the protocol from relative\n    const rkeys = ObjectKeys(relative);\n    for (let rk = 0; rk < rkeys.length; rk++) {\n      const rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol.has(result.protocol) &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // If it's a known url protocol\x2C then changing\n    // the protocol does weird things\n    // first\x2C if it's not file:\x2C then we MUST have a host\x2C\n    // and if there was a path\n    // to begin with\x2C then we MUST have a path.\n    // if it is file:\x2C then the host is dropped\x2C\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol.has(relative.protocol)) {\n      const keys = ObjectKeys(relative);\n      for (let v = 0; v < keys.length; v++) {\n        const k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host &&\n        !/^file:?$/.test(relative.protocol) &&\n        !hostlessProtocol.has(relative.protocol)) {\n      const relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // To support http.request\n    if (result.pathname || result.search) {\n      const p = result.pathname || '';\n      const s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  const isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/');\n  const isRelAbs = (\n    relative.host || (relative.pathname && relative.pathname.charAt(0) === '/')\n  );\n  let mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname));\n  const removeAllDots = mustEndAbs;\n  let srcPath = (result.pathname && result.pathname.split('/')) || [];\n  const relPath = (relative.pathname && relative.pathname.split('/')) || [];\n  const noLeadingSlashes = result.protocol &&\n      !slashedProtocol.has(result.protocol);\n\n  // If the url is a non-slashed url\x2C then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname\x2C as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on\x2C put the first path part into the host field.\n  if (noLeadingSlashes) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      result.auth = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    if (relative.host || relative.host === '') {\n      if (result.host !== relative.host) result.auth = null;\n      result.host = relative.host;\n      result.port = relative.port;\n    }\n    if (relative.hostname || relative.hostname === '') {\n      if (result.hostname !== relative.hostname) result.auth = null;\n      result.hostname = relative.hostname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // Fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file\x2C and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search !== null && relative.search !== undefined) {\n    // Just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (noLeadingSlashes) {\n      result.hostname = result.host = srcPath.shift();\n      // Occasionally the auth can get stuck only in host.\n      // This especially happens in cases like\n      // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\n      const authInHost =\n        result.host && result.host.indexOf('@') > 0 && result.host.split('@');\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // To support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // No path at all. All other things were already handled above.\n    result.pathname = null;\n    // To support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // If a url ENDs in . or ..\x2C then it must get a trailing slash.\n  // however\x2C if it ends in anything else non-slashy\x2C\n  // then it must NOT get a trailing slash.\n  let last = srcPath.slice(-1)[0];\n  const hasTrailingSlash = (\n    ((result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..')) || last === '');\n\n  // Strip single dots\x2C resolve double dots to parent dir\n  // if the path tries to go above the root\x2C `up` ends up > 0\n  let up = 0;\n  for (let i = srcPath.length - 1; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      spliceOne(srcPath\x2C i);\n    } else if (last === '..') {\n      spliceOne(srcPath\x2C i);\n      up++;\n    } else if (up) {\n      spliceOne(srcPath\x2C i);\n      up--;\n    }\n  }\n\n  // If the path is allowed to go above the root\x2C restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    while (up--) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  const isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (noLeadingSlashes) {\n    result.hostname =\n      result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    // Occasionally the auth can get stuck only in host.\n    // This especially happens in cases like\n    // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\n    const authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  // To support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function parseHost() {\n  let host = this.host;\n  let port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.slice(1);\n    }\n    host = host.slice(0\x2C host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nmodule.exports = {\n  // Original API\n  Url\x2C\n  parse: urlParse\x2C\n  resolve: urlResolve\x2C\n  resolveObject: urlResolveObject\x2C\n  format: urlFormat\x2C\n\n  // WHATWG API\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n\n  // Utilities\n  pathToFileURL\x2C\n  fileURLToPath\x2C\n  urlToHttpOptions\x2C\n};\n
code-source-info,0x324f23cb2896,85,3882,4079,C0O3929C2O3937C7O3953C9O3964C10O3986C13O3986C19O4009C36O4009C41O4060C43O4077,,
code-creation,LazyCompile,10,264583,0x324f23cb4936,62,Url node:url:60:13,0x23e292d087a8,~
code-source-info,0x324f23cb4936,85,1978,2242,C0O1985C1O1999C5O2009C6O2022C10O2032C11O2042C15O2052C16O2062C20O2072C21O2082C25O2092C26O2106C30O2116C31O2126C35O2136C36O2148C40O2158C41O2169C45O2179C46O2193C50O2203C51O2213C55O2223C56O2233C61O2241,,
tick,0x10100ade0,264583,0,0x0,3,0x0,0x324f23cb2520,0x324f23cb21c4,0x324f23cb02a0,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,264750,0x324f23cb4e6e,2004,parse node:url:168:37,0x23e292d09258,~
code-source-info,0x324f23cb4e6e
code-creation,LazyCompile,10,264958,0x324f23cb5ca6,91,parseHost node:url:958:45,0x23e292d095a8,~
code-source-info,0x324f23cb5ca6,85,29400,29655,C0O29423C5O29442C10O29454C15O29454C21O29468C23O29484C24O29495C28O29504C30O29513C35O29547C43O29547C48O29540C52O29579C59O29593C64O29607C68O29600C72O29579C79O29622C83O29632C85O29646C90O29654,,
code-creation,LazyCompile,10,264958,0x324f23cb5e3e,49,isIpv6Hostname node:url:160:24,0x23e292d09208,~
code-source-info,0x324f23cb5e3e,85,4104,4304,C0O4119C7O4132C15O4175C17O4171C24O4207C27O4252C31O4259C35O4207C43O4272C45O4264C48O4302,,
code-creation,LazyCompile,10,265000,0x324f23cb5fee,173,getHostname node:url:479:21,0x23e292d092a8,~
code-source-info,0x324f23cb5fee,85,13518,14223,C0O13558C2O13574C6O13563C11O13615C16O13615C22O13650C24O13659C26O13656C33O13687C35O13684C42O13737C44O13733C51O13778C53O13775C60O13806C62O13803C69O13856C71O13853C78O13874C80O13871C87O13914C89O13910C96O13964C98O13960C105O14006C107O14002C114O14050C118O14092C120O14139C127O14139C133O14128C137O14158C140O14178C145O14178C157O14189C161O14196C162O13584C167O13545C170O14209C172O14221,,
code-creation,LazyCompile,10,265083,0x324f23cb6266,123,autoEscapeStr node:url:521:23,0x23e292d092f8,~
code-source-info,0x324f23cb6266,85,15302,15986,C0O15327C3O15354C5O15372C7O15384C11O15377C16O15493C21O15511C26O15511C31O15505C35O15531C37O15620C39O15626C44O15668C49O15668C62O15700C64O15711C71O15730C73O15749C77O15394C82O15359C85O15766C86O15785C91O15826C93O15838C94O15915C98O15908C103O15943C108O15943C120O15969C122O15984,,
code-creation,LazyCompile,10,265166,0x324f23cb659e,758,format node:url:582:39,0x23e292d093b8,~
code-source-info,0x324f23cb659e
code-creation,LazyCompile,10,265250,0x324f23cb6f2e,467,initialiseClients /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:177:30,0x324f23cafd50,~
code-source-info,0x324f23cb6f2e
tick,0x10115de18,265333,0,0x0,2,0x0,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,265375,0x324f23cb7a3e,712,Client /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:14:17,0x2779b46fcd60,~
code-source-info,0x324f23cb7a3e
code-creation,LazyCompile,10,265416,0x324f23cb8026,16,cloneDeep /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1398:19,0xbb714f73848,~
code-source-info,0x324f23cb8026,361,37412,37462,C0O37424C10O37431C15O37460,,
code-creation,LazyCompile,10,265500,0x324f23cb81f6,479,baseClone /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:841:19,0xbb714f72f60,~
code-source-info,0x324f23cb81f
code-creation,LazyCompile,10,265541,0x324f23cb859e,6,isBuffer node:buffer:509:36,0x30d75ba4eb0,~
code-source-info,0x324f23cb859e,18,14350,14387,C0O14358C2O14367C5O14385,,
code-creation,LazyCompile,10,265541,0x324f23cb86e6,44,isHostObject /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:229:22,0xbb714f724e8,~
code-source-info,0x324f23cb86e6,361,7003,7309,C0O7158C2O7167C7O7201C18O7243C20O7261C29O7250C41O7293C43O7307,,
code-creation,LazyCompile,10,265583,0x324f23cb8806,36,initCloneObject /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1252:25,0xbb714f73618,~
code-source-info,0x324f23cb8806,361,33628,33764,C0O33663C11O33693C23O33731C28O33720C35O33762,,
code-creation,LazyCompile,10,265583,0x324f23cb8926,28,isPrototype /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1354:21,0xbb714f737a8,~
code-source-info,0x324f23cb8926,361,36474,36629,C0O36497C4O36512C9O36539C13O36574C22O36604C24O36617C27O36627,,
code-creation,LazyCompile,10,265625,0x324f23cb8a1e,16, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:267:18,0xbb714f7cbf0,~
code-source-info,0x324f23cb8a1e,361,7952,7996,C0O7964C6O7976C11O7971C15O7992,,
code-creation,LazyCompile,10,265625,0x324f23cb8afe,20,baseCreate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:910:20,0xbb714f72fd8,~
code-source-info,0x324f23cb8afe,361,24141,24205,C0O24153C3O24160C12O24178C19O24203,,
code-creation,LazyCompile,10,265625,0x324f23cb8c1e,16,Stack /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:666:15,0xbb714f72c40,~
code-source-info,0x324f23cb8c1e,361,17597,17652,C0O17611C5O17627C10O17625C15O17651,,
code-creation,LazyCompile,10,265666,0x324f23cb8d2e,69,ListCache /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:460:19,0xbb714f72880,~
code-source-info,0x324f23cb8d2e,361,13115,13307,C0O13141C3O13160C7O13178C15O13198C20O13198C24O13224C31O13224C36O13252C38O13259C42O13277C48O13286C54O13296C58O13277C64O13209C68O13306,,
code-creation,LazyCompile,10,265708,0x324f23cb8e86,8,listCacheClear /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:478:24,0xbb714f728d0,~
code-source-info,0x324f23cb8e86,361,13447,13475,C0O13454C2O13468C7O13474,,
code-creation,LazyCompile,10,265708,0x324f23cb9016,16,stackGet /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:703:18,0xbb714f72d30,~
code-source-info,0x324f23cb9016,361,18327,18369,C0O18349C5O18358C10O18358C15O18367,,
code-creation,LazyCompile,10,265708,0x324f23cb9116,35,listCacheGet /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:516:22,0xbb714f72970,~
code-source-info,0x324f23cb9116,361,14222,14348,C0O14248C5O14272C8O14272C14O14300C15O14313C25O14335C31O14342C34O14346,,
code-creation,LazyCompile,10,265750,0x324f23cb922e,47,assocIndexOf /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:804:22,0xbb714f72ec0,~
code-source-info,0x324f23cb922e,361,21141,21288,C0O21177C5O21200C15O21200C17O21210C22O21222C27O21230C31O21214C38O21249C40O21263C41O21187C44O21276C46O21286,,
code-creation,LazyCompile,10,265791,0x324f23cb93b6,105,stackSet /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:730:18,0xbb714f72dd0,~
code-source-info,0x324f23cb93b6,361,18920,19240,C0O18954C5O18966C7O18976C12O19022C17O19036C21O19055C28O19081C31O19062C36O19101C50O19107C59O19112C63O19101C68O19127C70O19139C71O19150C76O19174C82O19172C91O19207C96O19207C102O19226C104O19238,,
code-creation,LazyCompile,10,265791,0x324f23cb951e,18,getAllKeys /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1151:20,0xbb714f734d8,~
code-source-info,0x324f23cb951e,361,30834,30897,C0O30847C12O30854C17O30895,,
code-creation,LazyCompile,10,265833,0x324f23cb95fe,32,baseGetAllKeys /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:925:24,0xbb714f73028,~
code-source-info,0x324f23cb95fe,361,24689,24833,C0O24738C5O24758C8O24765C21O24810C26O24792C31O24831,,
code-creation,LazyCompile,10,265833,0x324f23cb96f6,26,keys /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1705:14,0xbb714f73b18,~
code-source-info,0x324f23cb96f6,361,44296,44381,C0O44309C3O44316C12O44338C21O44362C25O44379,,
code-creation,LazyCompile,10,265833,0x324f23cb97f6,29,isArrayLike /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1512:21,0xbb714f73938,~
code-source-info,0x324f23cb97f6,361,39995,40078,C0O40007C3O40020C9O40046C14O40031C23O40058C28O40076,,
code-creation,LazyCompile,10,265875,0x324f23cb98e6,31,isLength /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1614:18,0xbb714f73a28,~
code-source-info,0x324f23cb98e6,361,42265,42376,C0O42277C8O42322C15O42336C20O42340C27O42354C30O42374,,
code-creation,LazyCompile,10,265916,0x324f23cb9a0e,95,baseKeys /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:964:18,0xbb714f73118,~
code-source-info,0x324f23cb9a0e,361,25730,25981,C0O25743C3O25748C9O25775C12O25782C16O25801C17O25821C20O25843C24O25843C39O25836C52O25836C53O25865C56O25884C61O25884C71O25909C76O25942C81O25942C89O25827C92O25965C94O25979,,
code-creation,LazyCompile,10,265916,0x324f23cb9b96,46,arrayPush /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:155:19,0xbb714f723a8,~
code-source-info,0x324f23cb9b96,361,5076,5265,C0O5108C3O5134C8O5163C13O5189C20O5189C25O5205C27O5218C33O5235C36O5227C40O5174C43O5250C45O5263,,
code-creation,LazyCompile,10,265958,0x324f23cb9cbe,59,arrayEach /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:135:19,0xbb714f72358,~
code-source-info,0x324f23cb9cbe,361,4649,4856,C0O4683C3O4702C7O4716C15O4746C22O4746C27O4762C29O4780C39O4766C46O4803C51O4822C53O4731C56O4841C58O4854,,
code-creation,LazyCompile,10,265958,0x324f23cb9de6,67, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:891:37,0x324f23cb8130,~
code-source-info,0x324f23cb9de6,361,23603,23866,C0O23625C4O23644C7O23666C12O23682C17O23769C51O23794C60O23769C66O23865,,
code-creation,LazyCompile,10,266000,0x324f23cb9f1e,51,assignValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:788:21,0xbb714f72e70,~
code-source-info,0x324f23cb9f1e,361,20657,20859,C0O20697C2O20703C6O20712C9O20733C14O20733C25O20754C38O20814C43O20833C45O20845C50O20858,,
code-creation,LazyCompile,10,266041,0x324f23cba1de,22,eq /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1434:12,0xbb714f73898,~
code-source-info,0x324f23cba1de,361,38156,38240,C0O38175C2O38188C9O38208C17O38227C21O38238,,
code-creation,LazyCompile,10,266083,0x324f23cba37e,66,initCloneArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1233:24,0xbb714f735c8,~
code-source-info,0x324f23cba37e,361,33147,33448,C0O33178C5O33207C10O33207C16O33278C21O33304C31O33338C39O33338C47O33387C51O33379C55O33419C59O33411C63O33432C65O33446,,
code-creation,LazyCompile,10,266125,0x324f23cba59e,59,HTTPParser /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:6:20,0x395d7b337270,~
code-source-info,0x324f23cba59e,335,108,301,C0O119C3O126C11O149C15O134C23O180C27O165C36O126C41O215C47O278C52O278C58O300,,
code-creation,LazyCompile,10,266166,0x324f23cba6de,26,ok node:assert:410:12,0x395d7b33b530,~
code-source-info,0x324f23cba6de,336,13265,13315,C0O13265C3O13279C11O13296C19O13279C25O13314,,
code-creation,LazyCompile,10,266208,0x324f23cbca1e,98,innerOk node:assert:378:17,0x395d7b33b4e0,~
code-source-info,0x324f23cbca1e,336,12530,13121,C0O12563C4O12604C6O12616C7O12627C12O12642C14O12673C20O12739C25O12768C27O12799C30O12809C39O12848C41O12871C43O12860C48O12886C50O12886C51O12924C63O12959C69O12994C75O13045C81O12924C87O13060C89O13081C93O13105C95O13105C97O13120,,
code-creation,LazyCompile,10,266250,0x324f23cbcd26,104,HTTPParser.initialize /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:14:44,0x395d7b337310,~
code-source-info,0x324f23cbcd26,335,345,778,C0O372C3O379C11O402C15O387C23O433C27O418C31O379C36O446C38O456C42O466C44O484C47O477C51O497C55O507C59O554C61O568C65O576C67O586C71O594C72O609C76O620C78O636C82O644C83O660C87O701C88O717C92O727C93O743C97O754C98O768C103O777,,
code-creation,LazyCompile,10,266291,0x324f23cbcf7e,87,RequestIterator /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:24:26,0xbb714f51700,~
code-source-info,0x324f23cbcf7e,339,639,956,C0O650C2O661C7O696C12O703C17O728C18O736C19O750C23O760C24O773C28O807C38O800C42O835C47O835C51O852C53O869C57O878C59O900C62O900C66O898C70O928C75O945C80O928C86O955,,
code-creation,LazyCompile,10,266291,0x324f23cbd156,20,RequestIterator.resetContext /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:40:51,0xbb714f517a0,~
code-source-info,0x324f23cbd156,339,1043,1093,C0O1050C2O1065C5O1076C10O1065C14O1063C19O1092,,
code-creation,LazyCompile,10,266333,0x324f23cbd49e,70,requestBuilder /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js:7:25,0xbb714f6f190,~
code-source-info,0x324f23cbd49e,359,187,3172,C0O187C9O340C14O403C18O410C25O410C34O465C45O505C49O523C57O523C63O514C65O781C69O3170,,
code-creation,LazyCompile,10,266375,0x324f23cbd656,73,alloc node:buffer:359:30,0x30d75ba4a78,~
code-source-info,0x324f23cbd656,18,10441,10672,C0O10468C5O10468C9O10488C14O10519C20O10533C25O10556C30O10556C35O10586C40O10617C54O10593C59O10635C60O10642C67O10649C72O10670,,
code-creation,LazyCompile,10,266416,0x324f23cbd8ce,84,RequestIterator.setRequests /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:66:50,0xbb714f51950,~
code-source-info,0x324f23cbd8ce,339,1859,2274,C0O1859C9O1877C13O1891C17O1901C22O1917C28O1915C32O1939C36O1964C40O2054C43O2059C48O2068C58O2068C63O2234C69O2261C75O2269C78O2254C83O2273,,
code-creation,LazyCompile,10,266458,0x324f23cbda6e,37, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:71:25,0x324f23cbd7a0,~
code-source-info,0x324f23cbda6e,339,2076,2230,C0O2098C5O2118C9O2132C10O2138C15O2162C23O2199C26O2204C31O2204C36O2229,,
code-creation,LazyCompile,10,266500,0x324f23cbdcb6,196,RequestIterator.rebuildRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:103:53,0xbb714f51c18,~
code-source-info,0x324f23cbdcb6,339,3009,3778,C0O3020C2O3027C3O3041C7O3060C13O3087C18O3117C23O3132C29O3148C33O3110C37O3172C42O3192C47O3213C52O3172C59O3226C61O3249C66O3285C71O3297C77O3321C81O3328C86O3338C91O3338C96O3348C108O3370C111O3370C115O3349C122O3328C131O3278C137O3417C143O3437C148O3542C157O3548C162O3542C163O3681C168O3690C172O3697C175O3674C179O3712C184O3712C188O3732C189O3746C193O3765C195O3776,,
code-creation,LazyCompile,10,266583,0x324f23cbe266,1020,buildRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js:26:32,0x324f23cbd308,~
code-source-info,0x324f23cbe
tick,0x100ff1944,266625,0,0x0,3,0x0,0x324f23cbdcea,0x324f23cbda8d,0x101426248,0x324f23cbd908,0x324f23cbcfce,0x324f23cb7bc3,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,266666,0x324f23cbe896,3,setupRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpRequestBuilder.js:16:19,0x324f23cbd278,~
code-source-info,0x324f23cbe896,359,465,483,C0O476C2O483,,
code-creation,LazyCompile,10,266708,0x324f23cbe9c6,8,PipelinedRequestsQueue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:14:15,0x324f23ca72d8,~
code-source-info,0x324f23cbe9c6,364,657,695,C0O666C2O687C7O694,,
code-creation,LazyCompile,10,266708,0x324f23cbeade,2,noop /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/noop.js:2:32,0x2779b46f9d08,~
code-source-info,0x324f23cbeade,328,58,63,C1O62,,
code-creation,LazyCompile,10,266750,0x324f23cbec0e,140,retimer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:57:18,0x2779b46ff7d8,~
code-source-info,0x324f23cbec0e,333,1269,1709,C0O1269C2O1276C3O1296C10O1322C19O1328C24O1322C25O1364C27O1384C34O1408C43O1414C48O1408C49O1453C51O1475C57O1482C62O1493C66O1520C70O1527C76O1500C82O1582C84O1594C88O1587C93O1615C95O1637C98O1634C101O1623C105O1603C110O1569C113O1655C119O1683C125O1697C134O1662C139O1707,,
code-creation,LazyCompile,10,266791,0x324f23cbefa6,80,Retimer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:6:15,0x2779b46ff828,~
code-source-info,0x324f23cbefa6,333,79,612,C0O79C12O124C14O124C16O134C20O150C23O150C26O148C30O164C31O182C35O190C37O206C41O220C43O231C47O242C48O258C52O271C56O290C60O555C64O585C69O569C74O567C79O611,,
code-creation,LazyCompile,10,266791,0x324f23cbf14e,59,getTime /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/time.js:3:35,0x395d7b335f90,~
code-source-info,0x324f23cbf14e,334,48,133,C0O65C4O73C9O73C14O84C18O96C24O103C27O107C36O117C39O121C49O114C53O96C58O131,,
code-creation,LazyCompile,10,266833,0x324f23cbf356,248,hrtime node:internal/process/per_thread:67:18,0x3a1583d05cd0,~
code-source-info,0x324f23cbf356,23,1551,2070,C0O1564C5O1572C10O1572C14O1587C18O1619C28O1619C33O1663C40O1670C45O1687C58O1730C65O1693C70O1687C71O1766C77O1775C83O1779C89O1795C94O1803C97O1793C102O1814C105O1808C109O1838C116O1846C122O1856C125O1850C129O1887C130O1892C134O1903C143O1911C147O1929C154O1935C163O1940C167O1959C181O1967C187O1973C188O1985C197O2000C201O2008C207O2012C213O2028C218O2036C221O2026C233O2047C238O2055C247O2066,,
code-creation,LazyCompile,10,266916,0x324f23cbf76e,216,setTimeout node:timers:140:20,0x38fe5586a540,~
script-source,60,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathTrunc\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  SymbolToPrimitive\n} = primordials;\n\nconst {\n  immediateInfo\x2C\n  toggleImmediateRef\n} = internalBinding('timers');\nconst L = require('internal/linkedlist');\nconst {\n  async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  decRefCount\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\n  }\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  getTimerDuration\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  immediateQueue\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\n} = require('internal/timers');\nconst {\n  promisify: { custom: customPromisify }\x2C\n  deprecate\n} = require('internal/util');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\nconst { validateCallback } = require('internal/validators');\n\nlet timersPromises;\n\nconst {\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitDestroy\n} = require('internal/async_hooks');\n\n// This stores all the known timer async ids to allow users to clearTimeout and\n// clearInterval using those ids\x2C to match the spec and the rest of the web\n// platform.\nconst knownTimersById = ObjectCreate(null);\n\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\nfunction unenroll(item) {\n  if (item._destroyed)\n    return;\n\n  item._destroyed = true;\n\n  if (item[kHasPrimitive])\n    delete knownTimersById[item[async_id_symbol]];\n\n  // Fewer checks may be possible\x2C but these cover everything.\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\n    emitDestroy(item[async_id_symbol]);\n\n  L.remove(item);\n\n  // We only delete refed lists because unrefed ones are incredibly likely\n  // to come from http and be recreated shortly after.\n  // TODO: Long-term this could instead be handled by creating an internal\n  // clearTimeout that makes it clear that the list should not be deleted.\n  // That function could then be used by http and other similar modules.\n  if (item[kRefed]) {\n    // Compliment truncation during insert().\n    const msecs = MathTrunc(item._idleTimeout);\n    const list = timerListMap[msecs];\n    if (list !== undefined && L.isEmpty(list)) {\n      debug('unenroll: list empty');\n      timerListQueue.removeAt(list.priorityQueuePosition);\n      delete timerListMap[list.msecs];\n    }\n\n    decRefCount();\n  }\n\n  // If active is called later\x2C then we want to make sure not to insert again\n  item._idleTimeout = -1;\n}\n\n// Make a regular object able to act as a timer by setting some properties.\n// This function does not start the timer\x2C see `active()`.\n// Using existing objects as timers slightly reduces object overhead.\nfunction enroll(item\x2C msecs) {\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // If this item was already in a list somewhere\n  // then we should unenroll it from that\n  if (item._idleNext) unenroll(item);\n\n  L.init(item);\n  item._idleTimeout = msecs;\n}\n\n\n/**\n * Schedules the execution of a one-time `callback`\n * after `after` milliseconds.\n * @param {Function} callback\n * @param {number} [after]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\n  validateCallback(callback);\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 2] = arguments[i];\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!timersPromises)\n      timersPromises = require('timers/promises');\n    return timersPromises.setTimeout;\n  }\n});\n\n/**\n * Cancels a timeout.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearTimeout(timer) {\n  if (timer && timer._onTimeout) {\n    timer._onTimeout = null;\n    unenroll(timer);\n    return;\n  }\n  if (typeof timer === 'number' || typeof timer === 'string') {\n    const timerInstance = knownTimersById[timer];\n    if (timerInstance !== undefined) {\n      timerInstance._onTimeout = null;\n      unenroll(timerInstance);\n    }\n  }\n}\n\n/**\n * Schedules repeated execution of `callback`\n * every `repeat` milliseconds.\n * @param {Function} callback\n * @param {number} [repeat]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\n  validateCallback(callback);\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 2] = arguments[i];\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\n/**\n * Cancels an interval.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearInterval(timer) {\n  // clearTimeout and clearInterval can be used to clear timers created from\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  clearTimeout(timer);\n}\n\nTimeout.prototype.close = function() {\n  clearTimeout(this);\n  return this;\n};\n\n/**\n * Coerces a `Timeout` to a primitive.\n * @returns {number}\n */\nTimeout.prototype[SymbolToPrimitive] = function() {\n  const id = this[async_id_symbol];\n  if (!this[kHasPrimitive]) {\n    this[kHasPrimitive] = true;\n    knownTimersById[id] = this;\n  }\n  return id;\n};\n\n/**\n * Schedules the immediate execution of `callback`\n * after I/O events' callbacks.\n * @param {Function} callback\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Immediate}\n */\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\n  validateCallback(callback);\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n      break;\n    case 2:\n      args = [arg1];\n      break;\n    case 3:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 4; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 1] = arguments[i];\n      }\n      break;\n  }\n\n  return new Immediate(callback\x2C args);\n}\n\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!timersPromises)\n      timersPromises = require('timers/promises');\n    return timersPromises.setImmediate;\n  }\n});\n\n/**\n * Cancels an immediate.\n * @param {Immediate} immediate\n * @returns {void}\n */\nfunction clearImmediate(immediate) {\n  if (!immediate || immediate._destroyed)\n    return;\n\n  immediateInfo[kCount]--;\n  immediate._destroyed = true;\n\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0)\n    toggleImmediateRef(false);\n  immediate[kRefed] = null;\n\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\n    emitDestroy(immediate[async_id_symbol]);\n  }\n\n  immediate._onImmediate = null;\n\n  immediateQueue.remove(immediate);\n}\n\nmodule.exports = {\n  setTimeout\x2C\n  clearTimeout\x2C\n  setImmediate\x2C\n  clearImmediate\x2C\n  setInterval\x2C\n  clearInterval\x2C\n  _unrefActive: deprecate(\n    unrefActive\x2C\n    'timers._unrefActive() is deprecated.' +\n    ' Please use timeout.refresh() instead.'\x2C\n    'DEP0127')\x2C\n  active: deprecate(\n    active\x2C\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\n    'DEP0126')\x2C\n  unenroll: deprecate(\n    unenroll\x2C\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\n    'DEP0096')\x2C\n  enroll: deprecate(\n    enroll\x2C\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\n    'DEP0095')\n};\n
code-source-info,0x324f23cbf76e,60,4237,4863,C0O4237C2O4277C7O4277C11O4312C13O4315C15O4341C50O4399C52O4424C61O4432C70O4445C72O4470C81O4478C90O4484C99O4497C101O4523C110O4531C119O4537C128O4543C135O4561C138O4582C142O4570C147O4681C149O4688C155O4704C158O4693C162O4591C167O4556C170O4723C172O4753C192O4753C198O4804C203O4828C208O4804C213O4846C215O4861,,
code-creation,LazyCompile,10,267291,0x1a43afb98506,21, node:internal/validators:212:42,0x30d75b9a120,~
code-source-info,0x1a43afb98506,17,6442,6543,C0O6460C6O6500C13O6506C18O6500C20O6542,,
code-creation,LazyCompile,10,267333,0x1a43afb98826,180,Timeout node:internal/timers:167:17,0x38fe55874a98,~
script-source,62,node:internal/timers,'use strict';\n\n// HOW and WHY the timers implementation works the way it does.\n//\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\n// timer so that we can time out of connections. Additionally\x2C many user\n// libraries and applications also use timers. As such there may be a\n// significantly large amount of timeouts scheduled at any given time.\n// Therefore\x2C it is very important that the timers implementation is performant\n// and efficient.\n//\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\n// linked list implementation\x2C since timers depend on it extensively. It can be\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\n// it is a set of helpers that operate on an existing object.\n//\n// In order to be as performant as possible\x2C the architecture and data\n// structures are designed so that they are optimized to handle the following\n// use cases as efficiently as possible:\n\n// - Adding a new timer. (insert)\n// - Removing an existing timer. (remove)\n// - Handling a timer timing out. (timeout)\n//\n// Whenever possible\x2C the implementation tries to make the complexity of these\n// operations as close to constant-time as possible.\n// (So that performance is not impacted by the number of scheduled timers.)\n//\n// Object maps are kept which contain linked lists keyed by their duration in\n// milliseconds.\n//\n/* eslint-disable node-core/non-ascii-character */\n//\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\n// \u2551\n// \u2560\u2550\u2550\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\n//              \u2502\n// \u2554\u2550\u2550          \u2502\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2551      \u2502                                  ^\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2560\u2550\u2550  \u2560\u2550\u2550\n// \u2551    \u2551\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\n// \u2551\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\n//\n/* eslint-enable node-core/non-ascii-character */\n//\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\n// is possible in the JavaScript layer. Any one list of timers is able to be\n// sorted by just appending to it because all timers within share the same\n// duration. Therefore\x2C any timer added later will always have been scheduled to\n// timeout later\x2C thus only needing to be appended.\n// Removal from an object-property linked list is also virtually constant-time\n// as can be seen in the lib/internal/linkedlist.js implementation.\n// Timeouts only need to process any timers currently due to expire\x2C which will\n// always be at the beginning of the list for reasons stated above. Any timers\n// after the first one encountered that does not yet need to timeout will also\n// always be due to timeout at a later time.\n//\n// Less-than constant time operations are thus contained in two places:\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\n// Timeout lists and the object map lookup of a specific list by the duration of\n// timers within (or creation of a new list). However\x2C these operations combined\n// have shown to be trivial in comparison to other timers architectures.\n\nconst {\n  MathMax\x2C\n  MathTrunc\x2C\n  NumberIsFinite\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectCreate\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  scheduleTimer\x2C\n  toggleTimerRef\x2C\n  getLibuvNow\x2C\n  immediateInfo\x2C\n  toggleImmediateRef\n} = internalBinding('timers');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n} = require('internal/async_hooks');\n\n// Symbols for storing async id state.\nconst async_id_symbol = Symbol('asyncId');\nconst trigger_async_id_symbol = Symbol('triggerId');\n\nconst kHasPrimitive = Symbol('kHasPrimitive');\n\nconst {\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst {\n  validateCallback\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst L = require('internal/linkedlist');\nconst PriorityQueue = require('internal/priority_queue');\n\nconst { inspect } = require('internal/util/inspect');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\n\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\nconst kCount = 0;\nconst kRefCount = 1;\nconst kHasOutstanding = 2;\n\n// Timeout values > TIMEOUT_MAX are set to 1.\nconst TIMEOUT_MAX = 2 ** 31 - 1;\n\nlet timerListId = NumberMIN_SAFE_INTEGER;\n\nconst kRefed = Symbol('refed');\n\n// Create a single linked list instance only once at startup\nconst immediateQueue = new ImmediateList();\n\nlet nextExpiry = Infinity;\nlet refCount = 0;\n\n// This is a priority queue with a custom sorting function that first compares\n// the expiry times of two lists and if they're the same then compares their\n// individual IDs to determine which list was created first.\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\n\n// Object map containing linked lists of timers\x2C keyed and sorted by their\n// duration in milliseconds.\n//\n// - key = time in milliseconds\n// - value = linked list\nconst timerListMap = ObjectCreate(null);\n\nfunction initAsyncResource(resource\x2C type) {\n  const asyncId = resource[async_id_symbol] = newAsyncId();\n  const triggerAsyncId =\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\n  if (initHooksExist())\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n// Timer constructor function.\n// The entire prototype is defined in lib/timers.js\nfunction Timeout(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\n  after *= 1; // Coalesce to number or NaN\n  if (!(after >= 1 && after <= TIMEOUT_MAX)) {\n    if (after > TIMEOUT_MAX) {\n      process.emitWarning(`${after} does not fit into` +\n                          ' a 32-bit signed integer.' +\n                          '\\nTimeout duration was set to 1.'\x2C\n                          'TimeoutOverflowWarning');\n    }\n    after = 1; // Schedule on next tick\x2C follows browser behavior\n  }\n\n  this._idleTimeout = after;\n  this._idlePrev = this;\n  this._idleNext = this;\n  this._idleStart = null;\n  // This must be set to null first to avoid function tracking\n  // on the hidden class\x2C revisit in V8 versions after 6.2\n  this._onTimeout = null;\n  this._onTimeout = callback;\n  this._timerArgs = args;\n  this._repeat = isRepeat ? after : null;\n  this._destroyed = false;\n\n  if (isRefed)\n    incRefCount();\n  this[kRefed] = isRefed;\n  this[kHasPrimitive] = false;\n\n  initAsyncResource(this\x2C 'Timeout');\n}\n\n// Make sure the linked list only shows the minimal necessary information.\nTimeout.prototype[inspect.custom] = function(_\x2C options) {\n  return inspect(this\x2C {\n    ...options\x2C\n    // Only inspect one level.\n    depth: 0\x2C\n    // It should not recurse.\n    customInspect: false\n  });\n};\n\nTimeout.prototype.refresh = function() {\n  if (this[kRefed])\n    active(this);\n  else\n    unrefActive(this);\n\n  return this;\n};\n\nTimeout.prototype.unref = function() {\n  if (this[kRefed]) {\n    this[kRefed] = false;\n    if (!this._destroyed)\n      decRefCount();\n  }\n  return this;\n};\n\nTimeout.prototype.ref = function() {\n  if (!this[kRefed]) {\n    this[kRefed] = true;\n    if (!this._destroyed)\n      incRefCount();\n  }\n  return this;\n};\n\nTimeout.prototype.hasRef = function() {\n  return this[kRefed];\n};\n\nfunction TimersList(expiry\x2C msecs) {\n  this._idleNext = this; // Create the list with the linkedlist properties to\n  this._idlePrev = this; // Prevent any unnecessary hidden class changes.\n  this.expiry = expiry;\n  this.id = timerListId++;\n  this.msecs = msecs;\n  this.priorityQueuePosition = null;\n}\n\n// Make sure the linked list only shows the minimal necessary information.\nTimersList.prototype[inspect.custom] = function(_\x2C options) {\n  return inspect(this\x2C {\n    ...options\x2C\n    // Only inspect one level.\n    depth: 0\x2C\n    // It should not recurse.\n    customInspect: false\n  });\n};\n\n// A linked list for storing `setImmediate()` requests\nfunction ImmediateList() {\n  this.head = null;\n  this.tail = null;\n}\n\n// Appends an item to the end of the linked list\x2C adjusting the current tail's\n// next pointer and the item's previous pointer where applicable\nImmediateList.prototype.append = function(item) {\n  if (this.tail !== null) {\n    this.tail._idleNext = item;\n    item._idlePrev = this.tail;\n  } else {\n    this.head = item;\n  }\n  this.tail = item;\n};\n\n// Removes an item from the linked list\x2C adjusting the pointers of adjacent\n// items and the linked list's head or tail pointers as necessary\nImmediateList.prototype.remove = function(item) {\n  if (item._idleNext) {\n    item._idleNext._idlePrev = item._idlePrev;\n  }\n\n  if (item._idlePrev) {\n    item._idlePrev._idleNext = item._idleNext;\n  }\n\n  if (item === this.head)\n    this.head = item._idleNext;\n  if (item === this.tail)\n    this.tail = item._idlePrev;\n\n  item._idleNext = null;\n  item._idlePrev = null;\n};\n\nfunction incRefCount() {\n  if (refCount++ === 0)\n    toggleTimerRef(true);\n}\n\nfunction decRefCount() {\n  if (--refCount === 0)\n    toggleTimerRef(false);\n}\n\n// Schedule or re-schedule a timer.\n// The item must have been enroll()'d first.\nfunction active(item) {\n  insertGuarded(item\x2C true);\n}\n\n// Internal APIs that need timeouts should use `unrefActive()` instead of\n// `active()` so that they do not unnecessarily keep the process open.\nfunction unrefActive(item) {\n  insertGuarded(item\x2C false);\n}\n\n// The underlying logic for scheduling or re-scheduling a timer.\n//\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\n// list if one does not already exist for the specified timeout duration.\nfunction insertGuarded(item\x2C refed\x2C start) {\n  const msecs = item._idleTimeout;\n  if (msecs < 0 || msecs === undefined)\n    return;\n\n  insert(item\x2C msecs\x2C start);\n\n  const isDestroyed = item._destroyed;\n  if (isDestroyed || !item[async_id_symbol]) {\n    item._destroyed = false;\n    initAsyncResource(item\x2C 'Timeout');\n  }\n\n  if (isDestroyed) {\n    if (refed)\n      incRefCount();\n  } else if (refed === !item[kRefed]) {\n    if (refed)\n      incRefCount();\n    else\n      decRefCount();\n  }\n  item[kRefed] = refed;\n}\n\nfunction insert(item\x2C msecs\x2C start = getLibuvNow()) {\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\n  msecs = MathTrunc(msecs);\n  item._idleStart = start;\n\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\n  let list = timerListMap[msecs];\n  if (list === undefined) {\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\n    const expiry = start + msecs;\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\n    timerListQueue.insert(list);\n\n    if (nextExpiry > expiry) {\n      scheduleTimer(msecs);\n      nextExpiry = expiry;\n    }\n  }\n\n  L.append(list\x2C item);\n}\n\nfunction setUnrefTimeout(callback\x2C after) {\n  // Type checking identical to setTimeout()\n  validateCallback(callback);\n\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\n  insert(timer\x2C timer._idleTimeout);\n\n  return timer;\n}\n\n// Type checking used by timers.enroll() and Socket#setTimeout()\nfunction getTimerDuration(msecs\x2C name) {\n  validateNumber(msecs\x2C name);\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\n  }\n\n  // Ensure that msecs fits into signed int32\n  if (msecs > TIMEOUT_MAX) {\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\n                        'TimeoutOverflowWarning');\n    return TIMEOUT_MAX;\n  }\n\n  return msecs;\n}\n\nfunction compareTimersLists(a\x2C b) {\n  const expiryDiff = a.expiry - b.expiry;\n  if (expiryDiff === 0) {\n    if (a.id < b.id)\n      return -1;\n    if (a.id > b.id)\n      return 1;\n  }\n  return expiryDiff;\n}\n\nfunction setPosition(node\x2C pos) {\n  node.priorityQueuePosition = pos;\n}\n\nfunction getTimerCallbacks(runNextTicks) {\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\n  // this queue will store all remaining Immediates that need to run upon\n  // resolution of all error handling (if process is still alive).\n  const outstandingQueue = new ImmediateList();\n\n  function processImmediate() {\n    const queue = outstandingQueue.head !== null ?\n      outstandingQueue : immediateQueue;\n    let immediate = queue.head;\n\n    // Clear the linked list early in case new `setImmediate()`\n    // calls occur while immediate callbacks are executed\n    if (queue !== outstandingQueue) {\n      queue.head = queue.tail = null;\n      immediateInfo[kHasOutstanding] = 1;\n    }\n\n    let prevImmediate;\n    let ranAtLeastOneImmediate = false;\n    while (immediate !== null) {\n      if (ranAtLeastOneImmediate)\n        runNextTicks();\n      else\n        ranAtLeastOneImmediate = true;\n\n      // It's possible for this current Immediate to be cleared while executing\n      // the next tick queue above\x2C which means we need to use the previous\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\n      if (immediate._destroyed) {\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\n        continue;\n      }\n\n      immediate._destroyed = true;\n\n      immediateInfo[kCount]--;\n      if (immediate[kRefed])\n        immediateInfo[kRefCount]--;\n      immediate[kRefed] = null;\n\n      prevImmediate = immediate;\n\n      const asyncId = immediate[async_id_symbol];\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\n\n      try {\n        const argv = immediate._argv;\n        if (!argv)\n          immediate._onImmediate();\n        else\n          immediate._onImmediate(...argv);\n      } finally {\n        immediate._onImmediate = null;\n\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n\n        outstandingQueue.head = immediate = immediate._idleNext;\n      }\n\n      emitAfter(asyncId);\n    }\n\n    if (queue === outstandingQueue)\n      outstandingQueue.head = null;\n    immediateInfo[kHasOutstanding] = 0;\n  }\n\n\n  function processTimers(now) {\n    debug('process timer lists %d'\x2C now);\n    nextExpiry = Infinity;\n\n    let list;\n    let ranAtLeastOneList = false;\n    while (list = timerListQueue.peek()) {\n      if (list.expiry > now) {\n        nextExpiry = list.expiry;\n        return refCount > 0 ? nextExpiry : -nextExpiry;\n      }\n      if (ranAtLeastOneList)\n        runNextTicks();\n      else\n        ranAtLeastOneList = true;\n      listOnTimeout(list\x2C now);\n    }\n    return 0;\n  }\n\n  function listOnTimeout(list\x2C now) {\n    const msecs = list.msecs;\n\n    debug('timeout callback %d'\x2C msecs);\n\n    let ranAtLeastOneTimer = false;\n    let timer;\n    while (timer = L.peek(list)) {\n      const diff = now - timer._idleStart;\n\n      // Check if this loop iteration is too early for the next timer.\n      // This happens if there are more timers scheduled for later in the list.\n      if (diff < msecs) {\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\n        list.id = timerListId++;\n        timerListQueue.percolateDown(1);\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\n        return;\n      }\n\n      if (ranAtLeastOneTimer)\n        runNextTicks();\n      else\n        ranAtLeastOneTimer = true;\n\n      // The actual logic for when a timeout happens.\n      L.remove(timer);\n\n      const asyncId = timer[async_id_symbol];\n\n      if (!timer._onTimeout) {\n        if (!timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kRefed])\n            refCount--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n        continue;\n      }\n\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\n\n      let start;\n      if (timer._repeat)\n        start = getLibuvNow();\n\n      try {\n        const args = timer._timerArgs;\n        if (args === undefined)\n          timer._onTimeout();\n        else\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\n      } finally {\n        if (timer._repeat && timer._idleTimeout !== -1) {\n          timer._idleTimeout = timer._repeat;\n          insert(timer\x2C timer._idleTimeout\x2C start);\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kRefed])\n            refCount--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n      }\n\n      emitAfter(asyncId);\n    }\n\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\n    // called all of the timer timeouts.\n    // As such\x2C we can remove the list from the object map and\n    // the PriorityQueue.\n    debug('%d list empty'\x2C msecs);\n\n    // The current list may have been removed and recreated since the reference\n    // to `list` was created. Make sure they're the same instance of the list\n    // before destroying.\n    if (list === timerListMap[msecs]) {\n      delete timerListMap[msecs];\n      timerListQueue.shift();\n    }\n  }\n\n  return {\n    processImmediate\x2C\n    processTimers\n  };\n}\n\nclass Immediate {\n  constructor(callback\x2C args) {\n    this._idleNext = null;\n    this._idlePrev = null;\n    this._onImmediate = callback;\n    this._argv = args;\n    this._destroyed = false;\n    this[kRefed] = false;\n\n    initAsyncResource(this\x2C 'Immediate');\n\n    this.ref();\n    immediateInfo[kCount]++;\n\n    immediateQueue.append(this);\n  }\n\n  ref() {\n    if (this[kRefed] === false) {\n      this[kRefed] = true;\n      if (immediateInfo[kRefCount]++ === 0)\n        toggleImmediateRef(true);\n    }\n    return this;\n  }\n\n  unref() {\n    if (this[kRefed] === true) {\n      this[kRefed] = false;\n      if (--immediateInfo[kRefCount] === 0)\n        toggleImmediateRef(false);\n    }\n    return this;\n  }\n\n  hasRef() {\n    return !!this[kRefed];\n  }\n}\n\nmodule.exports = {\n  TIMEOUT_MAX\x2C\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\n  async_id_symbol\x2C\n  trigger_async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  initAsyncResource\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n  immediateQueue\x2C\n  getTimerCallbacks\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\x2C\n    kHasOutstanding\n  }\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  decRefCount\x2C\n  incRefCount\n};\n
code-source-info,0x1a43afb98826,62,5778,6759,C0O5825C7O5868C9O5880C16O5897C18O5894C23O5917C25O5929C27O5927C32O5950C35O5958C42O5973C52O5999C58O6055C65O5958C71O6182C75O6251C77O6269C81O6280C83O6295C87O6305C89O6320C93O6330C94O6346C98O6478C99O6494C103O6504C105O6520C109O6534C111O6550C115O6560C120O6575C127O6573C131O6602C132O6618C136O6630C140O6647C143O6647C146O6664C148O6669C153O6677C157O6690C159O6695C163O6710C167O6722C173O6722C179O6758,,
tick,0x1a37782c4,268083,0,0x0,3,0x0,0x324f23cbf82e,0x324f23cbefeb,0x324f23cbec94,0x324f23cb7c7f,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,268083,0x1a43afb99f66,37,incRefCount node:internal/timers:299:21,0x38fe55875018,~
code-source-info,0x1a43afb99f66,62,9151,9207,C0O9158C12O9170C19O9173C24O9184C31O9184C36O9206,,
code-creation,LazyCompile,10,268125,0x1a43afb9a09e,76,initAsyncResource node:internal/timers:157:27,0x38fe55874a48,~
code-source-info,0x1a43afb9a09e,62,5425,5677,C0O5462C2O5471C7O5490C10O5490C14O5488C21O5533C23O5542C28O5569C31O5569C35O5567C42O5599C47O5603C52O5625C69O5625C75O5676,,
code-creation,LazyCompile,10,268166,0x1a43afb9a1f6,23,newAsyncId node:internal/async_hooks:415:20,0x1910fc7f9b30,~
script-source,24,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// For performance reasons\x2C only track Promises when a hook is enabled.\nconst { setPromiseHooks } = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nsetCallbackTrampoline(callbackTrampoline);\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(1);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n\n  const publicResource = resource[owner_symbol];\n\n  if (publicResource != null) {\n    return publicResource;\n  }\n\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    value: name\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nconst destroyedSymbol = Symbol('destroyed');\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const destroyed = { destroyed: false };\n  promise[destroyedSymbol] = destroyed;\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n}\n\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  setPromiseHooks(\n    initHook\x2C\n    promiseBeforeHook\x2C\n    promiseAfterHook\x2C\n    promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\n  );\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook) {\n    setPromiseHooks(undefined\x2C undefined\x2C undefined\x2C undefined);\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\n  }\n};\n
code-source-info,0x1a43afb9a1f6,24,14326,14377,C0O14333C7O14358C16O14373C22O14375,,
code-creation,LazyCompile,10,268875,0x1a43afb9b676,35,getDefaultTriggerAsyncId node:internal/async_hooks:431:34,0x1910fc7f9bd0,~
code-source-info,0x1a43afb9b676,24,14785,15042,C0O14822C7O14838C9O14837C13O14931C14O14957C19O14966C26O14989C28O14988C31O15008C32O15011C34O15040,,
code-creation,LazyCompile,10,268916,0x1a43afb9b796,13,initHooksExist node:internal/async_hooks:468:24,0x1910fc7f9dc0,~
code-source-info,0x1a43afb9b796,24,15781,15813,C0O15788C5O15804C8O15795C12O15811,,
code-creation,LazyCompile,10,268916,0x1a43afb9b88e,16,hasHooks node:internal/async_hooks:460:18,0x1910fc7f9d20,~
code-source-info,0x1a43afb9b88e,24,15649,15695,C0O15659C7O15683C12O15689C15O15693,,
code-creation,LazyCompile,10,268958,0x1a43afb9ba3e,159,insert node:internal/timers:350:16,0x38fe558751a8,~
code-source-info,0x1a43afb9ba3e,62,10384,11020,C12O10406C15O10406C23O10498C28O10506C33O10526C35O10542C39O10645C46O10657C50O10668C52O10698C60O10698C65O10785C67O10791C71O10804C87O10833C93O10824C97O10868C102O10883C107O10883C112O10902C119O10917C124O10935C129O10935C133O10963C135O10974C141O10997C146O10999C151O10999C158O11019,,
code-creation,LazyCompile,10,268958,0x1a43afb9bc26,10, node:internal/timers:123:65,0x38fe558744d8,~
code-source-info,0x1a43afb9bc26,62,4431,4456,C0O4443C2O4449C9O4455,,
code-creation,LazyCompile,10,269000,0x1a43afb9bd5e,55,TimersList node:internal/timers:241:20,0x38fe55874d80,~
code-source-info,0x1a43afb9bd5e,62,7573,7854,C0O7593C2O7608C6O7671C8O7686C12O7745C14O7757C18O7769C30O7790C38O7777C42O7796C44O7807C48O7818C49O7845C54O7853,,
code-creation,LazyCompile,10,269041,0x1a43afb9bf06,67,insert node:internal/priority_queue:34:9,0x38fe55876698,~
script-source,63,node:internal/priority_queue,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst kCompare = Symbol('compare');\nconst kHeap = Symbol('heap');\nconst kSetPosition = Symbol('setPosition');\nconst kSize = Symbol('size');\n\n// The PriorityQueue is a basic implementation of a binary heap that accepts\n// a custom sorting function via its constructor. This function is passed\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\n// this enables priority queues that are based on a comparison of more than\n// just a single criteria.\n\nmodule.exports = class PriorityQueue {\n  constructor(comparator\x2C setPosition) {\n    if (comparator !== undefined)\n      this[kCompare] = comparator;\n    if (setPosition !== undefined)\n      this[kSetPosition] = setPosition;\n\n    this[kHeap] = new Array(64);\n    this[kSize] = 0;\n  }\n\n  [kCompare](a\x2C b) {\n    return a - b;\n  }\n\n  insert(value) {\n    const heap = this[kHeap];\n    const pos = ++this[kSize];\n    heap[pos] = value;\n\n    if (heap.length === pos)\n      heap.length *= 2;\n\n    this.percolateUp(pos);\n  }\n\n  peek() {\n    return this[kHeap][1];\n  }\n\n  percolateDown(pos) {\n    const compare = this[kCompare];\n    const setPosition = this[kSetPosition];\n    const heap = this[kHeap];\n    const size = this[kSize];\n    const item = heap[pos];\n\n    while (pos * 2 <= size) {\n      let childIndex = pos * 2 + 1;\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\n        childIndex = pos * 2;\n      const child = heap[childIndex];\n      if (compare(item\x2C child) <= 0)\n        break;\n      if (setPosition !== undefined)\n        setPosition(child\x2C pos);\n      heap[pos] = child;\n      pos = childIndex;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  percolateUp(pos) {\n    const heap = this[kHeap];\n    const compare = this[kCompare];\n    const setPosition = this[kSetPosition];\n    const item = heap[pos];\n\n    while (pos > 1) {\n      const parent = heap[pos / 2 | 0];\n      if (compare(parent\x2C item) <= 0)\n        break;\n      heap[pos] = parent;\n      if (setPosition !== undefined)\n        setPosition(parent\x2C pos);\n      pos = pos / 2 | 0;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  removeAt(pos) {\n    const heap = this[kHeap];\n    const size = --this[kSize];\n    heap[pos] = heap[size + 1];\n    heap[size + 1] = undefined;\n\n    if (size > 0 && pos <= size) {\n      if (pos > 1 && this[kCompare](heap[pos / 2 | 0]\x2C heap[pos]) > 0)\n        this.percolateUp(pos);\n      else\n        this.percolateDown(pos);\n    }\n  }\n\n  shift() {\n    const heap = this[kHeap];\n    const value = heap[1];\n    if (value === undefined)\n      return;\n\n    this.removeAt(1);\n\n    return value;\n  }\n};\n
code-source-info,0x1a43afb9bf06,63,865,1044,C0O892C2O897C4O896C8O921C10O928C19O933C26O940C28O950C32O973C39O980C44O995C51O1007C55O1023C60O1023C66O1043,,
tick,0x1a375c220,269166,0,0x0,3,0x0,0x1a43afb9baa9,0x324f23cbf83e,0x324f23cbefeb,0x324f23cbec94,0x324f23cb7c7f,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,269166,0x1a43afb9c42e,108,percolateUp node:internal/priority_queue:73:14,0x38fe558767a8,~
code-source-info,0x1a43afb9c42e,63,1774,2254,C0O1799C2O1804C4O1803C8O1832C10O1837C12O1836C16O1872C18O1877C20O1876C24O1909C26O1913C30O1936C32O1936C37O1964C39O1973C42O1977C45O1968C49O1993C56O2015C61O2029C63O2042C65O2052C69O2068C73O2107C78O2139C80O2149C83O2153C88O1925C91O2168C93O2178C97O2190C101O2227C107O2253,,
code-creation,LazyCompile,10,269208,0x1a43afb9c5d6,8,setPosition node:internal/timers:411:21,0x38fe55875330,~
code-source-info,0x1a43afb9c5d6,62,12092,12143,C0O12108C2O12135C7O12142,,
code-creation,LazyCompile,10,269208,0x1a43afb9c6ce,52,append node:internal/linkedlist:29:16,0x38fe5586b110,~
script-source,61,node:internal/linkedlist,'use strict';\n\nfunction init(list) {\n  list._idleNext = list;\n  list._idlePrev = list;\n}\n\n// Show the most idle item.\nfunction peek(list) {\n  if (list._idlePrev === list) return null;\n  return list._idlePrev;\n}\n\n// Remove an item from its list.\nfunction remove(item) {\n  if (item._idleNext) {\n    item._idleNext._idlePrev = item._idlePrev;\n  }\n\n  if (item._idlePrev) {\n    item._idlePrev._idleNext = item._idleNext;\n  }\n\n  item._idleNext = null;\n  item._idlePrev = null;\n}\n\n// Remove an item from its list and place at the end.\nfunction append(list\x2C item) {\n  if (item._idleNext || item._idlePrev) {\n    remove(item);\n  }\n\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\n  item._idleNext = list._idleNext;\n  item._idlePrev = list;\n\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\n  list._idleNext._idlePrev = item;\n  list._idleNext = item;\n}\n\nfunction isEmpty(list) {\n  return list._idleNext === list;\n}\n\nmodule.exports = {\n  init\x2C\n  peek\x2C\n  remove\x2C\n  append\x2C\n  isEmpty\n};\n
code-source-info,0x1a43afb9c6ce,61,543,980,C0O569C6O587C12O604C15O604C19O802C23O795C27O815C29O830C33O926C40O946C44O956C46O971C51O979,,
code-creation,LazyCompile,10,269291,0x1a43afb9c9d6,50,remove node:internal/linkedlist:15:16,0x38fe5586b0c0,~
code-source-info,0x1a43afb9c9d6,61,260,472,C0O280C6O302C11O329C15O322C19O356C25O378C30O405C34O398C38O423C39O438C43O448C44O463C49O471,,
code-creation,LazyCompile,10,269333,0x1a43afb9cd9e,468,Client._connect /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:111:38,0x2779b46fcdb0,~
code-source-info,0x1a43afb9cd9e
code-creation,LazyCompile,10,269416,0x1a43afb9d1e6,72,connect node:net:193:17,0x172aed078370,~
code-source-info,0x1a43afb9d1e6,119,4728,5003,C0O4728C3O4761C6O4761C11O4800C12O4810C16O4817C24O4817C29O4873C34O4873C40O4909C46O4931C51O4950C56O4931C61O4981C66O4981C71O5001,,
code-creation,LazyCompile,10,269416,0x1a43afb9d436,183,normalizeArgs node:net:217:23,0x172aed0783c0,~
code-source-info,0x1a43afb9d436,119,5520,6224,C0O5535C2O5552C8O5559C13O5572C18O5594C20O5598C24O5620C28O5632C30O5643C31O5664C32O5668C36O5689C38O5695C48O5776C55O5801C58O5805C64O5854C66O5867C72O5925C74O5938C78O5959C85O5966C92O5984C99O6010C101O6029C104O6023C108O6068C112O6075C115O6062C119O6083C123O6117C132O6124C143O6151C152O6158C161O6167C170O6175C172O6179C176O6201C180O6211C182O6222,,
code-creation,LazyCompile,10,269458,0x1a43afb9d61e,19,isPipeName node:net:162:20,0x172aed0782d0,~
code-source-info,0x1a43afb9d61e,119,4120,4184,C0O4128C9O4160C15O4172C18O4182,,
code-creation,LazyCompile,10,269458,0x1a43afb9d71e,23,toNumber node:net:1211:18,0x172aed0788c0,~
code-source-info,0x1a43afb9d71e,119,31671,31719,C0O31677C5O31689C12O31700C22O31717,,
code-creation,LazyCompile,10,269500,0x1a43afb9d836,10, node:net:39:63,0x172aed078be0,~
code-source-info,0x1a43afb9d836,119,1473,1498,C0O1485C2O1491C9O1497,,
code-creation,LazyCompile,10,269583,0x1a43afb9da66,337,Socket.connect node:net:922:36,0x172aed079bc0,~
code-source-info,0x1a43afb9da66,119,24104,25546,C0O24104C3O24122C5O24414C11O24435C15O24418C22O24447C28O24451C30O24450C35O24480C36O24497C42O24517C45O24530C50O24573C51O24583C55O24601C57O24611C61O24681C67O24711C74O24729C86O24735C91O24729C92O24798C100O24815C105O24825C109O24804C114O24836C117O24856C122O24866C126O24847C130O24885C136O24902C137O24915C141O24927C142O24942C146O24954C147O24969C151O24992C156O25025C159O25035C173O25035C178O25075C184O25090C189O25105C193O25122C198O25127C201O25141C208O25118C217O25161C222O25165C225O25178C232O25157C237O25103C241O25191C244O25191C248O25222C252O25250C260O25250C266O25283C271O25283C275O25301C276O25317C280O25328C284O25344C292O25344C297O25386C304O25425C306O25424C319O25386C326O25493C329O25493C334O25532C336O25544,,
code-creation,LazyCompile,10,269625,0x1a43afb9dd7e,35,get node:internal/streams/duplex:94:8,0x38fe55848d78,~
code-source-info,0x1a43afb9dd7e,47,3274,3483,C0O3294C6O3339C12O3379C13O3392C14O3419C19O3434C25O3452C30O3467C34O3477,,
code-creation,LazyCompile,10,269625,0x1a43afb9dee6,45,_unrefTimer node:net:402:52,0x172aed078c80,~
code-source-info,0x1a43afb9dee6,119,10820,10930,C0O10840C5O10848C9O10879C11O10885C13O10884C18O10902C20O10904C22O10903C26O10914C31O10914C35O10864C40O10827C44O10929,,
code-creation,LazyCompile,10,269708,0x1a43afb9e3a6,526,lookupAndConnect node:net:980:26,0x172aed0786e0,~
code-source-info,0x1a43afb9e3a
code-creation,LazyCompile,10,269750,0x1a43afb9e80e,129,validatePort node:internal/validators:201:22,0x30d75b9a0b0,~
code-source-info,0x1a43afb9e80e,17,6041,6399,C24O6085C44O6182C47O6182C52O6207C58O6215C65O6231C70O6242C72O6248C75O6237C86O6269C92O6293C99O6303C101O6321C117O6327C122O6321C123O6381C125O6393C128O6397,,
code-creation,LazyCompile,10,269750,0x1a43afb9e986,26,isIP node:internal/net:39:14,0x1b9b88141808,~
code-source-info,0x1a43afb9e986,120,1142,1215,C0O1150C3O1154C9O1165C11O1174C12O1177C15O1181C21O1192C23O1201C24O1204C25O1213,,
code-creation,LazyCompile,10,269791,0x1a43afb9ecd6,16,isIPv4 node:internal/net:31:16,0x1b9b88141768,~
code-source-info,0x1a43afb9ecd6,120,1012,1061,C0O1020C7O1047C10O1027C15O1059,,
code-creation,LazyCompile,10,269833,0x1a43afb9edd6,16,isIPv6 node:internal/net:35:16,0x1b9b881417b8,~
code-source-info,0x1a43afb9edd6,120,1078,1127,C0O1086C7O1113C10O1093C15O1125,,
tick,0x100e222e4,270333,1,0x100d097b0,2,0x0,0x311ed227c8ec,0x311ed227bbdd,0x1a43afb9e4d8,0x1a43afb9dbaf,0x1a43afb9d228,0x1a43afb9ceee,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,Eval,10,270416,0x1a43afb9fc66,5, node:dns:1:1,0x1a43afb9f8f0,~
script-source,370,node:dns,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst cares = internalBinding('cares_wrap');\nconst { toASCII } = require('internal/idna');\nconst { isIP } = require('internal/net');\nconst { customPromisifyArgs } = require('internal/util');\nconst errors = require('internal/errors');\nconst {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  Resolver\x2C\n  validateHints\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  setDefaultResultOrder\x2C\n} = require('internal/dns/utils');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_MISSING_ARGS\x2C\n} = errors.codes;\nconst {\n  validateCallback\x2C\n  validatePort\x2C\n  validateString\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\n\nconst {\n  GetAddrInfoReqWrap\x2C\n  GetNameInfoReqWrap\x2C\n  QueryReqWrap\x2C\n} = cares;\n\nconst dnsException = errors.dnsException;\n\nlet promises = null; // Lazy loaded\n\nfunction onlookup(err\x2C addresses) {\n  if (err) {\n    return this.callback(dnsException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n  this.callback(null\x2C addresses[0]\x2C this.family || isIP(addresses[0]));\n}\n\n\nfunction onlookupall(err\x2C addresses) {\n  if (err) {\n    return this.callback(dnsException(err\x2C 'getaddrinfo'\x2C this.hostname));\n  }\n\n  const family = this.family;\n  for (let i = 0; i < addresses.length; i++) {\n    const addr = addresses[i];\n    addresses[i] = {\n      address: addr\x2C\n      family: family || isIP(addr)\n    };\n  }\n\n  this.callback(null\x2C addresses);\n}\n\n\n// Easy DNS A/AAAA look up\n// lookup(hostname\x2C [options\x2C] callback)\nfunction lookup(hostname\x2C options\x2C callback) {\n  let hints = 0;\n  let family = -1;\n  let all = false;\n  let verbatim = getDefaultVerbatim();\n\n  // Parse arguments\n  if (hostname) {\n    validateString(hostname\x2C 'hostname');\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n    family = 0;\n  } else {\n    validateCallback(callback);\n\n    if (options !== null && typeof options === 'object') {\n      hints = options.hints >>> 0;\n      family = options.family >>> 0;\n      all = options.all === true;\n      if (typeof options.verbatim === 'boolean') {\n        verbatim = options.verbatim === true;\n      }\n\n      validateHints(hints);\n    } else {\n      family = options >>> 0;\n    }\n  }\n\n  validateOneOf(family\x2C 'family'\x2C [0\x2C 4\x2C 6]);\n\n  if (!hostname) {\n    emitInvalidHostnameWarning(hostname);\n    if (all) {\n      process.nextTick(callback\x2C null\x2C []);\n    } else {\n      process.nextTick(callback\x2C null\x2C null\x2C family === 6 ? 6 : 4);\n    }\n    return {};\n  }\n\n  const matchedFamily = isIP(hostname);\n  if (matchedFamily) {\n    if (all) {\n      process.nextTick(\n        callback\x2C null\x2C [{ address: hostname\x2C family: matchedFamily }]);\n    } else {\n      process.nextTick(callback\x2C null\x2C hostname\x2C matchedFamily);\n    }\n    return {};\n  }\n\n  const req = new GetAddrInfoReqWrap();\n  req.callback = callback;\n  req.family = family;\n  req.hostname = hostname;\n  req.oncomplete = all ? onlookupall : onlookup;\n\n  const err = cares.getaddrinfo(\n    req\x2C toASCII(hostname)\x2C family\x2C hints\x2C verbatim\n  );\n  if (err) {\n    process.nextTick(callback\x2C dnsException(err\x2C 'getaddrinfo'\x2C hostname));\n    return {};\n  }\n  return req;\n}\n\nObjectDefineProperty(lookup\x2C customPromisifyArgs\x2C\n                     { value: ['address'\x2C 'family']\x2C enumerable: false });\n\n\nfunction onlookupservice(err\x2C hostname\x2C service) {\n  if (err)\n    return this.callback(dnsException(err\x2C 'getnameinfo'\x2C this.hostname));\n\n  this.callback(null\x2C hostname\x2C service);\n}\n\n\nfunction lookupService(address\x2C port\x2C callback) {\n  if (arguments.length !== 3)\n    throw new ERR_MISSING_ARGS('address'\x2C 'port'\x2C 'callback');\n\n  if (isIP(address) === 0)\n    throw new ERR_INVALID_ARG_VALUE('address'\x2C address);\n\n  validatePort(port);\n\n  validateCallback(callback);\n\n  port = +port;\n\n  const req = new GetNameInfoReqWrap();\n  req.callback = callback;\n  req.hostname = address;\n  req.port = port;\n  req.oncomplete = onlookupservice;\n\n  const err = cares.getnameinfo(req\x2C address\x2C port);\n  if (err) throw dnsException(err\x2C 'getnameinfo'\x2C address);\n  return req;\n}\n\nObjectDefineProperty(lookupService\x2C customPromisifyArgs\x2C\n                     { value: ['hostname'\x2C 'service']\x2C enumerable: false });\n\n\nfunction onresolve(err\x2C result\x2C ttls) {\n  if (ttls && this.ttl)\n    result = ArrayPrototypeMap(\n      result\x2C (address\x2C index) => ({ address\x2C ttl: ttls[index] }));\n\n  if (err)\n    this.callback(dnsException(err\x2C this.bindingName\x2C this.hostname));\n  else\n    this.callback(null\x2C result);\n}\n\nfunction resolver(bindingName) {\n  function query(name\x2C /* options\x2C */ callback) {\n    let options;\n    if (arguments.length > 2) {\n      options = callback;\n      callback = arguments[2];\n    }\n\n    validateString(name\x2C 'name');\n    validateCallback(callback);\n\n    const req = new QueryReqWrap();\n    req.bindingName = bindingName;\n    req.callback = callback;\n    req.hostname = name;\n    req.oncomplete = onresolve;\n    req.ttl = !!(options && options.ttl);\n    const err = this._handle[bindingName](req\x2C toASCII(name));\n    if (err) throw dnsException(err\x2C bindingName\x2C name);\n    return req;\n  }\n  ObjectDefineProperty(query\x2C 'name'\x2C { value: bindingName });\n  return query;\n}\n\nconst resolveMap = ObjectCreate(null);\nResolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\nResolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\nResolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\nResolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\nResolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\nResolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\nResolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\nResolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\nResolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\nResolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\nResolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\nResolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\nResolver.prototype.reverse = resolver('getHostByAddr');\n\nResolver.prototype.resolve = resolve;\n\nfunction resolve(hostname\x2C rrtype\x2C callback) {\n  let resolver;\n  if (typeof rrtype === 'string') {\n    resolver = resolveMap[rrtype];\n  } else if (typeof rrtype === 'function') {\n    resolver = resolveMap.A;\n    callback = rrtype;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('rrtype'\x2C 'string'\x2C rrtype);\n  }\n\n  if (typeof resolver === 'function') {\n    return ReflectApply(resolver\x2C this\x2C [hostname\x2C callback]);\n  }\n  throw new ERR_INVALID_ARG_VALUE('rrtype'\x2C rrtype);\n}\n\nfunction defaultResolverSetServers(servers) {\n  const resolver = new Resolver();\n\n  resolver.setServers(servers);\n  setDefaultResolver(resolver);\n  bindDefaultResolver(module.exports\x2C Resolver.prototype);\n\n  if (promises !== null)\n    bindDefaultResolver(promises\x2C promises.Resolver.prototype);\n}\n\nmodule.exports = {\n  lookup\x2C\n  lookupService\x2C\n\n  Resolver\x2C\n  setDefaultResultOrder\x2C\n  setServers: defaultResolverSetServers\x2C\n\n  // uv_getaddrinfo flags\n  ADDRCONFIG: cares.AI_ADDRCONFIG\x2C\n  ALL: cares.AI_ALL\x2C\n  V4MAPPED: cares.AI_V4MAPPED\x2C\n\n  // ERROR CODES\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\n};\n\nbindDefaultResolver(module.exports\x2C getDefaultResolver());\n\nObjectDefineProperties(module.exports\x2C {\n  promises: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      if (promises === null) {\n        promises = require('internal/dns/promises');\n        promises.setServers = defaultResolverSetServers;\n        promises.setDefaultResultOrder = setDefaultResultOrder;\n      }\n      return promises;\n    }\n  }\n});\n
code-source-info,0x1a43afb9fc66,370,0,9428,C0O0C4O9428,,
code-creation,Function,10,270791,0x1a43afba06d6,952, node:dns:1:1,0x1a43afb9fbd0,~
code-source-info,0x1a43afba06d6,370,0,9428,C0O0C145O1159C151O1180C156O1196C161O1222C167O1246C173O1292C176O1292C180O1292C182O1343C188O1343C193O1331C199O1386C205O1386C210O1377C216O1443C222O1443C227O1419C232O1484C238O1484C243O1697C249O1697C254O1522C260O1545C265O1567C271O1589C277O1601C283O1618C289O1648C295O1670C301O1816C306O1738C312O1762C318O1787C324O1906C330O1906C335O1833C341O1853C347O1869C353O1887C359O2011C362O1949C368O1971C374O1993C380O2047C384O2040C386O2077C387O2077C389O4377C392O4406C403O4377C408O5267C411O5303C422O5267C427O6396C429O6396C433O6396C435O6416C438O6425C449O6465C454O6463C460O6446C464O6487C467O6496C478O6532C483O6530C489O6515C493O6552C496O6561C507O6600C512O6598C518O6580C522O6623C525O6632C536O6672C541O6670C547O6653C551O6694C554O6703C565O6747C570O6745C576O6726C580O6771C583O6780C594O6818C599O6816C605O6800C609O6839C612O6848C623O6886C628O6884C634O6868C638O6907C641O6916C652O6956C657O6954C663O6937C667O6978C670O6987C681O7027C686O7025C692O7008C696O7049C699O7058C710O7098C715O7096C721O7079C725O7120C728O7129C739O7173C744O7171C750O7152C754O7197C757O7206C768O7246C773O7244C779O7227C783O7268C786O7277C794O7297C798O7295C802O7325C805O7334C812O7352C816O8136C826O8157C832O8167C838O8185C844O8197C850O8234C857O8308C868O8336C879O8362C889O8151C893O9005C899O9032C904O9041C908O9005C913O9065C916O9095C926O9118C931O9170C945O9065C951O9427,,
code-creation,Eval,10,271041,0x1a43afba1fbe,5, node:internal/dns/utils:1:1,0x1a43afba1c68,~
script-source,371,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeReplace\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst {\n  ChannelWrap\x2C\n  strerror\x2C\n  AI_ADDRCONFIG\x2C\n  AI_ALL\x2C\n  AI_V4MAPPED\x2C\n} = internalBinding('cares_wrap');\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\nconst {\n  ERR_DNS_SET_SERVERS_FAILED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_IP_ADDRESS\x2C\n} = errors.codes;\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1\x2C 2 ** 31 - 1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1\x2C 2 ** 31 - 1);\n  return tries;\n}\n\n// Resolver instances correspond 1:1 to c-ares channels.\nclass Resolver {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers()\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const orig = this._handle.getServers();\n    const newSet = [];\n\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = StringPrototypeMatch(serv\x2C IPv6RE);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            StringPrototypeReplace(serv\x2C addrSplitRE\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = StringPrototypeMatch(serv\x2C addrSplitRE);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n  }\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (typeof ipv6 !== 'string' && ipv6 !== undefined) {\n      throw new ERR_INVALID_ARG_TYPE('ipv6'\x2C ['String'\x2C 'undefined']\x2C ipv6);\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n  }\n}\n\nlet defaultResolver = new Resolver();\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\n\nfunction emitInvalidHostnameWarning(hostname) {\n  if (invalidHostnameWarningEmitted) {\n    return;\n  }\n  invalidHostnameWarningEmitted = true;\n  process.emitWarning(\n    `The provided hostname "${hostname}" is not a valid ` +\n    'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n    'DeprecationWarning'\x2C\n    'DEP0118'\n  );\n}\n\nlet dnsOrder = getOptionValue('--dns-result-order') || 'ipv4first';\n\nfunction getDefaultVerbatim() {\n  switch (dnsOrder) {\n    case 'verbatim':\n      return true;\n    case 'ipv4first':\n    default:\n      return false;\n  }\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\n  dnsOrder = value;\n}\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  Resolver\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  setDefaultResultOrder\x2C\n};\n
code-source-info,0x1a43afba1fbe,371,0,5440,C0O0C4O5440,,
code-creation,Function,10,271250,0x1a43afba2986,490, node:internal/dns/utils:1:1,0x1a43afba1f28,~
code-source-info,0x1a43afba2986,371,0,5440,C0O0C143O25C149O50C155O72C161O93C167O115C173O140C179O158C185O182C191O239C194O239C199O284C202O284C207O275C213O336C216O336C221O317C226O446C229O446C234O375C240O392C246O409C252O426C258O559C261O559C266O488C272O503C278O515C284O532C290O542C296O612C298O612C300O631C304O631C306O669C310O669C312O815C317O701C323O731C329O755C335O780C386O3720C388O3720C393O3720C395O3757C399O3757C401O4498C402O4498C404O4873C407O4873C415O4873C417O5209C424O5230C430O5253C436O5275C442O5297C448O5314C454O5333C460O5350C466O5362C472O5392C478O5414C484O5224C489O5439,,
code-creation,LazyCompile,10,271333,0x1a43afba3626,50,Resolver node:internal/dns/utils:54:14,0x1a43afba22c0,~
code-source-info,0x1a43afba3626,371,1222,1389,C10O1266C13O1266C18O1310C21O1310C26O1338C28O1357C39O1353C44O1351C49O1388,,
code-creation,LazyCompile,10,271375,0x1a43afba3e8e,43,validateTimeout node:internal/dns/utils:40:25,0x1a43afba1ff0,~
code-source-info,0x1a43afba3e8e,371,847,983,C0O886C5O869C14O904C35O904C40O966C42O981,,
code-creation,LazyCompile,10,271375,0x1a43afba3fde,43,validateTries node:internal/dns/utils:46:23,0x1a43afba2040,~
code-source-info,0x1a43afba3fde,371,1007,1133,C0O1043C5O1029C14O1061C35O1061C40O1118C42O1131,,
tick,0x1a3725954,271583,1,0x100c38664,6,0x0,0x1a43afba364d,0x1a43afba2b0a,0x311ed227c90d,0x311ed227bbdd,0x1a43afba07cf,0x311ed227c90d,0x311ed227bbdd,0x1a43afb9e4d8,0x1a43afb9dbaf,0x1a43afb9d228,0x1a43afb9ceee,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,271750,0x1a43afba41f6,46,resolver node:dns:218:18,0x1a43afb9fe78,~
code-source-info,0x1a43afba41f6,370,5710,6375,C0O5710C14O6297C24O6318C31O6342C38O6297C43O6360C45O6373,,
code-creation,LazyCompile,10,271791,0x1a43afba4f5e,5,getDefaultResolver node:internal/dns/utils:161:28,0x1a43afba2090,~
code-source-info,0x1a43afba4f5e,371,4022,4054,C0O4029C4O4052,,
code-creation,LazyCompile,10,271833,0x1a43afba50b6,39,bindDefaultResolver node:internal/dns/utils:169:29,0x1a43afba2130,~
code-source-info,0x1a43afba50b6,371,4157,4303,C0O4157C13O4178C24O4200C32O4178C38O4302,,
code-creation,LazyCompile,10,271833,0x1a43afba51fe,37, node:internal/dns/utils:170:39,0x1a43afba4ff0,~
code-source-info,0x1a43afba51fe,371,4214,4299,C0O4229C7O4243C15O4271C23O4278C26O4243C31O4241C36O4298,,
new,MemoryChunk,0x127994280000,262144
new,MemoryChunk,0x2db2ae680000,262144
new,MemoryChunk,0x3f5e6ed40000,262144
new,MemoryChunk,0x290ea76c0000,262144
new,MemoryChunk,0x24ef69680000,262144
new,MemoryChunk,0x3115f5c00000,262144
new,MemoryChunk,0x31d7fbe00000,262144
new,MemoryChunk,0xfbaf1200000,262144
new,MemoryChunk,0x1c1ae27c0000,262144
new,MemoryChunk,0x37aa9f640000,262144
new,MemoryChunk,0x2faa3ca40000,262144
new,MemoryChunk,0x12ce33940000,262144
new,MemoryChunk,0x1cf7ce100000,262144
new,MemoryChunk,0x23f7f4780000,262144
new,MemoryChunk,0x1bd34ce40000,262144
new,MemoryChunk,0x1f5f73840000,262144
markcompact,begin,0,364344,1643426345755
tick,0x100f75df8,272875,0,0x0,1
tick,0x1010f61b4,274083,0,0x0,1
tick,0x100f71df8,275375,0,0x0,1
new,MemoryChunk,0x4324a940000,262144
new,MemoryChunk,0x109d80c80000,262144
markcompact,end,0,368705,1643426345759
code-creation,LazyCompile,10,276125,0xb249f5d8d66,121,defaultTriggerAsyncIdScope node:internal/async_hooks:445:36,0x1910fc7f9ca0,~
code-source-info,0xb249f5d8d66,24,15172,15630,C0O15172C11O15209C15O15260C22O15260C28O15278C29O15393C36O15409C38O15408C42O15436C49O15452C54O15476C61O15520C68O15520C86O15557C93O15573C98O15597C120O15629,,
code-creation,LazyCompile,10,276166,0xb249f5d8f6e,27, node:net:1036:61,0x1a43afb9e188,~
code-source-info,0xb249f5d8f6e,119,27145,28426,C0O27154C7O27161C12O27167C20O27154C26O28425,,
code-creation,LazyCompile,10,276208,0xb249f5d5d4e,443,lookup node:dns:97:16,0x1a43afb9fd38,~
code-source-info,0xb249f5d5d4e
code-creation,LazyCompile,10,276250,0xb249f5d60e6,25,getDefaultVerbatim node:internal/dns/utils:198:28,0x1a43afba2220,~
code-source-info,0xb249f5d60e6,371,4954,5081,C0O4961C21O5008C22O5020C23O5062C24O5075,,
code-creation,LazyCompile,10,276291,0xb249f5d6206,53,validateHints node:internal/dns/utils:175:23,0x1a43afba2180,~
code-source-info,0xb249f5d6206,371,4327,4460,C0O4339C2O4354C7O4370C9O4368C15O4379C17O4377C20O4352C22O4350C27O4393C32O4406C45O4412C50O4406C52O4459,,
code-creation,RegExp,3,276375,0x107516fe0,2816,^((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
tick,0x10132a800,276625,0,0x0,0,0x0,0x10146d58c,0x1a43afb9ede0,0x1a43afb9e995,0xb249f5d5e32,0xb249f5d8f82,0xb249f5d8daa,0x1a43afb9e5ad,0x1a43afb9dbaf,0x1a43afb9d228,0x1a43afb9ceee,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,RegExp,3,276750,0x107517b40,35352,^((?:(?:[0-9a-fA-F]{1\x2C4}):){7}(?:(?:[0-9a-fA-F]{1\x2C4})|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){6}(?:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|:(?:[0-9a-fA-F]{1\x2C4})|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){5}(?::((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(:(?:[0-9a-fA-F]{1\x2C4})){1\x2C2}|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){4}(?:(:(?:[0-9a-fA-F]{1\x2C4})){0\x2C1}:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(:(?:[0-9a-fA-F]{1\x2C4})){1\x2C3}|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){3}(?:(:(?:[0-9a-fA-F]{1\x2C4})){0\x2C2}:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(:(?:[0-9a-fA-F]{1\x2C4})){1\x2C4}|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){2}(?:(:(?:[0-9a-fA-F]{1\x2C4})){0\x2C3}:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(:(?:[0-9a-fA-F]{1\x2C4})){1\x2C5}|:)|(?:(?:[0-9a-fA-F]{1\x2C4}):){1}(?:(:(?:[0-9a-fA-F]{1\x2C4})){0\x2C4}:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(:(?:[0-9a-fA-F]{1\x2C4})){1\x2C6}|:)|(?::((?::(?:[0-9a-fA-F]{1\x2C4})){0\x2C5}:((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(?::(?:[0-9a-fA-F]{1\x2C4})){1\x2C7}|:)))(%[0-9a-zA-Z-.:]{1\x2C})?$
code-creation,LazyCompile,10,276916,0xb249f5d641e,31,listenerCount node:events:726:23,0x1910fc7f32d8,~
code-source-info,0xb249f5d641e,13,20678,20946,C0O20709C5O20721C7O20772C9O20778C13O20791C17O20837C19O20846C20O20858C24O20914C28O20921C29O20935C30O20944,,
code-creation,LazyCompile,10,276958,0xb249f5d657e,70,Socket.resume node:net:615:35,0x172aed079398,~
code-source-info,0xb249f5d657e,119,16103,16279,C0O16110C2O16119C4O16118C9O16137C15O16156C21O16179C26O16187C32O16202C35O16202C39O16228C44O16242C49O16249C54O16259C59O16266C64O16266C69O16277,,
code-creation,LazyCompile,10,276958,0xb249f5d66fe,53,Readable.resume node:internal/streams/readable:964:37,0x38fe558545b0,~
code-source-info,0xb249f5d66fe,48,30794,31111,C0O30820C5O30849C11O30864C19O30864C23O31021C28O31012C32O31044C35O31044C40O31071C42O31077C46O31086C50O31097C52O31109,,
code-creation,LazyCompile,10,277000,0xb249f5d4bfe,10, node:internal/streams/readable:49:66,0x38fe558531c8,~
code-source-info,0xb249f5d4bfe,48,1731,1756,C0O1743C2O1749C9O1755,,
code-creation,LazyCompile,10,277000,0xb249f5d4cde,35,resume node:internal/streams/readable:978:16,0x38fe55854638,~
code-source-info,0xb249f5d4cde,48,31129,31264,C0O31160C6O31183C7O31205C11O31217C14O31225C28O31225C34O31263,,
code-creation,LazyCompile,10,277041,0xb249f5d4f76,368,nextTick node:internal/process/task_queues:104:18,0x1910fc7fbbc8,~
script-source,25,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateCallback\x2C\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while (tock = queue.shift()) {\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateCallback(callback);\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\n    };\n  }\x2C\n  queueMicrotask\n};\n
code-source-info,0xb249f5d4f
code-creation,LazyCompile,10,277250,0xb249f5d5806,15,isEmpty node:internal/fixed_queue:95:10,0xe898a5c5c80,~
script-source,28,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n
code-source-info,0xb249f5d5806,28,3637,3677,C0O3658C5O3663C10O3663C14O3673,,
code-creation,LazyCompile,10,277458,0xb249f5d1166,13,isEmpty node:internal/fixed_queue:67:10,0xe898a5c59c8,~
code-source-info,0xb249f5d1166,28,3084,3129,C0O3105C5O3118C9O3109C12O3125,,
code-creation,LazyCompile,10,277458,0xb249f5d1266,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x1910fc7fbad8,~
code-source-info,0xb249f5d1266,25,1104,1162,C0O1116C7O1125C12O1146C19O1144C24O1161,,
code-creation,LazyCompile,10,277458,0xb249f5d17ee,59,push node:internal/fixed_queue:99:7,0xe898a5c5cd0,~
code-source-info,0xb249f5d17ee,28,3685,3945,C0O3707C5O3712C10O3712C16O3871C23O3887C26O3883C32O3881C38O3864C42O3925C47O3930C52O3930C58O3944,,
code-creation,LazyCompile,10,277500,0xb249f5d1946,24,isFull node:internal/fixed_queue:71:9,0xe898a5c5a30,~
code-source-info,0xb249f5d1946,28,3139,3200,C0O3162C4O3166C10O3173C12O3171C16O3189C20O3180C23O3196,,
code-creation,LazyCompile,10,277500,0xb249f5d1a66,37,push node:internal/fixed_queue:75:7,0xe898a5c5a98,~
code-source-info,0xb249f5d1a66,28,3208,3291,C0O3226C5O3236C12O3241C16O3270C20O3274C26O3281C28O3279C31O3262C36O3290,,
code-creation,LazyCompile,10,277541,0xb249f5d1b86,19,_getMaxListeners node:events:274:26,0x1910fc7f2ad0,~
code-source-info,0xb249f5d1b86,13,7772,7896,C0O7792C6O7825C9O7845C13O7865C14O7880C18O7894,,
code-creation,LazyCompile,10,277583,0xb249f5ccda6,225,Client._doRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:152:40,0x2779b46fce40,~
code-source-info,0xb249f5ccda6,332,4192,4800,C0O4209C6O4223C22O4254C29O4264C33O4257C38O4287C44O4305C50O4325C55O4342C59O4334C64O4375C69O4375C73O4384C74O4400C82O4400C87O4429C93O4438C98O4456C103O4472C108O4472C112O4501C117O4517C123O4542C131O4542C136O4579C141O4597C146O4616C151O4632C156O4597C161O4657C166O4662C171O4673C176O4673C181O4662C186O4702C191O4716C196O4732C201O4716C206O4745C212O4758C218O4776C219O4788C224O4799,,
code-creation,LazyCompile,10,277625,0xb249f5cd09e,45,insertRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:18:17,0x324f23ca7328,~
code-source-info,0xb249f5cd09e,364,713,859,C0O730C5O746C17O759C21O832C25O840C30O840C38O746C44O858,,
code-creation,LazyCompile,10,277625,0xb249f5cd31e,15,Client.getRequestBuffer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:196:46,0x2779b46fd078,~
code-source-info,0xb249f5cd31e,332,5402,5467,C0O5421C5O5437C10O5452C14O5465,,
code-creation,LazyCompile,10,277666,0xb249f5cd406,26,Writable.write node:internal/streams/writable:333:36,0x38fe55861e60,~
code-source-info,0xb249f5cd406,55,10749,10827,C0O10775C15O10782C22O10816C25O10825,,
code-creation,LazyCompile,10,277708,0xb249f5cd5fe,338,_write node:internal/streams/writable:283:16,0x38fe55861e10,~
code-source-info,0xb249f5cd5fe
code-creation,LazyCompile,10,277750,0xb249f5cda06,217,writeOrBuffer node:internal/streams/writable:365:23,0x38fe55862070,~
code-source-info,0xb249f5cda06,55,11668,12659,C0O11733C10O11756C15O11767C22O11783C25O11780C29O11848C34O11863C38O11855C42O11952C44O11966C45O11982C49O12003C55O12020C61O12036C67O12054C73O12079C78O12088C90O12095C96O12102C102O12112C106O12088C111O12139C119O12162C124O12184C125O12201C129O12230C137O12250C142O12267C143O12281C149O12311C151O12326C155O12337C157O12351C161O12367C162O12381C166O12393C167O12404C171O12423C176O12453C190O12423C195O12467C196O12478C200O12608C204O12629C211O12647C216O12657,,
code-creation,LazyCompile,10,277791,0xb249f5cdc4e,26,Socket._write node:net:791:35,0x172aed079a98,~
code-source-info,0xb249f5cdc4e,119,20223,20296,C0O20253C19O20253C25O20295,,
code-creation,LazyCompile,10,277833,0xb249f5cde5e,186,Socket._writeGeneric node:net:754:42,0x172aed079958,~
code-source-info,0xb249f5cde5e,119,19333,20086,C0O19333C21O19535C27O19553C29O19571C33O19583C35O19605C39O19626C52O19626C58O19729C59O19736C60O19743C61O19761C65O19771C67O19793C71O19812C77O19827C84O19834C87O19830C93O19827C97O19860C98O19873C99O19886C104O19886C108O19908C110O19915C114O19931C130O19937C138O19979C157O19985C163O20035C169O20046C173O20051C176O20078C180O20072C185O20085,,
code-creation,LazyCompile,10,277875,0xb249f5d26f6,39,once node:events:532:44,0x1910fc7f2f68,~
code-source-info,0xb249f5d26f6,13,15429,15542,C0O15450C3O15450C7O15483C24O15492C30O15483C36O15528C38O15540,,
code-creation,LazyCompile,10,277875,0xb249f5d28ce,60,_onceWrap node:events:518:19,0x1910fc7f2f18,~
code-source-info,0xb249f5d28ce,13,15002,15225,C0O15045C6O15069C12O15080C18O15088C24O15094C31O15124C34O15136C39O15136C45O15151C47O15168C51O15182C53O15195C57O15208C59O15223,,
tick,0x1a3575f5c,277916,0,0x0,3,0x0,0xb249f5d270e,0xb249f5cde92,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x1a43afb9cf64,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,277916,0xb249f5d2a56,104,reschedule /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:28:14,0x2779b46ff878,~
code-source-info,0xb249f5d2a56,333,627,999,C0O643C4O680C10O713C15O713C19O727C21O736C25O755C30O771C34O764C37O747C42O783C47O796C51O814C56O796C60O833C65O833C72O873C78O893C80O907C84O919C86O937C92O971C97O971C103O998,,
tick,0x101496034,279166,0,0x0,0,0xb249f5d65aa,0x1b9b8816c483,0x1a43afb9cf28,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1013e129c,280416,0,0x0,0,0x324f23cb9f20,0x324f23cb9e22,0x324f23cb9ce5,0x324f23cb83cd,0x324f23cb8030,0x324f23cb7a6a,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1014a7318,281708,0,0x0,0,0x324f23cb9ce5,0x324f23cb83cd,0x324f23cb8030,0x324f23cb7a6a,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x100fcfab4,282958,0,0x0,0,0x0,0x1013fb024,0x324f23cbd4d7,0x324f23cbcfbc,0x324f23cb7bc3,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
tick,0x1a37298d4,284208,0,0x0,4,0x0,0x1b9b8816c42d,0x1a43afb9cf0d,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,13,284375,0x1075205c0,808, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:891:37,0x324f23cb8130,*
code-source-info,0x1075205c0,361,23603,23866,C0O23603C60O23625C156O23666C160O23682C188O23769C236O23794C316O23769C336O20703I0C364O20733I0C436O20845I0C468O23865C516O20754I0C520O23603C568O23625,F0O23769,S0xbb714f72e70
tick,0x1013dea84,285458,0,0x0,0,0x1b9b8816b9ae,0x1b9b88169911,0x1b9b88163b92,0x1b9b881636ab,0x1a43afb9d208,0x1a43afb9ceee,0x324f23cb7d00,0x324f23cb703c,0x324f23cb02b4,0x324f23cafa5e,0x324f23cae15d,0x324f23cade79,0x101459900,0x324f23cadc63,0x324f23cada8c,0x324f23cacb51,0x1b9b8816e7c0,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x1b9b8816dacf,0x311ed227b979
code-creation,LazyCompile,10,285750,0x4324a97c8be,56,compareTimersLists node:internal/timers:400:28,0x38fe558752b8,~
code-source-info,0x4324a97c8be,62,11892,12070,C0O11924C5O11935C9O11931C13O11945C14O11960C19O11979C24O11986C28O11982C33O11996C35O12006C36O12017C41O12024C45O12020C50O12034C52O12043C53O12050C55O12068,,
code-creation,LazyCompile,10,285791,0x4324a97ca36,136,reInterval /Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js:38:21,0x2779b46fc2a0,~
code-source-info,0x4324a97ca36,331,863,1268,C0O863C2O870C3O890C10O914C19O920C24O914C25O952C27O972C34O994C43O1000C48O994C49O1060C55O1067C60O1078C64O1105C68O1112C74O1085C80O1136C82O1148C86O1141C91O1169C93O1191C96O1188C99O1177C103O1157C108O1123C111O1210C115O1241C121O1255C130O1217C135O1266,,
code-creation,LazyCompile,10,285833,0x4324a97ce36,71,ReInterval /Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js:3:21,0x2779b46fc220,~
code-source-info,0x4324a97ce36,331,34,841,C0O34C5O76C7O76C9O85C11O100C15O114C17O125C21O136C25O190C36O153C41O151C45O201C49O217C53O505C57O516C61O645C65O658C70O840,,
code-creation,LazyCompile,10,285875,0x4324a97d16e,216,setInterval node:timers:209:21,0x38fe5586a650,~
code-source-info,0x4324a97d16e,60,5786,6413,C0O5786C2O5827C7O5827C11O5862C13O5865C15O5891C50O5949C52O5974C61O5982C70O5995C72O6020C81O6028C90O6034C99O6047C101O6073C110O6081C119O6087C128O6093C135O6111C138O6132C142O6120C147O6231C149O6238C155O6254C158O6243C162O6141C167O6106C170O6273C172O6303C192O6303C198O6354C203O6378C208O6354C213O6396C215O6411,,
code-creation,LazyCompile,10,285958,0x4324a97d516,184,setImmediate node:timers:278:22,0x38fe5586a848,~
code-source-info,0x4324a97d516,60,7396,7916,C0O7396C2O7429C7O7429C11O7464C13O7467C15O7493C43O7539C45O7564C54O7572C63O7585C65O7610C74O7618C83O7624C92O7637C94O7663C103O7671C112O7677C121O7683C128O7701C131O7722C135O7710C140O7821C142O7828C148O7844C151O7833C155O7731C160O7696C163O7863C165O7877C178O7884C183O7914,,
code-creation,LazyCompile,10,286000,0x4324a97d796,93,Immediate node:internal/timers:600:14,0x38fe55875608,~
code-source-info,0x4324a97d796,62,17293,17604,C0O17316C1O17331C5O17343C6O17358C10O17370C12O17388C16O17404C18O17415C22O17427C23O17443C27O17456C29O17461C33O17469C37O17483C43O17483C48O17531C53O17531C57O17542C64O17556C72O17563C76O17572C81O17587C86O17587C92O17603,,
code-creation,LazyCompile,10,286041,0x4324a97d97e,67,ref node:internal/timers:616:6,0x38fe55875658,~
code-source-info,0x4324a97d97e,62,17611,17781,C0O17620C2O17629C4O17628C9O17637C14O17656C16O17661C20O17669C24O17683C31O17701C43O17711C48O17714C53O17729C60O17729C64O17765C66O17777,,
code-creation,LazyCompile,10,286041,0x4324a97db06,41,ImmediateList.append node:internal/timers:269:42,0x38fe55874f08,~
code-source-info,0x4324a97db06,62,8454,8613,C0O8474C6O8500C13O8515C17O8549C21O8542C27O8570C29O8580C33O8594C35O8604C40O8612,,
code-creation,LazyCompile,10,286125,0x4324a97e316,263,track /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:22:16,0x324f23ca8ba8,~
code-source-info,0x4324a97e316,365,628,4434,C0O628C52O649C56O670C65O676C70O670C71O727C75O741C86O752C92O741C97O732C99O785C106O795C115O804C126O836C134O804C141O785C147O998C150O1003C163O1042C169O1072C175O1102C180O1102C192O1065C196O1163C199O1172C203O1163C205O1183C206O1183C208O1209C209O1209C211O1250C212O1250C214O1262C215O1262C217O1273C220O1282C233O1282C239O2277C242O2286C255O2286C262O4433,,
code-creation,LazyCompile,10,286166,0x4324a97e63e,10,ChalkClass /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:32:13,0x369989157ce0,~
code-source-info,0x4324a97e63e,158,843,941,C0O909C5O916C9O938,,
code-creation,LazyCompile,10,286208,0x4324a97e986,95,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:62:6,0x369989157d80,~
code-source-info,0x4324a97e986,158,1562,1758,C0O1586C11O1606C16O1619C19O1625C26O1631C29O1637C34O1649C39O1606C45O1664C53O1586C59O1678C63O1685C70O1706C80O1725C87O1685C92O1739C94O1754,,
code-creation,LazyCompile,10,286250,0x4324a97ebb6,75,createStyler /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:118:22,0x369989158040,~
code-source-info,0x4324a97ebb6,158,2976,3250,C0O3008C2O3022C4O3033C8O3063C11O3081C18O3128C25O3136C29O3172C33O3163C37O3187C44O3198C50O3206C56O3215C62O3226C68O3238C74O3248,,
code-creation,LazyCompile,10,286291,0x4324a97ede6,69,createBuilder /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:138:23,0x369989158090,~
code-source-info,0x4324a97ede6,158,3275,4073,C0O3275C8O3323C12O3323C14O3928C18O3935C30O3959C33O3935C39O3969C44O3988C48O3997C53O4013C57O4025C62O4042C66O4056C68O4071,,
code-creation,LazyCompile,10,286333,0x4324a97efe6,141,builder /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:139:18,0x4324a97ed00,~
code-source-info,0x4324a97efe6,158,3323,3790,C0O3323C3O3346C11O3368C15O3350C25O3376C29O3394C33O3398C38O3376C44O3491C53O3509C62O3518C67O3527C73O3518C79O3498C84O3552C85O3687C94O3705C97O3726C104O3733C113O3758C116O3746C121O3776C129O3776C135O3694C140O3787,,
code-creation,LazyCompile,10,286375,0x4324a97f24e,163,applyStyle /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:161:20,0x3699891580e0,~
code-source-info,0x4324a97f24e,158,4095,5135,C0O4125C6O4131C13O4140C15O4164C27O4187C28O4211C33O4222C35O4252C37O4266C38O4279C43O4288C48O4320C56O4320C64O4338C69O4364C73O4579C78O4620C83O4634C91O4588C98O4661C103O4350C106O4976C114O4976C120O4992C122O5004C127O5016C144O5025C151O5098C153O5113C159O5122C162O5133,,
code-creation,LazyCompile,10,286416,0x4324a97f43e,10,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/chalk/source/index.js:109:6,0x369989157fa0,~
code-source-info,0x4324a97f43e,158,2851,2892,C0O2871C5O2882C9O2888,,
code-creation,LazyCompile,10,286458,0x4324a97f606,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x1910fc7fbb78,~
code-source-info,0x4324a97f
code-creation,LazyCompile,10,286500,0x4324a97f8ee,43,shift node:internal/fixed_queue:108:8,0xe898a5c5d20,~
code-source-info,0x4324a97f8ee,28,3954,4180,C0O3981C5O4009C10O4009C15O4031C20O4031C26O4049C32O4148C36O4141C40O4164C42O4176,,
code-creation,LazyCompile,10,286541,0x4324a97fa46,54,shift node:internal/fixed_queue:80:8,0xe898a5c5b00,~
code-source-info,0x4324a97fa46,28,3300,3510,C0O3331C5O3341C9O3335C13O3354C15O3388C16O3400C17O3410C22O3420C28O3428C32O3465C36O3472C42O3479C44O3477C47O3457C51O3490C53O3506,,
code-creation,LazyCompile,10,286541,0x4324a97fba6,42,emitBeforeScript node:internal/async_hooks:499:26,0x1910fc7f9f70,~
code-source-info,0x4324a97fba6,24,16451,16602,C0O16491C12O16491C17O16547C22O16560C25O16551C31O16574C36O16574C41O16601,,
code-creation,LazyCompile,10,286583,0x4324a97fd06,180,pushAsyncContext node:internal/async_hooks:529:26,0x1910fc7fa118,~
code-source-info,0x4324a97fd06,24,17095,17640,C0O17150C7O17168C9O17167C13O17185C20O17219C24O17233C26O17244C32O17251C35O17262C40O17278C44O17248C49O17290C54O17297C59O17340C60O17343C65O17354C72O17377C78O17384C83O17400C85O17399C88O17382C92O17422C97O17433C104O17456C107O17460C113O17467C118O17483C120O17482C123O17465C127O17503C134O17521C142O17534C146O17540C153O17556C158O17575C162O17588C169O17604C174O17621C179O17639,,
code-creation,LazyCompile,10,286625,0x4324a97ff2e,87,resume_ node:internal/streams/readable:985:17,0x38fe55854688,~
code-source-info,0x4324a97ff2e,48,31282,31517,C0O31302C8O31324C13O31302C18O31347C24O31369C31O31369C36O31385C37O31407C41O31425C49O31425C54O31443C57O31443C61O31469C67O31487C73O31507C80O31507C86O31516,,
code-creation,LazyCompile,10,286666,0xb249f5e6a86,71,Socket.read node:net:624:33,0x172aed079420,~
code-source-info,0xb249f5e6a86,119,16315,16493,C0O16323C2O16332C4O16331C9O16350C15O16369C21O16392C26O16400C32O16415C35O16415C39O16441C44O16455C49O16462C54O16472C59O16477C64O16477C70O16491,,
tick,0x100ff1bac,286708,0,0x0,3,0x0,0xb249f5e6ac6,0x4324a97ff4d,0x4324a97f68a
code-creation,LazyCompile,10,286750,0xb249f5e48c6,587,Readable.read node:internal/streams/readable:394:35,0x38fe55853f80,~
code-source-info,0xb249f5e48c
code-creation,LazyCompile,10,286791,0xb249f5d1c7e,108,howMuchToRead node:internal/streams/readable:377:23,0x38fe55853f30,~
code-source-info,0xb249f5d1c7e,48,12215,12587,C0O12230C1O12236C6O12251C12O12258C17O12273C23O12285C24O12294C25O12307C31O12323C33O12332C34O12335C39O12339C45O12410C51O12427C57O12454C62O12461C67O12461C72O12468C76O12476C77O12494C81O12501C82O12523C86O12514C91O12535C93O12544C94O12560C100O12574C107O12585,,
code-creation,LazyCompile,10,286833,0xb249f5d7bee,111,Socket._read node:net:581:34,0x172aed079200,~
code-source-info,0xb249f5d7bee,119,15267,15488,C0O15267C13O15275C23O15275C27O15294C30O15303C39O15323C45O15338C55O15338C59O15378C62O15383C75O15383C83O15430C86O15440C91O15448C97O15463C105O15463C110O15487,,
code-creation,LazyCompile,10,286875,0xb249f5d4a86,45,flow node:internal/streams/readable:1009:14,0x38fe55854760,~
code-source-info,0xb249f5d4a86,48,31829,31963,C0O31863C5O31881C13O31901C18O31881C23O31926C29O31944C34O31944C40O31913C44O31962,,
code-creation,LazyCompile,10,286875,0xb249f5d3d1e,13,destroyHooksExist node:internal/async_hooks:476:27,0x1910fc7f9e80,~
code-source-info,0xb249f5d3d1e,24,15900,15935,C0O15907C5O15923C8O15914C12O15933,,
code-creation,LazyCompile,10,286916,0xb249f5d239e,32,emitAfterScript node:internal/async_hooks:507:25,0x1910fc7f9fc0,~
code-source-info,0xb249f5d239e,24,16629,16725,C0O16643C5O16656C8O16647C14O16669C19O16669C23O16698C26O16698C31O16724,,
code-creation,LazyCompile,10,286958,0x17d30552916e,167,popAsyncContext node:internal/async_hooks:543:25,0x1910fc7fa168,~
code-source-info,0x17d30552916e,24,17729,18316,C0O17763C7O17781C9O17780C13O17798C14O17814C19O17821C20O17834C21O17838C24O17842C31O17865C36O17881C38O17880C44O17900C49O17982C54O17989C58O18015C59O18038C61O18050C65O18057C72O18073C77O18094C80O18105C87O18123C90O18120C93O18092C97O18136C104O18152C109O18171C112O18182C119O18200C122O18209C125O18197C128O18169C132O18217C137O18243C142O18243C146O18252C153O18270C158O18284C162O18296C163O18310C166O18314,,
code-creation,LazyCompile,10,286958,0xb249f5ce47e,13,enabledHooksExist node:internal/async_hooks:464:27,0x1910fc7f9d70,~
code-source-info,0xb249f5ce47e,24,15723,15756,C0O15730C5O15746C8O15737C12O15754,,
code-creation,LazyCompile,10,287291,0xb249f5ce8e6,32,Transform._read node:internal/streams/transform:240:37,0x38fe55866f08,~
code-source-info,0xb249f5ce8e6,58,7696,7813,C0O7703C2O7712C4O7711C9O7747C11O7752C13O7751C17O7768C19O7773C23O7784C27O7796C31O7812,,
code-creation,LazyCompile,10,287375,0xb249f5d5886,439,processPromiseRejections node:internal/process/promises:203:34,0x1910fc7fef10,~
script-source,26,node:internal/process/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  tickInfo\x2C\n  promiseRejectEvents: {\n    kPromiseRejectWithNoHandler\x2C\n    kPromiseHandlerAddedAfterReject\x2C\n    kPromiseResolveAfterResolved\x2C\n    kPromiseRejectAfterResolved\n  }\x2C\n  setPromiseRejectCallback\n} = internalBinding('task_queue');\n\nconst {\n  noSideEffectsToString\x2C\n  triggerUncaughtException\n} = internalBinding('errors');\n\nconst {\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n} = require('internal/async_hooks');\nconst async_hooks = require('async_hooks');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasRejectionToWarn = 1;\n\nconst maybeUnhandledPromises = new SafeWeakMap();\nconst pendingUnhandledRejections = [];\nconst asyncHandledRejections = [];\nlet lastPromiseId = 0;\n\n// --unhandled-rejections=none:\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\nconst kIgnoreUnhandledRejections = 0;\n\n// --unhandled-rejections=warn:\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\nconst kAlwaysWarnUnhandledRejections = 1;\n\n// --unhandled-rejections=strict:\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\nconst kStrictUnhandledRejections = 2;\n\n// --unhandled-rejections=throw:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\n// and exit the process.\nconst kThrowUnhandledRejections = 3;\n\n// --unhandled-rejections=warn-with-error-code:\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\n\nconst kWarnWithErrorCodeUnhandledRejections = 4;\n\nlet unhandledRejectionsMode;\n\nfunction setHasRejectionToWarn(value) {\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\n}\n\nfunction hasRejectionToWarn() {\n  return tickInfo[kHasRejectionToWarn] === 1;\n}\n\nfunction getUnhandledRejectionsMode() {\n  const { getOptionValue } = require('internal/options');\n  switch (getOptionValue('--unhandled-rejections')) {\n    case 'none':\n      return kIgnoreUnhandledRejections;\n    case 'warn':\n      return kAlwaysWarnUnhandledRejections;\n    case 'strict':\n      return kStrictUnhandledRejections;\n    case 'throw':\n      return kThrowUnhandledRejections;\n    case 'warn-with-error-code':\n      return kWarnWithErrorCodeUnhandledRejections;\n    default:\n      return kThrowUnhandledRejections;\n  }\n}\n\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\n  if (unhandledRejectionsMode === undefined) {\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\n  }\n  switch (type) {\n    case kPromiseRejectWithNoHandler:\n      unhandledRejection(promise\x2C reason);\n      break;\n    case kPromiseHandlerAddedAfterReject:\n      handledRejection(promise);\n      break;\n    case kPromiseResolveAfterResolved:\n      resolveError('resolve'\x2C promise\x2C reason);\n      break;\n    case kPromiseRejectAfterResolved:\n      resolveError('reject'\x2C promise\x2C reason);\n      break;\n  }\n}\n\nfunction resolveError(type\x2C promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\n  });\n}\n\nfunction unhandledRejection(promise\x2C reason) {\n  const asyncId = async_hooks.executionAsyncId();\n  const triggerAsyncId = async_hooks.triggerAsyncId();\n  const resource = promise;\n\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\n    try {\n      pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n      if (promiseInfo.domain) {\n        return promiseInfo.domain.emit('error'\x2C reason);\n      }\n      return process.emit('unhandledRejection'\x2C reason\x2C promise);\n    } finally {\n      popAsyncContext(asyncId);\n    }\n  };\n\n  maybeUnhandledPromises.set(promise\x2C {\n    reason\x2C\n    uid: ++lastPromiseId\x2C\n    warned: false\x2C\n    domain: process.domain\x2C\n    emit\n  });\n  // This causes the promise to be referenced at least for one tick.\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\n  setHasRejectionToWarn(true);\n}\n\nfunction handledRejection(promise) {\n  const promiseInfo = maybeUnhandledPromises.get(promise);\n  if (promiseInfo !== undefined) {\n    maybeUnhandledPromises.delete(promise);\n    if (promiseInfo.warned) {\n      const { uid } = promiseInfo;\n      // Generate the warning object early to get a good stack trace.\n      // eslint-disable-next-line no-restricted-syntax\n      const warning = new Error('Promise rejection was handled ' +\n                                `asynchronously (rejection id: ${uid})`);\n      warning.name = 'PromiseRejectionHandledWarning';\n      warning.id = uid;\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\n      setHasRejectionToWarn(true);\n      return;\n    }\n  }\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\n    setHasRejectionToWarn(false);\n}\n\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\n  const warning = getErrorWithoutStack(\n    unhandledRejectionErrName\x2C\n    'Unhandled promise rejection. This error originated either by ' +\n      'throwing inside of an async function without a catch block\x2C ' +\n      'or by rejecting a promise which was not handled with .catch(). ' +\n      'To terminate the node process on unhandled promise ' +\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\n      `(rejection id: ${uid})`\n  );\n  try {\n    if (reason instanceof Error) {\n      warning.stack = reason.stack;\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\n    } else {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    }\n  } catch {}\n\n  process.emitWarning(warning);\n}\n\n// If this method returns true\x2C we've executed user code or triggered\n// a warning to be emitted which requires the microtask and next tick\n// queues to be drained again.\nfunction processPromiseRejections() {\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\n\n  while (asyncHandledRejections.length > 0) {\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\n    if (!process.emit('rejectionHandled'\x2C promise)) {\n      process.emitWarning(warning);\n    }\n  }\n\n  let len = pendingUnhandledRejections.length;\n  while (len--) {\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\n    const promiseInfo = maybeUnhandledPromises.get(promise);\n    if (promiseInfo === undefined) {\n      continue;\n    }\n    promiseInfo.warned = true;\n    const { reason\x2C uid\x2C emit } = promiseInfo;\n\n    switch (unhandledRejectionsMode) {\n      case kStrictUnhandledRejections: {\n        const err = reason instanceof Error ?\n          reason : generateUnhandledRejectionError(reason);\n        triggerUncaughtException(err\x2C true /* fromPromise */);\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\n        if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\n        break;\n      }\n      case kIgnoreUnhandledRejections: {\n        emit(reason\x2C promise\x2C promiseInfo);\n        break;\n      }\n      case kAlwaysWarnUnhandledRejections: {\n        emit(reason\x2C promise\x2C promiseInfo);\n        emitUnhandledRejectionWarning(uid\x2C reason);\n        break;\n      }\n      case kThrowUnhandledRejections: {\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\n        if (!handled) {\n          const err = reason instanceof Error ?\n            reason : generateUnhandledRejectionError(reason);\n          triggerUncaughtException(err\x2C true /* fromPromise */);\n        }\n        break;\n      }\n      case kWarnWithErrorCodeUnhandledRejections: {\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\n        if (!handled) {\n          emitUnhandledRejectionWarning(uid\x2C reason);\n          process.exitCode = 1;\n        }\n        break;\n      }\n    }\n    maybeScheduledTicksOrMicrotasks = true;\n  }\n  return maybeScheduledTicksOrMicrotasks ||\n         pendingUnhandledRejections.length !== 0;\n}\n\nfunction getErrorWithoutStack(name\x2C message) {\n  // Reset the stack to prevent any overhead.\n  const tmp = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\n  ObjectDefineProperty(err\x2C 'name'\x2C {\n    value: name\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: true\x2C\n  });\n  return err;\n}\n\nfunction generateUnhandledRejectionError(reason) {\n  const message =\n    'This error originated either by ' +\n    'throwing inside of an async function without a catch block\x2C ' +\n    'or by rejecting a promise which was not handled with .catch().' +\n    ' The promise rejected with the reason ' +\n    `"${noSideEffectsToString(reason)}".`;\n\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\n  err.code = 'ERR_UNHANDLED_REJECTION';\n  return err;\n}\n\nfunction listenForRejections() {\n  setPromiseRejectCallback(promiseRejectHandler);\n}\nmodule.exports = {\n  hasRejectionToWarn\x2C\n  setHasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n};\n
code-source-info,0xb249f5d
code-creation,LazyCompile,10,287791,0xbb714f5c00e,25,setHasRejectionToWarn node:internal/process/promises:71:31,0x1910fc7fe520,~
code-source-info,0xbb714f5c00e,26,2001,2061,C0O2013C7O2022C12O2045C19O2043C24O2060,,
code-creation,LazyCompile,10,287833,0xbb714f5c15e,80,onlookup node:dns:69:18,0x1a43afb9fc98,~
code-source-info,0xbb714f5c15e,370,2116,2300,C0O2137C4O2164C11O2173C17O2211C25O2173C31O2164C36O2222C37O2234C45O2258C49O2268C60O2278C64O2292C68O2278C73O2234C79O2299,,
code-creation,LazyCompile,10,287875,0xbb714f5c336,275,emitLookup node:net:1037:46,0xb249f5d8ea8,~
code-source-info,0xbb714f5c336,119,27195,28420,C0O27226C3O27231C13O27268C25O27231C30O27442C33O27452C39O27464C40O27471C41O27479C45O27731C50O27739C66O27739C73O27789C80O27794C86O27814C95O27820C102O27860C107O27868C123O27868C130O27918C132O27934C139O27955C144O27972C154O28075C162O28134C172O27978C179O28149C184O28157C200O28157C207O28217C210O28222C215O28222C219O28245C233O28288C235O28287C249O28353C254O28372C259O28386C268O28245C274O28419,,
code-creation,LazyCompile,10,287958,0xbb714f5c6fe,415,internalConnect node:net:860:25,0x172aed078690,~
code-source-info,0xbb714f5c6fe
tick,0x1a3729c94,288000,1,0x100d6ab60,6,0x0,0xbb714f5c7fd,0xb249f5d8daa,0xbb714f5c442,0xbb714f5c1a7
tick,0x1a3729f3c,289250,1,0x100d6ab60,6,0x0,0xbb714f5c7fd,0xb249f5d8daa,0xbb714f5c442,0xbb714f5c1a7
code-creation,LazyCompile,10,289750,0xbb714f5d0a6,388,processImmediate node:internal/timers:421:28,0x38fe558754d8,~
code-source-info,0xbb714f5d0a
code-creation,LazyCompile,10,289833,0xbb714f5d3e6,18, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:95:16,0x324f23cafe98,~
code-source-info,0xbb714f5d3e6,330,2783,2814,C0O2791C3O2799C11O2799C17O2813,,
code-creation,LazyCompile,10,289875,0xbb714f5d5de,445, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:40:24,0x4324a97e108,~
code-source-info,0xbb714f5d5de,365,1294,2272,C0O1306C3O1315C13O1336C17O1377C22O1383C33O1401C36O1407C55O1442C60O1451C72O1484C77O1494C84O1505C89O1520C94O1536C97O1542C118O1588C123O1598C129O1617C134O1629C137O1635C158O1688C161O1693C174O1749C179O1755C190O1783C193O1789C210O1808C223O1825C226O1831C237O1837C250O1852C267O1881C270O1887C287O1900C300O1917C303O1923C314O1929C327O1944C338O1959C341O1959C345O1987C350O1997C356O2016C359O2016C364O2053C369O2063C375O2083C388O2131C391O2103C399O2101C407O2165C420O2217C423O2187C431O2185C437O2249C440O2249C444O2271,,
code-creation,LazyCompile,10,289916,0xbb714f5d926,36,logToStream /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:130:24,0x4324a97e0b8,~
code-source-info,0xbb714f5d926,365,4350,4432,C0O4362C8O4381C9O4387C10O4393C13O4398C18O4411C25O4421C29O4411C35O4431,,
code-creation,LazyCompile,10,289958,0xbb714f4e086,166,Transform._write node:internal/streams/transform:178:38,0x38fe55866e80,~
code-source-info,0xbb714f4e086,58,6257,7657,C0O6257C25O6304C28O6309C32O6304C34O6342C37O6347C41O6342C43O6380C46O6387C50O6380C52O6411C53O6411C55O6435C58O6440C63O6458C74O6440C80O6878C90O6960C95O6972C99O7019C104O7035C120O7019C138O7613C143O7621C156O7621C165O7656,,
code-creation,LazyCompile,10,290000,0xbb714f4e2a6,9,PassThrough._transform node:internal/streams/passthrough:45:44,0x38fe55867908,~
code-source-info,0xbb714f4e2a6,59,1716,1760,C0O1742C2O1742C8O1759,,
code-creation,LazyCompile,10,290041,0xbb714f4e3ce,137, node:internal/streams/transform:184:51,0xbb714f4ded0,~
code-source-info,0xbb714f4e3ce,58,6468,6873,C0O6488C4O6495C10O6507C14O6524C17O6524C21O6545C22O6552C23O6564C28O6589C31O6594C36O6594C41O6616C46O6634C54O6670C59O6681C62O6688C66O6677C73O6725C76O6732C83O6741C86O6748C90O6739C97O6771C100O6778C106O6785C111O6805C114O6805C119O6836C126O6841C131O6852C136O6872,,
code-creation,LazyCompile,10,290041,0xbb714f4e56e,20,Readable.push node:internal/streams/readable:227:35,0x38fe55853c10,~
code-source-info,0xbb714f4e56e,48,7621,7699,C0O7643C14O7650C19O7697,,
code-creation,LazyCompile,10,290125,0xbb714f4e7ae,510,readableAddChunk node:internal/streams/readable:236:26,0x38fe55853d20,~
code-source-info,0xbb714f4e7ae
code-creation,LazyCompile,10,290166,0xbb714f4ebfe,179,addChunk node:internal/streams/readable:304:18,0x38fe55853d70,~
code-source-info,0xbb714f4ebfe,48,10172,10885,C0O10221C6O10238C12O10245C17O10261C23O10282C31O10282C38O10304C43O10419C49O10450C54O10468C59O10468C65O10496C66O10520C70O10538C71O10556C75O10575C83O10575C91O10642C96O10664C109O10687C116O10655C120O10699C124O10727C129O10734C134O10734C141O10771C146O10778C151O10778C156O10806C162O10826C165O10826C169O10854C172O10854C178O10884,,
code-creation,LazyCompile,10,290208,0xbb714f4ee06,16, /Users/carloscalvo/code/Coder/backend/entregas/benchmark.js:16:26,0x324f23cac958,~
code-source-info,0xbb714f4ee06,136,330,357,C0O347C5O347C10O347C15O357,,
code-creation,LazyCompile,10,290250,0xbb714f4effe,107,addCatch node:events:218:18,0x1910fc7f29e0,~
code-source-info,0xbb714f4effe,13,6191,6733,C0O6191C17O6223C24O6233C26O6232C31O6250C32O6257C36O6381C41O6392C45O6437C52O6451C63O6437C81O6703C86O6708C97O6708C106O6732,,
code-creation,LazyCompile,10,290291,0xbb714f4f1ae,41,maybeReadMore node:internal/streams/readable:602:23,0x38fe558540f8,~
code-source-info,0xbb714f4f1ae,48,19434,19589,C0O19465C6O19486C12O19505C13O19523C17O19535C20O19543C34O19543C40O19588,,
code-creation,LazyCompile,10,290333,0x2500b47c1266,323,onwrite node:internal/streams/writable:425:17,0x38fe55862160,~
code-source-info,0x2500b47c1266,55,13444,15067,C0O13482C5O13519C10O13544C15O13556C19O13592C26O13619C29O13615C35O13592C40O13649C41O13656C42O13664C43O13678C47O13689C48O13703C52O13713C57O13735C64O13726C68O13747C69O13762C73O13770C77O13874C81O13942C87O13959C89O13973C93O14091C99O14117C104O14132C110O14156C117O14179C121O14196C125O14214C128O14222C148O14222C155O14288C170O14288C177O14356C182O14365C187O14380C191O14372C196O14403C199O14403C204O14442C208O14723C214O14770C219O14789C226O14792C231O14816C242O14840C248O14867C255O14906C261O14910C267O14918C273O14892C277O14935C280O14943C288O14974C293O14943C301O15022C316O15022C322O15066,,
code-creation,LazyCompile,10,290375,0x2500b47c17ce,67,trackDuration /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:137:24,0x324f23ca8c38,~
code-source-info,0x2500b47c17ce,365,4459,4841,C0O4589C5O4602C11O4609C12O4615C13O4639C18O4660C28O4734C36O4778C46O4639C52O4811C59O4811C64O4821C66O4839,,
code-creation,LazyCompile,10,290416,0x2500b47c1c0e,236,addListener /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:94:24,0x4324a97e068,~
code-source-info,0x2500b47c1c0e,365,2801,4325,C0O2931C6O2959C7O2965C8O2977C12O2992C18O3131C23O3141C29O3397C32O3406C43O3406C49O3453C50O3459C51O3651C54O3660C59O3673C65O3688C70O3699C76O3742C79O3751C92O3751C98O3808C101O3817C114O3817C120O3892C124O3900C137O3900C145O4017C148O4026C161O4026C167O4085C170O4094C183O4094C189O4153C192O4162C205O4162C211O4233C215O4241C228O4241C235O4324,,
code-creation,LazyCompile,10,290500,0x2500b47c1f9e,93,maybeReadMore_ node:internal/streams/readable:609:24,0x38fe55854148,~
code-source-info,0x2500b47c1f9e,48,19614,21383,C0O21049C6O21067C12O21092C17O21107C21O21099C26O21141C32O21158C38O21165C43O21198C48O21210C56O21210C60O21252C67O21252C72O21283C76O21273C81O21342C83O21035C86O21355C87O21373C92O21382,,
code-creation,LazyCompile,10,290500,0x3a1dfed62086,46,afterWriteTick node:internal/streams/writable:482:24,0x38fe558621b0,~
code-source-info,0x3a1dfed62086,55,15092,15208,C0O15095C5O15103C10O15110C15O15117C20O15127C21O15152C25O15162C40O15169C45O15206,,
code-creation,LazyCompile,10,290541,0x3a1dfed621ee,104,afterWrite node:internal/streams/writable:487:20,0x38fe55862200,~
code-source-info,0x3a1dfed621ee,55,15229,15585,C0O15285C7O15303C14O15322C20O15329C25O15348C30O15361C32O15382C33O15398C37O15418C45O15418C50O15455C60O15455C65O15466C71O15481C75O15489C78O15440C81O15512C87O15529C90O15529C94O15556C97O15556C103O15584,,
tick,0x1a36363e4,290583,0,0x0,3,0x0,0x4324a97f679
code-creation,LazyCompile,10,290625,0x3a1dfed6235e,2,nop node:internal/streams/writable:73:13,0x38fe55861568,~
code-source-info,0x3a1dfed6235e,55,2409,2414,C1O2413,,
code-creation,LazyCompile,10,290625,0x3a1dfed6242e,85,finishMaybe node:internal/streams/writable:727:21,0x38fe558624d8,~
code-source-info,0x3a1dfed6242e,55,21275,21567,C0O21301C3O21305C9O21330C12O21330C17O21370C23O21380C31O21389C37O21416C43O21431C47O21441C51O21461C54O21469C68O21469C75O21525C78O21525C84O21566,,
code-creation,LazyCompile,10,290666,0x3a1dfed625ce,73,needFinish node:internal/streams/writable:650:20,0x38fe558623e8,~
code-source-info,0x3a1dfed625ce,55,19361,19652,C0O19387C6O19413C12O19444C18O19451C23O19477C30O19504C35O19513C41O19520C46O19546C53O19575C60O19603C67O19636C72O19650,,
code-creation,LazyCompile,10,291166,0x3a1dfed62806,294,afterConnect node:net:1104:22,0x172aed0787d0,~
code-source-info,0x3a1dfed
code-creation,LazyCompile,10,291208,0x36631f5fef4e,41,get node:internal/streams/readable:1166:8,0x38fe558549f8,~
code-source-info,0x36631f5fef4e,48,35442,35828,C0O35468C5O35727C9O35743C15O35752C21O35768C28O35784C35O35811C40O35822,,
code-creation,LazyCompile,10,291250,0x36631f5ff096,48,get node:internal/streams/writable:783:8,0x38fe55862618,~
code-source-info,0x36631f5ff096,55,22665,23054,C0O22691C5O22950C9O22966C15O22975C21O22991C28O23007C35O23029C42O23042C47O23048,,
code-creation,LazyCompile,10,291291,0x36631f5ff376,322,arrayClone node:events:751:20,0x1910fc7f3398,~
code-source-info,0x36631f5ff376,13,21217,21671,C0O21356C42O21378C50O21389C62O21397C71O21402C72O21415C80O21426C92O21434C104O21442C113O21447C114O21460C122O21471C134O21479C146O21487C158O21495C167O21500C168O21513C176O21524C188O21532C200O21540C212O21548C224O21556C233O21561C234O21574C242O21585C254O21593C266O21601C278O21609C290O21617C302O21625C311O21630C312O21637C317O21644C321O21669,,
code-creation,LazyCompile,10,291291,0x36631f5ff666,95,onceWrapper node:events:508:21,0x1910fc7f2ec8,~
code-source-info,0x36631f5ff666,13,14738,14982,C0O14738C2O14755C8O14773C13O14780C18O14800C23O14811C28O14780C34O14824C35O14835C39O14861C45O14868C50O14893C55O14902C60O14912C65O14902C70O14920C71O14937C76O14946C81O14957C86O14946C92O14976C94O14981,,
code-creation,LazyCompile,10,291333,0x36631f5ff82e,62,Readable.removeListener node:internal/streams/readable:905:45,0x38fe558543f0,~
code-source-info,0x36631f5ff82e,48,28775,29332,C0O28800C5O28807C10O28817C15O28832C29O28832C35O28906C37O28913C42O29263C45O29271C53O29271C59O29319C61O29330,,
code-creation,LazyCompile,10,291375,0x12ae9129c3ee,307,removeListener node:events:561:28,0x1910fc7f3030,~
code-source-info,0x12ae9129c3ee
code-creation,LazyCompile,10,291416,0x12ae9129c6c6,27,connect node:net:761:42,0xb249f5cdd38,~
code-source-info,0x12ae9129c6c6,119,19658,19722,C0O19674C20O19674C26O19721,,
code-creation,LazyCompile,10,291458,0x12ae9129c80e,55,writeGeneric node:internal/stream_base_commons:151:22,0x6a337a35018,~
script-source,83,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  errnoException\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateCallback } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  let stream = this.handle[owner_symbol];\n\n  if (stream.constructor.name === 'ReusedHandle') {\n    stream = stream.handle;\n  }\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  // TODO (ronag): This should be moved before if(stream.destroyed)\n  // in order to avoid swallowing error.\n  if (status < 0) {\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function')\n      this.callback(ex);\n    else\n      stream.destroy(ex);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n\n  let stream = this[owner_symbol];\n\n  if (stream.constructor.name === 'ReusedHandle') {\n    stream = stream.handle;\n  }\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(errnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(errnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // TODO(ronag): Without this `readStop`\x2C `onStreamRead`\n    // will be called once more (i.e. after Readable.ended)\n    // on Windows causing a ECONNRESET\x2C failing the\n    // test-https-truncate test.\n    if (handle.readStop) {\n      const err = handle.readStop();\n      if (err) {\n        // CallJSOnreadMethod expects the return value to be a buffer.\n        // Ref: https://github.com/nodejs/node/pull/34375\n        stream.destroy(errnoException(err\x2C 'read'));\n        return;\n      }\n    }\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateCallback(callback);\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateCallback(callback);\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n};\n
code-source-info,0x12ae9129c80e,83,3680,3864,C0O3723C5O3744C7O3743C11O3723C17O3773C29O3773C35O3813C47O3813C52O3851C54O3862,,
code-creation,LazyCompile,10,291791,0x12ae9129d2ce,47,createWriteWrap node:internal/stream_base_commons:113:25,0x6a337a34f58,~
code-source-info,0x12ae9129d2ce,83,2802,3016,C0O2837C5O2837C11O2857C13O2868C17O2880C19O2895C23O2916C24O2926C28O2937C29O2947C33O2954C34O2965C38O2975C40O2988C44O3003C46O3014,,
tick,0x1a3726358,291791,0,0x0,3,0x0,0x12ae9129c819,0xb249f5cdefb,0x12ae9129c6da,0x36631f5ff6a7,0x3a1583d10dcb,0x3a1dfed62899
code-creation,LazyCompile,10,291833,0x12ae9129d4e6,215,handleWriteReq node:internal/stream_base_commons:45:24,0x6a337a34eb8,~
code-source-info,0x12ae9129d4e6,83,1174,2006,C0O1208C5O1227C80O1297C85O1297C92O1327C99O1347C101O1346C106O1376C108O1387C112O1401C114O1412C115O1477C120O1477C126O1506C127O1562C132O1562C138O1589C139O1628C144O1628C150O1656C151O1753C156O1753C162O1780C163O1821C168O1828C173O1828C180O1875C185O1875C192O1907C199O1927C201O1926C206O1956C208O1967C212O1983C214O1994,,
code-creation,LazyCompile,10,291875,0x12ae9129d73e,92,afterWriteDispatched node:internal/stream_base_commons:159:30,0x6a337a35088,~
code-source-info,0x12ae9129d73e,83,3895,4169,C0O3914C2O3926C7O3942C9O3941C12O3924C16O3960C18O3974C23O3990C25O3989C30O3970C34O4014C35O4022C40O4033C42O4043C48O4076C56O4043C62O4040C66O4084C67O4097C73O4117C81O4152C86O4152C91O4168,,
code-creation,LazyCompile,10,291916,0x36631f5c11e6,17, node:net:586:26,0xb249f5e2098,~
code-source-info,0x36631f5c11e6,119,15399,15418,C0O15410C3O15410C11O15410C16O15418,,
code-creation,LazyCompile,10,291916,0x36631f5c137e,65,tryReadStart node:net:571:22,0x172aed078550,~
code-source-info,0x36631f5c137e,119,14942,15167,C0O14996C8O14996C12O15040C18O15056C22O15085C27O15093C32O15093C37O15108C39O15128C46O15136C52O15136C58O15128C64O15166,,
code-creation,LazyCompile,10,291958,0x36631f5c14de,29,Readable.isPaused node:internal/streams/readable:330:39,0x38fe55853dc0,~
code-source-info,0x36631f5c14de,48,10925,11029,C0O10951C5O10969C7O10982C9O10981C14O10991C19O11009C25O11017C28O11027,,
tick,0x1a372c99c,375541,0,0x0,8
code-creation,LazyCompile,10,375625,0x2d4de601561e,427,onStreamRead node:internal/stream_base_commons:171:22,0x6a337a350d8,~
code-source-info,0x2d4de601561e
tick,0x1a37298d4,375708,0,0x0,3
code-creation,LazyCompile,10,375750,0x2d4de60159ce,5,get node:net:565:16,0x172aed079178,~
code-source-info,0x2d4de60159ce,119,14877,14914,C0O14898C4O14910,,
code-creation,LazyCompile,10,375791,0x2d4de6015ad6,43, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:138:24,0x1a43afb9cbe8,~
code-source-info,0x2d4de6015ad6,332,3892,3993,C0O3909C3O3914C8O3932C13O3951C18O3932C23O3963C26O3968C31O3975C36O3975C42O3992,,
code-creation,LazyCompile,10,375833,0x2d4de6015c06,28,addByteCount /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:34:16,0x324f23ca73c8,~
code-source-info,0x2d4de6015c06,364,979,1066,C0O1010C5O1010C10O1021C12O1038C19O1051C22O1048C27O1065,,
code-creation,LazyCompile,10,375833,0x2d4de6015d1e,28,peek /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:28:8,0x324f23ca7378,~
code-source-info,0x2d4de6015d1e,364,868,962,C0O886C5O902C11O909C16O934C22O949C25O952C27O961,,
code-creation,LazyCompile,10,375875,0x2d4de6015f2e,214,HTTPParser.execute /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:108:41,0x395d7b337910,~
code-source-info,0x2d4de6015f2e,335,2667,3524,C0O2694C2O2705C7O2735C16O2741C21O2735C22O2890C29O2912C39O2965C45O2976C47O2987C51O2998C53O3010C57O3031C59O3048C63O3040C75O3082C82O3089C87O3118C91O3112C95O3124C101O3138C103O3070C119O3190C125O3210C127O3210C128O3231C129O3245C133O3257C135O3268C136O3275C137O3286C141O3310C148O3317C153O3328C156O3349C160O3343C165O3363C172O3382C175O3379C179O3403C187O3427C191O3414C196O3450C205O3457C210O3495C211O3508C213O3522,,
code-creation,LazyCompile,10,375958,0x2d4de6016226,154,HTTPParser.RESPONSE_LINE /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:249:47,0x395d7b337ea8,~
code-source-info,0x2d4de6016226,335,6606,7121,C0O6629C5O6629C10O6646C12O6663C13O6670C14O6689C17O6701C22O6701C28O6715C30O6741C36O6747C40O6741C41O6798C48O6824C51O6818C53O6816C57O6836C64O6862C67O6856C69O6854C73O6891C80O6915C83O6909C86O6907C93O6927C100O6953C103O6946C107O6986C109O7002C112O7008C118O7013C127O7033C136O7055C141O7070C142O7086C146O7097C148O7108C153O7120,,
code-creation,LazyCompile,10,376000,0x2d4de601645e,200,HTTPParser.consumeLine /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:185:45,0x395d7b337cf8,~
code-source-info,0x2d4de601645e,335,4678,5215,C0O4700C5O4724C10O4751C15O4761C17O4761C22O4779C24O4788C30O4792C35O4832C40O4845C48O4865C53O4880C64O4845C69O4837C73O4907C78O4919C82O4926C86O4907C94O4931C99O4963C106O4978C110O4985C114O4963C121O5005C123O5015C127O5027C129O5043C132O5039C136O5054C138O5066C139O4769C144O4733C147O5115C152O5134C160O5154C165O5169C170O5182C178O5134C186O5125C190O5209C194O5202C199O5214,,
code-creation,LazyCompile,10,376041,0x2d4de6016686,12,slice node:buffer:629:12,0x30d75ba5d78,~
code-source-info,0x2d4de6016686,18,18092,18139,C0O18117C5O18117C11O18139,,
code-creation,LazyCompile,10,376166,0x2d4de601698e,555,HTTPParser.HEADER /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:283:40,0x395d7b337fc8,~
code-source-info,0x2d4de601698e
code-creation,LazyCompile,10,376250,0x311ed227e146,165,HTTPParser.parseHeader /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:206:45,0x395d7b337d88,~
code-source-info,0x311ed227e146,335,5360,5895,C0O5389C8O5389C16O5403C21O5417C27O5423C31O5417C32O5477C35O5487C40O5487C46O5509C50O5523C54O5530C56O5591C61O5591C66O5612C73O5622C77O5612C84O5663C87O5681C92O5681C98O5697C100O5726C106O5762C110O5769C113O5753C118O5801C122O5808C135O5813C139O5851C143O5858C153O5879C159O5863C164O5894,,
code-creation,RegExp,3,376333,0x1075209a0,1528,^([^: \\t]+):[ \\t]*((?:.*[^ \\t])|)
code-creation,LazyCompile,10,376375,0x311ed227e6c6,106,HTTPParser.shouldKeepAlive /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:269:49,0x395d7b337f38,~
code-source-info,0x311ed227e6c6,335,7172,7508,C0O7188C5O7193C11O7206C16O7218C21O7223C27O7236C32O7256C37O7267C45O7267C53O7284C58O7300C59O7313C62O7338C67O7349C75O7349C83O7371C88O7385C89O7398C90O7414C96O7442C102O7474C103O7486C104O7493C105O7506,,
code-creation,LazyCompile,10,376416,0x311ed227e8c6,19,HTTPParser.userCall /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:171:42,0x395d7b337bb0,~
code-source-info,0x311ed227e8c6,335,4372,4499,C0O4372C5O4379C6O4395C10O4416C12O4416C14O4424C18O4497,,
code-creation,LazyCompile,10,376416,0x311ed227ea16,37,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:77:48,0x324f23cb7618,~
code-source-info,0x311ed227ea16,332,2114,2204,C0O2130C3O2135C11O2135C17O2161C20O2166C25O2184C30O2184C36O2203,,
code-creation,LazyCompile,10,376458,0x311ed227eb36,20,setHeaders /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:48:14,0x324f23ca7468,~
code-source-info,0x311ed227eb36,364,1177,1269,C0O1210C5O1210C10O1221C12O1238C14O1250C19O1268,,
code-creation,LazyCompile,10,376458,0x311ed227ec36,11, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:174:19,0x311ed227e808,~
code-source-info,0x311ed227ec36,335,4440,4496,C0O4452C4O4468C8O4481C10O4492,,
code-creation,LazyCompile,10,376500,0x311ed227ed6e,121,HTTPParser.BODY_SIZED /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:431:44,0x395d7b338320,~
code-source-info,0x311ed227ed6e,335,12485,12732,C0O12505C4O12510C9O12519C14O12530C18O12523C22O12543C27O12510C34O12563C39O12563C46O12578C50O12593C55O12605C66O12587C72O12573C76O12625C83O12640C86O12637C90O12650C97O12669C100O12666C104O12689C110O12712C115O12712C120O12731,,
code-creation,LazyCompile,10,376541,0x311ed227ef2e,55,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:82:37,0x324f23cb76e8,~
code-source-info,0x311ed227ef2e,332,2242,2364,C0O2270C3O2275C8O2293C13O2306C20O2325C24O2306C31O2293C36O2337C39O2342C47O2342C54O2363,,
code-creation,LazyCompile,10,376541,0x311ed227f0c6,81,slice node:buffer:1115:40,0x30d75ba6de0,~
code-source-info,0x311ed227f0c6,18,32899,33185,C0O32939C5O32949C8O32957C15O32991C22O33017C33O33079C35O33083C42O33097C49O33112C54O33139C59O33152C66O33163C75O33119C80O33183,,
code-creation,LazyCompile,10,376583,0x311ed227f226,74,adjustOffset node:buffer:1098:22,0x30d75ba6d90,~
code-source-info,0x311ed227f226,18,32445,32858,C0O32616C5O32625C11O32646C12O32657C17O32670C18O32679C19O32686C20O32697C25O32708C27O32718C35O32730C36O32744C46O32761C47O32768C49O32779C54O32795C56O32809C57O32816C62O32823C73O32856,,
code-creation,LazyCompile,10,376583,0x311ed227f37e,28,addBody /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:41:11,0x324f23ca7418,~
code-source-info,0x311ed227f37e,364,1078,1162,C0O1108C5O1108C10O1119C12O1136C19O1148C22O1145C27O1161,,
code-creation,LazyCompile,10,376625,0x311ed227f4e6,42,HTTPParser.nextRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:180:45,0x395d7b337c68,~
code-source-info,0x311ed227f4e6,335,4546,4631,C0O4558C5O4558C12O4573C16O4593C21O4568C25O4605C30O4623C35O4605C41O4630,,
code-creation,LazyCompile,10,376666,0x311ed22672be,248,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:87:48,0x324f23cb77b8,~
code-source-info,0x311ed22672be,332,2413,3005,C0O2438C3O2443C8O2461C13O2461C18O2485C21O2495C30O2513C39O2535C47O2551C51O2544C56O2565C61O2580C64O2592C69O2592C73O2610C74O2621C77O2631C83O2650C86O2659C91O2664C100O2683C105O2688C110O2708C114O2699C119O2724C122O2736C130O2758C135O2736C141O2763C142O2779C145O2784C150O2800C155O2816C160O2826C165O2834C170O2851C175O2862C180O2870C185O2800C190O2886C193O2891C201O2913C206O2921C211O2938C216O2950C224O2965C229O2891C234O2978C237O2983C242O2983C247O3004,,
code-creation,LazyCompile,10,376708,0x311ed2267576,89,terminateRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:62:20,0x324f23ca7508,~
code-source-info,0x311ed2267576,364,1483,1726,C0O1501C5O1517C11O1524C16O1555C21O1571C26O1571C31O1604C35O1612C40O1624C45O1612C51O1641C52O1667C55O1671C64O1689C67O1693C77O1677C80O1655C84O1705C86O1716C88O1725,,
code-creation,LazyCompile,10,376750,0x311ed226774e,55,RequestIterator.recordBody /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:125:49,0xbb714f51ca8,~
code-source-info,0x311ed226774e,339,3828,4013,C0O3865C4O3895C12O3936C17O3966C24O3975C38O3992C43O3975C48O3936C54O4012,,
code-creation,LazyCompile,10,376791,0x311ed22679a6,255,onResponse /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:218:25,0x324f23cb6b88,~
code-source-info,0x311ed22679a6,330,6614,7395,C0O6665C3O6673C23O6673C28O6756C32O6761C41O6767C45O6788C49O6761C54O6795C58O6805C65O6817C71O6828C75O6840C82O6860C87O6884C92O6900C96O6912C102O6950C109O6965C119O6983C123O7041C125O7055C132O7064C136O7093C143O7111C149O7150C154O7160C159O7206C163O7211C173O7218C177O7211C183O7160C191O7254C196O7264C201O7264C206O7314C208O7328C215O7337C219O7356C226O7365C232O7362C238O7380C247O7387C254O7394,,
code-creation,LazyCompile,10,376833,0x311ed2267c16,17,recordValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:139:16,0x36998917bf98,~
code-source-info,0x311ed2267c16,179,5433,5496,C0O5456C5O5471C10O5471C16O5495,,
code-creation,LazyCompile,10,376875,0x311ed2267d2e,47,curr.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:526:36,0xe757747a9b8,~
code-source-info,0x311ed2267d2e,198,17484,17623,C0O17484C3O17529C10O17553C15O17529C19O17576C25O17583C32O17593C34O17592C41O17583C46O17609,,
code-creation,LazyCompile,10,376916,0x311ed2267e76,17, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:206:28,0x324f23cb6d68,~
code-source-info,0x311ed2267e76,330,6182,6207,C0O6190C9O6203C16O6206,,
tick,0x1a37298d4,376916,0,0x0,3,0x0,0x3a1583d10d83,0xb249f5ccdf8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
code-creation,LazyCompile,10,376958,0x311ed2267fde,102,RequestIterator.nextRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:44:50,0xbb714f51830,~
code-source-info,0x311ed2267fde,339,1144,1659,C0O1151C1O1165C5O1175C11O1182C15O1287C20O1316C25O1325C29O1307C34O1344C39O1344C43O1363C44O1388C48O1425C53O1439C57O1433C60O1418C64O1512C69O1524C75O1553C80O1568C88O1608C93O1608C97O1643C101O1657,,
code-creation,RegExp,3,377166,0x107521000,1624,^HTTP\\/(\\d)\\.(\\d) (\\d{3}) ?(.*)$
tick,0x1a372c99c,378208,0,0x0,8
tick,0x1a372c99c,379458,0,0x0,8
tick,0x1a372c99c,380708,0,0x0,8
tick,0x1a372c99c,381916,0,0x0,8
tick,0x1a372c99c,383083,0,0x0,8
tick,0x1a372c99c,384458,0,0x0,8
tick,0x1013adb00,385541,0,0x0,0,0x2d4de6016993,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,386916,0,0x0,8
tick,0x1a372c99c,388208,0,0x0,8
tick,0x100e1f018,389291,1,0x100caed78,5,0x0,0x172aed062817,0x311ed227f391,0x311ed227ef4d,0x311ed227edb0,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,390583,0,0x0,8
tick,0x1a372c99c,391875,0,0x0,8
tick,0x1a372c99c,393875,0,0x0,8
tick,0x1a37298d4,394333,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,394375,0x1075216c0,1832,HTTPParser.consumeLine /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:185:45,0x395d7b337cf8,*
code-source-info,0x1075216c0,335,4678,5215,C0O4678C56O4700C84O4724C88O4761C124O4788C188O4792C196O4769C204O4733C220O5115C224O4832C228O23388I0C256O23409I0C264O23447I0C300O23525I0C324O23571I0C328O23579I0C364O23689I0C408O23717I0C420O23800I0C524O23750I0C532O4837C584O4985C588O4837C604O4907C612O4837C648O4907C848O4931C876O4963C928O5015C984O5043C996O5039C1008O5066C1044O4678C1092O4733C1164O4907,F0O4845,S0x30d75ba6968
tick,0x1a372c99c,395833,0,0x0,8
tick,0x1a372c99c,396916,0,0x0,8
tick,0x1a372c99c,398083,0,0x0,8
tick,0x1a372c99c,400208,0,0x0,8
tick,0x1013a2aac,400625,0,0x0,0,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,401875,0,0x0,8
tick,0x1a372c99c,403250,0,0x0,8
tick,0x1a372c99c,404375,0,0x0,8
tick,0x1a372c99c,426791,0,0x0,8
tick,0x1a372c99c,427916,0,0x0,8
tick,0x1a372c99c,479208,0,0x0,8
tick,0x1a372c99c,480458,0,0x0,8
tick,0x1a372c99c,481666,0,0x0,8
tick,0x1a372c99c,482833,0,0x0,8
tick,0x1a372c99c,483916,0,0x0,8
tick,0x1a372c99c,485208,0,0x0,8
scavenge,begin,0,396871,1643426345969
scavenge,end,0,397922,1643426345970
tick,0x1a36326d4,486416,0,0x0,1
tick,0x1a372c99c,487833,0,0x0,8
tick,0x1a372c99c,489166,0,0x0,8
tick,0x1a372c99c,490250,0,0x0,8
tick,0x1a372c99c,491375,0,0x0,8
tick,0x1a372c99c,492666,0,0x0,8
tick,0x1a372c99c,493750,0,0x0,8
tick,0x1014966a4,494791,0,0x0,0,0xb249f5d50ba,0xbb714f4f1d0,0xbb714f4ecaa,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1013ac8f8,496041,0,0x0,0,0x2d4de60169eb,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,497333,0,0x0,8
tick,0x1a372c99c,498625,0,0x0,8
tick,0x1014a4eac,499708,0,0x0,0,0x311ed227f4eb,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,500958,0,0x0,8
tick,0x1a372c99c,505750,0,0x0,8
tick,0x1a372c99c,505958,0,0x0,8
tick,0x1a372c99c,522708,0,0x0,8
tick,0x1a372c99c,523416,0,0x0,8
tick,0x1a372c99c,556333,0,0x0,8
tick,0x100df9b5c,556583,0,0x0,6
tick,0x10100f550,557875,0,0x0,8
tick,0x1a372c99c,559125,0,0x0,8
tick,0x1a372c99c,560458,0,0x0,8
tick,0x1a372c99c,562458,0,0x0,8
tick,0x101490ea0,562916,0,0x0,0,0x2d4de6016aea,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x100e21b24,563958,0,0x0,0,0x0,0x2d4de6016279,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,565375,0,0x0,8
tick,0x1a372c99c,566541,0,0x0,8
tick,0x1a372c99c,568333,0,0x0,8
tick,0x1a372c99c,569000,0,0x0,8
tick,0x1a372c99c,570125,0,0x0,8
tick,0x1013a567c,571333,0,0x0,0,0x324f23cba5c2,0x311ed227f509,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,572625,0,0x0,8
tick,0x1a372c99c,573750,0,0x0,8
tick,0x1a372c99c,574875,0,0x0,8
tick,0x1a372c99c,576166,0,0x0,8
tick,0x1a372c99c,596666,0,0x0,8
tick,0x1a372c99c,597000,0,0x0,8
tick,0x1a372c99c,608583,0,0x0,8
tick,0x1a372c99c,622666,0,0x0,8
tick,0x1a372c99c,623208,0,0x0,8
tick,0x1a372c99c,648625,0,0x0,8
tick,0x1a372c99c,649458,0,0x0,8
tick,0x1a372c99c,650583,0,0x0,8
tick,0x1a372c99c,651708,0,0x0,8
tick,0x1a372c99c,652791,0,0x0,8
tick,0x1a372c99c,653875,0,0x0,8
tick,0x1a372c99c,655083,0,0x0,8
tick,0x1a372c99c,656250,0,0x0,8
tick,0x1a372c99c,659166,0,0x0,8
tick,0x1a372953c,659625,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,660875,0,0x0,8
tick,0x101496250,662166,0,0x0,0,0x4324a97f700
tick,0x1a372c99c,663416,0,0x0,8
scavenge,begin,0,409060,1643426346147
new,MemoryChunk,0x1ce95c80000,262144
new,MemoryChunk,0x2bc52ec40000,262144
new,MemoryChunk,0x377b70300000,262144
new,MemoryChunk,0x377435900000,262144
new,MemoryChunk,0x308a7e7c0000,262144
scavenge,end,0,409801,1643426346147
tick,0x1a372c99c,664666,0,0x0,8
tick,0x1a372c99c,665833,0,0x0,8
tick,0x1a372c99c,666916,0,0x0,8
tick,0x1a372c99c,672125,0,0x0,8
tick,0x1a372c99c,688833,0,0x0,8
tick,0x1a372c99c,693333,0,0x0,8
tick,0x1a372c99c,693583,0,0x0,8
tick,0x1a372c99c,696583,0,0x0,8
tick,0x1a372c99c,718083,0,0x0,8
tick,0x1a372953c,719166,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1014a7328,720791,0,0x0,0,0xbb714f4e7b6,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,722666,0,0x0,8
code-creation,LazyCompile,13,722958,0x107521ee0,1272,arrayEach /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:135:19,0xbb714f72358,*
code-source-info,0x107521ee0,361,4649,4856,C0O4649C60O4716C72O4702C156O4716C212O4746C240O4780C296O4766C344O23625I0C424O23769I0C440O23666I0C444O23682I0C496O23769I0C544O23794I0C628O23769I0C648O20703I1C676O20733I1C748O20845I1C780O4731C796O4854C840O20754I1C844O4649C892O4702C944O23625I0C996O4731,F0O4766F1O23769I0,S0x324f23cb8130S0xbb714f72e70
tick,0x101496108,724250,0,0x0,0,0x2d4de6015c06,0x2d4de6015ae8,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,725083,0,0x0,8
tick,0x1a372c99c,726583,0,0x0,8
tick,0x10111ba28,728208,0,0x0,0,0x1013e1dc4,0x2d4de6015fce,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,732708,0,0x0,8
tick,0x1a37298d4,733666,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,734916,0x1075224c0,5484,HTTPParser.HEADER /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:283:40,0x395d7b337fc8,*
code-source-info,0x1075224cx395d7b337cf8S0x30d75ba6968S0x395d7b337d88
tick,0x1a37298d4,735208,0,0x0,4,0x0,0x2d4de601561d
tick,0x1a372c99c,737375,0,0x0,8
tick,0x1014429c0,738000,0,0x0,0,0x324f23cb881d,0x324f23cb8303,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0xb249f5cce12,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,739250,0,0x0,8
tick,0x1a372c99c,740666,0,0x0,8
tick,0x1a372c99c,745708,0,0x0,8
tick,0x1014960a0,745708,0,0x0,0,0x172aed066ba3,0x324f23cbf372,0x311ed22675a3,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,752916,0,0x0,8
tick,0x1a372c99c,763666,0,0x0,8
tick,0x1013a2f38,763750,0,0x0,0,0x1075218b0,0x2d4de601622b,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,769000,0,0x0,8
tick,0x1a372c99c,773625,0,0x0,8
tick,0x1a372c99c,776041,0,0x0,8
tick,0x1a372c99c,776375,0,0x0,8
tick,0x1a372c99c,797166,0,0x0,8
tick,0x1a372c99c,797875,0,0x0,8
tick,0x1a372c99c,799125,0,0x0,8
tick,0x1a372953c,800125,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,801375,0,0x0,8
tick,0x1a372c99c,802708,0,0x0,8
tick,0x1a372c99c,803958,0,0x0,8
tick,0x1a37782d4,805166,1,0x100cad7d0,5,0x0,0x2d4de601668b,0x1075226b8,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,808541,0,0x0,8
tick,0x101416994,808958,0,0x0,0,0x311ed227f391,0x311ed227ef4d,0x311ed227edb0,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,810208,0,0x0,8
tick,0x1a372c99c,811291,0,0x0,8
tick,0x1a372c99c,812416,0,0x0,8
tick,0x1a372c99c,813833,0,0x0,8
tick,0x1a372c99c,814916,0,0x0,8
tick,0x101496000,816083,0,0x0,0,0x12ae9129d794,0x12ae9129c83d,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,817333,0,0x0,8
tick,0x1a372c99c,828208,0,0x0,8
tick,0x1014a67b4,828208,0,0x0,0,0x2d4de6015ae8,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,833708,0,0x0,8
tick,0x1a372c99c,841916,0,0x0,8
tick,0x1a372c99c,844125,0,0x0,8
tick,0x1a372c99c,847500,0,0x0,8
tick,0x1a372c99c,868208,0,0x0,8
tick,0x1a372c99c,869208,0,0x0,8
tick,0x1013ada98,870250,0,0x0,0,0x10752303c,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1010399bc,871541,0,0x0,0,0x0,0x311ed2267590,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,872833,0,0x0,8
tick,0x1a372c99c,874500,0,0x0,8
tick,0x1a372c99c,875250,0,0x0,8
tick,0x1a372c99c,876416,0,0x0,8
tick,0x1a372c99c,877458,0,0x0,8
tick,0x1a372c99c,878541,0,0x0,8
tick,0x1a372c99c,880708,0,0x0,8
tick,0x1a372c99c,881041,0,0x0,8
tick,0x1a372c99c,881958,0,0x0,8
tick,0x1a372c99c,883041,0,0x0,8
tick,0x1a372c99c,884083,0,0x0,8
tick,0x10164c1ec,885208,0,0x0,4,0x0,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0xb249f5cce12,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,886541,0,0x0,8
tick,0x1a372c99c,891791,0,0x0,8
tick,0x1a37298d4,892666,0,0x0,4,0x0,0x2d4de601561d
tick,0x1a37298d4,893958,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,10,895041,0x377435925466,77,Buffer node:buffer:269:16,0x30d75ba4898,~
code-source-info,0x377435925466,18,7697,8015,C0O7733C3O7733C6O7779C12O7814C18O7864C34O7870C39O7864C40O7931C43O7945C48O7945C53O7956C54O7963C57O7977C71O7977C76O8013,,
code-creation,LazyCompile,13,895083,0x107523c60,7596,baseClone /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:841:19,0xbb714f72f60,*
code-source-info,0x107523cxbb714f73a78S0xbb714f73078S0x30d75ba4eb0S0xbb714f72c40S0xbb714f72d30S0xbb714f734d8S0xbb714f72358S0x324f23cb8130S0xbb714f72e70S0xbb714f72dd0S0xbb714f72970S0xbb714f72ec0S0xbb714f73898S0xbb714f73618S0xbb714f7cbf0S0xbb714f72fd8S0xbb714f724e8S0xbb714f737a8S0xbb714f73028S0xbb714f73b18S0xbb714f723a8S0xbb714f73118S0xbb714f73938
tick,0x1a37298d4,895208,0,0x0,4,0x0,0x2d4de601561d
scavenge,begin,0,446080,1643426346379
scavenge,end,0,446350,1643426346379
tick,0x1a372c99c,906041,0,0x0,8
tick,0x1a372c99c,911916,0,0x0,8
tick,0x1a372c99c,917583,0,0x0,8
tick,0x1013a2e80,917583,0,0x0,0,0x2d4de601622b,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,921791,0,0x0,8
tick,0x1a372c99c,932708,0,0x0,8
tick,0x100c26638,932750,0,0x0,8
tick,0x1a372c99c,934333,0,0x0,8
tick,0x1a372c99c,935333,0,0x0,8
tick,0x1a372c99c,936416,0,0x0,8
tick,0x1a372c99c,937666,0,0x0,8
tick,0x1a372c99c,938833,0,0x0,8
tick,0x1a372c99c,939916,0,0x0,8
tick,0x1a372c99c,940916,0,0x0,8
tick,0x1a372c99c,943708,0,0x0,8
tick,0x1a372c99c,944583,0,0x0,8
tick,0x1a372c99c,945875,0,0x0,8
tick,0x1a372c99c,947083,0,0x0,8
tick,0x1a372c99c,948125,0,0x0,8
tick,0x1a372c99c,949083,0,0x0,8
tick,0x1a372c99c,954708,0,0x0,8
tick,0x1a372c99c,955208,0,0x0,8
tick,0x1a372c99c,956291,0,0x0,8
code-creation,LazyCompile,13,956875,0x107525c80,448,hasHooks node:internal/async_hooks:460:18,0x1910fc7f9d20,*
code-source-info,0x107525c80,24,15649,15695,C0O15649C52O15683C104O15693C164O15649C212O15683,,
tick,0x1a372c99c,962000,0,0x0,8
tick,0x1a372c99c,962583,0,0x0,8
tick,0x1a372c99c,971708,0,0x0,8
tick,0x1a372c99c,976291,0,0x0,8
tick,0x1a372c99c,980333,0,0x0,8
tick,0x1a372c99c,984208,0,0x0,8
tick,0x1a372c99c,984541,0,0x0,8
tick,0x1a372c99c,994375,0,0x0,8
tick,0x1a372c99c,994583,0,0x0,8
tick,0x101496034,995750,0,0x0,0,0x2500b47c1266,0x12ae9129d794,0x12ae9129c83d,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,997083,0,0x0,8
tick,0x1a372c99c,998666,0,0x0,8
tick,0x1a372c99c,999458,0,0x0,8
tick,0x1a3733940,1000583,1,0x100d21788,6,0x0,0x324f23cbf360,0x311ed22675a3,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1013adb70,1001875,0,0x0,0,0x4324a97f68a
code-creation,LazyCompile,13,1002833,0x107525ec0,608,getEncodingOps node:buffer:678:24,0x30d75ba67c0,*
code-source-info,0x107525ec0,18,19931,21732,C0O19931C52O19946C80O19981C136O21731C184O20022C212O20078C216O20058C224O20326C252O20383C264O20441C268O20421C276O20363C284O20750C288O20909C292O21070C320O21095C332O21163C344O21221C348O21203C356O21136C360O21456C364O21593C368O19931,,
tick,0x101496058,1003125,0,0x0,0,0xb249f5ccda6,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1005375,0,0x0,8
tick,0x1a372c99c,1005791,0,0x0,8
tick,0x1a372c99c,1007583,0,0x0,8
tick,0x100f49988,1008000,1,0x100cad7d0,5,0x0,0x2d4de601668b,0x1075226b8,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1009208,0,0x0,8
tick,0x107522bfc,1010416,0,0x0,0,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x10144b560,1011666,0,0x0,0,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1018083,0,0x0,8
tick,0x1a372c99c,1019208,0,0x0,8
tick,0x1a372c99c,1025500,0,0x0,8
tick,0x1a372c99c,1034666,0,0x0,8
tick,0x1a372c99c,1034916,0,0x0,8
tick,0x1a372c99c,1041416,0,0x0,8
tick,0x1a372c99c,1043625,0,0x0,8
tick,0x10144e6e0,1043708,0,0x0,0,0xb249f5e6ac6,0x2500b47c1fe1,0x4324a97f68a
tick,0x1a372c99c,1045291,0,0x0,8
tick,0x1a372c99c,1047708,0,0x0,8
tick,0x1a372c99c,1056625,0,0x0,8
tick,0x1a372c99c,1057375,0,0x0,8
tick,0x101491570,1058541,0,0x0,0,0xb249f5d4f7d,0x2500b47c138b,0x12ae9129d794,0x12ae9129c83d,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1059833,0,0x0,8
tick,0x1a372953c,1061041,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x2d4de6015f8d,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1062291,0,0x0,8
tick,0x1a372c99c,1063416,0,0x0,8
tick,0x1a372c99c,1066333,0,0x0,8
tick,0x1a372c99c,1067041,0,0x0,8
tick,0x1a372c99c,1068166,0,0x0,8
tick,0x1a372c99c,1069291,0,0x0,8
tick,0x1a372c99c,1070416,0,0x0,8
tick,0x1a372c99c,1071583,0,0x0,8
code-creation,LazyCompile,13,1071958,0x1075261a0,2848,HTTPParser.execute /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:108:41,0x395d7b337910,*
code-source-info,0x1075261a0,335,2667,3524,C0O2667C72O2705C128O2735C148O2741C152O2890C240O2965C252O2912C276O2965C420O2987C544O3048C556O3010C644O3048C680O3040C960O3082C964O3089C976O3118C980O3112C996O3124C1100O3070C1112O3082C1140O3089C1152O3118C1156O3112C1172O3124C1276O3070C1348O3286C1372O3317C1388O3349C1392O3343C1404O3382C1416O3379C1424O3414C1436O3522C1484O3450C1504O3457C1508O2667C1556O2705C1632O2890C1820O3124C1872O3070C1904O3124C1956O3070C1996O3190C2008O3343,,
tick,0x1a372c99c,1076666,0,0x0,8
tick,0x1a372c99c,1077583,0,0x0,8
tick,0x1a372c99c,1084083,0,0x0,8
tick,0x1a372c99c,1084541,0,0x0,8
tick,0x1a372c99c,1106166,0,0x0,8
tick,0x1a372c99c,1108666,0,0x0,8
tick,0x1a372c99c,1111833,0,0x0,8
tick,0x1a372c99c,1115125,0,0x0,8
tick,0x1a372c99c,1116416,0,0x0,8
tick,0x1a372c99c,1125625,0,0x0,8
tick,0x10163bfd0,1125958,0,0x0,4,0x0,0xb249f5e6ac6,0x2500b47c1fe1,0x4324a97f68a
tick,0x10158d324,1127250,0,0x0,4,0x0,0xbb714f4f1d0,0xbb714f4ecaa,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
scavenge,begin,0,469502,1643426346611
scavenge,end,0,469957,1643426346611
tick,0x1013adbd0,1128583,0,0x0,0,0xb249f5d50df,0x2500b47c138b,0x12ae9129d794,0x12ae9129c83d,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a37298d4,1129750,0,0x0,4,0x0,0x4324a97f605
tick,0x1a36288f4,1131041,0,0x0,4,0x0,0x4324a97f605
code-creation,LazyCompile,13,1131791,0x107526e20,3820,Readable.read node:internal/streams/readable:394:35,0x38fe55853f80,*
code-source-info,0x107526exe898a5f9ca8S0x38fe55853f30S0x172aed079200S0x172aed07a220
tick,0x1a37298d4,1132291,0,0x0,4,0x0,0x4324a97f605
code-creation,LazyCompile,13,1132875,0x107527e40,1740,nextTick node:internal/process/task_queues:104:18,0x1910fc7fbbc8,*
code-source-info,0x107527ex30d75b9a120S0xe898a5c5c80S0xe898a5c59c8S0x1910fc7fbad8S0x1910fc7f9b30S0x1910fc7f9dc0S0x1910fc7f9d20S0xe898a5c5cd0S0xe898a5c5a30S0x1910fc7f9bd0S0xe898a5c5a98
tick,0x1014169a0,1133583,0,0x0,0,0x311ed227f391,0x311ed227ef4d,0x311ed227edb0,0x107526658,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1136625,0,0x0,8
tick,0x1a372c99c,1137708,0,0x0,8
tick,0x1014960f4,1140166,0,0x0,0,0xb249f5cd691,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1141041,0,0x0,8
tick,0x1a372c99c,1142666,0,0x0,8
tick,0x1a372c99c,1144208,0,0x0,8
tick,0x1a372c99c,1150125,0,0x0,8
code-creation,LazyCompile,13,1151250,0x1075285e0,392,shift node:internal/fixed_queue:80:8,0xe898a5c5b00,*
code-source-info,0x1075285e0,28,3300,3510,C0O3300C52O3331C84O3335C148O3354C160O3428C164O3472C168O3477C172O3428C188O3457C196O3506C232O3400C240O3300,,
tick,0x100f29910,1151416,1,0x100cad7d0,5,0x0,0x2d4de601668b,0x1075226b8,0x107526658,0x2d4de6015afa,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1152500,0,0x0,8
tick,0x1a372c99c,1160666,0,0x0,8
tick,0x1a372c99c,1164958,0,0x0,8
tick,0x1a372c99c,1165333,0,0x0,8
tick,0x1a372c99c,1176958,0,0x0,8
tick,0x1a372c99c,1181250,0,0x0,8
code-creation,LazyCompile,13,1189791,0x1075287e0,1344,emit node:events:343:44,0x1910fc7f2c30,*
code-source-info,0x1075287e0,13,9744,12016,C0O9744C200O9784C228O9821C336O9784C348O9832C360O9864C364O11100C384O11111C396O11507C404O11159C432O11223C496O11377C520O11430C580O11507C608O11537C644O11580C708O11624C760O11628C816O11890C840O11589C848O11562C864O12014C912O11945C916O11155C924O9885C928O10021C932O10052C940O10151C944O9744C1028O11562,,
tick,0x1a372c99c,1190500,0,0x0,8
tick,0x10158e298,1191416,0,0x0,4
tick,0x1013adacc,1192458,0,0x0,0,0x2d4de6015650
tick,0x1a372c99c,1196125,0,0x0,8
tick,0x1a37298d4,1196375,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1198500,0x107528e00,3676,processTicksAndRejections node:internal/process/task_queues:68:35,0x1910fc7fbb78,*
code-source-info,0x107528ex1910fc7f9e80S0x1910fc7f9d20S0xe898a5c5c80S0xe898a5c59c8S0x1910fc7fbad8S0x1910fc7fe520S0xe898a5c5d20S0xe898a5c5b00S0x1910fc7f9fc0S0x1910fc7f9f70S0x1910fc7fa118S0x1910fc7fa168S0x1910fc7f9d70S0x38fe558621b0S0x38fe55862200S0x38fe55861568S0x38fe55848d78
tick,0x1a372c99c,1200541,0,0x0,8
tick,0x1a372c99c,1210791,0,0x0,8
tick,0x1a372c99c,1211500,0,0x0,8
tick,0x101496278,1212541,0,0x0,0,0x2d4de601622b,0x1075265a8,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x10149807c,1213833,0,0x0,0,0x324f23cbf3bc,0x311ed22675a3,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1215375,0,0x0,8
tick,0x1a372c99c,1216458,0,0x0,8
tick,0x1014a136c,1217666,0,0x0,0,0x311ed227f0ce,0x311ed227ef46,0x311ed227edb0,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1218916,0,0x0,8
tick,0x1a372c99c,1220083,0,0x0,8
tick,0x1a372c99c,1221166,0,0x0,8
tick,0x1a372c99c,1222208,0,0x0,8
tick,0x1a372c99c,1223916,0,0x0,8
tick,0x1a372c99c,1228458,0,0x0,8
tick,0x1a3733940,1229541,1,0x100d21788,6,0x0,0x324f23cbf360,0xb249f5cd0bc,0xb249f5cce42,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x100ea7e20,1230791,0,0x0,0
tick,0x1a372c99c,1231916,0,0x0,8
tick,0x1a372c99c,1232958,0,0x0,8
tick,0x1a372c99c,1237500,0,0x0,8
tick,0x101496018,1237750,0,0x0,0,0x311ed227e6c6,0x107522ee4,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x100cad994,1239000,1,0x100cad7d0,6,0x0,0x2d4de601668b,0x1075226b8,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1244125,0,0x0,8
tick,0x1a372953c,1244958,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1260000,0,0x0,8
tick,0x1a372c99c,1262541,0,0x0,8
tick,0x1a372c99c,1267833,0,0x0,8
tick,0x1a372c99c,1270833,0,0x0,8
tick,0x1a372c99c,1275708,0,0x0,8
tick,0x1a372c99c,1276041,0,0x0,8
tick,0x1a372c99c,1282375,0,0x0,8
tick,0x1014960f4,1283541,0,0x0,0,0xb249f5cdea5,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1284875,0,0x0,8
tick,0x1a372c99c,1286458,0,0x0,8
code-creation,LazyCompile,10,1286500,0x37743592f2de,140,processTimers node:internal/timers:485:25,0x38fe55875548,~
code-source-info,0x37743592f2de,62,14285,14737,C0O14297C10O14297C15O14339C23O14350C31O14371C33O14405C35O14428C42O14445C47O14445C52O14428C54O14470C61O14477C66O14512C75O14505C83O14528C91O14544C100O14550C108O14564C110O14563C112O14575C113O14590C117O14621C120O14621C125O14656C127O14688C130O14688C135O14416C138O14724C139O14733,,
code-creation,LazyCompile,10,1286541,0x37743592f49e,14,peek node:internal/priority_queue:45:7,0x38fe558766e8,~
code-source-info,0x37743592f49e,63,1052,1087,C0O1061C2O1073C4O1072C10O1079C13O1083,,
code-creation,LazyCompile,10,1286625,0x37743592f756,599,listOnTimeout node:internal/timers:505:25,0x38fe558755b8,~
code-source-info,0x37743592f
code-creation,LazyCompile,10,1286708,0x37743592fbb6,19,peek node:internal/linkedlist:9:14,0x38fe5586b058,~
code-source-info,0x37743592fbb6,61,131,210,C0O151C7O161C12O171C13O183C14O198C18O208,,
code-creation,LazyCompile,10,1286791,0x377435930186,695,tickInterval /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:97:25,0x324f23cafd00,~
code-source-info,0x
code-creation,LazyCompile,10,1286916,0x377435930756,160,percolateDown node:internal/priority_queue:49:16,0x38fe55876738,~
code-source-info,0x377435930756,63,1104,1759,C0O1132C2O1137C4O1136C8O1172C10O1177C12O1176C16O1209C18O1214C20O1213C24O1239C26O1244C28O1243C32O1269C34O1273C38O1300C40O1296C46O1300C51O1334C53O1338C56O1342C60O1353C62O1368C69O1395C72O1390C78O1405C82O1378C89O1419C94O1432C96O1449C100O1474C102O1478C106O1502C113O1523C118O1537C120O1550C124O1589C129O1620C131O1630C135O1645C140O1285C143O1673C145O1683C149O1695C153O1732C159O1758,,
tick,0x1a372c99c,1287375,0,0x0,8
tick,0x1a372c99c,1288500,0,0x0,8
tick,0x1a372c99c,1289625,0,0x0,8
tick,0x1a372c99c,1290791,0,0x0,8
tick,0x1a372c99c,1293708,0,0x0,8
tick,0x1a372c99c,1298208,0,0x0,8
tick,0x1a372c99c,1299125,0,0x0,8
tick,0x1a372c99c,1300500,0,0x0,8
tick,0x1a372c99c,1301833,0,0x0,8
tick,0x1a372c99c,1303000,0,0x0,8
tick,0x1a372c99c,1308333,0,0x0,8
tick,0x100f2e454,1309375,0,0x0,0,0x0,0xb249f5cd0a8,0xb249f5cce42,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1316541,0,0x0,8
tick,0x1a372c99c,1316916,0,0x0,8
tick,0x1a372c99c,1330333,0,0x0,8
tick,0x1a372c99c,1341916,0,0x0,8
tick,0x1a372c99c,1341916,0,0x0,8
tick,0x10149dfc0,1341958,0,0x0,0,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1341958,0,0x0,8
tick,0x1a372c99c,1341958,0,0x0,8
tick,0x1a372c99c,1345041,0,0x0,8
tick,0x1a372c99c,1376916,0,0x0,8
tick,0x1a372c99c,1377916,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x1a372c99c,1377958,0,0x0,8
tick,0x107526ff8,1377958,0,0x0,0,0xb249f5e6ac6,0x2500b47c1fe1,0x107529434
tick,0x1a37285c0,1377958,0,0x0,1
tick,0x1a37285c0,1377958,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
tick,0x1a37285c0,1378000,0,0x0,1
scavenge,begin,0,502182,1643426346861
tick,0x1a37285c0,1395916,0,0x0,1
tick,0x1a37298d4,1395958,0,0x0,1
scavenge,end,0,502610,1643426346879
tick,0x1a37298d4,1396375,0,0x0,1
tick,0x101496db4,1397625,0,0x0,0,0x311ed2267595,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1414916,0,0x0,8
tick,0x1a372c99c,1415208,0,0x0,8
tick,0x1a372c99c,1440583,0,0x0,8
tick,0x101496278,1450958,0,0x0,0,0xb249f5d5886,0x107528f7c
tick,0x1a372c99c,1450958,0,0x0,8
tick,0x1a372c99c,1450958,0,0x0,8
tick,0x1a372c99c,1450958,0,0x0,8
tick,0x1a372c99c,1450958,0,0x0,8
tick,0x1a372c99c,1450958,0,0x0,8
tick,0x1a372c99c,1451000,0,0x0,8
tick,0x1a372c99c,1451000,0,0x0,8
tick,0x1a372c99c,1451250,0,0x0,8
tick,0x1a372c99c,1452291,0,0x0,8
tick,0x1a372c99c,1453583,0,0x0,8
tick,0x1a372c99c,1455958,0,0x0,8
tick,0x1a372c99c,1456000,0,0x0,8
tick,0x1a372c99c,1462666,0,0x0,8
tick,0x1a372c99c,1469083,0,0x0,8
tick,0x1a372c99c,1469291,0,0x0,8
tick,0x1a372c99c,1470333,0,0x0,8
tick,0x1a372c99c,1491458,0,0x0,8
tick,0x1a372c99c,1491541,0,0x0,8
tick,0x1a372c99c,1492666,0,0x0,8
tick,0x1a372c99c,1493750,0,0x0,8
tick,0x1a372c99c,1494833,0,0x0,8
tick,0x1a372c99c,1499500,0,0x0,8
tick,0x1a372c99c,1499875,0,0x0,8
tick,0x1a372c99c,1500958,0,0x0,8
tick,0x1a372c99c,1502125,0,0x0,8
tick,0x1a372c99c,1504083,0,0x0,8
tick,0x1a372c99c,1504625,0,0x0,8
tick,0x1a372c99c,1505833,0,0x0,8
tick,0x1a372c99c,1506833,0,0x0,8
tick,0x1a372c99c,1507875,0,0x0,8
tick,0x1a372c99c,1510875,0,0x0,8
tick,0x1a372c99c,1516791,0,0x0,8
tick,0x1a372c99c,1523250,0,0x0,8
tick,0x1a372c99c,1523625,0,0x0,8
tick,0x1a372c99c,1524625,0,0x0,8
tick,0x1a372c99c,1546458,0,0x0,8
tick,0x1a372c99c,1547291,0,0x0,8
tick,0x1a372c99c,1548416,0,0x0,8
tick,0x1a372c99c,1549666,0,0x0,8
code-creation,LazyCompile,13,1550458,0x107529d80,344,FastBuffer node:internal/buffer:958:14,0x30d75bb1848,*
code-source-info,0x107529d80,19,26364,26453,C0O26364C60O26407C116O26452C160O26364C216O26407,,
tick,0x1a372c99c,1551291,0,0x0,8
tick,0x1a372c99c,1551875,0,0x0,8
tick,0x1a372c99c,1553333,0,0x0,8
tick,0x1a372c99c,1555166,0,0x0,8
tick,0x1a372c99c,1555583,0,0x0,8
tick,0x1a372c99c,1557000,0,0x0,8
tick,0x1a372c99c,1564291,0,0x0,8
tick,0x10149d7f0,1564333,0,0x0,0,0x311ed227ea34,0x10752303c,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1566000,0,0x0,8
tick,0x1a372c99c,1566958,0,0x0,8
tick,0x1a372c99c,1568083,0,0x0,8
tick,0x1a372c99c,1569375,0,0x0,8
scavenge,begin,0,515179,1643426347053
scavenge,end,0,515391,1643426347054
tick,0x1a3728788,1570541,1,0x100cad7d0,6,0x0,0x2d4de601668b,0x1075218b0,0x2d4de601622b,0x1075265a8,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1571875,0,0x0,8
tick,0x1a372c99c,1573166,0,0x0,8
tick,0x1a372c99c,1574458,0,0x0,8
tick,0x1a372c99c,1575583,0,0x0,8
tick,0x1a372c99c,1576750,0,0x0,8
tick,0x1a372c99c,1583916,0,0x0,8
tick,0x1a37298d4,1584083,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1584125,0x107529f80,288,peek /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:28:8,0x324f23ca7378,*
code-source-info,0x107529f80,364,868,962,C0O868C52O886C84O902C100O909C108O961C144O949C152O952C156O868,,
tick,0x1a372c99c,1589791,0,0x0,8
tick,0x1a372c99c,1591750,0,0x0,8
code-creation,LazyCompile,13,1595083,0x10752a120,1180,hrtime node:internal/process/per_thread:67:18,0x3a1583d05cd0,*
code-source-info,0x10752a120,23,1551,2070,C0O1551C60O1572C108O1587C124O4653I0C156O4750I0C188O1663C200O1670C212O1693C216O1775C248O1803C264O1814C276O1846C292O1856C340O1850C348O1779C352O1793C356O1779C368O1793C372O1808C376O1911C392O1929C404O1940C408O1959C444O1903C508O1935C516O1967C524O1973C572O4686I0C632O1985C700O2008C732O2036C748O2012C752O2026C756O2012C768O2026C776O2055C800O2066C808O1551C856O4653I0,F0O1619,S0x30d75b99f28
tick,0x1a372c99c,1595458,0,0x0,8
tick,0x1a372c99c,1596500,0,0x0,8
tick,0x1a372c99c,1600708,0,0x0,8
tick,0x1030cdc9c,1600708,0,0x0,8
tick,0x1a372c99c,1624041,0,0x0,8
tick,0x1013ada80,1624083,0,0x0,0
tick,0x100e96d84,1625375,0,0x0,4,0x0,0x311ed227f0ce,0x311ed227ef46,0x311ed227edb0,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
code-creation,LazyCompile,13,1625875,0x10752a680,364,adjustOffset node:buffer:1098:22,0x30d75ba6d90,*
code-source-info,0x10752a680,18,32445,32858,C0O32445C52O32625C108O32657C128O32697C132O32779C156O32823C164O32856C216O32809C224O32718C228O32679C236O32445,,
tick,0x1a372c99c,1626666,0,0x0,8
tick,0x1a372c99c,1628125,0,0x0,8
tick,0x1a372c99c,1630625,0,0x0,8
tick,0x101496130,1631625,0,0x0,0,0xb249f5e6ab7,0x2500b47c1fe1,0x107529434
tick,0x1a372c99c,1632916,0,0x0,8
tick,0x1a372c99c,1633958,0,0x0,8
tick,0x1a372c99c,1635000,0,0x0,8
tick,0x1a372c99c,1636041,0,0x0,8
tick,0x1a372c99c,1637125,0,0x0,8
tick,0x1a372c99c,1638166,0,0x0,8
tick,0x1a372c99c,1640583,0,0x0,8
tick,0x1a372c99c,1646416,0,0x0,8
tick,0x1a372c99c,1647750,0,0x0,8
tick,0x1a372c99c,1660708,0,0x0,8
tick,0x101487eec,1661083,0,0x0,0,0x101470ff8,0x311ed227e6f3,0x107522ee4,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1662416,0,0x0,8
tick,0x1a372c99c,1666958,0,0x0,8
tick,0x1a372c99c,1689875,0,0x0,8
tick,0x1a372c99c,1691125,0,0x0,8
tick,0x1a372c99c,1692458,0,0x0,8
tick,0x1a372953c,1693666,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1696958,0,0x0,8
tick,0x1a372c99c,1697458,0,0x0,8
tick,0x1a372c99c,1698666,0,0x0,8
tick,0x1013fe120,1699833,0,0x0,0,0x107523eb4,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0xb249f5cce12,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1701125,0,0x0,8
code-creation,LazyCompile,13,1702208,0x10752a880,452,_unrefTimer node:net:402:52,0x172aed078c80,*
code-source-info,0x10752a880,119,10820,10930,C0O10820C72O10848C80O10884C172O10864C176O10827C192O10903C196O10929C232O10820C280O10884C316O10827,,
tick,0x1a372c99c,1702333,0,0x0,8
tick,0x1a372c99c,1703666,0,0x0,8
tick,0x1a372c99c,1711375,0,0x0,8
tick,0x101497f30,1712125,0,0x0,0,0x311ed227ef2e,0x311ed227edb0,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1723208,0,0x0,8
tick,0x1a372c99c,1723375,0,0x0,8
tick,0x1a372c99c,1724666,0,0x0,8
tick,0x1a3726538,1725833,0,0x0,8
tick,0x1a372c99c,1739041,0,0x0,8
tick,0x1a372c99c,1739791,0,0x0,8
tick,0x1a372c99c,1740958,0,0x0,8
tick,0x1a372c99c,1742250,0,0x0,8
tick,0x1a372c99c,1744708,0,0x0,8
tick,0x1a372c99c,1745875,0,0x0,8
tick,0x1a372c99c,1746875,0,0x0,8
tick,0x1a372c99c,1748125,0,0x0,8
tick,0x10143401c,1749333,0,0x0,0,0x311ed2267590,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1750583,0,0x0,8
tick,0x1a3726538,1751875,0,0x0,8
tick,0x1a372c99c,1760333,0,0x0,8
tick,0x1a372c99c,1760458,0,0x0,8
tick,0x1a372c99c,1765000,0,0x0,8
tick,0x1a372c99c,1774625,0,0x0,8
tick,0x1a372c99c,1775375,0,0x0,8
tick,0x1a372c99c,1777625,0,0x0,8
tick,0x1a372c99c,1777750,0,0x0,8
tick,0x1a372c99c,1789500,0,0x0,8
tick,0x1a372c99c,1789958,0,0x0,8
scavenge,begin,0,531454,1643426347274
scavenge,end,0,531614,1643426347274
tick,0x100f13898,1791041,0,0x0,1
tick,0x1a372c99c,1792625,0,0x0,8
tick,0x1a372c99c,1793416,0,0x0,8
tick,0x1a372c99c,1795041,0,0x0,8
tick,0x100dfa018,1795833,0,0x0,5
tick,0x1a372c99c,1797125,0,0x0,8
tick,0x1a372c99c,1798250,0,0x0,8
code-creation,LazyCompile,13,1798833,0x10752aae0,708,getTime /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/time.js:3:35,0x395d7b335f90,*
code-source-info,0x10752aae0,334,48,133,C0O48C60O65C80O73C120O1572I0C168O2008I0C200O2036I0C216O2012I0C220O2026I0C224O2012I0C236O2026I0C240O2055I0C256O96C280O121C300O107C316O114C320O96C324O131C452O48,F0O73F1O1619I0,S0x3a1583d05cd0S0x30d75b99f28
tick,0x100effa50,1799416,0,0x0,6
tick,0x1a372c99c,1800583,0,0x0,8
tick,0x1a372c99c,1801791,0,0x0,8
tick,0x1a372c99c,1803625,0,0x0,8
tick,0x1a372c99c,1810375,0,0x0,8
tick,0x1a372c99c,1811666,0,0x0,8
tick,0x1a372c99c,1819166,0,0x0,8
tick,0x1a372c99c,1824666,0,0x0,8
tick,0x1a372c99c,1825250,0,0x0,8
tick,0x1a372c99c,1827291,0,0x0,8
tick,0x1a372953c,1827625,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0xb249f5cd415,0xb249f5cce5b,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1828958,0,0x0,8
tick,0x1a372c99c,1840250,0,0x0,8
tick,0x1013e2ee0,1840333,0,0x0,0,0xb249f5e6ac6,0x2500b47c1fe1,0x107529434
tick,0x1a372c99c,1841666,0,0x0,8
tick,0x1a372c99c,1843291,0,0x0,8
tick,0x1a372c99c,1844166,0,0x0,8
tick,0x1a372c99c,1845916,0,0x0,8
tick,0x1a372c99c,1846541,0,0x0,8
tick,0x1a372c99c,1847583,0,0x0,8
tick,0x1a372c99c,1848625,0,0x0,8
tick,0x1a372c99c,1849708,0,0x0,8
tick,0x1a372c99c,1850916,0,0x0,8
tick,0x101496154,1852208,0,0x0,0,0x311ed227edb6,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1859958,0,0x0,8
tick,0x1013dcee4,1860875,0,0x0,0,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0xb249f5cce12,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1864791,0,0x0,8
tick,0x1a372c99c,1870875,0,0x0,8
tick,0x1a372c99c,1873291,0,0x0,8
tick,0x1a372c99c,1875958,0,0x0,8
tick,0x1a372c99c,1877750,0,0x0,8
tick,0x1a372c99c,1880000,0,0x0,8
tick,0x1a372c99c,1887708,0,0x0,8
tick,0x101094034,1888041,1,0x100cad7d0,6,0x0,0x2d4de601668b,0x1075218b0,0x2d4de601622b,0x1075265a8,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1889250,0,0x0,8
tick,0x1a372c99c,1890625,0,0x0,8
tick,0x1a372c99c,1892958,0,0x0,8
tick,0x1a372c99c,1894000,0,0x0,8
tick,0x1a372c99c,1895041,0,0x0,8
tick,0x101595798,1896250,0,0x0,4,0x0,0x1075289d0,0x311ed22673a3,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1900041,0,0x0,8
tick,0x1a3575280,1900083,0,0x0,5
tick,0x1a37758d0,1901375,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1901666,0x10752ae60,2596,onResponse /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:218:25,0x324f23cb6b88,*
code-source-info,0x10752aex36998917bf98S0x1910fc7f2c30S0xe757747a9b8
tick,0x1a3726538,1902666,0,0x0,8
tick,0x1a372c99c,1912875,0,0x0,8
tick,0x1a372c99c,1913416,0,0x0,8
tick,0x1a372c99c,1916333,0,0x0,8
tick,0x1a372c99c,1923000,0,0x0,8
tick,0x100f14be4,1923125,0,0x0,5
tick,0x1a372c99c,1928708,0,0x0,8
tick,0x1a372c99c,1930416,0,0x0,8
tick,0x100f495ac,1930750,1,0x100cad7d0,5,0x0,0x2d4de601668b,0x1075226b8,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1939625,0,0x0,8
tick,0x1a372c99c,1940583,0,0x0,8
tick,0x1a372c99c,1941666,0,0x0,8
tick,0x1a372c99c,1943208,0,0x0,8
code-creation,LazyCompile,13,1943958,0x10752b9c0,1876,writeGeneric node:internal/stream_base_commons:151:22,0x6a337a35018,*
code-source-info,0x10752b9c0,83,3680,3864,C0O3680C60O3743C92O2837I2C140O2868I2C300O2895I2C308O2926I2C340O2947I2C416O2965I2C444O2988I2C480O1227I1C628O1828I1C632O1753I1C636O1628I1C640O1562I1C644O1477I1C648O1297I1C712O1346I1C752O1387I1C756O3941I0C772O3924I0C804O3989I0C820O3970I0C880O4022I0C896O4076I0C900O4097I0C968O4117I0C1004O4152I0C1036O3862C1084O3680C1132O2868I2C1184O4097I0,F0O3813F1O3773F2O3723,S0x6a337a35088S0x6a337a34eb8S0x6a337a34f58
tick,0x101501538,1944125,0,0x0,4,0x0,0x311ed227f4eb,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1946083,0,0x0,8
code-creation,LazyCompile,13,1946125,0x10752c1e0,504,HTTPParser.userCall /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:171:42,0x395d7b337bb0,*
code-source-info,0x10752c1e0,335,4372,4499,C0O4372C144O4395C176O4416C200O4424C256O4497C292O4372,,
tick,0x1013adb2c,1946625,0,0x0,0,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1947791,0,0x0,8
tick,0x1a372c99c,1948833,0,0x0,8
tick,0x101649a3c,1950083,0,0x0,4,0x0,0x311ed227f509,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,1952000,0,0x0,8
tick,0x1a37298d4,1952583,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1952958,0x10752c460,3392,HTTPParser /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:6:20,0x395d7b337270,*
code-source-info,0x10752c460,335,108,301,C0O108C56O134C100O165C140O12563I3C144O12627I3C148O215C160O387I1C164O165C184O278C216O12563I4C220O12627I4C224O456I1C348O484I1C388O477I1C560O497I1C628O507I1C752O554I1C772O568I1C876O586I1C1004O609I1C1120O636I1C1204O660I1C1284O717I1C1372O743I1C1452O768I1C1672O300C1720O108C1796O768I1,F0O126F1O278F0O379I1F2O13279I0F2O13279I2,S0x395d7b33b530S0x395d7b337310S0x395d7b33b4e0
tick,0x1a372c99c,1953875,0,0x0,8
scavenge,begin,0,551298,1643426347437
scavenge,end,0,551498,1643426347437
tick,0x1a372c99c,1963791,0,0x0,8
tick,0x1010a4a04,1963875,0,0x0,5
tick,0x1a372c99c,1967208,0,0x0,8
tick,0x1a372c99c,1972333,0,0x0,8
tick,0x1a372c99c,1972666,0,0x0,8
tick,0x1a372c99c,1976583,0,0x0,8
tick,0x1a372c99c,1979625,0,0x0,8
tick,0x1a372c99c,1981125,0,0x0,8
tick,0x1a372c99c,1988625,0,0x0,8
tick,0x1a372c99c,1989041,0,0x0,8
tick,0x1015a6f3c,1990291,0,0x0,4,0x0,0x311ed227edb0,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x101688714,1991625,0,0x0,4,0x0,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x1075289d0,0xbb714f4ec51,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a37298d4,1992916,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1994041,0x10752d280,2300,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:82:37,0x324f23cb76e8,*
code-source-info,0x10752dx1910fc7f2c30S0x324f23ca7418S0x30d75ba6de0S0x30d75bb1848S0x30d75ba6d90S0x324f23ca7378
tick,0x1a3726538,1994208,0,0x0,8
tick,0x1a372c99c,1996958,0,0x0,8
tick,0x1a37298d4,1997958,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,1999000,0x10752dc80,4800,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:87:48,0x324f23cb77b8,*
code-source-info,0x10752dcx2779b46fce40S0x2779b46fd078S0x38fe55861e60S0x1910fc7f2c30S0xbb714f51ca8S0x324f23ca7508S0x324f23ca7328
tick,0x10752a880,1999125,0,0x0,0
code-creation,LazyCompile,13,1999958,0x10752f120,384,slice node:buffer:629:12,0x30d75ba5d78,*
code-source-info,0x10752f120,18,18092,18139,C0O18092C60O18117C172O18139C216O18092C264O18117,,
tick,0x1a372c99c,2000416,0,0x0,8
tick,0x1a372c99c,2003125,0,0x0,8
tick,0x100f4658c,2003875,0,0x0,5
tick,0x1a372c99c,2005208,0,0x0,8
tick,0x1a372c99c,2014583,0,0x0,8
tick,0x1a372c99c,2014875,0,0x0,8
tick,0x1a372c99c,2020791,0,0x0,8
tick,0x1a372c99c,2022541,0,0x0,8
tick,0x1a372c99c,2023125,0,0x0,8
tick,0x1a372c99c,2025291,0,0x0,8
tick,0x1a372c99c,2029375,0,0x0,8
tick,0x1a372c99c,2030541,0,0x0,8
tick,0x1a372c99c,2032500,0,0x0,8
tick,0x1a372c99c,2038333,0,0x0,8
tick,0x1a372c99c,2039250,0,0x0,8
tick,0x1a372c99c,2040916,0,0x0,8
tick,0x1a372c99c,2041625,0,0x0,8
tick,0x1a372c99c,2044708,0,0x0,8
tick,0x1a372c99c,2045333,0,0x0,8
tick,0x101490f2c,2046625,0,0x0,0,0xbb714f4e975,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2047708,0,0x0,8
tick,0x1a372c99c,2050041,0,0x0,8
tick,0x1a3726538,2050208,0,0x0,8
tick,0x1a372c99c,2051458,0,0x0,8
tick,0x1a372c99c,2055791,0,0x0,8
tick,0x1a372c99c,2064375,0,0x0,8
tick,0x1a372c99c,2064541,0,0x0,8
tick,0x1a372c99c,2069375,0,0x0,8
tick,0x1a372c99c,2069500,0,0x0,8
tick,0x1a372c99c,2073791,0,0x0,8
tick,0x1a372c99c,2076583,0,0x0,8
tick,0x1a372c99c,2077958,0,0x0,8
tick,0x1a372c99c,2079583,0,0x0,8
tick,0x1a372c99c,2079625,0,0x0,8
tick,0x1a372c99c,2084541,0,0x0,8
tick,0x1a372c99c,2084750,0,0x0,8
tick,0x1a372c99c,2085791,0,0x0,8
tick,0x1a372c99c,2087916,0,0x0,8
tick,0x1a372c99c,2088250,0,0x0,8
tick,0x1a372c99c,2091750,0,0x0,8
tick,0x1a372c99c,2092250,0,0x0,8
tick,0x1a372c99c,2093375,0,0x0,8
tick,0x1a372c99c,2094416,0,0x0,8
tick,0x1a372c99c,2095458,0,0x0,8
tick,0x1a372c99c,2097750,0,0x0,8
tick,0x1010a316c,2097791,0,0x0,0,0x0,0x2d4de601561d
tick,0x1a37298d4,2098916,0,0x0,4,0x0,0x2d4de601561d
tick,0x1a37298d4,2100125,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,2100416,0x10752f340,4088,readableAddChunk node:internal/streams/readable:236:26,0x38fe55853d20,*
code-source-info,0x10752fxe898a5f9ca8S0x38fe55853d70S0x38fe558540f8S0x1910fc7f2c30S0x1910fc7f32d8
tick,0x1a372c99c,2115791,0,0x0,8
tick,0x1a372c99c,2123958,0,0x0,8
tick,0x1a372c99c,2131166,0,0x0,8
tick,0x1a372c99c,2131541,0,0x0,8
tick,0x1a372c99c,2137291,0,0x0,8
tick,0x1a372c99c,2142416,0,0x0,8
tick,0x1a372c99c,2146208,0,0x0,8
tick,0x1a3726538,2146250,0,0x0,8
tick,0x1a372c99c,2147750,0,0x0,8
tick,0x1a372c99c,2153083,0,0x0,8
tick,0x100e1c630,2153666,0,0x0,5
tick,0x1a372c99c,2154791,0,0x0,8
tick,0x1a372c99c,2157333,0,0x0,8
tick,0x1a3726538,2157500,0,0x0,8
tick,0x1a372c99c,2162208,0,0x0,8
tick,0x101490d40,2162666,0,0x0,0,0x1075265a8,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2163916,0,0x0,8
tick,0x1a372c99c,2165083,0,0x0,8
tick,0x1a372c99c,2167208,0,0x0,8
tick,0x1a372c99c,2167583,0,0x0,8
tick,0x1a3726538,2168875,0,0x0,8
tick,0x1a372c99c,2171458,0,0x0,8
scavenge,begin,0,577088,1643426347655
scavenge,end,0,577325,1643426347655
tick,0x1a372c99c,2172500,0,0x0,8
tick,0x1a372c99c,2173583,0,0x0,8
tick,0x1a372c99c,2181666,0,0x0,8
tick,0x1a372953c,2182083,0,0x0,0,0x0,0x10752bc88,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2187583,0,0x0,8
tick,0x1a372c99c,2188416,0,0x0,8
tick,0x1a372c99c,2195083,0,0x0,8
tick,0x1a372c99c,2199166,0,0x0,8
tick,0x1a372c99c,2202333,0,0x0,8
tick,0x10752258c,2203333,0,0x0,0,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2205791,0,0x0,8
tick,0x101490c80,2205833,0,0x0,0,0x10752e834,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372953c,2206875,0,0x0,0,0x0,0x10752bc88,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2209458,0,0x0,8
tick,0x100f30a38,2210541,0,0x0,0,0x0,0x107524a8c,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0x10752e51c,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2213958,0,0x0,8
tick,0x1a37298d4,2214083,0,0x0,4,0x0,0x2d4de601561d
tick,0x1a37298d4,2215333,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,2215833,0x107530480,2048,onwrite node:internal/streams/writable:425:17,0x38fe55862160,*
code-source-info,0xx1910fc7fbbc8S0x30d75b9a120S0xe898a5c5c80S0xe898a5c59c8S0x1910fc7fbad8S0x1910fc7f9b30S0x1910fc7f9dc0S0x1910fc7f9d20S0xe898a5c5cd0S0xe898a5c5a30S0x1910fc7f9bd0S0xe898a5c5a98
tick,0x1a372c99c,2218541,0,0x0,8
tick,0x1014a3cc0,2219208,0,0x0,0,0x324f23cb8d42,0x1075244e4,0x324f23cb8030,0x324f23cbd160,0x311ed2268005,0x10752e51c,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2220375,0,0x0,8
tick,0x1a372c99c,2228958,0,0x0,8
tick,0x1013e5464,2228958,0,0x0,0,0x107526584,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2234541,0,0x0,8
tick,0x1a372c99c,2234916,0,0x0,8
tick,0x1a372c99c,2236791,0,0x0,8
tick,0x1a372c99c,2242791,0,0x0,8
tick,0x1a372c99c,2246333,0,0x0,8
tick,0x1a372c99c,2249250,0,0x0,8
tick,0x1a372c99c,2249666,0,0x0,8
tick,0x1a372c99c,2250875,0,0x0,8
tick,0x1a372c99c,2253000,0,0x0,8
tick,0x1a372c99c,2253291,0,0x0,8
tick,0x1a372c99c,2257041,0,0x0,8
tick,0x10158d708,2258250,0,0x0,4,0x0,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2261583,0,0x0,8
tick,0x1a37298d4,2261875,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,2262416,0x107530d40,3676,HTTPParser.RESPONSE_LINE /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:249:47,0x395d7b337ea8,*
code-source-info,0x107530dx395d7b337cf8S0x30d75ba6968
tick,0x1a37298d4,2263166,0,0x0,4,0x0,0x2d4de601561d
code-creation,LazyCompile,13,2264250,0x107531d00,4384,writeOrBuffer node:internal/streams/writable:365:23,0x38fe55862070,*
code-source-info,0x107531dx172aed079a98S0x172aed079958S0x172aed07a220S0x6a337a35018S0x172aed078c80S0x6a337a35088S0x6a337a34eb8S0x6a337a34f58
tick,0x1a362a3f4,2264333,0,0x0,4,0x0,0x2d4de601561d
tick,0x1a372c99c,2266000,0,0x0,8
code-creation,LazyCompile,13,2266083,0x107532f40,440,Socket.read node:net:624:33,0x172aed079420,*
code-source-info,0x107532f40,119,16315,16493,C0O16315C52O16331C144O16350C148O16477C204O16491C248O16315C296O16331,,
tick,0x1a357c9c8,2266875,0,0x0,5
tick,0x10752c7f8,2268125,0,0x0,0,0x311ed227f509,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2277125,0,0x0,8
tick,0x1a372c99c,2277666,0,0x0,8
tick,0x1a372c99c,2283291,0,0x0,8
tick,0x1a372c99c,2283916,0,0x0,8
tick,0x1a372c99c,2286208,0,0x0,8
tick,0x1a372c99c,2286458,0,0x0,8
tick,0x1a372c99c,2292750,0,0x0,8
tick,0x1a372c99c,2296166,0,0x0,8
tick,0x1a372953c,2296333,0,0x0,0,0x0,0x1075324ec,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2299208,0,0x0,8
tick,0x1a372c99c,2300166,0,0x0,8
tick,0x1a372c99c,2304041,0,0x0,8
tick,0x1a372953c,2304958,0,0x0,0,0x0,0x1075324ec,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
tick,0x1a372c99c,2306916,0,0x0,8
tick,0x1a372c99c,2307583,0,0x0,8
tick,0x1a372c99c,2308625,0,0x0,8
tick,0x1a372c99c,2311166,0,0x0,8
tick,0x1a372c99c,2312083,0,0x0,8
tick,0x1a37298d4,2313291,0,0x0,4,0x0,0x311ed227ec35,0x311ed227edb6,0x107526658,0x2d4de6015afa,0x10752fa88,0xbb714f4e57c,0x2d4de60156d8
code-creation,LazyCompile,13,2314000,0x107533180,1300,onStreamRead node:internal/stream_base_commons:171:22,0x6a337a350d8,*
code-source-info,0x107533180,83,4192,6380,C0O4192C60O4239C92O4304C128O4334C144O4346C176O4351C212O4414C264O10848I3C272O10884I3C344O10864I3C348O10827I3C364O10903I3C368O4445C380O5221C384O3294I4C388O3434I4C408O4460C452O3452I4C456O4528C460O4543C504O4580C508O4859C540O26407I2C576O4965C600O7650I1C656O4986C724O5022C728O5203C776O4393C780O4192C828O10884I3C864O10827I3C932O4460C936O3434I4C948O4460C956O3434I4C968O4543C1004O4986,F0O4414F1O4965F2O4899F3O4428F4O4460,S0x172aed079178S0x38fe55853c10S0x30d75bb1848S0x172aed078c80S0x38fe55848d78
tick,0x1a372c99c,2316083,0,0x0,8
tick,0x1a372953c,2317125,0,0x0,0,0x0,0x1075324ec,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107526658,0x2d4de6015afa,0x10752fa88,0x107533410
tick,0x1a372c99c,2318458,0,0x0,8
tick,0x1a372c99c,2326750,0,0x0,8
tick,0x1a372c99c,2326916,0,0x0,8
tick,0x1a372c99c,2332458,0,0x0,8
tick,0x1a372c99c,2332791,0,0x0,8
tick,0x1a372c99c,2335125,0,0x0,8
tick,0x1a372c99c,2335416,0,0x0,8
tick,0x1a372c99c,2343083,0,0x0,8
tick,0x1a372c99c,2353000,0,0x0,8
code-creation,LazyCompile,13,2353625,0x107533740,2640, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:138:24,0x1a43afb9cbe8,*
code-source-info,0xx395d7b337910S0x324f23ca73c8S0x324f23ca7378
tick,0x1a372c99c,2364708,0,0x0,8
tick,0x1a372c99c,2365500,0,0x0,8
tick,0x1a372c99c,2366750,0,0x0,8
tick,0x1a372c99c,2368666,0,0x0,8
tick,0x1a372c99c,2369208,0,0x0,8
tick,0x1a372c99c,2371416,0,0x0,8
tick,0x107532374,2371500,0,0x0,0,0xb249f5cd74a,0x10752e7e8,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2372666,0,0x0,8
tick,0x1a372c99c,2375791,0,0x0,8
scavenge,begin,0,603201,1643426347859
scavenge,end,0,603378,1643426347859
tick,0x10111d6b8,2376333,0,0x0,0,0x107533e80,0x10752fa88,0x107533410
tick,0x1a372c99c,2380000,0,0x0,8
tick,0x1a372c99c,2380125,0,0x0,8
tick,0x1a372c99c,2381166,0,0x0,8
tick,0x1a3726538,2382458,0,0x0,8
tick,0x1a372c99c,2392291,0,0x0,8
tick,0x1a37298d4,2392416,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,2393708,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,2393791,0x1075342c0,7272,HTTPParser.nextRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:180:45,0x395d7b337c68,*
code-source-info,0x1075342cx395d7b337bb0S0x311ed227e808S0x395d7b337270S0x395d7b33b530S0x324f23cb77b8S0x395d7b337310S0x2779b46fce40S0x2779b46fd078S0x38fe55861e60S0xbb714f51ca8S0x324f23ca7508
tick,0x1a372c99c,2398208,0,0x0,8
tick,0x1a372c99c,2398958,0,0x0,8
tick,0x1a372c99c,2400916,0,0x0,8
tick,0x1a372c99c,2401208,0,0x0,8
tick,0x1a372c99c,2406916,0,0x0,8
tick,0x1a372c99c,2410083,0,0x0,8
tick,0x1a372c99c,2413166,0,0x0,8
tick,0x1a372c99c,2413833,0,0x0,8
tick,0x1a372c99c,2415041,0,0x0,8
tick,0x1a372c99c,2417791,0,0x0,8
tick,0x1a372c99c,2418708,0,0x0,8
tick,0x1a372c99c,2420500,0,0x0,8
tick,0x1a372c99c,2421041,0,0x0,8
tick,0x1a372953c,2422041,0,0x0,0,0x0,0x1075324ec,0xb249f5cd74a,0x107534a9c,0x311ed227ede1,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2424750,0,0x0,8
tick,0x1a372c99c,2426000,0,0x0,8
tick,0x1a372c99c,2429541,0,0x0,8
tick,0x1a3726538,2429583,0,0x0,8
tick,0x1a372c99c,2430708,0,0x0,8
tick,0x1a372c99c,2431916,0,0x0,8
tick,0x1a372c99c,2440916,0,0x0,8
tick,0x1a372c99c,2446250,0,0x0,8
tick,0x1a372c99c,2448708,0,0x0,8
tick,0x1a372c99c,2449333,0,0x0,8
tick,0x1a372c99c,2455375,0,0x0,8
tick,0x1a372c99c,2455916,0,0x0,8
tick,0x1a372c99c,2459291,0,0x0,8
tick,0x100ca96e8,2459500,0,0x0,0,0x0,0x1075324ec,0xb249f5cd74a,0x107534a9c,0x311ed227ede1,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2462750,0,0x0,8
tick,0x1a372c99c,2463458,0,0x0,8
tick,0x100dfa14c,2464708,1,0x100caed78,6,0x0,0x172aed062817,0x10752d5bc,0x311ed227edb0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2468125,0,0x0,8
tick,0x1a37298d4,2468291,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,2469583,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,2470250,0x107536100,2668,HTTPParser.BODY_SIZED /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:431:44,0x395d7b338320,*
code-source-info,0xx395d7b337bb0S0x311ed227e808S0x324f23cb76e8S0x1910fc7f2c30S0x324f23ca7418S0x30d75ba6de0S0x30d75bb1848S0x30d75ba6d90S0x324f23ca7378
tick,0x1a372c99c,2470958,0,0x0,8
tick,0x1a372c99c,2472166,0,0x0,8
tick,0x1a372c99c,2475166,0,0x0,8
tick,0x100e15638,2475666,0,0x0,5
tick,0x1a372c99c,2477000,0,0x0,8
tick,0x1a372c99c,2479458,0,0x0,8
tick,0x1a372c99c,2480583,0,0x0,8
tick,0x1a37298d4,2481833,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,2482333,0x107536c80,1424,_write node:internal/streams/writable:283:16,0x38fe55861e10,*
code-source-info,0x107536c80,55,9383,10712,C0O9383C60O9438C116O9457C160O9535C184O9567C256O9605C264O9742C312O9795C332O9877C404O9895C424O9944C428O9958C440O9994C548O10075C620O10391C704O10411C708O10464C768O10487C772O10632C784O10647C792O10660C848O10710C892O10145C896O9827C904O9644C908O9383C964O9567C1016O9877C1060O10075C1152O10391C1188O10464,,
tick,0x1a372c99c,2490250,0,0x0,8
tick,0x1a372c99c,2490750,0,0x0,8
tick,0x1a372c99c,2495708,0,0x0,8
tick,0x100e05900,2495708,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2498291,0,0x0,8
tick,0x1a372c99c,2504166,0,0x0,8
tick,0x1a372c99c,2504458,0,0x0,8
tick,0x1a372c99c,2507500,0,0x0,8
tick,0x1a372c99c,2510791,0,0x0,8
tick,0x1a372c99c,2511916,0,0x0,8
tick,0x1a372c99c,2515333,0,0x0,8
tick,0x1a372c99c,2515625,0,0x0,8
tick,0x1a372c99c,2518083,0,0x0,8
tick,0x10101de3c,2518125,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,2519208,0,0x0,8
tick,0x1a372c99c,2522208,0,0x0,8
tick,0x1a372c99c,2522833,0,0x0,8
tick,0x1a372c99c,2523958,0,0x0,8
tick,0x1a372c99c,2527208,0,0x0,8
tick,0x1a372c99c,2528208,0,0x0,8
tick,0x1a372c99c,2529291,0,0x0,8
tick,0x1a372c99c,2537708,0,0x0,8
tick,0x1a372c99c,2537875,0,0x0,8
tick,0x1a372c99c,2543125,0,0x0,8
tick,0x1a372c99c,2545541,0,0x0,8
tick,0x1a372c99c,2551625,0,0x0,8
tick,0x1a372c99c,2551916,0,0x0,8
tick,0x1a372c99c,2554833,0,0x0,8
tick,0x1a372c99c,2557833,0,0x0,8
tick,0x1a372c99c,2558250,0,0x0,8
tick,0x1a372c99c,2559375,0,0x0,8
tick,0x1a372c99c,2561291,0,0x0,8
tick,0x1a372c99c,2561666,0,0x0,8
tick,0x1a372c99c,2564833,0,0x0,8
tick,0x1a35766e8,2565375,0,0x0,5
scavenge,begin,0,624421,1643426348049
scavenge,end,0,624641,1643426348049
tick,0x1a372c99c,2566666,0,0x0,8
tick,0x1a372c99c,2569083,0,0x0,8
tick,0x1a372c99c,2569166,0,0x0,8
tick,0x1a372c99c,2570375,0,0x0,8
tick,0x1a372c99c,2572791,0,0x0,8
tick,0x1a372c99c,2573875,0,0x0,8
tick,0x1a372c99c,2575125,0,0x0,8
tick,0x1a372c99c,2584625,0,0x0,8
tick,0x1a372c99c,2585458,0,0x0,8
tick,0x1a372c99c,2591416,0,0x0,8
tick,0x1a372c99c,2594583,0,0x0,8
tick,0x1013adb84,2594958,0,0x0,0,0x2500b47c1fd6,0x107529434
tick,0x1a372c99c,2606708,0,0x0,8
tick,0x100e1f010,2607041,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2608375,0,0x0,8
tick,0x1a372c99c,2612541,0,0x0,8
tick,0x101594b28,2613416,0,0x0,4,0x0,0x10752303c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2616291,0,0x0,8
code-creation,LazyCompile,13,2616750,0x1075372c0,1308,insertRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:18:17,0x324f23ca7328,*
code-source-info,0x1075372c0,364,713,859,C0O713C60O730C92O746C272O759C288O832C316O840C356O1572I0C460O1985I0C528O2008I0C560O2036I0C576O2012I0C580O2026I0C584O2012I0C596O2026I0C604O2055I0C628O840C664O746C744O858C792O713C888O746,F0O840F1O1619I0,S0x3a1583d05cd0S0x30d75b99f28
tick,0x1a37298d4,2617666,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,2618083,0x1075378a0,1560,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:77:48,0x324f23cb7618,*
code-source-info,0x1075378a0,332,2114,2204,C0O2114C64O2130C72O2135C156O9744I1C224O9821I1C228O9832I1C244O11100I1C272O11111I1C284O11223I1C292O11159I1C320O11223I1C384O11377I1C408O11430I1C480O11507I1C508O11537I1C544O11580I1C612O11624I1C664O11628I1C720O11890I1C744O11589I1C752O11562I1C776O11945I1C792O2161C800O2166C828O886I2C832O902I2C848O909I2C864O949I2C872O1221I0C944O1250I0C996O2203C1044O2114C1124O11562I1C1168O1221I0,F0O2184F1O2135F2O1210I0,S0x324f23ca7468S0x1910fc7f2c30S0x324f23ca7378
tick,0x1a372c99c,2621500,0,0x0,8
tick,0x1a372c99c,2621583,0,0x0,8
tick,0x1a372c99c,2622750,0,0x0,8
tick,0x1a372c99c,2626333,0,0x0,8
tick,0x1013e2f5c,2626416,0,0x0,0,0x107533b78,0x10752fa88,0x107533410
tick,0x1012f51ec,2627708,0,0x0,0,0x0,0x2500b47c1ffa,0x107529434
tick,0x1a372c99c,2630458,0,0x0,8
tick,0x1a372c99c,2631500,0,0x0,8
tick,0x1a372c99c,2632750,0,0x0,8
tick,0x1a372c99c,2641625,0,0x0,8
code-creation,LazyCompile,13,2641750,0x107537fa0,704,isPrototype /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1354:21,0xbb714f737a8,*
code-source-info,0x107537fa0,361,36474,36629,C0O36474C56O36617C68O36497C148O36512C204O36539C232O36574C344O36617C368O36627C432O36474C480O36497C532O36574,,
tick,0x1a372c99c,2647333,0,0x0,8
tick,0x1013a28f4,2647375,0,0x0,0,0x10752fa88,0x107533410
tick,0x1a372c99c,2651625,0,0x0,8
tick,0x1a372c99c,2657833,0,0x0,8
tick,0x1a372c99c,2660916,0,0x0,8
tick,0x1a372c99c,2662333,0,0x0,8
tick,0x1a372c99c,2662625,0,0x0,8
tick,0x1a372c99c,2663750,0,0x0,8
tick,0x1a372c99c,2665875,0,0x0,8
tick,0x1a372c99c,2666250,0,0x0,8
tick,0x1a372c99c,2669708,0,0x0,8
tick,0x1013a6d08,2669875,0,0x0,0,0x107533410
tick,0x1a372c99c,2671083,0,0x0,8
tick,0x1a372c99c,2674291,0,0x0,8
tick,0x1a372c99c,2674666,0,0x0,8
tick,0x1a372c99c,2675833,0,0x0,8
tick,0x1a372c99c,2678583,0,0x0,8
tick,0x1a372c99c,2679458,0,0x0,8
tick,0x107530644,2680708,0,0x0,0,0x107532628,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2688333,0,0x0,8
tick,0x1a372c99c,2689333,0,0x0,8
tick,0x1a372c99c,2694125,0,0x0,8
tick,0x1a372c99c,2694250,0,0x0,8
tick,0x1a372c99c,2698041,0,0x0,8
tick,0x1a372c99c,2704750,0,0x0,8
tick,0x1a372c99c,2707791,0,0x0,8
tick,0x1a372c99c,2709125,0,0x0,8
tick,0x1a372c99c,2709458,0,0x0,8
tick,0x1030d36d8,2710666,0,0x0,8
tick,0x1a372c99c,2712666,0,0x0,8
tick,0x1a372c99c,2713125,0,0x0,8
tick,0x1a372c99c,2716291,0,0x0,8
tick,0x1a372c99c,2717500,0,0x0,8
tick,0x1a372c99c,2720458,0,0x0,8
tick,0x1a372c99c,2721125,0,0x0,8
tick,0x1a372c99c,2724666,0,0x0,8
tick,0x1a372c99c,2724833,0,0x0,8
tick,0x1a372c99c,2725916,0,0x0,8
tick,0x1a372c99c,2726958,0,0x0,8
tick,0x1a372c99c,2734625,0,0x0,8
tick,0x1a372c99c,2740208,0,0x0,8
tick,0x1a372c99c,2743958,0,0x0,8
tick,0x1a372c99c,2744458,0,0x0,8
tick,0x1a372c99c,2750000,0,0x0,8
tick,0x1a372c99c,2750625,0,0x0,8
tick,0x1a372c99c,2753208,0,0x0,8
tick,0x1a372c99c,2754875,0,0x0,8
tick,0x101490c80,2755541,0,0x0,0,0x107523088,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2758458,0,0x0,8
scavenge,begin,0,640813,1643426348243
tick,0x1a3575480,2759833,0,0x0,1
scavenge,end,0,641060,1643426348243
tick,0x1a372c99c,2763333,0,0x0,8
tick,0x1a372c99c,2763916,0,0x0,8
tick,0x1a372c99c,2764916,0,0x0,8
tick,0x1a372c99c,2768000,0,0x0,8
tick,0x1a372c99c,2768583,0,0x0,8
tick,0x1a372c99c,2773000,0,0x0,8
tick,0x1a372c99c,2773416,0,0x0,8
tick,0x1a372c99c,2774458,0,0x0,8
tick,0x1a372c99c,2775666,0,0x0,8
tick,0x1a372c99c,2784958,0,0x0,8
tick,0x1a372c99c,2785916,0,0x0,8
tick,0x1a372c99c,2791500,0,0x0,8
tick,0x1a372c99c,2794083,0,0x0,8
code-creation,LazyCompile,13,2794250,0x107538300,676,ListCache /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:460:19,0xbb714f72880,*
code-source-info,0x107538300,361,13115,13307,C0O13115C52O13160C124O13198C200O13454I0C224O13468I0C260O13306C308O13178C312O13115C360O13160,F0O13198,S0xbb714f728d0
tick,0x1a372c99c,2795791,0,0x0,8
tick,0x1a372c99c,2798750,0,0x0,8
tick,0x1a372c99c,2803000,0,0x0,8
tick,0x1a372c99c,2804916,0,0x0,8
tick,0x1a372c99c,2806416,0,0x0,8
tick,0x1a372c99c,2806666,0,0x0,8
tick,0x1a372c99c,2807708,0,0x0,8
tick,0x1a372c99c,2810750,0,0x0,8
tick,0x1a372c99c,2811250,0,0x0,8
tick,0x1a372c99c,2814583,0,0x0,8
tick,0x1a372c99c,2815208,0,0x0,8
tick,0x107525f10,2816416,0,0x0,0,0x107530ee0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,2819291,0,0x0,8
tick,0x1a372c99c,2820166,0,0x0,8
tick,0x1a372c99c,2823333,0,0x0,8
tick,0x100f0bf5c,2823916,0,0x0,8
tick,0x1a372c99c,2825166,0,0x0,8
tick,0x1a372c99c,2833375,0,0x0,8
tick,0x1a372c99c,2833541,0,0x0,8
tick,0x1a372c99c,2836125,0,0x0,8
tick,0x1a372c99c,2840833,0,0x0,8
tick,0x1a372c99c,2841125,0,0x0,8
tick,0x1a372c99c,2842333,0,0x0,8
tick,0x1a372c99c,2846916,0,0x0,8
tick,0x1a372c99c,2849833,0,0x0,8
tick,0x1a372c99c,2851625,0,0x0,8
tick,0x1a372c99c,2853291,0,0x0,8
tick,0x1a3726538,2854541,0,0x0,8
tick,0x1a372c99c,2856958,0,0x0,8
tick,0x1a372c99c,2857125,0,0x0,8
tick,0x1a372c99c,2860791,0,0x0,8
tick,0x1a372c99c,2861750,0,0x0,8
tick,0x1a372c99c,2865000,0,0x0,8
tick,0x1a372c99c,2865125,0,0x0,8
tick,0x1a372c99c,2866416,0,0x0,8
tick,0x1a372c99c,2869500,0,0x0,8
tick,0x1a372c99c,2870166,0,0x0,8
tick,0x1a372c99c,2871500,0,0x0,8
tick,0x1a372c99c,2879791,0,0x0,8
tick,0x1a372c99c,2883291,0,0x0,8
tick,0x1a372c99c,2883583,0,0x0,8
tick,0x1a372c99c,2888041,0,0x0,8
tick,0x1a372c99c,2889500,0,0x0,8
tick,0x1a372c99c,2889958,0,0x0,8
tick,0x1a372c99c,2891291,0,0x0,8
tick,0x1a372c99c,2895750,0,0x0,8
tick,0x1a372c99c,2897000,0,0x0,8
tick,0x1a372c99c,2897291,0,0x0,8
tick,0x1a372c99c,2898791,0,0x0,8
tick,0x1a372c99c,2900541,0,0x0,8
tick,0x100cf82f8,2900791,0,0x0,8
tick,0x1a3726538,2902083,0,0x0,8
tick,0x1a372c99c,2904250,0,0x0,8
tick,0x1a372c99c,2904625,0,0x0,8
tick,0x1a372c99c,2908041,0,0x0,8
tick,0x1a372c99c,2908083,0,0x0,8
tick,0x1a372c99c,2909208,0,0x0,8
tick,0x1a372c99c,2911958,0,0x0,8
tick,0x1a372c99c,2912750,0,0x0,8
tick,0x1a372c99c,2916208,0,0x0,8
tick,0x1a372953c,2916583,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,2917708,0,0x0,8
tick,0x1a372c99c,2927583,0,0x0,8
tick,0x1a372c99c,2930916,0,0x0,8
tick,0x10752f354,2930958,0,0x0,0
tick,0x1a372c99c,2936291,0,0x0,8
tick,0x1a372c99c,2936500,0,0x0,8
tick,0x1a372c99c,2938333,0,0x0,8
tick,0x1a372c99c,2943958,0,0x0,8
tick,0x1a372c99c,2949583,0,0x0,8
tick,0x1a372c99c,2951833,0,0x0,8
tick,0x1a372c99c,2953666,0,0x0,8
tick,0x1a372c99c,2954375,0,0x0,8
tick,0x1011ea49c,2955541,0,0x0,4,0x0,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
scavenge,begin,0,652811,1643426348439
scavenge,end,0,653039,1643426348439
tick,0x1a372c99c,2960333,0,0x0,8
tick,0x1a37298d4,2960666,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,2960750,0x107538640,924,RequestIterator.nextRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/requestIterator.js:44:50,0xbb714f51830,*
code-source-info,0x107538640,339,1144,1659,C0O1144C60O1165C120O1175C136O1182C144O1316C148O1307C176O1076I0C180O37431I1C236O1063I0C280O1388C284O1433C352O1418C388O1512C396O1524C484O1553C504O1568C524O1657C556O1608C560O1144C616O1524,F0O1344F1O1065I0,S0xbb714f517a0S0xbb714f73848
tick,0x1a372c99c,2961958,0,0x0,8
tick,0x1a372c99c,2965541,0,0x0,8
tick,0x1a372c99c,2966416,0,0x0,8
tick,0x1a372c99c,2967291,0,0x0,8
tick,0x1a372c99c,2972541,0,0x0,8
tick,0x1a372c99c,2973416,0,0x0,8
tick,0x1a372c99c,2977083,0,0x0,8
tick,0x1a372c99c,2977250,0,0x0,8
tick,0x1a372c99c,2978333,0,0x0,8
tick,0x1a372c99c,2979416,0,0x0,8
tick,0x1a372c99c,2991041,0,0x0,8
tick,0x1a372c99c,2991458,0,0x0,8
tick,0x1a372c99c,2996666,0,0x0,8
tick,0x1a372c99c,2999791,0,0x0,8
tick,0x1a372c99c,3000166,0,0x0,8
tick,0x1a372c99c,3002750,0,0x0,8
tick,0x1a372c99c,3007333,0,0x0,8
tick,0x1a372c99c,3009208,0,0x0,8
tick,0x1a372c99c,3012625,0,0x0,8
tick,0x1a372c99c,3014541,0,0x0,8
tick,0x1a372c99c,3015083,0,0x0,8
tick,0x1a372c99c,3016333,0,0x0,8
tick,0x1a372c99c,3018875,0,0x0,8
tick,0x1a3726538,3018916,0,0x0,8
tick,0x1a372c99c,3022500,0,0x0,8
tick,0x1a372c99c,3022625,0,0x0,8
tick,0x1a372c99c,3023708,0,0x0,8
tick,0x1a372c99c,3026416,0,0x0,8
tick,0x1a372c99c,3027458,0,0x0,8
tick,0x1a372c99c,3032458,0,0x0,8
tick,0x1011b3328,3032500,0,0x0,0,0x0,0x107531388,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,3033833,0,0x0,8
tick,0x1a372c99c,3034875,0,0x0,8
tick,0x1a372c99c,3047750,0,0x0,8
tick,0x1a372c99c,3047875,0,0x0,8
tick,0x1a372c99c,3055750,0,0x0,8
tick,0x1a372c99c,3058250,0,0x0,8
tick,0x1a372c99c,3063083,0,0x0,8
tick,0x1a372c99c,3066625,0,0x0,8
tick,0x1a372c99c,3068666,0,0x0,8
tick,0x100e058e4,3068833,1,0x100caed78,6,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3072583,0,0x0,8
tick,0x1a372c99c,3073958,0,0x0,8
tick,0x1a372c99c,3075083,0,0x0,8
tick,0x1a372c99c,3076541,0,0x0,8
tick,0x1a372c99c,3077666,0,0x0,8
tick,0x1a372c99c,3084625,0,0x0,8
tick,0x1a372c99c,3085000,0,0x0,8
tick,0x1a372c99c,3086125,0,0x0,8
tick,0x1a372c99c,3087291,0,0x0,8
tick,0x1a372c99c,3091916,0,0x0,8
tick,0x1a372c99c,3092541,0,0x0,8
tick,0x1a372c99c,3093375,0,0x0,8
tick,0x1a3575240,3094541,0,0x0,5
tick,0x1a372c99c,3101333,0,0x0,8
tick,0x1a372c99c,3102000,0,0x0,8
tick,0x1a372c99c,3105958,0,0x0,8
tick,0x1a372c99c,3106833,0,0x0,8
tick,0x1a372c99c,3108000,0,0x0,8
tick,0x1a372c99c,3119208,0,0x0,8
tick,0x100e1c63c,3119250,0,0x0,5
tick,0x1a372c99c,3124916,0,0x0,8
tick,0x1a372c99c,3126500,0,0x0,8
tick,0x1a372c99c,3126791,0,0x0,8
tick,0x1a372c99c,3131291,0,0x0,8
tick,0x1a372c99c,3132458,0,0x0,8
tick,0x1a372c99c,3135458,0,0x0,8
tick,0x1a372c99c,3137166,0,0x0,8
tick,0x1a372c99c,3137916,0,0x0,8
tick,0x1a372c99c,3138958,0,0x0,8
tick,0x1a372c99c,3141708,0,0x0,8
tick,0x1a372c99c,3142250,0,0x0,8
tick,0x1a372c99c,3144458,0,0x0,8
tick,0x1a372c99c,3144500,0,0x0,8
tick,0x101416060,3145750,0,0x0,0,0x107522940,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3148625,0,0x0,8
tick,0x1a372c99c,3149416,0,0x0,8
tick,0x1a372c99c,3154166,0,0x0,8
tick,0x1a372c99c,3154333,0,0x0,8
tick,0x1a372c99c,3155625,0,0x0,8
tick,0x1a372c99c,3165583,0,0x0,8
tick,0x1a372953c,3165625,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3171166,0,0x0,8
tick,0x1a372c99c,3173250,0,0x0,8
tick,0x1a372c99c,3173416,0,0x0,8
tick,0x1a372c99c,3178875,0,0x0,8
tick,0x1a372c99c,3180875,0,0x0,8
tick,0x1a372953c,3180916,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3183666,0,0x0,8
scavenge,begin,0,664582,1643426348668
scavenge,end,0,664758,1643426348668
tick,0x1a37298d4,3184750,0,0x0,1
tick,0x1a372c99c,3187375,0,0x0,8
tick,0x1a372c99c,3188375,0,0x0,8
tick,0x1a372c99c,3190125,0,0x0,8
tick,0x1a372c99c,3191083,0,0x0,8
tick,0x1a372c99c,3191916,0,0x0,8
tick,0x1a372c99c,3194875,0,0x0,8
tick,0x1a372953c,3195625,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3200458,0,0x0,8
tick,0x10101de14,3200458,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,3201708,0,0x0,8
tick,0x1a372c99c,3203041,0,0x0,8
tick,0x1a372c99c,3212333,0,0x0,8
tick,0x100e156f0,3213000,0,0x0,8
tick,0x1a372c99c,3218916,0,0x0,8
tick,0x1a372c99c,3220583,0,0x0,8
tick,0x1a372c99c,3222416,0,0x0,8
tick,0x1a372c99c,3222458,0,0x0,8
tick,0x1a372c99c,3226416,0,0x0,8
tick,0x1a372c99c,3228458,0,0x0,8
tick,0x1a372c99c,3228583,0,0x0,8
tick,0x1a372c99c,3231083,0,0x0,8
tick,0x1a372c99c,3231250,0,0x0,8
tick,0x1a372c99c,3232250,0,0x0,8
tick,0x1a372c99c,3234708,0,0x0,8
tick,0x1a372c99c,3235875,0,0x0,8
tick,0x1a372c99c,3237541,0,0x0,8
tick,0x1a372c99c,3238250,0,0x0,8
tick,0x1a372c99c,3239583,0,0x0,8
tick,0x1a372c99c,3241500,0,0x0,8
tick,0x1a372c99c,3242125,0,0x0,8
tick,0x1a372c99c,3246791,0,0x0,8
tick,0x1a372953c,3246875,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3248166,0,0x0,8
tick,0x1a372c99c,3259291,0,0x0,8
tick,0x107525ec0,3259375,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,3267458,0,0x0,8
tick,0x1a372c99c,3270708,0,0x0,8
tick,0x1a372c99c,3270791,0,0x0,8
tick,0x1a372c99c,3272666,0,0x0,8
tick,0x1a372c99c,3274625,0,0x0,8
tick,0x1a372c99c,3278458,0,0x0,8
tick,0x1a372c99c,3279041,0,0x0,8
tick,0x1a372c99c,3280708,0,0x0,8
tick,0x1a372c99c,3283833,0,0x0,8
tick,0x1a372c99c,3284000,0,0x0,8
tick,0x1a372c99c,3285166,0,0x0,8
tick,0x1a372c99c,3287750,0,0x0,8
tick,0x1a372c99c,3288958,0,0x0,8
tick,0x1a372c99c,3290750,0,0x0,8
tick,0x1011e4d7c,3291416,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3292750,0,0x0,8
tick,0x1a372c99c,3294583,0,0x0,8
tick,0x1a372c99c,3294833,0,0x0,8
tick,0x1a372c99c,3295875,0,0x0,8
tick,0x1a372c99c,3300666,0,0x0,8
tick,0x1a372c99c,3300791,0,0x0,8
tick,0x1a372c99c,3301875,0,0x0,8
tick,0x1a372c99c,3302958,0,0x0,8
tick,0x1a372c99c,3311625,0,0x0,8
tick,0x1a372c99c,3311750,0,0x0,8
tick,0x1a372c99c,3314958,0,0x0,8
tick,0x1a372c99c,3318541,0,0x0,8
tick,0x1a372c99c,3321916,0,0x0,8
tick,0x1a372c99c,3324833,0,0x0,8
tick,0x1a372c99c,3325458,0,0x0,8
tick,0x1a372c99c,3327166,0,0x0,8
tick,0x1a372c99c,3330166,0,0x0,8
tick,0x1a372c99c,3330291,0,0x0,8
tick,0x1a372c99c,3331333,0,0x0,8
tick,0x1a372c99c,3333958,0,0x0,8
tick,0x1a372c99c,3334833,0,0x0,8
tick,0x1a372c99c,3336708,0,0x0,8
tick,0x1a372c99c,3337250,0,0x0,8
tick,0x1a372c99c,3338333,0,0x0,8
tick,0x1a372c99c,3340708,0,0x0,8
tick,0x1a372c99c,3341583,0,0x0,8
tick,0x1a372c99c,3346125,0,0x0,8
tick,0x1a372c99c,3346500,0,0x0,8
tick,0x1a372c99c,3347500,0,0x0,8
tick,0x1a372c99c,3357291,0,0x0,8
tick,0x1a372c99c,3357458,0,0x0,8
tick,0x1a372c99c,3362708,0,0x0,8
tick,0x1a372c99c,3364166,0,0x0,8
tick,0x1a372c99c,3369041,0,0x0,8
tick,0x1a372c99c,3370208,0,0x0,8
tick,0x1a372c99c,3372250,0,0x0,8
tick,0x1a372c99c,3372375,0,0x0,8
scavenge,begin,0,674227,1643426348856
scavenge,end,0,674403,1643426348856
tick,0x1a372c99c,3375000,0,0x0,8
tick,0x1a372c99c,3375833,0,0x0,8
tick,0x1a372c99c,3378791,0,0x0,8
tick,0x1013e3b54,3379458,0,0x0,0,0x107533b78,0x10752fa88,0x107533410
tick,0x1a372c99c,3381625,0,0x0,8
tick,0x1a372c99c,3382666,0,0x0,8
tick,0x1a372c99c,3385458,0,0x0,8
tick,0x1a372c99c,3385958,0,0x0,8
tick,0x1a372c99c,3387291,0,0x0,8
tick,0x1a372c99c,3391458,0,0x0,8
tick,0x10102391c,3392291,0,0x0,0
tick,0x1a372c99c,3393375,0,0x0,8
tick,0x1a372c99c,3402333,0,0x0,8
tick,0x1a372c99c,3407750,0,0x0,8
tick,0x1a372c99c,3409083,0,0x0,8
tick,0x1a372c99c,3409458,0,0x0,8
tick,0x1a372c99c,3414458,0,0x0,8
tick,0x1a372c99c,3415375,0,0x0,8
tick,0x1a372c99c,3417541,0,0x0,8
tick,0x1a372c99c,3421375,0,0x0,8
tick,0x1a372c99c,3422208,0,0x0,8
tick,0x1a372c99c,3425666,0,0x0,8
tick,0x100d5fbc0,3426000,0,0x0,8
tick,0x1a372c99c,3428708,0,0x0,8
tick,0x1a372c99c,3429791,0,0x0,8
tick,0x1a372c99c,3431041,0,0x0,8
tick,0x1a372c99c,3433666,0,0x0,8
tick,0x1a372c99c,3434958,0,0x0,8
tick,0x1a372c99c,3439666,0,0x0,8
tick,0x1a3576530,3439958,0,0x0,5
tick,0x1a372c99c,3441250,0,0x0,8
tick,0x1a372c99c,3460208,0,0x0,8
tick,0x101416934,3460750,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3466208,0,0x0,8
tick,0x1a372c99c,3469791,0,0x0,8
tick,0x1a372c99c,3471666,0,0x0,8
tick,0x1a372c99c,3471791,0,0x0,8
tick,0x1a372c99c,3476458,0,0x0,8
tick,0x1a372c99c,3476625,0,0x0,8
tick,0x1a372c99c,3482000,0,0x0,8
tick,0x1a372c99c,3482791,0,0x0,8
tick,0x1a372c99c,3484041,0,0x0,8
tick,0x1a372c99c,3486208,0,0x0,8
tick,0x1a372c99c,3486625,0,0x0,8
tick,0x1a372c99c,3489458,0,0x0,8
tick,0x1a372953c,3490333,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3491416,0,0x0,8
tick,0x1a372c99c,3494541,0,0x0,8
tick,0x1a372c99c,3494958,0,0x0,8
tick,0x1a372c99c,3496125,0,0x0,8
tick,0x1a372c99c,3500291,0,0x0,8
tick,0x1a372c99c,3501083,0,0x0,8
tick,0x1a372c99c,3502208,0,0x0,8
tick,0x1a372c99c,3514666,0,0x0,8
tick,0x1a372c99c,3522666,0,0x0,8
tick,0x1a372c99c,3525125,0,0x0,8
tick,0x1a372c99c,3527041,0,0x0,8
tick,0x107530de4,3527083,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,3533166,0,0x0,8
tick,0x1a372c99c,3533625,0,0x0,8
tick,0x1a372c99c,3538875,0,0x0,8
tick,0x1a372c99c,3539500,0,0x0,8
tick,0x1a372c99c,3540583,0,0x0,8
tick,0x1a372c99c,3543166,0,0x0,8
tick,0x1a372c99c,3544208,0,0x0,8
tick,0x1a372c99c,3546416,0,0x0,8
tick,0x1a372c99c,3546791,0,0x0,8
tick,0x1a372953c,3547958,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3551791,0,0x0,8
tick,0x1a372c99c,3552750,0,0x0,8
tick,0x1a372c99c,3557375,0,0x0,8
tick,0x1a372c99c,3557625,0,0x0,8
tick,0x1a372c99c,3558750,0,0x0,8
tick,0x1a372c99c,3570000,0,0x0,8
tick,0x100cad7d0,3570000,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,3576291,0,0x0,8
tick,0x1a372c99c,3576583,0,0x0,8
tick,0x1a372c99c,3577916,0,0x0,8
tick,0x1a372c99c,3582166,0,0x0,8
scavenge,begin,0,684705,1643426349065
scavenge,end,0,684880,1643426349066
tick,0x1a372c99c,3582958,0,0x0,8
tick,0x1a372c99c,3587166,0,0x0,8
tick,0x1a372c99c,3587916,0,0x0,8
tick,0x100e1f018,3589125,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3591000,0,0x0,8
tick,0x1a37298d4,3591500,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,3592000,0x107538aa0,880,maybeReadMore_ node:internal/streams/readable:609:24,0x38fe55854148,*
code-source-info,0x107538aa0,48,19614,21383,C0O19614C56O21049C152O21067C216O21092C220O21107C224O21099C228O21273C232O21099C244O21141C248O21210C280O21252C308O16331I1C368O16350I1C372O16477I1C428O21283C452O21373C460O21382C508O19614C556O21049C592O21067C628O16331I1C664O21210,F0O21210F1O21252,S0xe898a5f9ca8S0x172aed079420
tick,0x1a372c99c,3593875,0,0x0,8
tick,0x1a3726538,3594041,0,0x0,8
tick,0x1a372c99c,3595208,0,0x0,8
tick,0x1a372c99c,3598041,0,0x0,8
tick,0x1a372c99c,3598791,0,0x0,8
code-creation,LazyCompile,13,3599958,0x107538ea0,332,processPromiseRejections node:internal/process/promises:203:34,0x1910fc7fef10,*
code-source-info,0x107538ea0,26,6333,8378,C0O6333C52O6401C72O6408C84O6453C88O6678C104O6698C124O6724C128O8376C176O6493C180O6333,,
tick,0x1a37782cc,3600000,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,3603583,0,0x0,8
tick,0x1a372c99c,3603708,0,0x0,8
tick,0x1a372c99c,3604833,0,0x0,8
tick,0x1a372c99c,3608250,0,0x0,8
tick,0x1010f61a8,3608541,0,0x0,0,0x107533e80,0x10752fa88,0x107533410
tick,0x1a372c99c,3618125,0,0x0,8
tick,0x1a372c99c,3621291,0,0x0,8
tick,0x1a372c99c,3623083,0,0x0,8
tick,0x1a372c99c,3627416,0,0x0,8
tick,0x1a3726538,3627416,0,0x0,8
tick,0x1a372c99c,3632250,0,0x0,8
tick,0x1a372c99c,3632500,0,0x0,8
tick,0x1a372c99c,3633750,0,0x0,8
tick,0x1a372c99c,3635916,0,0x0,8
tick,0x1a3720f20,3636208,0,0x0,5
tick,0x1a372c99c,3639041,0,0x0,8
tick,0x1a372c99c,3639958,0,0x0,8
code-creation,LazyCompile,13,3640166,0x107539080,268, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:174:19,0x311ed227e808,*
code-source-info,0x107539080,335,4440,4496,C0O4440C60O4452C68O4468C100O4492C148O4440,,
tick,0x1a372c99c,3643208,0,0x0,8
tick,0x1a372c99c,3643500,0,0x0,8
tick,0x1a372c99c,3644625,0,0x0,8
tick,0x1a372c99c,3648500,0,0x0,8
tick,0x1a372c99c,3649333,0,0x0,8
tick,0x1a372c99c,3653416,0,0x0,8
tick,0x1a372c99c,3664416,0,0x0,8
tick,0x1a372c99c,3665750,0,0x0,8
tick,0x1a372c99c,3666166,0,0x0,8
tick,0x1a372c99c,3667625,0,0x0,8
tick,0x1a372c99c,3672041,0,0x0,8
tick,0x1a372c99c,3672541,0,0x0,8
tick,0x1a372c99c,3676916,0,0x0,8
tick,0x1a372c99c,3677416,0,0x0,8
tick,0x1a372c99c,3678541,0,0x0,8
tick,0x1a372c99c,3680458,0,0x0,8
tick,0x1a372c99c,3680833,0,0x0,8
tick,0x1a372c99c,3683583,0,0x0,8
tick,0x1a372c99c,3684541,0,0x0,8
tick,0x1a372c99c,3687625,0,0x0,8
tick,0x1a3726538,3688125,0,0x0,8
tick,0x1a372c99c,3692958,0,0x0,8
tick,0x1a372c99c,3693125,0,0x0,8
tick,0x1a372c99c,3694125,0,0x0,8
tick,0x1a372c99c,3697625,0,0x0,8
tick,0x1a372c99c,3701333,0,0x0,8
tick,0x1a372c99c,3709333,0,0x0,8
tick,0x1a372c99c,3709583,0,0x0,8
tick,0x1a3726538,3710750,0,0x0,8
tick,0x1a372c99c,3712458,0,0x0,8
tick,0x1a372c99c,3716916,0,0x0,8
tick,0x1a372c99c,3717125,0,0x0,8
tick,0x1a372c99c,3721833,0,0x0,8
tick,0x1a372c99c,3722125,0,0x0,8
tick,0x1a372c99c,3723291,0,0x0,8
tick,0x1a372c99c,3725666,0,0x0,8
tick,0x1a372c99c,3726791,0,0x0,8
tick,0x1a372c99c,3728833,0,0x0,8
tick,0x1a372c99c,3729083,0,0x0,8
tick,0x1a372c99c,3730125,0,0x0,8
tick,0x1a372c99c,3733333,0,0x0,8
tick,0x1a372c99c,3734083,0,0x0,8
tick,0x1a372c99c,3740000,0,0x0,8
tick,0x1a372c99c,3741000,0,0x0,8
tick,0x1a372c99c,3745625,0,0x0,8
tick,0x1a372c99c,3749916,0,0x0,8
tick,0x1a372c99c,3755125,0,0x0,8
tick,0x1a372c99c,3760791,0,0x0,8
tick,0x1a372c99c,3761958,0,0x0,8
scavenge,begin,0,696567,1643426349245
scavenge,end,0,696736,1643426349245
tick,0x1a372c99c,3763916,0,0x0,8
tick,0x1a372c99c,3764041,0,0x0,8
tick,0x1a372c99c,3768708,0,0x0,8
tick,0x1a372c99c,3769083,0,0x0,8
tick,0x1a372c99c,3773666,0,0x0,8
tick,0x1a372c99c,3773916,0,0x0,8
tick,0x1a372c99c,3774916,0,0x0,8
tick,0x1a372c99c,3777125,0,0x0,8
tick,0x1a372c99c,3777375,0,0x0,8
code-creation,LazyCompile,13,3778333,0x107539220,416,HTTPParser.shouldKeepAlive /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:269:49,0x395d7b337f38,*
code-source-info,0x107539220,335,7172,7508,C0O7172C52O7188C76O7193C96O7206C108O7236C120O7338C124O7256C128O7267C164O7284C180O7313C216O7414C236O7486C244O7442C248O7172,,
tick,0x1a37298d4,3778375,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,3780083,0,0x0,8
tick,0x1a372c99c,3780750,0,0x0,8
tick,0x1a372c99c,3781833,0,0x0,8
tick,0x1a372c99c,3784416,0,0x0,8
tick,0x1a372c99c,3785208,0,0x0,8
tick,0x1a372c99c,3789750,0,0x0,8
tick,0x1a372c99c,3790250,0,0x0,8
tick,0x1a372c99c,3791291,0,0x0,8
tick,0x1a372c99c,3795416,0,0x0,8
tick,0x1a372c99c,3804125,0,0x0,8
tick,0x1a372c99c,3813208,0,0x0,8
tick,0x1a372c99c,3813541,0,0x0,8
tick,0x1a372c99c,3822791,0,0x0,8
tick,0x1a372c99c,3824458,0,0x0,8
tick,0x1a372c99c,3824708,0,0x0,8
tick,0x1a372c99c,3826458,0,0x0,8
tick,0x1a372c99c,3831083,0,0x0,8
tick,0x1a372c99c,3831958,0,0x0,8
tick,0x1a372c99c,3834833,0,0x0,8
tick,0x1a372c99c,3835750,0,0x0,8
tick,0x1a372c99c,3839416,0,0x0,8
tick,0x1a372c994,3840500,0,0x0,8
tick,0x1a372c99c,3842916,0,0x0,8
tick,0x1a372c99c,3843041,0,0x0,8
tick,0x1a372c99c,3844208,0,0x0,8
tick,0x1a372c99c,3847125,0,0x0,8
tick,0x1a372c99c,3847833,0,0x0,8
tick,0x1a372c99c,3851250,0,0x0,8
tick,0x1a372c99c,3852416,0,0x0,8
tick,0x1a372c99c,3857250,0,0x0,8
tick,0x1a372c99c,3860791,0,0x0,8
tick,0x1a372c99c,3863541,0,0x0,8
tick,0x1a372c99c,3867458,0,0x0,8
tick,0x1a372c99c,3868916,0,0x0,8
tick,0x1a372c99c,3870833,0,0x0,8
tick,0x1a372c99c,3870958,0,0x0,8
tick,0x1a372c99c,3876791,0,0x0,8
tick,0x1a372c99c,3880583,0,0x0,8
tick,0x1a372c99c,3881333,0,0x0,8
tick,0x1a372c99c,3882416,0,0x0,8
tick,0x1a372c99c,3884208,0,0x0,8
tick,0x1a372c99c,3884750,0,0x0,8
tick,0x1a372c99c,3888333,0,0x0,8
tick,0x1a372c99c,3888458,0,0x0,8
tick,0x1a372c99c,3889500,0,0x0,8
tick,0x1a372c99c,3892500,0,0x0,8
tick,0x1a372c99c,3892958,0,0x0,8
tick,0x1a372c99c,3896583,0,0x0,8
tick,0x1a372c99c,3896708,0,0x0,8
tick,0x1a372c99c,3898000,0,0x0,8
tick,0x1a372c99c,3902250,0,0x0,8
tick,0x1a372c99c,3905541,0,0x0,8
tick,0x100d5f87c,3905583,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3910166,0,0x0,8
tick,0x1a372c99c,3912083,0,0x0,8
tick,0x1a372c99c,3913500,0,0x0,8
tick,0x1a372c99c,3915291,0,0x0,8
tick,0x1a372c99c,3915666,0,0x0,8
tick,0x1a372c99c,3920833,0,0x0,8
tick,0x1a372c99c,3924625,0,0x0,8
tick,0x1a372c99c,3925750,0,0x0,8
tick,0x1a372c99c,3928125,0,0x0,8
tick,0x1a372c99c,3928291,0,0x0,8
tick,0x1a372c99c,3932166,0,0x0,8
tick,0x1a3726538,3933083,0,0x0,8
tick,0x1a372c99c,3934166,0,0x0,8
tick,0x1a372c99c,3936833,0,0x0,8
tick,0x1a372c99c,3938000,0,0x0,8
tick,0x1a372c99c,3941208,0,0x0,8
tick,0x1a372c99c,3941750,0,0x0,8
tick,0x1a372c99c,3943041,0,0x0,8
tick,0x1a372c99c,3950083,0,0x0,8
scavenge,begin,0,706267,1643426349433
scavenge,end,0,706508,1643426349433
tick,0x1a372c99c,3980958,0,0x0,8
tick,0x1a372c99c,3988416,0,0x0,8
tick,0x1a372c99c,3991041,0,0x0,8
tick,0x1a372c99c,3992916,0,0x0,8
tick,0x100d67dc4,3993250,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,3995416,0,0x0,8
tick,0x1a372c99c,3995791,0,0x0,8
tick,0x1a372c99c,4002041,0,0x0,8
tick,0x1a372c99c,4002083,0,0x0,8
tick,0x1a372c99c,4006250,0,0x0,8
code-creation,LazyCompile,13,4006916,0x107539460,1084,reschedule /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:28:14,0x2779b46ff878,*
code-source-info,0x107539460,333,627,999,C0O627C60O643C144O680C148O65I0C172O73I0C216O1572I1C264O2008I1C296O2036I1C312O2012I1C316O2026I1C320O2012I1C332O2026I1C336O2055I1C352O121I0C372O107I0C388O114I0C392O96I0C420O736C480O755C516O764C528O736C532O747C536O783C544O873C608O971C612O907C616O937C628O998C676O796C696O814C700O627C748O643C804O873,F0O713F1O73I0F2O1619I1,S0x395d7b335f90S0x3a1583d05cd0S0x30d75b99f28
tick,0x1a372953c,4007125,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4008333,0,0x0,8
tick,0x1a372c99c,4010166,0,0x0,8
tick,0x1a372c99c,4010875,0,0x0,8
tick,0x1a372c99c,4013541,0,0x0,8
tick,0x1a372c99c,4014708,0,0x0,8
tick,0x1a372c99c,4020000,0,0x0,8
tick,0x1a372c99c,4020708,0,0x0,8
tick,0x1a372c99c,4025166,0,0x0,8
tick,0x1a372c99c,4025541,0,0x0,8
tick,0x1a372c99c,4026666,0,0x0,8
tick,0x1a372c99c,4030875,0,0x0,8
tick,0x1a372c99c,4043375,0,0x0,8
tick,0x1a372c99c,4046750,0,0x0,8
tick,0x1a372c99c,4046750,0,0x0,8
tick,0x1a372c99c,4049416,0,0x0,8
tick,0x1a372c99c,4051708,0,0x0,8
tick,0x1a372c99c,4051875,0,0x0,8
tick,0x1a372c99c,4057500,0,0x0,8
tick,0x1a372c99c,4058000,0,0x0,8
tick,0x1a372c99c,4063208,0,0x0,8
tick,0x1a372c99c,4064250,0,0x0,8
tick,0x1a372c99c,4065416,0,0x0,8
tick,0x1a372c99c,4067708,0,0x0,8
tick,0x1a372c99c,4067833,0,0x0,8
tick,0x1a3726538,4069041,0,0x0,8
tick,0x1a372c99c,4071791,0,0x0,8
tick,0x1a372c99c,4072750,0,0x0,8
tick,0x1a372c99c,4073750,0,0x0,8
tick,0x1a372c99c,4076125,0,0x0,8
tick,0x10144ec20,4076125,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4077458,0,0x0,8
tick,0x1a372c99c,4081583,0,0x0,8
tick,0x1a372c99c,4082416,0,0x0,8
tick,0x1a372c99c,4086625,0,0x0,8
tick,0x1a372c99c,4091083,0,0x0,8
tick,0x1a372c99c,4099458,0,0x0,8
tick,0x1a372c99c,4099791,0,0x0,8
tick,0x1a372c99c,4102791,0,0x0,8
tick,0x1a372c99c,4105541,0,0x0,8
tick,0x1a372c99c,4108333,0,0x0,8
tick,0x1a372c99c,4108625,0,0x0,8
tick,0x1a372c99c,4115000,0,0x0,8
tick,0x1a372c99c,4120958,0,0x0,8
tick,0x100c1f638,4121000,0,0x0,6
tick,0x1a372c99c,4122250,0,0x0,8
tick,0x1a372c99c,4125000,0,0x0,8
tick,0x1a372c99c,4125833,0,0x0,8
tick,0x1a372c99c,4128250,0,0x0,8
tick,0x1013e5464,4128375,0,0x0,0,0x107533b78,0x10752fa88,0x107533410
tick,0x1a372c99c,4129458,0,0x0,8
tick,0x1a372c99c,4132833,0,0x0,8
tick,0x1a372c99c,4133166,0,0x0,8
tick,0x1a372c99c,4134416,0,0x0,8
tick,0x1a372c99c,4138333,0,0x0,8
tick,0x1a372c99c,4139208,0,0x0,8
tick,0x1a372c99c,4147916,0,0x0,8
tick,0x1a372953c,4148000,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4156583,0,0x0,8
tick,0x1a372c99c,4156833,0,0x0,8
tick,0x1a372c99c,4159958,0,0x0,8
tick,0x1a372c99c,4162541,0,0x0,8
tick,0x1a372c99c,4165583,0,0x0,8
tick,0x1a372c99c,4172375,0,0x0,8
tick,0x1a372c99c,4173000,0,0x0,8
tick,0x1a372c99c,4177708,0,0x0,8
tick,0x1a372c99c,4178041,0,0x0,8
tick,0x100df9f48,4179291,0,0x0,8
tick,0x1a372c99c,4181916,0,0x0,8
tick,0x1a372c99c,4183083,0,0x0,8
tick,0x1a372c99c,4185333,0,0x0,8
tick,0x1a372c99c,4185458,0,0x0,8
tick,0x1a372c99c,4186500,0,0x0,8
tick,0x1a372c99c,4190125,0,0x0,8
tick,0x1a372c99c,4190250,0,0x0,8
tick,0x1a372c99c,4191458,0,0x0,8
tick,0x1a372c99c,4195458,0,0x0,8
tick,0x1a3726538,4196416,0,0x0,8
scavenge,begin,0,717163,1643426349680
scavenge,end,0,717334,1643426349680
tick,0x1a372c99c,4203500,0,0x0,8
tick,0x1013e3a50,4203791,0,0x0,0,0x107528960,0x107534848,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4213875,0,0x0,8
tick,0x1a372c99c,4215875,0,0x0,8
tick,0x1a372c99c,4217708,0,0x0,8
tick,0x1a372c99c,4221083,0,0x0,8
tick,0x1a372c99c,4228083,0,0x0,8
tick,0x1a372c99c,4228791,0,0x0,8
tick,0x1a372c99c,4233916,0,0x0,8
tick,0x1a372c99c,4234916,0,0x0,8
tick,0x1a372c99c,4236166,0,0x0,8
tick,0x1a372c99c,4238583,0,0x0,8
tick,0x1011e4b88,4238666,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4241541,0,0x0,8
tick,0x1a372c99c,4242333,0,0x0,8
tick,0x1a372c99c,4243416,0,0x0,8
tick,0x1a372c99c,4245708,0,0x0,8
tick,0x1a372c99c,4245875,0,0x0,8
tick,0x1a372c99c,4247041,0,0x0,8
tick,0x1a372c99c,4250833,0,0x0,8
tick,0x107528b40,4251875,0,0x0,0,0x107534848,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4254875,0,0x0,8
tick,0x1a372c99c,4261125,0,0x0,8
tick,0x1a372c99c,4264708,0,0x0,8
tick,0x1a372c99c,4266750,0,0x0,8
tick,0x1a372c99c,4268500,0,0x0,8
tick,0x1a372c99c,4270583,0,0x0,8
tick,0x1a372c99c,4275625,0,0x0,8
tick,0x1a372c99c,4280291,0,0x0,8
tick,0x1013adb34,4280333,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x107522564,4281583,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4283666,0,0x0,8
tick,0x1a372c99c,4283958,0,0x0,8
tick,0x1a372c99c,4286833,0,0x0,8
tick,0x1a372c99c,4287541,0,0x0,8
tick,0x1a372c99c,4288708,0,0x0,8
tick,0x1a372c99c,4290916,0,0x0,8
tick,0x1a372c99c,4291208,0,0x0,8
tick,0x1a372c99c,4292583,0,0x0,8
tick,0x1a372c99c,4296333,0,0x0,8
tick,0x1a372c99c,4300541,0,0x0,8
tick,0x1a372c99c,4301083,0,0x0,8
tick,0x1a372c99c,4306625,0,0x0,8
tick,0x1a372c99c,4310250,0,0x0,8
tick,0x1a372c99c,4314541,0,0x0,8
tick,0x1a372c99c,4322958,0,0x0,8
tick,0x1a372c99c,4323083,0,0x0,8
tick,0x1a372c99c,4325166,0,0x0,8
tick,0x1a372c99c,4338416,0,0x0,8
tick,0x1a372c99c,4338541,0,0x0,8
tick,0x1a372c99c,4347083,0,0x0,8
tick,0x100f2e714,4347416,0,0x0,0,0x0,0x1075322b0,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4353750,0,0x0,8
tick,0x100cad7d0,4353750,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a3726538,4355000,0,0x0,8
tick,0x1a372c99c,4357208,0,0x0,8
tick,0x101416994,4357541,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4360541,0,0x0,8
tick,0x1a372c99c,4361416,0,0x0,8
tick,0x1a372c99c,4365708,0,0x0,8
tick,0x1a372c99c,4365875,0,0x0,8
tick,0x1a372c99c,4366916,0,0x0,8
tick,0x1a372c99c,4372375,0,0x0,8
tick,0x1a372c99c,4372833,0,0x0,8
tick,0x1a372c99c,4378208,0,0x0,8
tick,0x1a372c99c,4386166,0,0x0,8
tick,0x1a372c99c,4386333,0,0x0,8
tick,0x1a372c99c,4390916,0,0x0,8
tick,0x1a372c99c,4394375,0,0x0,8
tick,0x1a372c99c,4397083,0,0x0,8
tick,0x1a372c99c,4400125,0,0x0,8
tick,0x1a372c99c,4400208,0,0x0,8
tick,0x1a372c99c,4407083,0,0x0,8
tick,0x1a372953c,4407833,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4413041,0,0x0,8
tick,0x1a372c99c,4413958,0,0x0,8
tick,0x1a372c99c,4415083,0,0x0,8
tick,0x1a372c99c,4417166,0,0x0,8
tick,0x1a372c99c,4417625,0,0x0,8
tick,0x1a372c99c,4420458,0,0x0,8
tick,0x1a372c99c,4421166,0,0x0,8
tick,0x1a372c99c,4422250,0,0x0,8
tick,0x1a372c99c,4425583,0,0x0,8
tick,0x1a372c99c,4425958,0,0x0,8
tick,0x1a372c99c,4427333,0,0x0,8
tick,0x1a372c99c,4431458,0,0x0,8
tick,0x1a372c99c,4432083,0,0x0,8
scavenge,begin,0,727768,1643426349915
scavenge,end,0,728000,1643426349916
tick,0x1a372c99c,4436375,0,0x0,8
tick,0x1a372c99c,4443125,0,0x0,8
tick,0x1a372c99c,4443250,0,0x0,8
tick,0x1a372c99c,4445166,0,0x0,8
tick,0x1a372c99c,4448333,0,0x0,8
tick,0x1a372c99c,4450083,0,0x0,8
tick,0x1a372c99c,4452291,0,0x0,8
tick,0x1a372c99c,4457208,0,0x0,8
tick,0x1a372c99c,4458083,0,0x0,8
tick,0x1a372c99c,4462125,0,0x0,8
tick,0x1a372c99c,4462958,0,0x0,8
tick,0x1a372c99c,4463958,0,0x0,8
tick,0x1a372c99c,4465458,0,0x0,8
tick,0x1a372c99c,4466458,0,0x0,8
tick,0x1a372c99c,4468708,0,0x0,8
tick,0x1a372c99c,4468958,0,0x0,8
tick,0x1a372953c,4470208,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4472625,0,0x0,8
tick,0x1a3726538,4472666,0,0x0,8
tick,0x1a372c99c,4473750,0,0x0,8
tick,0x1a372c99c,4477958,0,0x0,8
tick,0x1a372c99c,4478708,0,0x0,8
tick,0x1a372c99c,4482041,0,0x0,8
tick,0x1a372c99c,4482250,0,0x0,8
tick,0x1a372c99c,4488000,0,0x0,8
tick,0x1a372c99c,4488291,0,0x0,8
tick,0x1a372c99c,4490250,0,0x0,8
tick,0x1a372c99c,4493500,0,0x0,8
tick,0x100cada00,4493541,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,4495125,0,0x0,8
tick,0x1a372c99c,4497458,0,0x0,8
tick,0x1a372c99c,4502291,0,0x0,8
tick,0x1a372953c,4502375,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4507375,0,0x0,8
tick,0x1a372c99c,4507583,0,0x0,8
tick,0x1a372c99c,4508833,0,0x0,8
tick,0x1a372c99c,4511125,0,0x0,8
tick,0x1a372c99c,4511416,0,0x0,8
tick,0x1a372c99c,4514375,0,0x0,8
tick,0x1a372c99c,4515125,0,0x0,8
tick,0x1a372c99c,4516125,0,0x0,8
tick,0x1a372c99c,4518958,0,0x0,8
tick,0x1a372c99c,4519916,0,0x0,8
tick,0x1a372c99c,4524583,0,0x0,8
tick,0x1a372c99c,4524958,0,0x0,8
tick,0x1a372c99c,4528750,0,0x0,8
tick,0x1a372c99c,4534708,0,0x0,8
tick,0x1a372c99c,4537125,0,0x0,8
tick,0x1a372c99c,4540416,0,0x0,8
tick,0x1a372c99c,4542083,0,0x0,8
tick,0x1a372c99c,4544083,0,0x0,8
tick,0x1a372c99c,4549041,0,0x0,8
tick,0x1a372c99c,4554250,0,0x0,8
tick,0x1a372c99c,4555083,0,0x0,8
tick,0x1a372c99c,4557625,0,0x0,8
tick,0x1a372c99c,4558666,0,0x0,8
tick,0x1a372c99c,4560708,0,0x0,8
tick,0x1a372c99c,4561041,0,0x0,8
tick,0x1a372c99c,4562125,0,0x0,8
tick,0x1a372c99c,4564583,0,0x0,8
tick,0x1a372c99c,4565583,0,0x0,8
tick,0x1a372c99c,4570500,0,0x0,8
tick,0x1a372c99c,4570666,0,0x0,8
tick,0x1a372c99c,4575541,0,0x0,8
tick,0x1a372c99c,4575791,0,0x0,8
tick,0x1a372c99c,4582291,0,0x0,8
tick,0x1a372c99c,4584666,0,0x0,8
tick,0x1a372c99c,4587958,0,0x0,8
tick,0x1a372c99c,4588291,0,0x0,8
tick,0x1a372c99c,4590291,0,0x0,8
tick,0x1a372c99c,4590916,0,0x0,8
tick,0x1a372c99c,4594833,0,0x0,8
tick,0x1a372c99c,4617791,0,0x0,8
tick,0x1013b0258,4618541,0,0x0,0,0x0,0x107537454,0x107534a14,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4622125,0,0x0,8
tick,0x1a372c99c,4622291,0,0x0,8
tick,0x1a372c99c,4623333,0,0x0,8
tick,0x1a372c99c,4625708,0,0x0,8
tick,0x1a372c99c,4626791,0,0x0,8
tick,0x1a372c99c,4629041,0,0x0,8
tick,0x1a372c99c,4629291,0,0x0,8
tick,0x1a372c99c,4630583,0,0x0,8
tick,0x1a372c99c,4633208,0,0x0,8
tick,0x1a372c99c,4634166,0,0x0,8
tick,0x1a372c99c,4638666,0,0x0,8
tick,0x1a372c99c,4639166,0,0x0,8
scavenge,begin,0,736765,1643426350122
scavenge,end,0,736955,1643426350122
tick,0x1a372c99c,4642791,0,0x0,8
tick,0x1a372c99c,4642916,0,0x0,8
tick,0x1a372c99c,4648833,0,0x0,8
tick,0x1a372c99c,4652333,0,0x0,8
tick,0x1a372c99c,4652625,0,0x0,8
tick,0x1a372c99c,4654666,0,0x0,8
tick,0x1a372c99c,4656416,0,0x0,8
tick,0x1a372c99c,4658458,0,0x0,8
tick,0x1a372c99c,4658708,0,0x0,8
tick,0x1a372c99c,4663416,0,0x0,8
tick,0x1a372953c,4663666,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4668416,0,0x0,8
tick,0x1a372c99c,4668791,0,0x0,8
tick,0x1a372c99c,4670041,0,0x0,8
tick,0x1a372c99c,4672000,0,0x0,8
tick,0x1a3726538,4672500,0,0x0,8
tick,0x1a372c99c,4675125,0,0x0,8
tick,0x100d65f74,4676250,0,0x0,8
tick,0x1a372c99c,4679750,0,0x0,8
tick,0x100e0de70,4679916,1,0x100d6533c,6,0x0,0x1075322b0,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4681208,0,0x0,8
tick,0x1a372c99c,4686041,0,0x0,8
tick,0x1a372c99c,4686791,0,0x0,8
tick,0x1a372c99c,4692666,0,0x0,8
tick,0x1a372c99c,4692958,0,0x0,8
tick,0x1a372c99c,4717250,0,0x0,8
tick,0x1a372c99c,4717708,0,0x0,8
tick,0x1a372c99c,4722000,0,0x0,8
tick,0x1a372c99c,4727541,0,0x0,8
tick,0x1a3726538,4727916,0,0x0,8
tick,0x1a372c99c,4730458,0,0x0,8
tick,0x1a372c99c,4732958,0,0x0,8
tick,0x1a372c99c,4739708,0,0x0,8
tick,0x1a372c99c,4740500,0,0x0,8
tick,0x1a372c99c,4745916,0,0x0,8
tick,0x1a372c99c,4746666,0,0x0,8
tick,0x1a372c99c,4747875,0,0x0,8
tick,0x1a372c99c,4749958,0,0x0,8
tick,0x1a372c99c,4750250,0,0x0,8
tick,0x1a372c99c,4753458,0,0x0,8
tick,0x1a372c99c,4753875,0,0x0,8
tick,0x1a372c99c,4754916,0,0x0,8
tick,0x1a372c99c,4757541,0,0x0,8
tick,0x1a372c99c,4758500,0,0x0,8
tick,0x1a372c99c,4763666,0,0x0,8
tick,0x1a372c99c,4764916,0,0x0,8
tick,0x1a372c99c,4768916,0,0x0,8
tick,0x1a372c99c,4780125,0,0x0,8
tick,0x1a372c99c,4786083,0,0x0,8
tick,0x1a372c99c,4786291,0,0x0,8
tick,0x1a372c99c,4791833,0,0x0,8
tick,0x1a372c99c,4793958,0,0x0,8
tick,0x1a372c99c,4796500,0,0x0,8
tick,0x1a372c99c,4803666,0,0x0,8
tick,0x100ce8b4c,4804666,0,0x0,8
tick,0x1a372c99c,4809833,0,0x0,8
tick,0x1a372c99c,4811000,0,0x0,8
tick,0x1a372c99c,4813875,0,0x0,8
tick,0x1a372c99c,4814666,0,0x0,8
tick,0x1a372c99c,4817208,0,0x0,8
tick,0x1a372c99c,4818416,0,0x0,8
tick,0x1a372c99c,4821333,0,0x0,8
tick,0x1a3726538,4822166,0,0x0,8
tick,0x1a372c99c,4826750,0,0x0,8
tick,0x1a372c99c,4827125,0,0x0,8
tick,0x1a372c99c,4830916,0,0x0,8
tick,0x1a372c99c,4836958,0,0x0,8
tick,0x1a372c99c,4840500,0,0x0,8
tick,0x1a372c99c,4842708,0,0x0,8
tick,0x1a372c99c,4842875,0,0x0,8
tick,0x1a372c99c,4844416,0,0x0,8
tick,0x1a372c99c,4846541,0,0x0,8
tick,0x1a372c99c,4851625,0,0x0,8
tick,0x1a372c99c,4856625,0,0x0,8
tick,0x1a372c99c,4857666,0,0x0,8
tick,0x1a372c99c,4858708,0,0x0,8
tick,0x1a372c99c,4860000,0,0x0,8
tick,0x1a372c99c,4863083,0,0x0,8
tick,0x1a372c99c,4863583,0,0x0,8
tick,0x1a372c99c,4864583,0,0x0,8
tick,0x1a372c99c,4867333,0,0x0,8
tick,0x1a372c99c,4883625,0,0x0,8
tick,0x1a372c99c,4883666,0,0x0,8
tick,0x1a37285c0,4883666,0,0x0,1
tick,0x1a37285c0,4883666,0,0x0,1
tick,0x1a37285c0,4883666,0,0x0,1
tick,0x1a37285c0,4883666,0,0x0,1
tick,0x1a37285c0,4883708,0,0x0,1
tick,0x1a37285c0,4883708,0,0x0,1
tick,0x1a37285c0,4883708,0,0x0,1
tick,0x1a37285c0,4883750,0,0x0,1
tick,0x1a37285c0,4883750,0,0x0,1
scavenge,begin,0,746915,1643426350367
scavenge,end,0,747121,1643426350367
tick,0x107533404,4884625,0,0x0,0
tick,0x1a372c99c,4886875,0,0x0,8
tick,0x1a372c99c,4889500,0,0x0,8
tick,0x1a372c99c,4889875,0,0x0,8
tick,0x1a372c99c,4895541,0,0x0,8
tick,0x10752f120,4895583,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,4900750,0,0x0,8
tick,0x1a372c99c,4901791,0,0x0,8
code-creation,LazyCompile,13,4902041,0x107539960,320, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:206:28,0x324f23cb6d68,*
code-source-info,0x107539960,330,6182,6207,C0O6182C60O6190C100O6203C108O6206C144O6182C192O6190,,
tick,0x1a372c99c,4904041,0,0x0,8
tick,0x1a372c99c,4904166,0,0x0,8
tick,0x1a372c99c,4906625,0,0x0,8
tick,0x1a372c99c,4907916,0,0x0,8
tick,0x1a372c99c,4910333,0,0x0,8
tick,0x1a372c99c,4911458,0,0x0,8
tick,0x1a372c99c,4915166,0,0x0,8
tick,0x2f3ebe1ebe60,4915166,0,0x0,0,0x10752b3f4,0x1075289d0,0x107534848,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4918083,0,0x0,8
tick,0x1a372c99c,4925541,0,0x0,8
tick,0x1a372c99c,4926500,0,0x0,8
tick,0x1a372c99c,4927666,0,0x0,8
tick,0x1a372c99c,4929708,0,0x0,8
tick,0x1a372c99c,4932250,0,0x0,8
tick,0x1a3726538,4932666,0,0x0,8
tick,0x1a372c99c,4938125,0,0x0,8
tick,0x1a372c99c,4938833,0,0x0,8
tick,0x1a372c99c,4942125,0,0x0,8
tick,0x1a372c99c,4942375,0,0x0,8
tick,0x1a372c99c,4943416,0,0x0,8
tick,0x1a372c99c,4945166,0,0x0,8
tick,0x1a372c99c,4946333,0,0x0,8
tick,0x1a372c99c,4947041,0,0x0,8
tick,0x1a372c99c,4949375,0,0x0,8
tick,0x101462f40,4949500,0,0x0,0,0x107522940,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,4950625,0,0x0,8
tick,0x1a372c99c,4953333,0,0x0,8
tick,0x1a372c99c,4954375,0,0x0,8
tick,0x1a372c99c,4957333,0,0x0,8
tick,0x1a372c99c,4961708,0,0x0,8
tick,0x1a372c99c,4969250,0,0x0,8
tick,0x1a372c99c,4970291,0,0x0,8
tick,0x1a372c99c,4971541,0,0x0,8
tick,0x1a372c99c,4972958,0,0x0,8
tick,0x1a372c99c,4976958,0,0x0,8
tick,0x1a372c99c,4983166,0,0x0,8
tick,0x1a372c99c,4984083,0,0x0,8
tick,0x1a372c99c,4987083,0,0x0,8
tick,0x1a372c99c,4987750,0,0x0,8
tick,0x1a372c99c,4988958,0,0x0,8
tick,0x1a372c99c,4991250,0,0x0,8
tick,0x1a372c99c,4991375,0,0x0,8
tick,0x1a372c99c,4994375,0,0x0,8
tick,0x1a372c99c,4994708,0,0x0,8
tick,0x1a372c99c,4995791,0,0x0,8
tick,0x1a372c99c,4998083,0,0x0,8
tick,0x1a372c99c,5005083,0,0x0,8
tick,0x1a372c99c,5005208,0,0x0,8
tick,0x1a372c99c,5008291,0,0x0,8
tick,0x1a372c99c,5013041,0,0x0,8
tick,0x1a372c99c,5013958,0,0x0,8
tick,0x1a372c99c,5015166,0,0x0,8
tick,0x1a372c99c,5016458,0,0x0,8
tick,0x1a372c99c,5020083,0,0x0,8
tick,0x1011e4c60,5020208,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5026166,0,0x0,8
tick,0x1a372c99c,5026416,0,0x0,8
tick,0x1a372c99c,5030333,0,0x0,8
tick,0x1a372c99c,5031291,0,0x0,8
tick,0x1a372c99c,5032375,0,0x0,8
tick,0x1a372c99c,5034416,0,0x0,8
tick,0x1a372c99c,5034833,0,0x0,8
tick,0x1a372c99c,5037791,0,0x0,8
tick,0x1a372c99c,5038416,0,0x0,8
tick,0x1a372c99c,5039625,0,0x0,8
tick,0x1a372c99c,5040875,0,0x0,8
tick,0x1a372c99c,5043041,0,0x0,8
tick,0x1a372c99c,5043291,0,0x0,8
scavenge,begin,0,755823,1643426350534
tick,0x1a372c99c,5051208,0,0x0,8
tick,0x100f9dff0,5051500,0,0x0,1
scavenge,end,0,756025,1643426350535
tick,0x1a372c99c,5058041,0,0x0,8
tick,0x1a372c99c,5058250,0,0x0,8
tick,0x1a372c99c,5062875,0,0x0,8
tick,0x1a372c99c,5063041,0,0x0,8
tick,0x1a372c99c,5064416,0,0x0,8
tick,0x1a372c99c,5066000,0,0x0,8
tick,0x1a372c99c,5074333,0,0x0,8
tick,0x1a372c99c,5074708,0,0x0,8
tick,0x1a372c99c,5075875,0,0x0,8
tick,0x1a372c99c,5093291,0,0x0,8
tick,0x1a372c99c,5098916,0,0x0,8
tick,0x1a372c99c,5099458,0,0x0,8
tick,0x1a372c99c,5100583,0,0x0,8
tick,0x1a372c99c,5103791,0,0x0,8
tick,0x1a372c99c,5104333,0,0x0,8
tick,0x1a372c99c,5107500,0,0x0,8
tick,0x107524314,5108041,0,0x0,0,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5109416,0,0x0,8
tick,0x1a372c99c,5112500,0,0x0,8
tick,0x1a372c99c,5112875,0,0x0,8
tick,0x1a372c99c,5125125,0,0x0,8
tick,0x1a372c99c,5125875,0,0x0,8
tick,0x1a372c99c,5128250,0,0x0,8
tick,0x1a372c99c,5128291,0,0x0,8
tick,0x1a372c99c,5139666,0,0x0,8
tick,0x10101de6c,5139791,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5141875,0,0x0,8
tick,0x100ea7c1c,5142333,0,0x0,0
tick,0x1a372c99c,5143666,0,0x0,8
tick,0x1a372c99c,5145958,0,0x0,8
tick,0x1a372c99c,5146125,0,0x0,8
tick,0x1a372c99c,5150250,0,0x0,8
tick,0x1a372c99c,5158958,0,0x0,8
tick,0x1a372c99c,5159458,0,0x0,8
tick,0x1a372c99c,5164875,0,0x0,8
tick,0x1a372c99c,5165791,0,0x0,8
tick,0x1a372c99c,5167000,0,0x0,8
tick,0x1a372c99c,5169125,0,0x0,8
tick,0x1a372c99c,5169625,0,0x0,8
tick,0x1a372c99c,5172666,0,0x0,8
tick,0x1a372c99c,5173291,0,0x0,8
tick,0x1a372c99c,5174666,0,0x0,8
tick,0x1a372c99c,5177750,0,0x0,8
tick,0x1a372c99c,5178041,0,0x0,8
tick,0x1a372c99c,5192041,0,0x0,8
tick,0x1a372c99c,5193541,0,0x0,8
tick,0x1a372c99c,5194791,0,0x0,8
tick,0x1a372c99c,5195250,0,0x0,8
tick,0x1a372c99c,5196375,0,0x0,8
tick,0x1a372c99c,5198208,0,0x0,8
tick,0x1a372c99c,5198791,0,0x0,8
tick,0x1a372c99c,5201666,0,0x0,8
tick,0x1a372c99c,5209416,0,0x0,8
tick,0x1a372c99c,5209875,0,0x0,8
tick,0x1a372c99c,5213458,0,0x0,8
tick,0x1a372c99c,5213583,0,0x0,8
tick,0x1a372c99c,5214750,0,0x0,8
tick,0x1a372c99c,5216541,0,0x0,8
tick,0x1a372c99c,5217333,0,0x0,8
tick,0x1a372c99c,5220916,0,0x0,8
tick,0x1014a66e0,5220916,0,0x0,0,0x107534c84,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5222083,0,0x0,8
tick,0x1a372c99c,5224750,0,0x0,8
tick,0x1a372c99c,5228208,0,0x0,8
tick,0x1a372c99c,5228333,0,0x0,8
tick,0x1a372c99c,5237166,0,0x0,8
tick,0x1a372c99c,5238666,0,0x0,8
tick,0x1a372c99c,5240041,0,0x0,8
tick,0x1a372c99c,5240875,0,0x0,8
tick,0x1a372c99c,5242166,0,0x0,8
tick,0x1a372c99c,5243416,0,0x0,8
tick,0x1a372c99c,5246333,0,0x0,8
tick,0x1a372c99c,5253958,0,0x0,8
tick,0x1a372c99c,5254541,0,0x0,8
tick,0x1a372c99c,5258125,0,0x0,8
tick,0x101452cc0,5258250,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5259375,0,0x0,8
tick,0x1a372c99c,5261125,0,0x0,8
tick,0x1a372c99c,5261916,0,0x0,8
tick,0x1a372c99c,5264166,0,0x0,8
tick,0x1a372c99c,5264291,0,0x0,8
tick,0x101461b80,5265583,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,5269416,0,0x0,8
scavenge,begin,0,765420,1643426350753
tick,0x1a357af28,5270458,0,0x0,1
scavenge,end,0,765643,1643426350754
tick,0x1a372c99c,5273041,0,0x0,8
tick,0x1a372c99c,5275541,0,0x0,8
tick,0x1a372c99c,5280291,0,0x0,8
tick,0x1a372c99c,5280375,0,0x0,8
tick,0x1a372c99c,5283375,0,0x0,8
tick,0x1a372c99c,5284791,0,0x0,8
tick,0x1a372c99c,5285416,0,0x0,8
tick,0x1a372c99c,5286625,0,0x0,8
tick,0x1a372c99c,5288291,0,0x0,8
tick,0x1a372c99c,5291125,0,0x0,8
tick,0x1a372c99c,5298625,0,0x0,8
tick,0x1a372c99c,5299000,0,0x0,8
tick,0x1a372c99c,5302833,0,0x0,8
tick,0x1a372c99c,5304041,0,0x0,8
tick,0x1a372c99c,5305958,0,0x0,8
tick,0x1a372c99c,5306458,0,0x0,8
tick,0x1a372c99c,5309375,0,0x0,8
tick,0x1a372c99c,5310041,0,0x0,8
tick,0x1a372c99c,5311166,0,0x0,8
tick,0x1a372c99c,5314416,0,0x0,8
tick,0x1a372c99c,5314791,0,0x0,8
tick,0x1a372c99c,5320458,0,0x0,8
tick,0x1a372c99c,5325333,0,0x0,8
tick,0x1a372c99c,5326875,0,0x0,8
tick,0x1a372c99c,5329541,0,0x0,8
tick,0x1a372c99c,5329916,0,0x0,8
tick,0x1a372c99c,5331208,0,0x0,8
tick,0x1a372c99c,5333666,0,0x0,8
tick,0x10753803c,5333666,0,0x0,0,0x107524970,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5340000,0,0x0,8
tick,0x101487d64,5340000,0,0x0,0,0x107522900,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5359125,0,0x0,8
tick,0x1a372c99c,5360541,0,0x0,8
tick,0x1a372c99c,5363583,0,0x0,8
tick,0x1a372c99c,5363708,0,0x0,8
tick,0x1a372c99c,5364750,0,0x0,8
tick,0x1a372c99c,5366750,0,0x0,8
tick,0x1a372c99c,5367041,0,0x0,8
tick,0x1a372c99c,5370166,0,0x0,8
tick,0x1a372c99c,5370625,0,0x0,8
tick,0x1a372c99c,5371625,0,0x0,8
tick,0x1a372c99c,5375125,0,0x0,8
tick,0x10752258c,5375125,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5383750,0,0x0,8
tick,0x1a372c99c,5385750,0,0x0,8
tick,0x1a372c99c,5385916,0,0x0,8
tick,0x1a372c99c,5388375,0,0x0,8
tick,0x1a372c99c,5389875,0,0x0,8
tick,0x1a372c99c,5390875,0,0x0,8
tick,0x1a372c99c,5392166,0,0x0,8
tick,0x1a372c99c,5393583,0,0x0,8
tick,0x1a372c99c,5396458,0,0x0,8
tick,0x1a372c99c,5404000,0,0x0,8
tick,0x1011e4ce4,5404625,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5408083,0,0x0,8
tick,0x1a372c99c,5408375,0,0x0,8
tick,0x1a372c99c,5409375,0,0x0,8
tick,0x1a372c99c,5411000,0,0x0,8
tick,0x1a372c99c,5411750,0,0x0,8
tick,0x1a372c99c,5414291,0,0x0,8
tick,0x1a372c99c,5415333,0,0x0,8
tick,0x1a372c99c,5419458,0,0x0,8
tick,0x1a372c99c,5419833,0,0x0,8
tick,0x1a372c99c,5429000,0,0x0,8
tick,0x1a372c99c,5429500,0,0x0,8
tick,0x1a372c99c,5431166,0,0x0,8
tick,0x1a372c99c,5434000,0,0x0,8
tick,0x1a372c99c,5438625,0,0x0,8
tick,0x1075229f4,5438750,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5440000,0,0x0,8
tick,0x1a372c99c,5452208,0,0x0,8
tick,0x1a372c99c,5453958,0,0x0,8
tick,0x1a372c99c,5458666,0,0x0,8
tick,0x1a372c99c,5470000,0,0x0,8
tick,0x107530df4,5470041,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,5474458,0,0x0,8
tick,0x1a372c99c,5475083,0,0x0,8
tick,0x1a372c99c,5476166,0,0x0,8
tick,0x1a372c99c,5478125,0,0x0,8
tick,0x1a372c99c,5478583,0,0x0,8
tick,0x1a372c99c,5481791,0,0x0,8
tick,0x1a372c99c,5482250,0,0x0,8
tick,0x1a372c99c,5483250,0,0x0,8
tick,0x1a372c99c,5487666,0,0x0,8
scavenge,begin,0,775180,1643426350971
scavenge,end,0,775384,1643426350971
tick,0x1013a2aac,5488083,0,0x0,0,0x10753950c,0x107534ae8,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5510083,0,0x0,8
tick,0x1a372c99c,5510125,0,0x0,8
tick,0x1a372c99c,5513000,0,0x0,8
tick,0x1a372c99c,5515666,0,0x0,8
tick,0x1a372c99c,5516250,0,0x0,8
tick,0x1a372c99c,5517291,0,0x0,8
tick,0x1a372c99c,5520375,0,0x0,8
tick,0x1a372c99c,5523583,0,0x0,8
tick,0x1a372c99c,5533375,0,0x0,8
tick,0x1a372c99c,5534333,0,0x0,8
tick,0x1a372c99c,5539416,0,0x0,8
tick,0x101416934,5540583,0,0x0,0,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5543041,0,0x0,8
tick,0x1a372c99c,5543083,0,0x0,8
tick,0x1a372c99c,5546500,0,0x0,8
tick,0x1a372c99c,5546750,0,0x0,8
tick,0x1a372c99c,5547833,0,0x0,8
tick,0x1a372c99c,5552416,0,0x0,8
tick,0x1a372c99c,5552833,0,0x0,8
tick,0x1a372c99c,5556416,0,0x0,8
tick,0x1a372c99c,5566708,0,0x0,8
tick,0x1a372c99c,5568375,0,0x0,8
tick,0x1a372c99c,5570875,0,0x0,8
tick,0x1a372c99c,5571333,0,0x0,8
tick,0x1013a1f9c,5572583,0,0x0,0,0x101462f68,0x107522940,0x107533b9c,0x10752fa88,0x107533410
tick,0x1011e4d98,5573833,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5575166,0,0x0,8
tick,0x1a372c99c,5578208,0,0x0,8
tick,0x1a372c99c,5585625,0,0x0,8
tick,0x1030cdc7c,5586250,0,0x0,8
tick,0x1a372c99c,5589833,0,0x0,8
tick,0x1a372c99c,5590000,0,0x0,8
tick,0x1a372c99c,5591208,0,0x0,8
tick,0x1a372c99c,5592875,0,0x0,8
tick,0x1a372c99c,5593708,0,0x0,8
tick,0x1a372c99c,5595958,0,0x0,8
tick,0x1a372c99c,5596208,0,0x0,8
tick,0x1a372c99c,5597500,0,0x0,8
tick,0x1a372c99c,5600833,0,0x0,8
tick,0x1a372c99c,5600875,0,0x0,8
tick,0x1a372c99c,5604041,0,0x0,8
tick,0x1a372c99c,5606833,0,0x0,8
tick,0x1a372c99c,5611708,0,0x0,8
tick,0x1a372c99c,5612083,0,0x0,8
tick,0x1a372c99c,5613416,0,0x0,8
tick,0x1a372c99c,5615791,0,0x0,8
tick,0x107522538,5617083,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5618250,0,0x0,8
tick,0x1a372c99c,5619500,0,0x0,8
tick,0x1a372c99c,5622250,0,0x0,8
tick,0x1a372c99c,5629625,0,0x0,8
tick,0x1a372c99c,5633708,0,0x0,8
tick,0x1a372c99c,5634500,0,0x0,8
tick,0x1a372c99c,5635583,0,0x0,8
tick,0x1a372c99c,5636875,0,0x0,8
tick,0x1a372c99c,5637958,0,0x0,8
tick,0x1a372c99c,5640041,0,0x0,8
tick,0x1a372c99c,5640291,0,0x0,8
tick,0x1a372c99c,5641291,0,0x0,8
tick,0x1a372c99c,5644875,0,0x0,8
tick,0x100e001d8,5644916,1,0x100caed78,6,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5648000,0,0x0,8
tick,0x1a372c99c,5650375,0,0x0,8
tick,0x1a372c99c,5655125,0,0x0,8
tick,0x1a372c99c,5656958,0,0x0,8
tick,0x1a372c99c,5659375,0,0x0,8
tick,0x1a372c99c,5659833,0,0x0,8
tick,0x1a372c99c,5661166,0,0x0,8
tick,0x1a372c99c,5662833,0,0x0,8
tick,0x1a372c99c,5665916,0,0x0,8
tick,0x1a372c99c,5673208,0,0x0,8
tick,0x1a372c99c,5677291,0,0x0,8
tick,0x1a372c99c,5678125,0,0x0,8
tick,0x1a372c99c,5679208,0,0x0,8
tick,0x1a372c99c,5680375,0,0x0,8
tick,0x1a372c99c,5681416,0,0x0,8
tick,0x1a372c99c,5683416,0,0x0,8
tick,0x1a372c99c,5683875,0,0x0,8
scavenge,begin,0,784045,1643426351168
tick,0x1a372cc6c,5685125,0,0x0,1
scavenge,end,0,784245,1643426351168
tick,0x1a372c99c,5688458,0,0x0,8
tick,0x1a3726538,5688875,0,0x0,8
tick,0x1a372c99c,5694000,0,0x0,8
tick,0x1a372c99c,5698666,0,0x0,8
tick,0x1a372c99c,5698791,0,0x0,8
tick,0x1a372c99c,5701666,0,0x0,8
tick,0x1a372c99c,5703125,0,0x0,8
tick,0x1a3768530,5703833,0,0x0,8
tick,0x1011e4d7c,5705083,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5706625,0,0x0,8
tick,0x1a372c99c,5709375,0,0x0,8
tick,0x1a372c99c,5716625,0,0x0,8
tick,0x1a372c99c,5717333,0,0x0,8
tick,0x1a372c99c,5720708,0,0x0,8
tick,0x1a372c99c,5721083,0,0x0,8
tick,0x1a372c99c,5722125,0,0x0,8
tick,0x1a372c99c,5723583,0,0x0,8
tick,0x1a372c99c,5724333,0,0x0,8
tick,0x1a372c99c,5726958,0,0x0,8
tick,0x1a372c99c,5727875,0,0x0,8
tick,0x1a372c99c,5731875,0,0x0,8
tick,0x1a372c99c,5732375,0,0x0,8
tick,0x1a372c99c,5737333,0,0x0,8
tick,0x1a372c99c,5742125,0,0x0,8
tick,0x1a3726538,5742125,0,0x0,8
tick,0x1a372c99c,5744833,0,0x0,8
tick,0x1a372c99c,5746458,0,0x0,8
tick,0x1011a1f64,5746833,0,0x0,5
tick,0x1a372c99c,5748166,0,0x0,8
tick,0x1a372c99c,5750291,0,0x0,8
tick,0x1a372953c,5750666,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5753000,0,0x0,8
tick,0x1a372c99c,5753125,0,0x0,8
tick,0x1a372c99c,5760791,0,0x0,8
tick,0x1a372c99c,5761458,0,0x0,8
tick,0x1a372c99c,5765083,0,0x0,8
tick,0x1a3726538,5765208,0,0x0,8
tick,0x1a372c99c,5766500,0,0x0,8
tick,0x1a372c99c,5768125,0,0x0,8
tick,0x1a372c99c,5768791,0,0x0,8
tick,0x1a372c99c,5771500,0,0x0,8
tick,0x1a372c99c,5772416,0,0x0,8
tick,0x1a372c99c,5777000,0,0x0,8
tick,0x1a372c99c,5785958,0,0x0,8
tick,0x1a372c99c,5793375,0,0x0,8
tick,0x1a372c99c,5793708,0,0x0,8
tick,0x1a372c99c,5796416,0,0x0,8
tick,0x1a372c99c,5800000,0,0x0,8
tick,0x1a372c99c,5800625,0,0x0,8
tick,0x1a372c99c,5801875,0,0x0,8
tick,0x1a372c99c,5803833,0,0x0,8
tick,0x1a372c99c,5806750,0,0x0,8
tick,0x1075342c0,5807250,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5814916,0,0x0,8
tick,0x1a372c99c,5815000,0,0x0,8
tick,0x1a372c99c,5820666,0,0x0,8
tick,0x1a372c99c,5821166,0,0x0,8
tick,0x1a372c99c,5822416,0,0x0,8
tick,0x1a372c99c,5824541,0,0x0,8
tick,0x1a372c99c,5824791,0,0x0,8
tick,0x1a372c99c,5825833,0,0x0,8
tick,0x1a372c99c,5828083,0,0x0,8
tick,0x1013e3a50,5828333,0,0x0,0,0x107533b78,0x10752fa88,0x107533410
tick,0x1a372c99c,5829666,0,0x0,8
tick,0x1a372c99c,5833041,0,0x0,8
tick,0x1a372c99c,5835958,0,0x0,8
tick,0x1a372c99c,5839750,0,0x0,8
tick,0x1a372c99c,5844208,0,0x0,8
tick,0x107533820,5844333,0,0x0,0,0x10752fa88,0x107533410
tick,0x100e1f018,5845625,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5848208,0,0x0,8
tick,0x100e1f018,5849416,1,0x100caed78,5,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5850500,0,0x0,8
tick,0x1a372c99c,5854416,0,0x0,8
tick,0x1a372c99c,5861916,0,0x0,8
tick,0x1a372c99c,5862500,0,0x0,8
tick,0x1a372c99c,5865916,0,0x0,8
tick,0x1a372c99c,5866000,0,0x0,8
tick,0x1a372c99c,5867041,0,0x0,8
tick,0x1a372c99c,5868833,0,0x0,8
tick,0x1a372c99c,5869541,0,0x0,8
tick,0x1a372c99c,5872125,0,0x0,8
tick,0x1a372c99c,5873125,0,0x0,8
scavenge,begin,0,794539,1643426351356
scavenge,end,0,794695,1643426351356
tick,0x1a372c99c,5879416,0,0x0,8
tick,0x1a372c99c,5882791,0,0x0,8
tick,0x1a372c99c,5888375,0,0x0,8
tick,0x1a372c99c,5890041,0,0x0,8
tick,0x1a372c99c,5890333,0,0x0,8
tick,0x1a372c99c,5893375,0,0x0,8
tick,0x1a372c99c,5894000,0,0x0,8
tick,0x1a372c99c,5895083,0,0x0,8
tick,0x1a372c99c,5899625,0,0x0,8
tick,0x1a372c99c,5900125,0,0x0,8
tick,0x1a372c99c,5907166,0,0x0,8
tick,0x1a372c99c,5907833,0,0x0,8
tick,0x1a372c99c,5910875,0,0x0,8
tick,0x1a372c99c,5911541,0,0x0,8
tick,0x1a372c99c,5912625,0,0x0,8
tick,0x1a372c99c,5914041,0,0x0,8
tick,0x10102391c,5915041,0,0x0,0
tick,0x1a372c99c,5917208,0,0x0,8
tick,0x1a372c99c,5917458,0,0x0,8
tick,0x1a372c99c,5918541,0,0x0,8
tick,0x1a372c99c,5924458,0,0x0,8
tick,0x1a372c99c,5927250,0,0x0,8
tick,0x1a372c99c,5932125,0,0x0,8
tick,0x1a372c99c,5933916,0,0x0,8
tick,0x1a35926e4,5934083,0,0x0,5
tick,0x1a372c99c,5936750,0,0x0,8
tick,0x1a372c99c,5937916,0,0x0,8
tick,0x1a3726538,5939125,0,0x0,8
tick,0x1a372c99c,5943041,0,0x0,8
tick,0x1a372c99c,5950750,0,0x0,8
tick,0x1a372c99c,5951125,0,0x0,8
tick,0x1a372c99c,5954500,0,0x0,8
tick,0x1a372c99c,5954625,0,0x0,8
tick,0x1a372c99c,5955625,0,0x0,8
tick,0x1a372c99c,5957708,0,0x0,8
tick,0x1a372c99c,5958125,0,0x0,8
tick,0x1a372c99c,5961083,0,0x0,8
tick,0x1a372c99c,5961875,0,0x0,8
tick,0x1a372c99c,5968500,0,0x0,8
tick,0x1a372c99c,5971333,0,0x0,8
tick,0x1a372c99c,5976000,0,0x0,8
tick,0x1a372c99c,5977666,0,0x0,8
tick,0x1a372c99c,5980541,0,0x0,8
tick,0x100e05978,5980541,1,0x100caed78,6,0x0,0x172aed062817,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,5981791,0,0x0,8
tick,0x1a372c99c,5982958,0,0x0,8
tick,0x1a372c99c,5986750,0,0x0,8
tick,0x1a372c99c,5987708,0,0x0,8
tick,0x1a372c99c,5996916,0,0x0,8
tick,0x1a372c99c,5997833,0,0x0,8
tick,0x1a372c99c,6002458,0,0x0,8
tick,0x1a372c99c,6002916,0,0x0,8
tick,0x1a372c99c,6003916,0,0x0,8
tick,0x1a372c99c,6006250,0,0x0,8
tick,0x1a372c99c,6006500,0,0x0,8
tick,0x1a372c99c,6010083,0,0x0,8
tick,0x1a372c99c,6010333,0,0x0,8
tick,0x1a372c99c,6011416,0,0x0,8
tick,0x1a372c99c,6013666,0,0x0,8
tick,0x1a372c99c,6019833,0,0x0,8
tick,0x1a372c99c,6019958,0,0x0,8
tick,0x1a372c99c,6023625,0,0x0,8
tick,0x1a372c99c,6023791,0,0x0,8
tick,0x1a372c99c,6028375,0,0x0,8
tick,0x1a372c99c,6028875,0,0x0,8
tick,0x1a372c99c,6032791,0,0x0,8
tick,0x1a372c99c,6036583,0,0x0,8
tick,0x100d67ddc,6037458,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6038875,0,0x0,8
tick,0x1a372c99c,6039958,0,0x0,8
tick,0x1a372c99c,6041333,0,0x0,8
tick,0x1a372c99c,6042333,0,0x0,8
tick,0x1a372c99c,6043625,0,0x0,8
tick,0x1a372c99c,6053625,0,0x0,8
tick,0x1a372c99c,6053750,0,0x0,8
tick,0x1a372c99c,6058875,0,0x0,8
tick,0x1a372c99c,6063333,0,0x0,8
tick,0x1a372c99c,6063583,0,0x0,8
tick,0x1a372c99c,6064791,0,0x0,8
tick,0x1a372c99c,6066875,0,0x0,8
tick,0x1a372c99c,6067333,0,0x0,8
tick,0x1a372c99c,6071166,0,0x0,8
scavenge,begin,0,803827,1643426351555
scavenge,end,0,803992,1643426351555
tick,0x1a372c99c,6072375,0,0x0,8
tick,0x1a372c99c,6077541,0,0x0,8
tick,0x1a372c99c,6079958,0,0x0,8
tick,0x1a372c99c,6082208,0,0x0,8
tick,0x1a372c99c,6087750,0,0x0,8
tick,0x1a372c99c,6089833,0,0x0,8
tick,0x1a372c99c,6091208,0,0x0,8
tick,0x1a372c99c,6092041,0,0x0,8
tick,0x1a372c99c,6093125,0,0x0,8
tick,0x1a372c99c,6097125,0,0x0,8
tick,0x1a372c99c,6103583,0,0x0,8
tick,0x1a372c99c,6104458,0,0x0,8
tick,0x1a372c99c,6107666,0,0x0,8
tick,0x1a372c99c,6108291,0,0x0,8
tick,0x101491400,6109500,0,0x0,0,0x107524894,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6111000,0,0x0,8
tick,0x1a372c99c,6112083,0,0x0,8
tick,0x1a372c99c,6115250,0,0x0,8
tick,0x1a372c99c,6116041,0,0x0,8
tick,0x1a372c99c,6121416,0,0x0,8
tick,0x1a372c99c,6123833,0,0x0,8
tick,0x1a372c99c,6126791,0,0x0,8
tick,0x1a372c99c,6135166,0,0x0,8
tick,0x1a372c99c,6135958,0,0x0,8
tick,0x1a372c99c,6137416,0,0x0,8
tick,0x1a372c99c,6139458,0,0x0,8
tick,0x101487bcc,6139833,0,0x0,0,0x1075392c4,0x107522ee4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6141291,0,0x0,8
tick,0x1a3726538,6142458,0,0x0,8
tick,0x1a372c99c,6147541,0,0x0,8
tick,0x1a372c99c,6148041,0,0x0,8
tick,0x1a372c99c,6155541,0,0x0,8
tick,0x1030d6680,6155666,0,0x0,8
tick,0x1a372c99c,6162291,0,0x0,8
tick,0x107525ec0,6163250,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,6164458,0,0x0,8
tick,0x1a372c99c,6168583,0,0x0,8
tick,0x1a372c99c,6169208,0,0x0,8
tick,0x1a372c99c,6174125,0,0x0,8
tick,0x1a372c99c,6174458,0,0x0,8
tick,0x1a372c99c,6175791,0,0x0,8
tick,0x1a372c99c,6182875,0,0x0,8
tick,0x1a372c99c,6183041,0,0x0,8
tick,0x1a372c99c,6189375,0,0x0,8
tick,0x1a372c99c,6190791,0,0x0,8
tick,0x1a372c99c,6192875,0,0x0,8
tick,0x1a372c99c,6193041,0,0x0,8
tick,0x1a372c99c,6194458,0,0x0,8
tick,0x1a372c99c,6195500,0,0x0,8
tick,0x1a372c99c,6196708,0,0x0,8
tick,0x1a372c99c,6200791,0,0x0,8
code-creation,LazyCompile,13,6201083,0x107539b40,1320,toString node:buffer:782:46,0x30d75ba6968,*
code-source-info,0x107539b40,18,23264,23826,C0O23264C68O23337C80O23264C84O23312C92O23388C152O23409C200O23447C328O23481C388O23469C444O23496C460O23447C472O23525C500O23571C512O23579C548O23607C564O23689C596O23717C608O23800C684O23824C688O23750C692O23651C696O23603C704O23337C732O23355C744O23337C764O23355C780O23337C932O23363C936O23264C1012O23337,,
tick,0x1a372c99c,6207291,0,0x0,8
tick,0x100d6652c,6208125,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6211375,0,0x0,8
tick,0x1a372c99c,6211875,0,0x0,8
tick,0x1a372c99c,6212958,0,0x0,8
tick,0x1a372c99c,6214708,0,0x0,8
tick,0x1a372c99c,6215333,0,0x0,8
tick,0x1a372c99c,6219125,0,0x0,8
tick,0x1a372c99c,6220166,0,0x0,8
tick,0x1a372c99c,6227666,0,0x0,8
tick,0x1a372c99c,6228458,0,0x0,8
tick,0x1a372c99c,6233625,0,0x0,8
tick,0x1a372c99c,6233791,0,0x0,8
tick,0x1a372c99c,6234916,0,0x0,8
tick,0x1a372c99c,6237000,0,0x0,8
tick,0x1a372c99c,6237291,0,0x0,8
tick,0x1a372c99c,6238500,0,0x0,8
tick,0x1a372c99c,6239500,0,0x0,8
tick,0x1a372c99c,6240500,0,0x0,8
tick,0x1a372c99c,6244375,0,0x0,8
tick,0x1a372c99c,6250833,0,0x0,8
tick,0x1a372c99c,6251666,0,0x0,8
tick,0x1a372c99c,6254875,0,0x0,8
tick,0x1a3726538,6255458,0,0x0,8
tick,0x1a372c99c,6256750,0,0x0,8
tick,0x1a372c99c,6258083,0,0x0,8
tick,0x1a372c99c,6259125,0,0x0,8
tick,0x1a372c99c,6262500,0,0x0,8
tick,0x1a372c99c,6262750,0,0x0,8
scavenge,begin,0,815122,1643426351746
scavenge,end,0,815284,1643426351746
tick,0x1a372c99c,6263833,0,0x0,8
tick,0x1a372c99c,6271250,0,0x0,8
tick,0x1a372c99c,6277125,0,0x0,8
tick,0x1a372c99c,6278458,0,0x0,8
tick,0x1a372c99c,6278750,0,0x0,8
tick,0x1a372c99c,6280500,0,0x0,8
tick,0x1a372c99c,6281916,0,0x0,8
tick,0x1a372c99c,6282458,0,0x0,8
tick,0x100ce89e0,6283708,0,0x0,8
tick,0x1a372c99c,6287833,0,0x0,8
tick,0x1a372c99c,6288416,0,0x0,8
tick,0x1a372c99c,6294250,0,0x0,8
tick,0x1a372c99c,6295833,0,0x0,8
tick,0x1a372c99c,6298500,0,0x0,8
tick,0x1a372c99c,6298875,0,0x0,8
tick,0x1a372c99c,6300208,0,0x0,8
tick,0x1a372c99c,6301791,0,0x0,8
tick,0x1a372c99c,6302500,0,0x0,8
tick,0x1a372c99c,6306375,0,0x0,8
tick,0x1a372c99c,6307500,0,0x0,8
tick,0x1a372c99c,6315375,0,0x0,8
tick,0x1014a73a0,6316375,0,0x0,0,0x107534460,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6323583,0,0x0,8
tick,0x1a372c99c,6325208,0,0x0,8
tick,0x1a372c99c,6325375,0,0x0,8
tick,0x1a372c99c,6328375,0,0x0,8
tick,0x1a372c99c,6330125,0,0x0,8
tick,0x1a372c99c,6330375,0,0x0,8
tick,0x1a372c99c,6331708,0,0x0,8
tick,0x1a372c99c,6336416,0,0x0,8
tick,0x1a372c99c,6337750,0,0x0,8
tick,0x1a372c99c,6343000,0,0x0,8
tick,0x1a372c99c,6343625,0,0x0,8
tick,0x1a372c99c,6347125,0,0x0,8
tick,0x1a372c99c,6347416,0,0x0,8
tick,0x1a372c99c,6348625,0,0x0,8
tick,0x1a372c99c,6350416,0,0x0,8
tick,0x1a372c99c,6351083,0,0x0,8
tick,0x1a372c99c,6354750,0,0x0,8
tick,0x1011d6450,6354875,0,0x0,0
tick,0x1a372c99c,6355958,0,0x0,8
tick,0x1a372c99c,6362958,0,0x0,8
tick,0x1a372c99c,6363333,0,0x0,8
tick,0x1a372c99c,6370750,0,0x0,8
tick,0x100e0f6ec,6370916,0,0x0,0,0x0,0x107528f40
tick,0x1a372c99c,6373375,0,0x0,8
tick,0x107530e00,6373416,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,6376041,0,0x0,8
tick,0x1a372c99c,6378333,0,0x0,8
tick,0x1a3726538,6378458,0,0x0,8
tick,0x1a372c99c,6379583,0,0x0,8
tick,0x1a3775cd0,6380791,0,0x0,0,0x107533e80,0x10752fa88,0x107533410
tick,0x1a372c99c,6385208,0,0x0,8
tick,0x1a372c99c,6385875,0,0x0,8
tick,0x1a372c99c,6392791,0,0x0,8
tick,0x1a372c99c,6393333,0,0x0,8
tick,0x1a372c99c,6398375,0,0x0,8
tick,0x1a372c99c,6399500,0,0x0,8
tick,0x1a372c99c,6400583,0,0x0,8
tick,0x1a372c99c,6402583,0,0x0,8
tick,0x1a372c99c,6403000,0,0x0,8
tick,0x1a372c99c,6407666,0,0x0,8
tick,0x100e0404c,6408041,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6418541,0,0x0,8
tick,0x1a372c99c,6419500,0,0x0,8
tick,0x1a372c99c,6426416,0,0x0,8
tick,0x1a372c99c,6428416,0,0x0,8
tick,0x1a372c99c,6431250,0,0x0,8
tick,0x1a372c99c,6431375,0,0x0,8
tick,0x1a372c99c,6433333,0,0x0,8
tick,0x1a372c99c,6433916,0,0x0,8
tick,0x100eecce8,6435166,0,0x0,0
tick,0x1a372c99c,6439875,0,0x0,8
tick,0x1a372c99c,6440250,0,0x0,8
tick,0x1a372c99c,6446708,0,0x0,8
tick,0x1a372c99c,6451000,0,0x0,8
tick,0x1a372c99c,6451375,0,0x0,8
tick,0x1a372c99c,6452416,0,0x0,8
tick,0x1a372c99c,6454250,0,0x0,8
tick,0x1a372c99c,6454958,0,0x0,8
scavenge,begin,0,823955,1643426351938
scavenge,end,0,824113,1643426351938
tick,0x1a372c99c,6458500,0,0x0,8
tick,0x1a372c99c,6458625,0,0x0,8
tick,0x1a372c99c,6459708,0,0x0,8
tick,0x1a372c99c,6466666,0,0x0,8
tick,0x1a372c99c,6467166,0,0x0,8
tick,0x1a372c99c,6472666,0,0x0,8
tick,0x1a372c99c,6474000,0,0x0,8
tick,0x1a372c99c,6476041,0,0x0,8
tick,0x1a372c99c,6477416,0,0x0,8
tick,0x1a372c99c,6478041,0,0x0,8
tick,0x1a372c99c,6479125,0,0x0,8
tick,0x1a372c99c,6484291,0,0x0,8
tick,0x1a372c99c,6484916,0,0x0,8
tick,0x1a372c99c,6494750,0,0x0,8
tick,0x1a372c99c,6501500,0,0x0,8
tick,0x1a3726538,6502250,0,0x0,8
tick,0x1a372c99c,6503625,0,0x0,8
tick,0x1a372c99c,6507041,0,0x0,8
tick,0x1a372c99c,6507500,0,0x0,8
tick,0x1a372c99c,6512750,0,0x0,8
tick,0x1a372c99c,6512833,0,0x0,8
tick,0x1a372c99c,6514166,0,0x0,8
tick,0x1a372c99c,6523458,0,0x0,8
tick,0x1a372c99c,6523625,0,0x0,8
tick,0x1a372c99c,6531458,0,0x0,8
tick,0x107520bcc,6531541,0,0x0,0,0x101461efc,0x107522940,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6533916,0,0x0,8
tick,0x107523c60,6534000,0,0x0,0,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6536250,0,0x0,8
tick,0x1a372c99c,6536375,0,0x0,8
tick,0x1a372c99c,6537750,0,0x0,8
tick,0x1a372c99c,6538708,0,0x0,8
tick,0x1a372c99c,6540000,0,0x0,8
tick,0x1a372c99c,6543916,0,0x0,8
tick,0x1a372c99c,6545583,0,0x0,8
tick,0x1a372c99c,6550375,0,0x0,8
tick,0x100cad920,6551041,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6554500,0,0x0,8
tick,0x1a372c99c,6554666,0,0x0,8
tick,0x1a372c99c,6555666,0,0x0,8
tick,0x1a372c99c,6557666,0,0x0,8
tick,0x1a372c99c,6558166,0,0x0,8
tick,0x1a372c99c,6559375,0,0x0,8
tick,0x1a372c99c,6562375,0,0x0,8
tick,0x1a372c99c,6563083,0,0x0,8
tick,0x1a372c99c,6570708,0,0x0,8
tick,0x1a372c99c,6576875,0,0x0,8
tick,0x1a372c99c,6577041,0,0x0,8
tick,0x1a372c99c,6578333,0,0x0,8
tick,0x1a372c99c,6580375,0,0x0,8
tick,0x1a372c99c,6580625,0,0x0,8
tick,0x1a372c99c,6581750,0,0x0,8
tick,0x100f01a10,6582708,0,0x0,0,0x0,0x1075322b0,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6583791,0,0x0,8
tick,0x1a372c99c,6587750,0,0x0,8
tick,0x1a372c99c,6594250,0,0x0,8
tick,0x1a372c99c,6594875,0,0x0,8
tick,0x1a372c99c,6598416,0,0x0,8
tick,0x100f42854,6598500,0,0x0,5
tick,0x1a3726538,6599791,0,0x0,8
tick,0x1a372c99c,6601791,0,0x0,8
tick,0x1a372c99c,6602166,0,0x0,8
tick,0x1a372c99c,6606208,0,0x0,8
tick,0x1a372c99c,6607166,0,0x0,8
tick,0x1a372c99c,6614500,0,0x0,8
tick,0x107527e40,6614541,0,0x0,0,0x107533410
tick,0x1a372c99c,6620583,0,0x0,8
tick,0x1a372c99c,6620958,0,0x0,8
tick,0x101496100,6622083,0,0x0,0,0x3a1dfed625ce,0x3a1dfed62431,0x1075293e8
tick,0x1a372c99c,6624083,0,0x0,8
tick,0x1a372c99c,6625541,0,0x0,8
tick,0x1a372c99c,6625916,0,0x0,8
tick,0x1a372c99c,6627000,0,0x0,8
tick,0x1a372c99c,6628125,0,0x0,8
tick,0x1a372c99c,6631458,0,0x0,8
tick,0x1a372c99c,6631583,0,0x0,8
tick,0x1a372c99c,6637916,0,0x0,8
tick,0x1a372c99c,6642125,0,0x0,8
tick,0x1a372c99c,6642583,0,0x0,8
tick,0x1a372c99c,6643666,0,0x0,8
tick,0x1a372c99c,6645333,0,0x0,8
tick,0x1a372c99c,6646041,0,0x0,8
scavenge,begin,0,833540,1643426352129
scavenge,end,0,833700,1643426352129
tick,0x1a372c99c,6648708,0,0x0,8
tick,0x1a372c99c,6649583,0,0x0,8
tick,0x1a372c99c,6650625,0,0x0,8
tick,0x1a372c99c,6659041,0,0x0,8
tick,0x1a3726538,6659208,0,0x0,8
tick,0x1a372c99c,6664291,0,0x0,8
tick,0x1a372c99c,6667750,0,0x0,8
tick,0x1a372c99c,6672250,0,0x0,8
tick,0x1a372c99c,6673791,0,0x0,8
tick,0x1a372c99c,6674333,0,0x0,8
tick,0x1a372c99c,6675541,0,0x0,8
tick,0x1a372c99c,6681250,0,0x0,8
tick,0x1a372c99c,6681750,0,0x0,8
tick,0x1a372c99c,6687958,0,0x0,8
tick,0x100e99b34,6688041,0,0x0,0,0x101487f04,0x1075392c4,0x107522ee4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6692750,0,0x0,8
tick,0x1a372c99c,6693125,0,0x0,8
tick,0x1010c803c,6694333,0,0x0,0,0x0,0x107524a8c,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6696750,0,0x0,8
tick,0x1a372c99c,6696916,0,0x0,8
tick,0x1a372c99c,6697875,0,0x0,8
tick,0x1a372c99c,6701083,0,0x0,8
tick,0x1a372c99c,6701541,0,0x0,8
tick,0x1a372c99c,6702791,0,0x0,8
tick,0x1a372c99c,6718041,0,0x0,8
tick,0x1a3726538,6719083,0,0x0,8
tick,0x1a372c99c,6735625,0,0x0,8
tick,0x1a372c99c,6738416,0,0x0,8
tick,0x1a372c99c,6741375,0,0x0,8
tick,0x100eecd7c,6741625,0,0x0,0
tick,0x1a372c99c,6743875,0,0x0,8
tick,0x1a372c99c,6744125,0,0x0,8
tick,0x1a372c99c,6745250,0,0x0,8
tick,0x1a372c99c,6746291,0,0x0,8
tick,0x1a372c99c,6750875,0,0x0,8
tick,0x1a372c99c,6751125,0,0x0,8
tick,0x1a372c99c,6757000,0,0x0,8
tick,0x1a372c99c,6757125,0,0x0,8
tick,0x1a372c99c,6764083,0,0x0,8
tick,0x1a372c99c,6764666,0,0x0,8
tick,0x1a372c99c,6765875,0,0x0,8
tick,0x1a372c99c,6768625,0,0x0,8
tick,0x1a372c99c,6769166,0,0x0,8
tick,0x1a372c99c,6772875,0,0x0,8
tick,0x1a372c99c,6773000,0,0x0,8
tick,0x1a372c99c,6774208,0,0x0,8
tick,0x1a372c99c,6785791,0,0x0,8
tick,0x1a372c99c,6792708,0,0x0,8
tick,0x1a372c99c,6793000,0,0x0,8
tick,0x1a372c99c,6795166,0,0x0,8
tick,0x1a372c99c,6795750,0,0x0,8
tick,0x1a372c99c,6797666,0,0x0,8
tick,0x1a372c99c,6797875,0,0x0,8
tick,0x1a372c99c,6801125,0,0x0,8
tick,0x1a372c99c,6801666,0,0x0,8
tick,0x1a372c99c,6802875,0,0x0,8
tick,0x1013adb84,6804125,0,0x0,0,0x107534460,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6808333,0,0x0,8
tick,0x1a372c99c,6809041,0,0x0,8
tick,0x1a372c99c,6815166,0,0x0,8
tick,0x1a372c99c,6820708,0,0x0,8
tick,0x1a3726538,6821458,0,0x0,8
tick,0x1a372c99c,6822500,0,0x0,8
tick,0x1a372c99c,6823958,0,0x0,8
tick,0x1013a6b40,6824833,0,0x0,0,0x1075348f0,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6827291,0,0x0,8
tick,0x1a372c99c,6827333,0,0x0,8
tick,0x1a372c99c,6828416,0,0x0,8
tick,0x1a372c99c,6836875,0,0x0,8
tick,0x100f46500,6837416,0,0x0,5
tick,0x1a372c99c,6841958,0,0x0,8
tick,0x1a372c99c,6842250,0,0x0,8
tick,0x1a3768530,6843291,0,0x0,8
tick,0x1a372c99c,6845250,0,0x0,8
tick,0x1a372c99c,6846666,0,0x0,8
tick,0x1a372c99c,6846875,0,0x0,8
tick,0x1a372c99c,6848000,0,0x0,8
tick,0x1a372c99c,6849083,0,0x0,8
tick,0x1a372c99c,6853958,0,0x0,8
tick,0x1a372c99c,6854083,0,0x0,8
tick,0x1a372c99c,6859541,0,0x0,8
tick,0x1a372c99c,6860750,0,0x0,8
tick,0x1a372c99c,6864125,0,0x0,8
tick,0x1a372c99c,6865041,0,0x0,8
tick,0x1a372c99c,6869708,0,0x0,8
scavenge,begin,0,843848,1643426352353
scavenge,end,0,844020,1643426352353
tick,0x1a372c99c,6872958,0,0x0,8
tick,0x1a372c99c,6873125,0,0x0,8
tick,0x1a372953c,6874208,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6883458,0,0x0,8
tick,0x1a372c99c,6894416,0,0x0,8
tick,0x1a372c99c,6896000,0,0x0,8
tick,0x1013a1f80,6896333,0,0x0,0,0x10752fd04,0x107533410
tick,0x1a372c99c,6898291,0,0x0,8
tick,0x1a372c99c,6901041,0,0x0,8
tick,0x1a372c99c,6901416,0,0x0,8
tick,0x1a372c99c,6902625,0,0x0,8
tick,0x1030d64f0,6903833,0,0x0,8
tick,0x1a372c99c,6905458,0,0x0,8
tick,0x1a372c99c,6912000,0,0x0,8
tick,0x1a3579ff0,6912291,0,0x0,5
tick,0x1a372c99c,6914791,0,0x0,8
tick,0x1a3726538,6914875,0,0x0,8
tick,0x1a372c99c,6919583,0,0x0,8
tick,0x1a372c99c,6919916,0,0x0,8
tick,0x1a372c99c,6921125,0,0x0,8
tick,0x1a372c99c,6923916,0,0x0,8
tick,0x1a372c99c,6924916,0,0x0,8
tick,0x1a372c99c,6927541,0,0x0,8
tick,0x1a372c99c,6928625,0,0x0,8
tick,0x1a372c99c,6935833,0,0x0,8
tick,0x1a372c99c,6936083,0,0x0,8
tick,0x1a372c99c,6941875,0,0x0,8
tick,0x1a372c99c,6943375,0,0x0,8
tick,0x1a372c99c,6944958,0,0x0,8
tick,0x1a3726538,6945208,0,0x0,8
tick,0x1a372c99c,6946708,0,0x0,8
tick,0x1a372c99c,6947666,0,0x0,8
tick,0x1a372c99c,6948625,0,0x0,8
tick,0x1a372c99c,6952500,0,0x0,8
tick,0x1a372c99c,6956166,0,0x0,8
tick,0x1a372c99c,6958833,0,0x0,8
tick,0x1a372c99c,6963083,0,0x0,8
tick,0x2f3ebe220efc,6963458,0,0x0,0,0x2f3ebe1ebf00,0x10750e078,0x10752b3f4,0x1075289d0,0x107534848,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,6964791,0,0x0,8
tick,0x1a372c99c,6966750,0,0x0,8
tick,0x1a372c99c,6967166,0,0x0,8
tick,0x1a372c99c,6971375,0,0x0,8
tick,0x1a372c99c,6972083,0,0x0,8
tick,0x1a372c99c,6979500,0,0x0,8
tick,0x1a372c99c,6985791,0,0x0,8
tick,0x1a372c99c,6987125,0,0x0,8
tick,0x1a372c99c,6988916,0,0x0,8
tick,0x1a372c99c,6990625,0,0x0,8
tick,0x1a372c99c,6991666,0,0x0,8
tick,0x1a372c99c,6992958,0,0x0,8
tick,0x1a372c99c,6996208,0,0x0,8
tick,0x1a372c99c,6999833,0,0x0,8
tick,0x1a372c99c,7000333,0,0x0,8
tick,0x1a372c99c,7002583,0,0x0,8
tick,0x1a372c99c,7002708,0,0x0,8
tick,0x1a372c99c,7006916,0,0x0,8
tick,0x1a372c99c,7007500,0,0x0,8
tick,0x1a372c99c,7008583,0,0x0,8
tick,0x1a372c99c,7010250,0,0x0,8
tick,0x1a372c99c,7010958,0,0x0,8
tick,0x1a372c99c,7014625,0,0x0,8
tick,0x1a372c99c,7015791,0,0x0,8
tick,0x1a372c99c,7022875,0,0x0,8
tick,0x1a372c99c,7023166,0,0x0,8
tick,0x1a372c99c,7029000,0,0x0,8
tick,0x1a372c99c,7030375,0,0x0,8
tick,0x1a372c99c,7030625,0,0x0,8
tick,0x1a372c99c,7031958,0,0x0,8
tick,0x1a372c99c,7033875,0,0x0,8
tick,0x1a372c99c,7034375,0,0x0,8
tick,0x100cad7d0,7035583,0,0x0,0,0x0,0x10752f1cc,0x107530f38,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,7039541,0,0x0,8
tick,0x1a372c99c,7043125,0,0x0,8
tick,0x1a372c99c,7045833,0,0x0,8
tick,0x1a372c99c,7050125,0,0x0,8
tick,0x1a372c99c,7050708,0,0x0,8
tick,0x1a372c99c,7051875,0,0x0,8
scavenge,begin,0,853883,1643426352535
scavenge,end,0,854052,1643426352535
tick,0x1a372c99c,7053416,0,0x0,8
tick,0x1a372c99c,7054833,0,0x0,8
tick,0x1a372c99c,7057833,0,0x0,8
tick,0x1a372c99c,7058083,0,0x0,8
tick,0x1a372c99c,7059125,0,0x0,8
tick,0x1a372c99c,7066250,0,0x0,8
tick,0x1a372c99c,7066541,0,0x0,8
tick,0x1a372c99c,7072250,0,0x0,8
tick,0x1a372c99c,7072500,0,0x0,8
tick,0x1a372c99c,7073666,0,0x0,8
tick,0x1a372c99c,7075375,0,0x0,8
tick,0x1a372c99c,7077125,0,0x0,8
tick,0x1a372c99c,7078291,0,0x0,8
tick,0x1a372953c,7079250,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7082750,0,0x0,8
tick,0x1a372c99c,7082916,0,0x0,8
tick,0x1a372c99c,7086375,0,0x0,8
tick,0x1a372c99c,7086833,0,0x0,8
tick,0x1a372c99c,7089041,0,0x0,8
tick,0x1a372c99c,7089375,0,0x0,8
tick,0x1a372c99c,7093416,0,0x0,8
tick,0x1a372c99c,7093916,0,0x0,8
tick,0x1a372c99c,7095000,0,0x0,8
tick,0x1a372c99c,7096791,0,0x0,8
tick,0x1a372c99c,7097375,0,0x0,8
tick,0x1a372c99c,7101208,0,0x0,8
tick,0x1a372c99c,7102208,0,0x0,8
tick,0x1a372c99c,7109541,0,0x0,8
tick,0x1a372c99c,7109791,0,0x0,8
tick,0x1a372c99c,7115541,0,0x0,8
tick,0x1a372c99c,7117000,0,0x0,8
tick,0x1a372c99c,7118833,0,0x0,8
tick,0x1a372c99c,7120541,0,0x0,8
tick,0x1a372c99c,7121041,0,0x0,8
tick,0x100ea7c1c,7122208,0,0x0,0
tick,0x1a372c99c,7126416,0,0x0,8
tick,0x1a372c99c,7130666,0,0x0,8
tick,0x1a3726538,7131833,0,0x0,8
tick,0x1a372c99c,7133750,0,0x0,8
tick,0x1a372c99c,7134375,0,0x0,8
tick,0x1a372c99c,7140291,0,0x0,8
tick,0x1a3726538,7140958,0,0x0,8
tick,0x1a372c99c,7142333,0,0x0,8
tick,0x1a372c99c,7143875,0,0x0,8
tick,0x100f8b530,7144708,0,0x0,0,0x0,0x107530a88,0x107532628,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7149750,0,0x0,8
tick,0x100f4996c,7149791,0,0x0,5
tick,0x1a372c99c,7151041,0,0x0,8
tick,0x1a372c99c,7158250,0,0x0,8
tick,0x1a372c99c,7158666,0,0x0,8
tick,0x1a372c99c,7164166,0,0x0,8
tick,0x1a372c99c,7165458,0,0x0,8
tick,0x1a372c99c,7167291,0,0x0,8
tick,0x1a372c99c,7167458,0,0x0,8
tick,0x1a372c99c,7169125,0,0x0,8
tick,0x1a372c99c,7169750,0,0x0,8
tick,0x1a372c99c,7170833,0,0x0,8
tick,0x1a372c99c,7174916,0,0x0,8
tick,0x1a372c99c,7178333,0,0x0,8
tick,0x1a372c99c,7181000,0,0x0,8
tick,0x1a372c99c,7185916,0,0x0,8
tick,0x1a372c99c,7187250,0,0x0,8
tick,0x1a372c99c,7190291,0,0x0,8
tick,0x1013b0e20,7191250,0,0x0,0,0x107533ae4,0x10752fa88,0x107533410
tick,0x1a372c99c,7197708,0,0x0,8
tick,0x1a372c99c,7198166,0,0x0,8
tick,0x1a372c99c,7199833,0,0x0,8
tick,0x1a372c99c,7223083,0,0x0,8
tick,0x1a372c99c,7223500,0,0x0,8
tick,0x1a372c99c,7231833,0,0x0,8
tick,0x1a372c99c,7233750,0,0x0,8
tick,0x1a372c99c,7235875,0,0x0,8
tick,0x1a372c99c,7235958,0,0x0,8
tick,0x1a372c99c,7238500,0,0x0,8
tick,0x1a372c99c,7239458,0,0x0,8
tick,0x1a372c99c,7240666,0,0x0,8
tick,0x1a372c99c,7245375,0,0x0,8
tick,0x1a372c99c,7250375,0,0x0,8
tick,0x1a372c99c,7250875,0,0x0,8
tick,0x1a372c99c,7253291,0,0x0,8
tick,0x1a372c99c,7253416,0,0x0,8
tick,0x1a372c99c,7260166,0,0x0,8
tick,0x1a372c99c,7260541,0,0x0,8
tick,0x1a372c99c,7261791,0,0x0,8
scavenge,begin,0,863814,1643426352745
scavenge,end,0,863996,1643426352745
tick,0x1a372c99c,7265250,0,0x0,8
tick,0x1a372c99c,7265541,0,0x0,8
tick,0x1a372c99c,7270958,0,0x0,8
tick,0x1a372c99c,7271875,0,0x0,8
tick,0x1a372c99c,7282166,0,0x0,8
tick,0x1a372c99c,7282625,0,0x0,8
tick,0x1a372c99c,7288791,0,0x0,8
tick,0x1013b63a0,7288791,0,0x0,0,0x37743592f314
tick,0x1a372c99c,7290500,0,0x0,8
tick,0x1a372c99c,7292958,0,0x0,8
tick,0x1a372c99c,7295208,0,0x0,8
tick,0x1a372c99c,7297083,0,0x0,8
tick,0x1a372c99c,7297500,0,0x0,8
tick,0x1a372c99c,7298541,0,0x0,8
tick,0x1a372c99c,7303458,0,0x0,8
tick,0x1a372c99c,7307458,0,0x0,8
tick,0x1a372c99c,7308208,0,0x0,8
tick,0x1a372c99c,7310666,0,0x0,8
tick,0x1a372c99c,7310791,0,0x0,8
tick,0x1a372c99c,7317208,0,0x0,8
tick,0x1a372c99c,7317958,0,0x0,8
tick,0x1a372c99c,7319166,0,0x0,8
tick,0x1a372c99c,7320541,0,0x0,8
tick,0x1a372c99c,7321416,0,0x0,8
tick,0x1a372c99c,7325041,0,0x0,8
tick,0x1a372c99c,7325166,0,0x0,8
tick,0x1a372c99c,7326291,0,0x0,8
tick,0x1a372c99c,7333250,0,0x0,8
tick,0x1a372c99c,7333500,0,0x0,8
tick,0x1a372c99c,7339375,0,0x0,8
tick,0x1a372c99c,7339708,0,0x0,8
tick,0x1a372c99c,7340958,0,0x0,8
tick,0x1a372c99c,7342583,0,0x0,8
tick,0x1a372c99c,7344416,0,0x0,8
tick,0x1a372c99c,7344666,0,0x0,8
tick,0x1a372c99c,7345750,0,0x0,8
tick,0x1a372c99c,7346791,0,0x0,8
tick,0x1a372c99c,7350208,0,0x0,8
tick,0x1a372c99c,7350333,0,0x0,8
tick,0x1a372c99c,7353916,0,0x0,8
tick,0x1a372c99c,7354166,0,0x0,8
tick,0x1a372c99c,7356541,0,0x0,8
tick,0x1a372c99c,7356666,0,0x0,8
tick,0x1a372c99c,7360791,0,0x0,8
tick,0x1a372c99c,7361250,0,0x0,8
tick,0x1a372c99c,7362291,0,0x0,8
tick,0x1a372c99c,7364166,0,0x0,8
tick,0x1a372c99c,7364750,0,0x0,8
tick,0x1a372c99c,7368875,0,0x0,8
tick,0x1a372c99c,7369625,0,0x0,8
tick,0x1a372c99c,7377083,0,0x0,8
tick,0x100f30a28,7377125,0,0x0,5
tick,0x1a372c99c,7383375,0,0x0,8
tick,0x1075338c8,7383416,0,0x0,0,0x10752fa88,0x107533410
tick,0x1a372c99c,7384791,0,0x0,8
tick,0x1a372c99c,7386416,0,0x0,8
tick,0x1a372c99c,7388125,0,0x0,8
tick,0x1a372c99c,7388166,0,0x0,8
tick,0x1a372c99c,7389500,0,0x0,8
tick,0x1a372c99c,7393916,0,0x0,8
tick,0x1a372c99c,7397708,0,0x0,8
tick,0x1a372c99c,7398083,0,0x0,8
tick,0x1a372c99c,7400500,0,0x0,8
tick,0x1a372c99c,7400500,0,0x0,8
tick,0x1a372c99c,7404916,0,0x0,8
tick,0x1a372c99c,7405291,0,0x0,8
tick,0x1013e3e38,7406583,0,0x0,0,0x10752f848,0x107533410
tick,0x1a372c99c,7408250,0,0x0,8
tick,0x1a372c99c,7409083,0,0x0,8
tick,0x1a372c99c,7412875,0,0x0,8
tick,0x1a372c99c,7414166,0,0x0,8
tick,0x1a372c99c,7429750,0,0x0,8
tick,0x1a372c99c,7430416,0,0x0,8
tick,0x1a372c99c,7431500,0,0x0,8
tick,0x1a372c99c,7442791,0,0x0,8
tick,0x107533740,7442791,0,0x0,0,0x107533410
tick,0x1a372c99c,7444166,0,0x0,8
tick,0x1a372c99c,7446000,0,0x0,8
tick,0x1a372c99c,7447916,0,0x0,8
tick,0x1a372c99c,7448833,0,0x0,8
tick,0x1a372c99c,7450083,0,0x0,8
tick,0x1a372c99c,7453791,0,0x0,8
tick,0x1a372c99c,7456250,0,0x0,8
tick,0x1a372c99c,7460000,0,0x0,8
tick,0x1a372c99c,7464583,0,0x0,8
tick,0x1a372c99c,7464750,0,0x0,8
tick,0x1a372c99c,7465708,0,0x0,8
scavenge,begin,0,872371,1643426352949
scavenge,end,0,872550,1643426352949
tick,0x1a372c99c,7468041,0,0x0,8
tick,0x1a372c99c,7468208,0,0x0,8
tick,0x1a372c99c,7471541,0,0x0,8
tick,0x1a372c99c,7471666,0,0x0,8
tick,0x1a372c99c,7472875,0,0x0,8
tick,0x1a372c99c,7481583,0,0x0,8
tick,0x1a3733940,7481625,0,0x0,0,0x0,0x10752a18c,0x1075344d0,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7487083,0,0x0,8
tick,0x1a372c99c,7488333,0,0x0,8
tick,0x1a372c99c,7490041,0,0x0,8
tick,0x1a372c99c,7492958,0,0x0,8
tick,0x1a372c99c,7493333,0,0x0,8
tick,0x1a372c99c,7494666,0,0x0,8
tick,0x1a372c99c,7498625,0,0x0,8
tick,0x1a372c99c,7501416,0,0x0,8
tick,0x1a372c99c,7504666,0,0x0,8
tick,0x1a372c99c,7505416,0,0x0,8
tick,0x1a372c99c,7513583,0,0x0,8
tick,0x1a372c99c,7514583,0,0x0,8
tick,0x1a372c99c,7517333,0,0x0,8
tick,0x1a372c99c,7519166,0,0x0,8
tick,0x1a372c99c,7521208,0,0x0,8
tick,0x1a372c99c,7522291,0,0x0,8
tick,0x1a372c99c,7531250,0,0x0,8
tick,0x1a372c99c,7532000,0,0x0,8
tick,0x1a372c99c,7536375,0,0x0,8
tick,0x1a372c99c,7537625,0,0x0,8
tick,0x1a372c99c,7539708,0,0x0,8
tick,0x1a372c99c,7542291,0,0x0,8
tick,0x1a3726538,7543208,0,0x0,8
tick,0x1a372c99c,7544291,0,0x0,8
tick,0x1a372c99c,7550041,0,0x0,8
tick,0x1a372c99c,7550416,0,0x0,8
tick,0x1a372c99c,7553916,0,0x0,8
tick,0x1a372c99c,7554458,0,0x0,8
tick,0x1a372c99c,7560666,0,0x0,8
tick,0x1a372c99c,7561333,0,0x0,8
tick,0x1a372c99c,7562500,0,0x0,8
tick,0x1a372c99c,7564583,0,0x0,8
tick,0x1a372c99c,7565083,0,0x0,8
tick,0x1a372c99c,7569250,0,0x0,8
tick,0x107539460,7570125,0,0x0,0,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7572166,0,0x0,8
tick,0x1a372c99c,7573000,0,0x0,8
tick,0x1a372c99c,7592583,0,0x0,8
tick,0x1013e3b3c,7592791,0,0x0,0,0x1075274b4,0x107538c4c,0x107529434
tick,0x1a372c99c,7599500,0,0x0,8
tick,0x1a372c99c,7601125,0,0x0,8
tick,0x1a372953c,7601625,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7603416,0,0x0,8
tick,0x1a372c99c,7605583,0,0x0,8
tick,0x1a372c99c,7606541,0,0x0,8
tick,0x1a372c99c,7607750,0,0x0,8
tick,0x1a372c99c,7609208,0,0x0,8
tick,0x1a372c99c,7616625,0,0x0,8
tick,0x1013ac7c4,7617375,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7619875,0,0x0,8
tick,0x1a372c99c,7619875,0,0x0,8
tick,0x1a372c99c,7626250,0,0x0,8
tick,0x1a372c99c,7627458,0,0x0,8
tick,0x1a372c99c,7631416,0,0x0,8
tick,0x1a372c99c,7632416,0,0x0,8
tick,0x1a372c99c,7636125,0,0x0,8
tick,0x1a372c99c,7636250,0,0x0,8
tick,0x1a372c99c,7637500,0,0x0,8
tick,0x1a372c99c,7648333,0,0x0,8
tick,0x1a372c99c,7656541,0,0x0,8
tick,0x1a372c99c,7656708,0,0x0,8
tick,0x1a372c99c,7658750,0,0x0,8
tick,0x1a372c99c,7661083,0,0x0,8
tick,0x1a372c99c,7663666,0,0x0,8
tick,0x1a372c99c,7663958,0,0x0,8
tick,0x1a372c99c,7664916,0,0x0,8
tick,0x1a372c99c,7666000,0,0x0,8
tick,0x1a372c99c,7675000,0,0x0,8
tick,0x1013b0200,7675666,0,0x0,0,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7678291,0,0x0,8
tick,0x1a372c99c,7679291,0,0x0,8
tick,0x1a372c99c,7684583,0,0x0,8
tick,0x1a372c99c,7685333,0,0x0,8
scavenge,begin,0,883290,1643426353168
scavenge,end,0,883505,1643426353168
tick,0x1a372c99c,7686416,0,0x0,8
tick,0x1a372c99c,7688708,0,0x0,8
tick,0x1a372c99c,7688875,0,0x0,8
tick,0x1a372c99c,7693958,0,0x0,8
tick,0x1a372c99c,7694916,0,0x0,8
tick,0x1a372c99c,7702208,0,0x0,8
tick,0x1a372953c,7702250,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7708333,0,0x0,8
tick,0x1a372c99c,7708666,0,0x0,8
tick,0x1a372953c,7709666,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7711250,0,0x0,8
tick,0x1a372c99c,7713125,0,0x0,8
tick,0x1a372c99c,7713416,0,0x0,8
tick,0x1a372c99c,7714500,0,0x0,8
tick,0x1a372c99c,7721916,0,0x0,8
tick,0x1a372c99c,7722541,0,0x0,8
tick,0x1a372c99c,7724625,0,0x0,8
tick,0x1a372c99c,7725083,0,0x0,8
tick,0x1a372c99c,7728916,0,0x0,8
tick,0x1a372c99c,7730000,0,0x0,8
tick,0x1a372c99c,7732083,0,0x0,8
tick,0x1a372c99c,7732583,0,0x0,8
tick,0x1a372c99c,7736750,0,0x0,8
tick,0x1a372c99c,7737708,0,0x0,8
tick,0x1a372c99c,7744916,0,0x0,8
tick,0x1a372c99c,7745083,0,0x0,8
tick,0x1a372c99c,7751041,0,0x0,8
tick,0x1a372c99c,7751333,0,0x0,8
tick,0x1a372c99c,7752375,0,0x0,8
tick,0x1a372c99c,7754000,0,0x0,8
tick,0x1a372c99c,7755875,0,0x0,8
tick,0x1a372c99c,7756000,0,0x0,8
tick,0x1a372c99c,7757125,0,0x0,8
tick,0x1a372c99c,7758208,0,0x0,8
tick,0x1a372c99c,7764916,0,0x0,8
tick,0x1a372c99c,7765416,0,0x0,8
tick,0x1a372c99c,7767666,0,0x0,8
tick,0x1a372c99c,7767916,0,0x0,8
tick,0x1a372c99c,7772083,0,0x0,8
tick,0x1a372c99c,7772833,0,0x0,8
tick,0x1a372c99c,7773875,0,0x0,8
tick,0x1a372c99c,7775416,0,0x0,8
tick,0x100c25554,7776250,0,0x0,6
tick,0x1a372c99c,7780083,0,0x0,8
tick,0x1a372c99c,7781208,0,0x0,8
tick,0x1a372c99c,7788375,0,0x0,8
tick,0x1a372c99c,7788458,0,0x0,8
tick,0x1a372c99c,7794500,0,0x0,8
tick,0x1a372c99c,7794791,0,0x0,8
tick,0x1a372c99c,7795916,0,0x0,8
tick,0x1a372c99c,7797375,0,0x0,8
tick,0x1a372c99c,7799291,0,0x0,8
tick,0x1a372c99c,7799458,0,0x0,8
tick,0x1a372c99c,7800750,0,0x0,8
tick,0x1a372c99c,7808333,0,0x0,8
tick,0x1a372c99c,7808666,0,0x0,8
tick,0x1a372c99c,7811041,0,0x0,8
tick,0x1a372c99c,7811291,0,0x0,8
tick,0x1a372c99c,7815458,0,0x0,8
tick,0x1a372c99c,7816083,0,0x0,8
tick,0x1a372c99c,7817333,0,0x0,8
tick,0x1a372c99c,7818916,0,0x0,8
tick,0x1a372c99c,7819833,0,0x0,8
tick,0x1a372c99c,7823458,0,0x0,8
tick,0x1a372c99c,7823583,0,0x0,8
tick,0x1a372c99c,7824666,0,0x0,8
tick,0x1a372c99c,7831458,0,0x0,8
tick,0x1a372c99c,7831916,0,0x0,8
tick,0x1a372c99c,7837750,0,0x0,8
tick,0x1a372c99c,7837916,0,0x0,8
tick,0x1a372c99c,7839250,0,0x0,8
tick,0x1a372c99c,7840708,0,0x0,8
tick,0x1a372c99c,7842875,0,0x0,8
tick,0x101093da0,7843000,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,7844083,0,0x0,8
tick,0x1a372c99c,7845166,0,0x0,8
tick,0x1a372c99c,7851666,0,0x0,8
tick,0x1a372c99c,7851916,0,0x0,8
tick,0x1a372c99c,7854333,0,0x0,8
tick,0x1a372c99c,7854458,0,0x0,8
tick,0x1a372c99c,7858791,0,0x0,8
tick,0x1a372c99c,7859166,0,0x0,8
scavenge,begin,0,891566,1643426353342
scavenge,end,0,891736,1643426353342
tick,0x1a372c99c,7860208,0,0x0,8
tick,0x1a372c99c,7862125,0,0x0,8
tick,0x1a372c99c,7862458,0,0x0,8
tick,0x1a372c99c,7866625,0,0x0,8
tick,0x1a372c99c,7867375,0,0x0,8
tick,0x1a372c99c,7874916,0,0x0,8
tick,0x1a372c99c,7875458,0,0x0,8
tick,0x1a372c99c,7880875,0,0x0,8
tick,0x1a372c99c,7882250,0,0x0,8
tick,0x1a372c99c,7883875,0,0x0,8
tick,0x1a372c99c,7884208,0,0x0,8
tick,0x1a372c99c,7885750,0,0x0,8
tick,0x1a372c99c,7886458,0,0x0,8
tick,0x1a372c99c,7887541,0,0x0,8
tick,0x1a372c99c,7895375,0,0x0,8
tick,0x1a357a12c,7895416,0,0x0,5
tick,0x1a372c99c,7898375,0,0x0,8
tick,0x1a372c99c,7898916,0,0x0,8
tick,0x1a372c99c,7905291,0,0x0,8
tick,0x1a3726538,7905416,0,0x0,8
tick,0x1a372c99c,7906708,0,0x0,8
tick,0x1a372c99c,7909291,0,0x0,8
tick,0x1a372c99c,7909708,0,0x0,8
tick,0x1a372c99c,7914708,0,0x0,8
tick,0x1a357a268,7915000,0,0x0,5
tick,0x1a372c99c,7916291,0,0x0,8
tick,0x1a372c99c,7926166,0,0x0,8
tick,0x1a372c99c,7926708,0,0x0,8
tick,0x1a372c99c,7932791,0,0x0,8
tick,0x1a372c99c,7934458,0,0x0,8
tick,0x1a372c99c,7936625,0,0x0,8
tick,0x1a372c99c,7939333,0,0x0,8
tick,0x1a372c99c,7940250,0,0x0,8
tick,0x1a372c99c,7941500,0,0x0,8
tick,0x1a372c99c,7949458,0,0x0,8
tick,0x1a372c99c,7949916,0,0x0,8
tick,0x1a372c99c,7952250,0,0x0,8
tick,0x1a372c99c,7952375,0,0x0,8
tick,0x1a372c99c,7956750,0,0x0,8
tick,0x1a372c99c,7957250,0,0x0,8
tick,0x1a372c99c,7958416,0,0x0,8
tick,0x1a372c99c,7960208,0,0x0,8
tick,0x1a372c99c,7960708,0,0x0,8
tick,0x1a372c99c,7964791,0,0x0,8
tick,0x1a372c99c,7965500,0,0x0,8
tick,0x1a372c99c,7966875,0,0x0,8
tick,0x1a372c99c,7974541,0,0x0,8
tick,0x1a372c99c,7975166,0,0x0,8
tick,0x1a372c99c,7982125,0,0x0,8
tick,0x1a372c99c,7983750,0,0x0,8
tick,0x1a372c99c,7986250,0,0x0,8
tick,0x1a372c99c,7988708,0,0x0,8
tick,0x1a372c99c,7989500,0,0x0,8
tick,0x1a372c99c,7990625,0,0x0,8
tick,0x1a372c99c,7996875,0,0x0,8
tick,0x1a372c99c,7997916,0,0x0,8
tick,0x1a372c99c,8001083,0,0x0,8
tick,0x1a3726538,8001666,0,0x0,8
tick,0x1a372c99c,8005625,0,0x0,8
tick,0x1a372c99c,8006708,0,0x0,8
tick,0x1a372c99c,8008916,0,0x0,8
tick,0x1a372c99c,8009083,0,0x0,8
tick,0x1a372c99c,8012500,0,0x0,8
tick,0x1a372c99c,8012625,0,0x0,8
tick,0x1a372c99c,8013708,0,0x0,8
tick,0x1a372c99c,8022500,0,0x0,8
tick,0x1a372c99c,8022500,0,0x0,8
tick,0x1a372c99c,8027500,0,0x0,8
tick,0x1a372c99c,8027541,0,0x0,8
tick,0x1a372c99c,8028916,0,0x0,8
tick,0x1a372c99c,8030333,0,0x0,8
tick,0x1a372c99c,8033541,0,0x0,8
tick,0x100e1f018,8033750,0,0x0,5,0x0,0x107539ee4,0x1075364e4,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8034875,0,0x0,8
tick,0x1a372c99c,8041208,0,0x0,8
tick,0x10752fad8,8041833,0,0x0,0,0x107533410
tick,0x1a372c99c,8043916,0,0x0,8
tick,0x1a372c99c,8044375,0,0x0,8
scavenge,begin,0,902579,1643426353528
scavenge,end,0,902766,1643426353528
tick,0x1a372c99c,8049416,0,0x0,8
tick,0x1a372c99c,8050416,0,0x0,8
tick,0x1a372c99c,8052666,0,0x0,8
tick,0x10101de3c,8052916,0,0x0,0,0x0,0x10752f1cc,0x1075226b8,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8056250,0,0x0,8
tick,0x1a372c99c,8056541,0,0x0,8
tick,0x1a372c99c,8057500,0,0x0,8
tick,0x1a372c99c,8066166,0,0x0,8
tick,0x1013dcf2c,8066208,0,0x0,0,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8067833,0,0x0,8
tick,0x1a372c99c,8081041,0,0x0,8
tick,0x100e4b19c,8081083,0,0x0,0,0x0,0x107533230
tick,0x1a372c99c,8084083,0,0x0,8
tick,0x1a372c99c,8089875,0,0x0,8
tick,0x1a372c99c,8092333,0,0x0,8
tick,0x1a372c99c,8093291,0,0x0,8
tick,0x1a372c99c,8094500,0,0x0,8
tick,0x1a372c99c,8101125,0,0x0,8
tick,0x1a372c99c,8101958,0,0x0,8
tick,0x1a372c99c,8103916,0,0x0,8
tick,0x1a372c99c,8104416,0,0x0,8
tick,0x1a372c99c,8109416,0,0x0,8
tick,0x1a372c99c,8110333,0,0x0,8
tick,0x1a372c99c,8111458,0,0x0,8
tick,0x1a372c99c,8112750,0,0x0,8
tick,0x1a3726538,8113666,0,0x0,8
tick,0x1a372c99c,8116333,0,0x0,8
tick,0x1a372c99c,8117375,0,0x0,8
tick,0x1a372c99c,8125875,0,0x0,8
tick,0x1a372c99c,8126125,0,0x0,8
tick,0x1a372c99c,8130833,0,0x0,8
tick,0x1a372c99c,8130958,0,0x0,8
tick,0x1030d64f0,8132166,0,0x0,8
tick,0x1a372c99c,8133750,0,0x0,8
tick,0x1a372c99c,8136666,0,0x0,8
tick,0x1a372c99c,8137083,0,0x0,8
tick,0x1a372c99c,8138291,0,0x0,8
tick,0x1a372c99c,8144625,0,0x0,8
tick,0x1a372c99c,8147416,0,0x0,8
tick,0x1a372c99c,8152916,0,0x0,8
tick,0x1a372c99c,8153250,0,0x0,8
tick,0x1013ac904,8154458,0,0x0,0,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8156333,0,0x0,8
tick,0x1a372c99c,8156958,0,0x0,8
tick,0x1a372c99c,8159958,0,0x0,8
tick,0x1a372c99c,8160666,0,0x0,8
tick,0x1a372c99c,8169791,0,0x0,8
tick,0x1a372c99c,8170416,0,0x0,8
tick,0x1a372c99c,8174791,0,0x0,8
tick,0x1a372c99c,8176000,0,0x0,8
tick,0x1a372c99c,8177583,0,0x0,8
tick,0x1a372c99c,8180541,0,0x0,8
tick,0x1a372c99c,8181458,0,0x0,8
tick,0x1a372c99c,8182583,0,0x0,8
tick,0x1a372c99c,8188333,0,0x0,8
tick,0x1a372c99c,8188625,0,0x0,8
tick,0x1a372c99c,8189958,0,0x0,8
tick,0x1a372c99c,8191250,0,0x0,8
tick,0x1a372c99c,8196708,0,0x0,8
tick,0x1a372c99c,8197416,0,0x0,8
tick,0x1a372c99c,8198666,0,0x0,8
tick,0x1a372c99c,8200083,0,0x0,8
tick,0x1a372c99c,8200958,0,0x0,8
tick,0x1a372c99c,8203666,0,0x0,8
tick,0x1a372c99c,8204541,0,0x0,8
tick,0x1a372c99c,8212958,0,0x0,8
tick,0x1a372c99c,8213333,0,0x0,8
tick,0x1a372c99c,8218375,0,0x0,8
tick,0x1a372c99c,8219875,0,0x0,8
tick,0x1a372c99c,8221416,0,0x0,8
tick,0x1a372c99c,8224333,0,0x0,8
tick,0x1a372c99c,8224708,0,0x0,8
tick,0x1a372c99c,8225791,0,0x0,8
tick,0x1a372c99c,8232208,0,0x0,8
tick,0x1a3726538,8232958,0,0x0,8
tick,0x1a372c99c,8234958,0,0x0,8
scavenge,begin,0,911451,1643426353718
tick,0x100f77190,8235458,0,0x0,1
scavenge,end,0,911648,1643426353719
tick,0x1a372c99c,8240166,0,0x0,8
tick,0x1a372c99c,8240291,0,0x0,8
tick,0x1a372c99c,8241333,0,0x0,8
tick,0x1a372c99c,8243458,0,0x0,8
tick,0x1a372c99c,8243625,0,0x0,8
tick,0x1a372c99c,8247041,0,0x0,8
tick,0x1a372c99c,8247375,0,0x0,8
tick,0x1010bf0fc,8248625,0,0x0,0,0x0,0x107524a8c,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8257416,0,0x0,8
tick,0x107534a9c,8257500,0,0x0,0,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8263208,0,0x0,8
tick,0x1a372c99c,8266041,0,0x0,8
tick,0x1a372c99c,8266791,0,0x0,8
tick,0x1a372c99c,8271750,0,0x0,8
tick,0x1013e3b60,8271833,0,0x0,0,0x10753213c,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8273125,0,0x0,8
tick,0x1a372c99c,8282291,0,0x0,8
tick,0x1a372c99c,8282500,0,0x0,8
tick,0x1a372c99c,8285541,0,0x0,8
tick,0x1a372c99c,8286375,0,0x0,8
tick,0x1a372c99c,8290041,0,0x0,8
tick,0x1a372c99c,8292375,0,0x0,8
tick,0x1a372c99c,8293750,0,0x0,8
tick,0x1a372c99c,8295333,0,0x0,8
tick,0x1a372c99c,8301833,0,0x0,8
tick,0x1a372c99c,8301833,0,0x0,8
tick,0x1a372c99c,8305208,0,0x0,8
tick,0x1a372c99c,8309458,0,0x0,8
tick,0x1014a7300,8309541,0,0x0,0,0x107524894,0x10753872c,0x107534958,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8317333,0,0x0,8
tick,0x1a372c99c,8323458,0,0x0,8
tick,0x1a372c99c,8325416,0,0x0,8
tick,0x1a372c99c,8327291,0,0x0,8
tick,0x1a372c99c,8329125,0,0x0,8
tick,0x1a3726538,8329708,0,0x0,8
tick,0x1a372c99c,8331000,0,0x0,8
tick,0x1a372c99c,8334083,0,0x0,8
tick,0x1a372c99c,8338375,0,0x0,8
tick,0x1a3733940,8338416,0,0x0,8
tick,0x1a372c99c,8340000,0,0x0,8
tick,0x1a372c99c,8343083,0,0x0,8
tick,0x1a372c99c,8343125,0,0x0,8
tick,0x1a372c99c,8346458,0,0x0,8
tick,0x1a372c99c,8346958,0,0x0,8
tick,0x1030d68e8,8348166,0,0x0,8
tick,0x1a372c99c,8351375,0,0x0,8
tick,0x1a372c99c,8352000,0,0x0,8
tick,0x1a3729534,8353208,0,0x0,0,0x0,0x1075324ec,0x107536fd0,0x107534a9c,0x10753684c,0x107533b9c,0x10752fa88,0x107533410
tick,0x1a372c99c,8358958,0,0x0,8
tick,0x1a372c99c,8361291,0,0x0,8
tick,0x1a372c99c,8361541,0,0x0,8
tick,0x1a372c99c,8370500,0,0x0,8
tick,0x1a372c99c,8373500,0,0x0,8
tick,0x1a372c99c,8376333,0,0x0,8
tick,0x1a3726538,8376333,0,0x0,8
tick,0x1a372c99c,8379000,0,0x0,8
tick,0x1a372c99c,8379958,0,0x0,8
tick,0x1a372c99c,8381000,0,0x0,8
tick,0x1a372c99c,8386791,0,0x0,8
tick,0x1a372c99c,8387916,0,0x0,8
tick,0x100f1ca18,8388333,0,0x0,1
tick,0x100f75434,8389625,0,0x0,1
tick,0x100f75448,8390875,0,0x0,1
tick,0x100f1cfac,8392125,0,0x0,1
markcompact,begin,0,924411,1643426353875
new,MemoryChunk,0xe049e300000,262144
new,MemoryChunk,0x47055d00000,262144
delete,MemoryChunk,0x377b70300000
delete,MemoryChunk,0x2bc52ec40000
delete,MemoryChunk,0x1ce95c80000
tick,0x1a375bfb8,8393416,0,0x0,1
markcompact,end,0,925510,1643426353876
delete,MemoryChunk,0x1f5f73840000
delete,MemoryChunk,0x1bd34ce40000
delete,MemoryChunk,0x23f7f4780000
delete,MemoryChunk,0x1cf7ce100000
delete,MemoryChunk,0x12ce33940000
delete,MemoryChunk,0x2faa3ca40000
delete,MemoryChunk,0x37aa9f640000
delete,MemoryChunk,0x1c1ae27c0000
delete,MemoryChunk,0x3b3988300000
delete,MemoryChunk,0x25ab40e80000
delete,MemoryChunk,0xecd9dc00000
delete,MemoryChunk,0x1312fd9c0000
delete,MemoryChunk,0x109d80c80000
delete,MemoryChunk,0xfbaf1200000
delete,MemoryChunk,0x31d7fbe00000
delete,MemoryChunk,0x3115f5c00000
delete,MemoryChunk,0x24ef69680000
delete,MemoryChunk,0x290ea76c0000
delete,MemoryChunk,0x3f5e6ed40000
delete,MemoryChunk,0x2db2ae680000
delete,MemoryChunk,0x127994280000
delete,MemoryChunk,0x251b9e440000
delete,MemoryChunk,0x2a6306bc0000
delete,MemoryChunk,0x1e01b9440000
delete,MemoryChunk,0x2653cca80000
delete,MemoryChunk,0x259a80ec0000
delete,MemoryChunk,0x281746a40000
delete,MemoryChunk,0x31cd511c0000
tick,0x1a372c99c,8397375,0,0x0,8
tick,0x1a372c99c,8398208,0,0x0,8
tick,0x1a372c99c,8403333,0,0x0,8
tick,0x1a372c99c,8404250,0,0x0,8
tick,0x1a372c99c,8405291,0,0x0,8
tick,0x1a372c99c,8408416,0,0x0,8
tick,0x1a372c99c,8409000,0,0x0,8
tick,0x1a372c99c,8410208,0,0x0,8
tick,0x1a372c99c,8420166,0,0x0,8
tick,0x1a372c99c,8421250,0,0x0,8
tick,0x1a372c99c,8429291,0,0x0,8
tick,0x1a372c99c,8432083,0,0x0,8
tick,0x1a372c99c,8434708,0,0x0,8
tick,0x1a372c99c,8435041,0,0x0,8
tick,0x1a372c99c,8437416,0,0x0,8
tick,0x1a372c99c,8437541,0,0x0,8
tick,0x1a372c99c,8438791,0,0x0,8
tick,0x1a372c99c,8445958,0,0x0,8
tick,0x1a372c99c,8448458,0,0x0,8
scavenge,begin,0,930172,1643426353932
scavenge,end,0,930545,1643426353932
tick,0x1a372c99c,8449708,0,0x0,8
tick,0x1a372c99c,8451541,0,0x0,8
tick,0x1a372c99c,8452000,0,0x0,8
tick,0x1a372c99c,8454791,0,0x0,8
tick,0x1a372c99c,8455625,0,0x0,8
tick,0x1a372c99c,8456708,0,0x0,8
tick,0x1a372c99c,8459625,0,0x0,8
tick,0x101496000,8460458,0,0x0,0,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1013adb10,8461708,0,0x0,0,0x311ed22673a3,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8469125,0,0x0,8
tick,0x100f29988,8469125,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,8470458,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,8471125,0x1074dd880,3508,Client._doRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:152:40,0x2779b46fce40,*
code-source-info,0x1074ddx2779b46fd078S0x38fe55861e60S0x2779b46ff878S0x324f23ca7328S0x1910fc7f2c30S0xbb714f51830S0xbb714f517a0S0xbb714f73848
tick,0x1a372c99c,8476125,0,0x0,8
tick,0x1a372c99c,8477666,0,0x0,8
tick,0x1a372c99c,8479416,0,0x0,8
tick,0x1a372c99c,8481250,0,0x0,8
tick,0x1a372c99c,8481708,0,0x0,8
tick,0x1a372c99c,8482791,0,0x0,8
tick,0x101416054,8484000,0,0x0,0,0x311ed227e16e,0x2d4de60169af,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8489916,0,0x0,8
tick,0x1014c6f3c,8489958,0,0x0,0,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8492500,0,0x0,8
tick,0x1a372c99c,8495333,0,0x0,8
tick,0x1a372c99c,8496000,0,0x0,8
tick,0x1a372c99c,8498708,0,0x0,8
tick,0x1a372c99c,8499750,0,0x0,8
tick,0x1a372c99c,8501250,0,0x0,8
tick,0x1a372c99c,8503666,0,0x0,8
tick,0x1a372c99c,8504458,0,0x0,8
tick,0x1a3726538,8505666,0,0x0,8
tick,0x1a372c99c,8512916,0,0x0,8
tick,0x100e10864,8513125,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8520083,0,0x0,8
tick,0x1a372c99c,8521375,0,0x0,8
scavenge,begin,0,939503,1643426354005
new,MemoryChunk,0x1d117e640000,262144
new,MemoryChunk,0x3dc783d40000,262144
scavenge,end,0,939831,1643426354005
tick,0x1a362a394,8522000,0,0x0,1
tick,0x1a372c99c,8523291,0,0x0,8
tick,0x1a372c99c,8525208,0,0x0,8
tick,0x1a372c99c,8525708,0,0x0,8
tick,0x1a3778110,8527000,0,0x0,5,0x0,0x10752f1cc,0x1075218b0,0x2d4de6016993,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8533291,0,0x0,8
tick,0x1a372c99c,8535791,0,0x0,8
tick,0x1a372c99c,8538666,0,0x0,8
tick,0x1a372c99c,8539333,0,0x0,8
tick,0x1a372c99c,8541916,0,0x0,8
tick,0x1a372c99c,8542708,0,0x0,8
tick,0x100dfa160,8543916,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de6016993,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8546750,0,0x0,8
code-creation,LazyCompile,13,8547041,0x1074de7a0,1448,HTTPParser.parseHeader /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:206:45,0x395d7b337d88,*
code-source-info,0x1074de7a0,335,5360,5895,C0O5360C56O5389C104O5403C120O5423C124O5487C164O5509C176O5523C232O5530C308O5681C312O5591C496O5622C532O5612C632O5622C644O5612C688O5894C736O5360C792O5530C848O5591C976O5612,,
tick,0x107526e4c,8547666,0,0x0,0,0x107538c4c,0x107529434
tick,0x1a37782cc,8549000,0,0x0,5,0x0,0x10752f1cc,0x1075218b0,0x2d4de6016993,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8556083,0,0x0,8
tick,0x1a372c99c,8556208,0,0x0,8
tick,0x1a372c99c,8563041,0,0x0,8
tick,0x1a372c99c,8564583,0,0x0,8
tick,0x1a372c99c,8566208,0,0x0,8
tick,0x1a372c99c,8568125,0,0x0,8
tick,0x1a372c99c,8568500,0,0x0,8
tick,0x1a372c99c,8569708,0,0x0,8
tick,0x1a372c99c,8576541,0,0x0,8
tick,0x1a372c99c,8579125,0,0x0,8
tick,0x100f48934,8579750,0,0x0,0
tick,0x1a372c99c,8582125,0,0x0,8
tick,0x1a372c99c,8582208,0,0x0,8
tick,0x1a372c99c,8585833,0,0x0,8
code-creation,LazyCompile,13,8585958,0x1074dee20,1040,createWriteWrap node:internal/stream_base_commons:113:25,0x6a337a34f58,*
code-source-info,0x1074dee20,83,2802,3016,C0O2802C56O2837C96O2868C260O2895C268O2926C300O2947C376O2965C404O2988C440O3014C484O2802C532O2868,,
tick,0x107525ec0,8586000,0,0x0,0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8587291,0,0x0,8
tick,0x1a372c99c,8590791,0,0x0,8
tick,0x1a372c99c,8591083,0,0x0,8
tick,0x1a372c99c,8592333,0,0x0,8
tick,0x1a372c99c,8600291,0,0x0,8
tick,0x1a37298d4,8600875,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,8602750,0x10753a160,5484,HTTPParser.HEADER /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:283:40,0x395d7b337fc8,*
code-source-info,0x10753ax395d7b337cf8S0x30d75ba6968S0x395d7b337d88
tick,0x101025a08,8602833,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,8607333,0,0x0,8
tick,0x1a372c99c,8608916,0,0x0,8
tick,0x1a372c99c,8609125,0,0x0,8
tick,0x1a372c99c,8610666,0,0x0,8
tick,0x1a372c99c,8612541,0,0x0,8
scavenge,begin,0,953215,1643426354096
tick,0x100f4663c,8613000,0,0x0,0,0x0,0x10146255c,0x10753a5e0,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
scavenge,end,0,953382,1643426354096
tick,0x1a372c99c,8614208,0,0x0,8
tick,0x1a372c99c,8620708,0,0x0,8
tick,0x1a372c99c,8623416,0,0x0,8
tick,0x1a372c99c,8623875,0,0x0,8
tick,0x1a372c99c,8626375,0,0x0,8
tick,0x1a372c99c,8629750,0,0x0,8
tick,0x100c1f678,8630375,0,0x0,8
tick,0x101496300,8631791,0,0x0,0,0x3a1583d10d6f,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8636791,0,0x0,8
tick,0x1a372c99c,8637583,0,0x0,8
tick,0x1a35926d4,8638708,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8648833,0,0x0,8
code-creation,LazyCompile,13,8649000,0x10753b900,696,curr.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:526:36,0xe757747a9b8,*
code-source-info,0x10753b900,198,17484,17623,C0O17484C60O17529C76O17484C116O17529C180O17576C192O17583C220O17593C228O17592C272O17583C304O17609C336O17484C384O17593C440O17583C492O17529,,
tick,0x1a37298d4,8649125,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,8656666,0,0x0,8
tick,0x1a372c99c,8658500,0,0x0,8
tick,0x1a372c99c,8660166,0,0x0,8
tick,0x1a372c99c,8660291,0,0x0,8
tick,0x1a372c99c,8662083,0,0x0,8
tick,0x1a372c99c,8662625,0,0x0,8
tick,0x1a372c99c,8663708,0,0x0,8
tick,0x1a372c99c,8671125,0,0x0,8
tick,0x1a37298d4,8672041,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,8672166,0x107509700,1528,maybeReadMore node:internal/streams/readable:602:23,0x38fe558540f8,*
code-source-info,0xx1910fc7fbbc8S0x30d75b9a120S0xe898a5c5c80S0xe898a5c59c8S0x1910fc7fbad8S0x1910fc7f9b30S0x1910fc7f9dc0S0x1910fc7f9d20S0xe898a5c5cd0S0xe898a5c5a30S0x1910fc7f9bd0S0xe898a5c5a98
tick,0x1a372c99c,8674250,0,0x0,8
tick,0x1a372c99c,8675083,0,0x0,8
tick,0x1a372c99c,8679458,0,0x0,8
tick,0x10752f120,8680375,0,0x0,0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8685916,0,0x0,8
tick,0x101497660,8686916,0,0x0,0,0x107533410
tick,0x1a372c99c,8688291,0,0x0,8
tick,0x1a372c99c,8693500,0,0x0,8
tick,0x1a372c99c,8694583,0,0x0,8
tick,0x1a372c99c,8695958,0,0x0,8
tick,0x1a372c99c,8698333,0,0x0,8
tick,0x1a372c99c,8703375,0,0x0,8
tick,0x1a372c99c,8704416,0,0x0,8
tick,0x1a372c99c,8705041,0,0x0,8
tick,0x1a372c99c,8706083,0,0x0,8
tick,0x1a372c99c,8717083,0,0x0,8
tick,0x1075304d8,8718000,0,0x0,0,0x12ae9129d794,0x12ae9129c83d,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8724875,0,0x0,8
scavenge,begin,0,965734,1643426354208
scavenge,end,0,965919,1643426354208
tick,0x1a372c99c,8726666,0,0x0,8
tick,0x1a372c99c,8728750,0,0x0,8
tick,0x1a372c99c,8729250,0,0x0,8
tick,0x1a372c99c,8731000,0,0x0,8
tick,0x1a372c99c,8731583,0,0x0,8
tick,0x1a372c99c,8732708,0,0x0,8
tick,0x1a372c99c,8740666,0,0x0,8
tick,0x1a372c99c,8741833,0,0x0,8
tick,0x1a372c99c,8743541,0,0x0,8
tick,0x1a372c99c,8743958,0,0x0,8
tick,0x1a372c99c,8747583,0,0x0,8
tick,0x1a372c99c,8748416,0,0x0,8
tick,0x1a372c99c,8752458,0,0x0,8
tick,0x1a372c99c,8753333,0,0x0,8
tick,0x1a3726538,8754541,0,0x0,8
tick,0x1a372c99c,8758500,0,0x0,8
tick,0x1a372c99c,8759375,0,0x0,8
tick,0x1a372c99c,8760583,0,0x0,8
tick,0x1a372c99c,8770208,0,0x0,8
tick,0x100e02d38,8770375,0,0x0,0,0x0,0x10753a8a4,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8778791,0,0x0,8
tick,0x1a372c99c,8781500,0,0x0,8
tick,0x1a372c99c,8781666,0,0x0,8
tick,0x1a372c99c,8784166,0,0x0,8
tick,0x10752c5e4,8784208,0,0x0,0,0x311ed227f509,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8787041,0,0x0,8
tick,0x1013aabb8,8787875,0,0x0,0,0x311ed227f111,0x311ed227ef46,0x311ed227edb0,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8789166,0,0x0,8
tick,0x1a372c99c,8797916,0,0x0,8
tick,0x107521000,8798000,0,0x0,0,0x101461efc,0x2d4de601623c,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8805708,0,0x0,8
tick,0x1a372c99c,8806791,0,0x0,8
tick,0x1a372c99c,8816458,0,0x0,8
tick,0x1a372c99c,8816916,0,0x0,8
tick,0x1a372c99c,8823958,0,0x0,8
tick,0x1a372c99c,8824291,0,0x0,8
tick,0x1a372c99c,8825333,0,0x0,8
tick,0x1a372c99c,8827875,0,0x0,8
tick,0x1a372c99c,8828750,0,0x0,8
tick,0x1a372c99c,8829958,0,0x0,8
scavenge,begin,0,971364,1643426354313
scavenge,end,0,971512,1643426354313
tick,0x1a372c99c,8837375,0,0x0,8
tick,0x1a372c99c,8838458,0,0x0,8
tick,0x1a372c99c,8844791,0,0x0,8
tick,0x1a372c99c,8846208,0,0x0,8
tick,0x1a372c99c,8847875,0,0x0,8
tick,0x1a372c99c,8849875,0,0x0,8
tick,0x1a372c99c,8851083,0,0x0,8
tick,0x1a3768530,8852291,0,0x0,8
tick,0x1a372c99c,8858291,0,0x0,8
tick,0x1a372c99c,8860833,0,0x0,8
tick,0x1a372c99c,8863666,0,0x0,8
tick,0x1a372c99c,8864083,0,0x0,8
tick,0x1a372c99c,8867208,0,0x0,8
tick,0x1a372c99c,8867458,0,0x0,8
tick,0x1a372c99c,8868500,0,0x0,8
tick,0x1a372c99c,8872041,0,0x0,8
tick,0x1a372c99c,8872250,0,0x0,8
tick,0x1a372c99c,8873458,0,0x0,8
tick,0x1a372c99c,8874583,0,0x0,8
tick,0x1a372c99c,8881250,0,0x0,8
tick,0x1a372c99c,8881833,0,0x0,8
tick,0x1a372c99c,8888208,0,0x0,8
tick,0x1a372c99c,8889500,0,0x0,8
tick,0x1a372c99c,8891083,0,0x0,8
tick,0x1a372c99c,8893000,0,0x0,8
tick,0x1a372c99c,8893125,0,0x0,8
tick,0x1a372c99c,8894250,0,0x0,8
tick,0x1a372c99c,8895375,0,0x0,8
tick,0x1a372c99c,8901333,0,0x0,8
tick,0x1013e85fc,8901375,0,0x0,0,0x311ed22679ed,0x3a1583d10d83,0x311ed22673a3,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8903791,0,0x0,8
tick,0x1a372c99c,8903916,0,0x0,8
tick,0x1a372c99c,8906708,0,0x0,8
tick,0x1a372c99c,8910125,0,0x0,8
tick,0x101496000,8910166,0,0x0,0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8911416,0,0x0,8
tick,0x1a372c99c,8914875,0,0x0,8
tick,0x1a372c99c,8915291,0,0x0,8
scavenge,begin,0,976930,1643426354399
scavenge,end,0,977088,1643426354399
tick,0x1a372c99c,8916375,0,0x0,8
tick,0x1a372c99c,8917500,0,0x0,8
tick,0x1a372c99c,8924416,0,0x0,8
tick,0x1a372c99c,8924500,0,0x0,8
tick,0x1a372c99c,8931291,0,0x0,8
tick,0x1a372c99c,8932791,0,0x0,8
tick,0x1a372953c,8933125,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8934500,0,0x0,8
tick,0x1a372c99c,8936416,0,0x0,8
tick,0x1a372c99c,8936875,0,0x0,8
tick,0x1a372c99c,8938208,0,0x0,8
tick,0x1a372c99c,8944625,0,0x0,8
tick,0x1a372c99c,8947250,0,0x0,8
tick,0x1a372c99c,8950416,0,0x0,8
tick,0x1a3726538,8950458,0,0x0,8
tick,0x1a372c99c,8953833,0,0x0,8
tick,0x1a372c99c,8954083,0,0x0,8
tick,0x1a372c99c,8955125,0,0x0,8
tick,0x1a372c99c,8958666,0,0x0,8
tick,0x10149efa0,8958708,0,0x0,0,0x107533410
tick,0x1a3575260,8959958,0,0x0,5
tick,0x101496034,8961166,0,0x0,0,0x2d4de6016226,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,8967833,0,0x0,8
tick,0x1a372c99c,8968583,0,0x0,8
tick,0x1a372c99c,8974625,0,0x0,8
tick,0x1a372c99c,8974916,0,0x0,8
tick,0x1a372c99c,8976208,0,0x0,8
tick,0x1a372c99c,8977791,0,0x0,8
tick,0x1a372c99c,8979625,0,0x0,8
tick,0x1a372c99c,8979791,0,0x0,8
tick,0x1a372c99c,8980875,0,0x0,8
tick,0x1a372c99c,8988125,0,0x0,8
tick,0x1a372c99c,8990833,0,0x0,8
tick,0x1a372c99c,8993708,0,0x0,8
tick,0x100f75434,8994291,0,0x0,1
tick,0x100f753fc,8995541,0,0x0,1
tick,0x100f1ca58,8996791,0,0x0,1
tick,0x100f58870,8998041,0,0x0,1
markcompact,begin,0,986576,1643426354482
tick,0x1a37290c0,8999333,0,0x0,1
delete,MemoryChunk,0x1d117e640000
delete,MemoryChunk,0x3dc783d40000
markcompact,end,0,987318,1643426354483
delete,MemoryChunk,0x1312fd9c0000
delete,MemoryChunk,0xecd9dc00000
delete,MemoryChunk,0x25ab40e80000
delete,MemoryChunk,0x3b3988300000
delete,MemoryChunk,0x1cf7ce100000
delete,MemoryChunk,0x23f7f4780000
delete,MemoryChunk,0x1bd34ce40000
delete,MemoryChunk,0x1f5f73840000
delete,MemoryChunk,0x39b827f00000
delete,MemoryChunk,0x37590e7c0000
delete,MemoryChunk,0x1ce0a9080000
delete,MemoryChunk,0x36b6c2d40000
tick,0x1a372c99c,9002583,0,0x0,8
tick,0x1a3726538,9003125,0,0x0,8
tick,0x1a372c99c,9004416,0,0x0,8
tick,0x1a372c99c,9011875,0,0x0,8
tick,0x1a372953c,9011958,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9018875,0,0x0,8
tick,0x1a372c99c,9020375,0,0x0,8
tick,0x1a372c99c,9022083,0,0x0,8
tick,0x100cad9c8,9022083,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9023916,0,0x0,8
tick,0x1a372c99c,9024625,0,0x0,8
tick,0x1a372c99c,9025916,0,0x0,8
tick,0x1a372c99c,9032666,0,0x0,8
tick,0x1a372c99c,9035291,0,0x0,8
tick,0x1a372c99c,9035916,0,0x0,8
tick,0x1a372c99c,9038250,0,0x0,8
tick,0x1a372c99c,9038541,0,0x0,8
tick,0x1a372c99c,9041500,0,0x0,8
tick,0x1a372c99c,9041875,0,0x0,8
tick,0x1a372c99c,9042958,0,0x0,8
tick,0x1a372c99c,9046416,0,0x0,8
tick,0x1a372c99c,9046750,0,0x0,8
scavenge,begin,0,992412,1643426354531
scavenge,end,0,992725,1643426354531
tick,0x1a37290c0,9048041,0,0x0,1
tick,0x1a372c99c,9055791,0,0x0,8
tick,0x100d6815c,9056791,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9062666,0,0x0,8
tick,0x1a372c99c,9064083,0,0x0,8
tick,0x1a372953c,9064375,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9065666,0,0x0,8
tick,0x1a372c99c,9067583,0,0x0,8
tick,0x1014966b8,9068208,0,0x0,0,0x2d4de6016226,0x107533ae4,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x10753a204,9069500,0,0x0,0,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9075750,0,0x0,8
tick,0x1a372953c,9075833,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9078291,0,0x0,8
tick,0x1a372c99c,9078416,0,0x0,8
tick,0x1a372c99c,9081208,0,0x0,8
tick,0x1a372c99c,9084625,0,0x0,8
tick,0x101416928,9084666,0,0x0,0,0x311ed227f391,0x311ed227ef4d,0x311ed227edb0,0x107533b9c,0x3a1583d10d83,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9085958,0,0x0,8
tick,0x1a372c99c,9089375,0,0x0,8
tick,0x1a37298d4,9089875,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9090458,0x10752f340,1104,emit node:events:343:44,0x1910fc7f2c30,*
code-source-info,0x10752f340,13,9744,12016,C0O9744C200O9784C228O9821C336O9784C348O9832C360O9864C364O11100C384O11111C396O11223C404O11159C432O11223C496O11377C520O11430C580O11507C608O11580C612O11537C652O11580C660O12014C708O11624C740O11628C744O11155C752O9885C756O10021C760O10052C768O10151C772O9744,,
tick,0x1a372c99c,9091125,0,0x0,8
tick,0x1a372c99c,9100000,0,0x0,8
tick,0x101496dd8,9100041,0,0x0,0,0x311ed22672cb,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
code-creation,LazyCompile,13,9100791,0x10752f860,396,isObject /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1644:18,0xbb714f73a78,*
code-source-info,0x10752f860,361,42976,43076,C0O42976C48O43015C120O43074C168O42999C180O43039C192O43074C228O42976C284O43015,,
tick,0x1a372c99c,9110666,0,0x0,8
tick,0x1a372c99c,9112750,0,0x0,8
tick,0x1a372c99c,9114500,0,0x0,8
tick,0x1a372c99c,9117833,0,0x0,8
tick,0x1a372c99c,9118958,0,0x0,8
tick,0x1a372c99c,9128083,0,0x0,8
tick,0x1a372c99c,9132125,0,0x0,8
tick,0x1a372c99c,9132250,0,0x0,8
tick,0x1a372c99c,9135125,0,0x0,8
tick,0x1a372c99c,9135583,0,0x0,8
tick,0x1a372c99c,9140875,0,0x0,8
scavenge,begin,1,1605,1643426354624
new,MemoryChunk,0x464c3180000,262144
new,MemoryChunk,0x77407240000,262144
scavenge,end,1,2276,1643426354625
tick,0x1013ada80,9142000,0,0x0,0,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9143083,0,0x0,8
tick,0x1a372c99c,9147458,0,0x0,8
tick,0x1a372c99c,9148541,0,0x0,8
tick,0x1a372c99c,9149583,0,0x0,8
tick,0x1a372c99c,9157083,0,0x0,8
tick,0x1a372c99c,9157958,0,0x0,8
tick,0x1a372c99c,9164041,0,0x0,8
tick,0x1a372c99c,9164333,0,0x0,8
tick,0x1a372c99c,9165541,0,0x0,8
tick,0x1a372c99c,9168041,0,0x0,8
tick,0x1a372c99c,9168291,0,0x0,8
tick,0x1a372c99c,9172416,0,0x0,8
tick,0x100e0018c,9173583,0,0x0,8
tick,0x1a372c99c,9175000,0,0x0,8
tick,0x1a372c99c,9182750,0,0x0,8
tick,0x1a3726538,9183208,0,0x0,8
tick,0x1a372c99c,9185625,0,0x0,8
tick,0x1a3726538,9185666,0,0x0,8
tick,0x1a372c99c,9188708,0,0x0,8
tick,0x1a372c99c,9189250,0,0x0,8
tick,0x1a372c99c,9192291,0,0x0,8
tick,0x1a372c99c,9192708,0,0x0,8
tick,0x100e15a44,9194000,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9197083,0,0x0,8
tick,0x1016e3f14,9197750,0,0x0,5
tick,0x1a372c99c,9199000,0,0x0,8
tick,0x1a372c99c,9206625,0,0x0,8
tick,0x101496278,9206666,0,0x0,0,0x311ed227ed9c,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9213833,0,0x0,8
tick,0x1a372c99c,9215708,0,0x0,8
tick,0x1a372c99c,9217541,0,0x0,8
tick,0x1a372c99c,9219583,0,0x0,8
tick,0x1a372c99c,9220291,0,0x0,8
tick,0x1a372c99c,9221291,0,0x0,8
tick,0x1a372c99c,9228375,0,0x0,8
tick,0x1a372c99c,9231250,0,0x0,8
tick,0x1a372c99c,9231750,0,0x0,8
tick,0x1a372c99c,9234458,0,0x0,8
tick,0x1a372c99c,9235083,0,0x0,8
tick,0x1a372c99c,9237958,0,0x0,8
tick,0x1016e6248,9238666,0,0x0,1
scavenge,begin,1,10281,1643426354722
scavenge,end,1,10439,1643426354722
tick,0x1a372c99c,9240000,0,0x0,8
tick,0x1a372c99c,9242708,0,0x0,8
tick,0x1a372953c,9243625,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
code-creation,LazyCompile,13,9243875,0x10752fa80,344, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:267:18,0xbb714f7cbf0,*
code-source-info,0x10752fa80,361,7952,7996,C0O7952C60O7964C72O7976C124O7971C156O7992C200O7952,,
tick,0x1013e7bf8,9244875,0,0x0,0,0x311ed227ec3a,0x311ed227f4fb,0x311ed227ede1,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9252000,0,0x0,8
tick,0x1a372c99c,9252375,0,0x0,8
tick,0x1a372c99c,9259750,0,0x0,8
tick,0x1a372c99c,9261625,0,0x0,8
tick,0x1a372c99c,9261916,0,0x0,8
tick,0x1a372c99c,9263708,0,0x0,8
tick,0x1a372c99c,9265666,0,0x0,8
tick,0x1a372c99c,9266625,0,0x0,8
tick,0x1a372c99c,9267875,0,0x0,8
tick,0x1a372c99c,9274458,0,0x0,8
tick,0x1a372c99c,9276958,0,0x0,8
tick,0x1a372c99c,9277541,0,0x0,8
tick,0x1a372c99c,9279875,0,0x0,8
tick,0x1a372c99c,9283166,0,0x0,8
tick,0x1a372c99c,9283333,0,0x0,8
tick,0x1a372c99c,9284375,0,0x0,8
tick,0x1a372c99c,9288125,0,0x0,8
tick,0x1a3726538,9289250,0,0x0,8
tick,0x1a372c99c,9290541,0,0x0,8
tick,0x1a372c99c,9297291,0,0x0,8
tick,0x1a372c99c,9297875,0,0x0,8
tick,0x1a372c99c,9304583,0,0x0,8
tick,0x1a372c99c,9306125,0,0x0,8
tick,0x1a372c99c,9307750,0,0x0,8
tick,0x1a372c99c,9307791,0,0x0,8
tick,0x1a372c99c,9309791,0,0x0,8
tick,0x100d67d7c,9310375,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9311458,0,0x0,8
tick,0x1a372c99c,9318166,0,0x0,8
tick,0x1a372c99c,9320791,0,0x0,8
tick,0x1a372c99c,9323666,0,0x0,8
tick,0x1a372c99c,9324041,0,0x0,8
scavenge,begin,1,16478,1643426354807
scavenge,end,1,16640,1643426354807
tick,0x1a372c99c,9326875,0,0x0,8
tick,0x1a372c99c,9327708,0,0x0,8
tick,0x1a372c99c,9329000,0,0x0,8
tick,0x1a372c99c,9331875,0,0x0,8
tick,0x1a372c99c,9332458,0,0x0,8
tick,0x1a372c99c,9333541,0,0x0,8
tick,0x1a372c99c,9341541,0,0x0,8
tick,0x1a372c99c,9341750,0,0x0,8
tick,0x1a372c99c,9348500,0,0x0,8
tick,0x1a372c99c,9350000,0,0x0,8
tick,0x1a372c99c,9350333,0,0x0,8
tick,0x1a372c99c,9351708,0,0x0,8
tick,0x1a372c99c,9353541,0,0x0,8
tick,0x1a372c99c,9354125,0,0x0,8
tick,0x1a372c99c,9355416,0,0x0,8
tick,0x1a372c99c,9362166,0,0x0,8
tick,0x1a372c99c,9362916,0,0x0,8
tick,0x1a372c99c,9364708,0,0x0,8
tick,0x1a372c99c,9365333,0,0x0,8
tick,0x1a372c99c,9367750,0,0x0,8
tick,0x1a372c99c,9371250,0,0x0,8
tick,0x1a372c99c,9371500,0,0x0,8
tick,0x1a372c99c,9372750,0,0x0,8
tick,0x1a372c99c,9376166,0,0x0,8
tick,0x10752c300,9376583,0,0x0,0,0x311ed227ede1,0x107533b9c,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9377833,0,0x0,8
tick,0x1a372c99c,9385833,0,0x0,8
tick,0x1a372c99c,9386500,0,0x0,8
tick,0x1a372c99c,9392958,0,0x0,8
tick,0x1a372c99c,9394375,0,0x0,8
tick,0x1a372c99c,9395833,0,0x0,8
tick,0x1a372c99c,9397833,0,0x0,8
tick,0x101648030,9398750,0,0x0,4,0x0,0x2d4de6016225,0x107533ae4,0x10752f530,0xbb714f4ec51,0xbb714f4e975,0x107533410
code-creation,LazyCompile,13,9399458,0x1075342c0,2000,addChunk node:internal/streams/readable:304:18,0x38fe55853d70,*
code-source-info,0x1075342cx38fe558540f8S0x1910fc7f2c30S0x1910fc7f32d8
tick,0x1a372953c,9399875,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9406541,0,0x0,8
scavenge,begin,1,24422,1643426354890
scavenge,end,1,24625,1643426354890
tick,0x1a372c99c,9407166,0,0x0,8
tick,0x1a372c99c,9409291,0,0x0,8
tick,0x1a372953c,9409666,1,0x100d60f10,6,0x0,0x12ae9129d53b,0x12ae9129c82b,0xb249f5cdefb,0xb249f5cdc61,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9412291,0,0x0,8
tick,0x1a372c99c,9415916,0,0x0,8
tick,0x1016a2300,9415958,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9417208,0x107534b80,3304,Socket._write node:net:791:35,0x172aed079a98,*
code-source-info,0x107534b80,119,20223,20296,C0O20223C60O20253C144O19333I0C208O19535I0C272O19571I0C296O19605I0C340O19626I0C456O19761I0C464O19793I0C468O45078I1C488O19812I0C556O19827I0C564O19830I0C568O19886I0C600O10848I3C608O10884I3C688O10864I3C692O10827I3C708O10903I3C712O19915I0C780O19979I0C792O3743I2C796O2837I6C848O2868I6C1012O2895I6C1020O2926I6C1052O2947I6C1128O2965I6C1156O2988I6C1192O1227I5C1340O1828I5C1344O1753I5C1348O1628I5C1352O1562I5C1356O1477I5C1360O1297I5C1420O1346I5C1460O1387I5C1464O3941I4C1480O3924I4C1512O3989I4C1528O3970I4C1584O4022I4C1600O4076I4C1604O4097I4C1676O4117I4C1712O4152I4C1752O20035I0C1836O20078I0C1840O20295C1888O19931I0C1900O19937I0C1904O20223C1984O19535I0C2020O19812I0C2080O10884I3C2116O10827I3C2176O19915I0C2228O2868I6C2280O4097I4C2316O20035I0,F0O20253F1O19812I0F2O19985I0F3O19886I0F4O3813I2F5O3773I2F6O3723I2,S0x172aed079958S0x172aed07a220S0x6a337a35018S0x172aed078c80S0x6a337a35088S0x6a337a34eb8S0x6a337a34f58
tick,0x1a37298d4,9417291,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,9421250,0,0x0,8
tick,0x1a372c99c,9422125,0,0x0,8
tick,0x1a372c99c,9423375,0,0x0,8
tick,0x1a372c99c,9430666,0,0x0,8
tick,0x1a372c99c,9431583,0,0x0,8
tick,0x1a372c99c,9437833,0,0x0,8
tick,0x100e4cbd4,9437916,0,0x0,0,0x0,0x107534ed0,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9439333,0,0x0,8
tick,0x1a372c99c,9440916,0,0x0,8
tick,0x1a372c99c,9442750,0,0x0,8
tick,0x1a372c99c,9443041,0,0x0,8
tick,0x1a372c99c,9444333,0,0x0,8
tick,0x1a372c99c,9450000,0,0x0,8
tick,0x1a372c99c,9453833,0,0x0,8
tick,0x1a372c99c,9454458,0,0x0,8
tick,0x1a372c99c,9456916,0,0x0,8
tick,0x1013adaa8,9457041,0,0x0,0,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9460291,0,0x0,8
tick,0x101496d3c,9460750,0,0x0,0,0x311ed227f0fc,0x311ed227ef46,0x311ed227edb0,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9461875,0,0x0,8
tick,0x1a372c99c,9463958,0,0x0,8
tick,0x1a372c99c,9464208,0,0x0,8
tick,0x1a372c99c,9465291,0,0x0,8
tick,0x1a372c99c,9466416,0,0x0,8
tick,0x1a372c99c,9479916,0,0x0,8
tick,0x1a372c99c,9480375,0,0x0,8
tick,0x1a372c99c,9482041,0,0x0,8
tick,0x1a372c99c,9500000,0,0x0,8
tick,0x1a372c99c,9502125,0,0x0,8
tick,0x1a372c99c,9502291,0,0x0,8
tick,0x1a372c99c,9503916,0,0x0,8
tick,0x1a372c99c,9506000,0,0x0,8
tick,0x10146258c,9507166,0,0x0,0,0x10753a5e0,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
scavenge,begin,1,34111,1643426354990
scavenge,end,1,34275,1643426354990
tick,0x1a372c99c,9508250,0,0x0,8
tick,0x1a372c99c,9513625,0,0x0,8
tick,0x1a37298d4,9514375,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9515125,0x107535960,2348,onResponse /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:218:25,0x324f23cb6b88,*
code-source-info,0xx36998917bf98S0x1910fc7f2c30S0xe757747a9b8
tick,0x1a372c99c,9516291,0,0x0,8
tick,0x1a372c99c,9516666,0,0x0,8
tick,0x1a372c99c,9520583,0,0x0,8
tick,0x1a372c99c,9521416,0,0x0,8
tick,0x1a372c99c,9523958,0,0x0,8
tick,0x1a372c99c,9525208,0,0x0,8
tick,0x1a372c99c,9527625,0,0x0,8
tick,0x1a372953c,9527750,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9529083,0,0x0,8
tick,0x1a372c99c,9530208,0,0x0,8
tick,0x1a372c99c,9538583,0,0x0,8
tick,0x1a372953c,9538708,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9544375,0,0x0,8
code-creation,LazyCompile,13,9544500,0x1075363a0,660,addBody /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:41:11,0x324f23ca7418,*
code-source-info,0x1075363a0,364,1078,1162,C0O1078C56O1108C84O886I0C88O902I0C104O909I0C120O949I0C128O1119C208O1136C236O1148C264O1145C312O1161C356O1078C404O1119,F0O1108,S0x324f23ca7378
tick,0x1a372c99c,9545833,0,0x0,8
tick,0x1a372c99c,9546250,0,0x0,8
tick,0x1a372953c,9547333,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9550208,0,0x0,8
tick,0x1a372c99c,9550958,0,0x0,8
tick,0x1a372c99c,9552083,0,0x0,8
tick,0x1a372c99c,9558083,0,0x0,8
tick,0x1a372c99c,9560833,0,0x0,8
tick,0x1a372c99c,9561125,0,0x0,8
tick,0x1a372c99c,9567750,0,0x0,8
tick,0x1a372c99c,9571583,0,0x0,8
tick,0x100d666e8,9571583,0,0x0,8
tick,0x1a372953c,9573333,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x311ed22673b0,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9576166,0,0x0,8
tick,0x1014a7cc0,9576875,0,0x0,0,0x311ed227ef46,0x311ed227edb0,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a3726538,9578166,0,0x0,8
tick,0x1a372c99c,9594500,0,0x0,8
tick,0x1a37298d4,9595375,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9596333,0x107530d40,2036,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:82:37,0x324f23cb76e8,*
code-source-info,0x107530dx1910fc7f2c30S0x324f23ca7418S0x30d75ba6de0S0x30d75bb1848S0x30d75ba6d90S0x324f23ca7378
tick,0x1a37298d4,9596666,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9597958,0x107531620,3060,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:87:48,0x324f23cb77b8,*
code-source-info,0xx1910fc7f2c30S0xbb714f51ca8S0x324f23ca7508
tick,0x101025c6c,9598041,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,9604208,0,0x0,8
tick,0x100e05964,9604291,0,0x0,0,0x0,0x10752f1cc,0x1075218b0,0x2d4de601622b,0x107533ae4,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9607000,0,0x0,8
tick,0x1a372c99c,9609750,0,0x0,8
scavenge,begin,1,49907,1643426355093
scavenge,end,1,50076,1643426355093
tick,0x1a372c99c,9612083,0,0x0,8
tick,0x1a372c99c,9613166,0,0x0,8
tick,0x1a372c99c,9621250,0,0x0,8
tick,0x1a372c99c,9624000,0,0x0,8
tick,0x1a372c99c,9624250,0,0x0,8
tick,0x1a372c99c,9629416,0,0x0,8
tick,0x1a372c99c,9632208,0,0x0,8
tick,0x1a372c99c,9632833,0,0x0,8
tick,0x1a372c99c,9634083,0,0x0,8
tick,0x1a372c99c,9637416,0,0x0,8
tick,0x10753a248,9637916,0,0x0,0,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9639000,0,0x0,8
tick,0x1a372c99c,9648916,0,0x0,8
tick,0x1a372c99c,9649958,0,0x0,8
tick,0x1a372c99c,9657916,0,0x0,8
tick,0x1a372c99c,9660541,0,0x0,8
tick,0x1a372c99c,9660750,0,0x0,8
tick,0x1a372c99c,9663166,0,0x0,8
tick,0x1a372c99c,9666458,0,0x0,8
tick,0x1a372c99c,9666833,0,0x0,8
tick,0x1a372c99c,9667916,0,0x0,8
tick,0x1a372c99c,9668916,0,0x0,8
tick,0x1a372c99c,9677125,0,0x0,8
tick,0x1a372c99c,9680041,0,0x0,8
tick,0x1a372c99c,9680083,0,0x0,8
tick,0x1a372c99c,9685416,0,0x0,8
tick,0x1a372c99c,9686375,0,0x0,8
tick,0x1a372c99c,9688250,0,0x0,8
tick,0x1a372c99c,9688750,0,0x0,8
tick,0x1a372c99c,9689791,0,0x0,8
tick,0x1a372c99c,9693625,0,0x0,8
tick,0x1a372c99c,9693750,0,0x0,8
tick,0x1015a9e00,9695041,0,0x0,4,0x0,0x1074ddc04,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107534610,0xbb714f4e975,0x107533410
tick,0x1a372c99c,9703666,0,0x0,8
tick,0x1a37298d4,9703875,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,9705166,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9706333,0x1075224c0,3484,readableAddChunk node:internal/streams/readable:236:26,0x38fe55853d20,*
code-source-info,0x1075224cxe898a5f9ca8S0x38fe55853d70S0x1910fc7f2c30S0x1910fc7f32d8
tick,0x1a357bbb0,9706458,0,0x0,4,0x0,0x1075334b8
tick,0x1a3655f98,9707708,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,9708958,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9709083,0x107523360,8296,baseClone /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:841:19,0xbb714f72f60,*
code-source-info,0xxbb714f73a78S0xbb714f73078S0x30d75ba4eb0S0xbb714f72c40S0xbb714f72d30S0xbb714f734d8S0xbb714f72358S0x324f23cb8130S0xbb714f72e70S0xbb714f72dd0S0xbb714f72970S0xbb714f72ec0S0xbb714f73618S0xbb714f7cbf0S0xbb714f72fd8S0xbb714f724e8S0xbb714f737a8S0xbb714f73028S0xbb714f73b18S0xbb714f723a8S0xbb714f73118S0xbb714f73938
tick,0x1a372c99c,9710666,0,0x0,8
scavenge,begin,1,68068,1643426355194
scavenge,end,1,68248,1643426355194
tick,0x1a372c99c,9712416,0,0x0,8
tick,0x1a372c99c,9714000,0,0x0,8
tick,0x1a372c99c,9715916,0,0x0,8
tick,0x1a372c99c,9716583,0,0x0,8
tick,0x1a372c99c,9717791,0,0x0,8
tick,0x1a372c99c,9723208,0,0x0,8
tick,0x1a372c99c,9726791,0,0x0,8
tick,0x1a372c99c,9731083,0,0x0,8
tick,0x1a372c99c,9731458,0,0x0,8
tick,0x1a372c99c,9733375,0,0x0,8
tick,0x1a372c99c,9733916,0,0x0,8
tick,0x1a372953c,9735208,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9736875,0,0x0,8
tick,0x1a372c99c,9737791,0,0x0,8
tick,0x1a372c99c,9739291,0,0x0,8
tick,0x1a372c99c,9740375,0,0x0,8
tick,0x1a372c99c,9750833,0,0x0,8
tick,0x1a372c99c,9751333,0,0x0,8
tick,0x1a372c99c,9754166,0,0x0,8
tick,0x1a372c99c,9755666,0,0x0,8
tick,0x1a372c99c,9757458,0,0x0,8
tick,0x1a3726538,9757625,0,0x0,8
tick,0x1a372c99c,9760458,0,0x0,8
tick,0x1a372c99c,9761291,0,0x0,8
tick,0x1a372c99c,9762375,0,0x0,8
tick,0x1a372c99c,9767791,0,0x0,8
tick,0x1a372c99c,9768250,0,0x0,8
tick,0x1a372c99c,9770208,0,0x0,8
tick,0x100e1f018,9770708,0,0x0,5,0x0,0x107539ee4,0x107531068,0x311ed227edb0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9775500,0,0x0,8
tick,0x10147e0a0,9775875,0,0x0,0
tick,0x1a372c99c,9777416,0,0x0,8
tick,0x1a372c99c,9778458,0,0x0,8
tick,0x1a372c99c,9779458,0,0x0,8
tick,0x1a372c99c,9780791,0,0x0,8
tick,0x101496000,9781750,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,9783000,0,0x0,8
tick,0x1a372c99c,9794041,0,0x0,8
tick,0x1a372953c,9794083,0,0x0,0,0x0,0x10753510c,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
scavenge,begin,1,72644,1643426355278
scavenge,end,1,72805,1643426355278
tick,0x1a372c99c,9797208,0,0x0,8
tick,0x1a372c99c,9798708,0,0x0,8
tick,0x1a3778128,9798916,0,0x0,5
tick,0x1a372c99c,9800250,0,0x0,8
tick,0x1a372c99c,9802208,0,0x0,8
tick,0x1a3726538,9802500,0,0x0,8
tick,0x1a372c99c,9803833,0,0x0,8
tick,0x1a372c99c,9810708,0,0x0,8
tick,0x1a372c99c,9813166,0,0x0,8
tick,0x1a372c99c,9813750,0,0x0,8
tick,0x1a372c99c,9817416,0,0x0,8
tick,0x1a372c99c,9817541,0,0x0,8
tick,0x1a372c99c,9819250,0,0x0,8
tick,0x1a372c99c,9819875,0,0x0,8
tick,0x1a372c99c,9820916,0,0x0,8
tick,0x1a372c99c,9823541,0,0x0,8
tick,0x1a372c99c,9823666,0,0x0,8
tick,0x1a372c99c,9824750,0,0x0,8
tick,0x1a372c99c,9826083,0,0x0,8
tick,0x1a372c99c,9828541,0,0x0,8
tick,0x1a372c99c,9836708,0,0x0,8
tick,0x1a372c99c,9837583,0,0x0,8
tick,0x1a372c99c,9840083,0,0x0,8
tick,0x1a372c99c,9841583,0,0x0,8
tick,0x1a372c99c,9843166,0,0x0,8
code-creation,LazyCompile,13,9843208,0x107525660,296,get node:internal/bootstrap/pre_execution:314:8,0x3a1583d1c4e0,*
code-source-info,0x107525660,91,10092,10125,C0O10092C52O10103C72O10119C104O10092C164O10103,,
tick,0x1a372c99c,9844958,0,0x0,8
tick,0x1a372c99c,9845083,0,0x0,8
tick,0x1a37298d4,9846250,0,0x0,4,0x0,0x101452d24,0x107531068,0x311ed227edb0,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,13,9846833,0x10752d280,3676,HTTPParser.RESPONSE_LINE /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:249:47,0x395d7b337ea8,*
code-source-info,0x10752dx395d7b337cf8S0x30d75ba6968
tick,0x1a372c99c,9853500,0,0x0,8
tick,0x1a372c99c,9853833,0,0x0,8
tick,0x1a372c99c,9855916,0,0x0,8
tick,0x100e99a50,9856333,0,0x0,0,0x101487f04,0x101470ff8,0x311ed227e6f3,0x10753ab84,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9860166,0,0x0,8
tick,0x1a372c99c,9862083,0,0x0,8
tick,0x1a372c99c,9862458,0,0x0,8
tick,0x1a372c99c,9863500,0,0x0,8
tick,0x1a372c99c,9866500,0,0x0,8
tick,0x1a372c99c,9867125,0,0x0,8
tick,0x1a372c99c,9868208,0,0x0,8
tick,0x1a372c99c,9871583,0,0x0,8
tick,0x1a372c99c,9874208,0,0x0,8
scavenge,begin,1,80466,1643426355362
tick,0x1a372c99c,9879333,0,0x0,8
tick,0x2f3ebe2195c0,9879375,0,0x0,0,0x107535e0c,0x107531c30,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
scavenge,end,1,80706,1643426355362
tick,0x1015ed8f8,9880791,0,0x0,4,0x0,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9886625,0,0x0,8
tick,0x1013dcea0,9886666,0,0x0,0,0x107535250,0xb249f5cdac4,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9890083,0,0x0,8
tick,0x1a37298d4,9891291,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,9891625,0x10752ae60,4384,writeOrBuffer node:internal/streams/writable:365:23,0x38fe55862070,*
code-source-info,0x10752ae60,55,11668,12659,C0O11668C60O11733C164O11756C220O11783C248O11780C256O11863C260O11855C272O11952C280O11982C284O12003C348O12020C356O12036C420O12054C480O12326C488O12351C516O12381C524O12404C528O12423C584O12453C588O12423C668O20253I0C736O19333I1C788O19535I1C852O19571I1C876O19605I1C920O19626I1C1048O19761I1C1056O19793I1C1060O45078I2C1084O19812I1C1152O19827I1C1160O19830I1C1164O19886I1C1200O10848I4C1208O10884I4C1292O10864I4C1296O10827I4C1312O10903I4C1316O19915I1C1388O19979I1C1400O3743I3C1404O2837I7C1456O2868I7C1620O2895I7C1628O2926I7C1660O2947I7C1736O2965I7C1764O2988I7C1800O1227I6C1948O1828I6C1952O1753I6C1956O1628I6C1960O1562I6C1964O1477I6C1968O1297I6C2028O1346I6C2068O1387I6C2072O3941I5C2088O3924I5C2120O3989I5C2136O3970I5C2188O4022I5C2204O4076I5C2208O4097I5C2276O4117I5C2312O4152I5C2352O20035I1C2436O20078I1C2440O12478C2464O12647C2552O12657C2608O19931I1C2620O19937I1C2624O12079C2628O11668C2676O11733C2712O12003C2748O12036C2784O12054C2884O19535I1C2920O19812I1C2976O10884I4C3012O10827I4C3068O19915I1C3120O2868I7C3172O4097I5C3208O20035I1C3244O12647,F0O12423F1O20253I0F2O19812I1F3O19985I1F4O19886I1F5O3813I3F6O3773I3F7O3723I3,S0x172aed079a98S0x172aed079958S0x172aed07a220S0x6a337a35018S0x172aed078c80S0x6a337a35088S0x6a337a34eb8S0x6a337a34f58
tick,0x1a372c99c,9893583,0,0x0,8
tick,0x100f28d98,9893791,0,0x0,5
tick,0x1a372c99c,9894958,0,0x0,8
tick,0x1a372c99c,9896250,0,0x0,8
code-creation,LazyCompile,13,9902041,0x107509da0,572,setHeaders /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:48:14,0x324f23ca7468,*
code-source-info,0x107509da0,364,1177,1269,C0O1177C52O1210C80O886I0C84O902I0C100O909I0C116O949I0C124O1221C200O1250C252O1268C296O1177C344O1221,F0O1210,S0x324f23ca7378
tick,0x1a372c99c,9902250,0,0x0,8
tick,0x1a372c99c,9906958,0,0x0,8
tick,0x1a372c99c,9907208,0,0x0,8
tick,0x1a372c99c,9913875,0,0x0,8
tick,0x1a372c99c,9916208,0,0x0,8
tick,0x1a372c99c,9917166,0,0x0,8
tick,0x1a372c99c,9920250,0,0x0,8
tick,0x1013a2be0,9920750,0,0x0,0,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372953c,9922041,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9926958,0,0x0,8
tick,0x1a372c99c,9927208,0,0x0,8
tick,0x1a372c99c,9931375,0,0x0,8
tick,0x1a372c99c,9941666,0,0x0,8
tick,0x1a372c99c,9942000,0,0x0,8
tick,0x1a372c99c,9945500,0,0x0,8
tick,0x100f29b14,9945833,0,0x0,5
tick,0x1a372c99c,9948708,0,0x0,8
tick,0x1a372c99c,9951583,0,0x0,8
tick,0x1a372c99c,9952125,0,0x0,8
tick,0x100ce8aac,9953416,0,0x0,8
tick,0x1a372c99c,9961916,0,0x0,8
tick,0x1a372c99c,9966000,0,0x0,8
tick,0x1a372c99c,9971916,0,0x0,8
tick,0x100e1573c,9972041,0,0x0,8
tick,0x1a372c99c,9974750,0,0x0,8
tick,0x1a37298d4,9975833,0,0x0,4,0x0,0x1075309c8,0x10752b788,0x107536fd0,0x1074ddff8,0x107531d48,0x311ed227f4f6,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,13,9976666,0x10750a060,2436,HTTPParser.nextRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:180:45,0x395d7b337c68,*
code-source-info,0x10750ax395d7b337bb0S0x311ed227e808S0x395d7b337270S0x395d7b33b530S0x324f23cb77b8S0x1910fc7f2c30S0xbb714f51ca8
tick,0x1a372c99c,9978916,0,0x0,8
tick,0x1a372c99c,9979625,0,0x0,8
tick,0x1a372c99c,9981041,0,0x0,8
tick,0x1a372c99c,9984708,0,0x0,8
scavenge,begin,1,98946,1643426355468
scavenge,end,1,99185,1643426355468
tick,0x1013e7abc,9985791,0,0x0,0,0x311ed227ec3a,0x10753ad28,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,9992250,0,0x0,8
tick,0x1a372c99c,9999208,0,0x0,8
tick,0x101496100,10000208,0,0x0,0,0x324f23cbcd26,0x10750a6d0,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10003583,0,0x0,8
tick,0x1a372c99c,10006375,0,0x0,8
tick,0x1a372c99c,10006625,0,0x0,8
tick,0x1a372c99c,10009583,0,0x0,8
tick,0x1a372c99c,10009958,0,0x0,8
tick,0x1a372c99c,10011250,0,0x0,8
tick,0x1a372c99c,10019875,0,0x0,8
tick,0x1013ada80,10019958,0,0x0,0,0x107523be8,0x1074ddc04,0x10750a5ac,0x311ed227ede1,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10024125,0,0x0,8
tick,0x1a372c99c,10030041,0,0x0,8
tick,0x1a372c99c,10032833,0,0x0,8
tick,0x1a372c99c,10033375,0,0x0,8
tick,0x1a372c99c,10034458,0,0x0,8
tick,0x1a372c99c,10036833,0,0x0,8
tick,0x1a372c99c,10036958,0,0x0,8
tick,0x1a372c99c,10038250,0,0x0,8
tick,0x1a372c99c,10043166,0,0x0,8
tick,0x1a37298d4,10044333,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,10045333,0x1074df2c0,2428,HTTPParser.BODY_SIZED /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:431:44,0x395d7b338320,*
code-source-info,0x1074df2cx395d7b337bb0S0x311ed227e808S0x324f23cb76e8S0x1910fc7f2c30S0x324f23ca7418S0x30d75ba6de0S0x30d75bb1848S0x30d75ba6d90S0x324f23ca7378
tick,0x1013b02cc,10045583,0,0x0,0,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10050250,0,0x0,8
tick,0x1a372c99c,10056833,0,0x0,8
tick,0x1a372c99c,10061333,0,0x0,8
tick,0x1a372c99c,10063958,0,0x0,8
tick,0x1a372c99c,10064375,0,0x0,8
tick,0x1a372c99c,10067166,0,0x0,8
tick,0x1a372c99c,10068083,0,0x0,8
tick,0x1011ea4a4,10069375,0,0x0,4,0x0,0x324f23cbcd45,0x10750a6d0,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,13,10069708,0x1074dfd40,296,ok node:assert:410:12,0x395d7b33b530,*
code-source-info,0x1074dfd40,336,13265,13315,C0O13265C84O13279C136O13314C172O13265,,
tick,0x1a372c99c,10075166,0,0x0,8
tick,0x1a372c99c,10075583,0,0x0,8
tick,0x1a372c99c,10078916,0,0x0,8
tick,0x100c1f638,10079291,0,0x0,6
tick,0x1a372c99c,10083416,0,0x0,8
tick,0x1a372c99c,10084291,0,0x0,8
tick,0x1a372953c,10085583,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x1074ddff8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10086916,0,0x0,8
tick,0x1a372c99c,10088666,0,0x0,8
tick,0x1a372c99c,10089250,0,0x0,8
scavenge,begin,1,107769,1643426355573
tick,0x1a37781c4,10090500,0,0x0,1
scavenge,end,1,108103,1643426355574
tick,0x1a372c99c,10094125,0,0x0,8
tick,0x1a372c99c,10099666,0,0x0,8
tick,0x1a372c99c,10104500,0,0x0,8
tick,0x1a372c99c,10105291,0,0x0,8
tick,0x1a372c99c,10107625,0,0x0,8
tick,0x1a372c99c,10107791,0,0x0,8
tick,0x1a372c99c,10109416,0,0x0,8
tick,0x1a372c99c,10111500,0,0x0,8
tick,0x1a372c99c,10111625,0,0x0,8
tick,0x1a372c99c,10112833,0,0x0,8
tick,0x1a372c99c,10119208,0,0x0,8
tick,0x1a372c99c,10122916,0,0x0,8
tick,0x1a372c99c,10127375,0,0x0,8
tick,0x1a372c99c,10127833,0,0x0,8
tick,0x1a372c99c,10129333,0,0x0,8
tick,0x1a357d5cc,10130250,0,0x0,5
tick,0x1a372c99c,10132666,0,0x0,8
tick,0x1a372c99c,10133833,0,0x0,8
tick,0x1a372c99c,10138083,0,0x0,8
tick,0x107539960,10138583,0,0x0,0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10143916,0,0x0,8
tick,0x1a372c99c,10148666,0,0x0,8
tick,0x1a372c99c,10151916,0,0x0,8
tick,0x1a372c99c,10152083,0,0x0,8
tick,0x1a372c99c,10154333,0,0x0,8
tick,0x1a372c99c,10154583,0,0x0,8
tick,0x1a372c99c,10155833,0,0x0,8
tick,0x1a372c99c,10160291,0,0x0,8
tick,0x1a372c99c,10160833,0,0x0,8
tick,0x1a372c99c,10162250,0,0x0,8
tick,0x1a372c99c,10163333,0,0x0,8
tick,0x1a372c99c,10164583,0,0x0,8
tick,0x1a372c99c,10165958,0,0x0,8
tick,0x1a372c99c,10180416,0,0x0,8
tick,0x1a372c99c,10180875,0,0x0,8
tick,0x1a372c99c,10182958,0,0x0,8
tick,0x1a372c99c,10183416,0,0x0,8
tick,0x1a372c99c,10187333,0,0x0,8
tick,0x1a372c99c,10189291,0,0x0,8
tick,0x1a372c99c,10189541,0,0x0,8
tick,0x1a372c99c,10190666,0,0x0,8
tick,0x1a372c99c,10192541,0,0x0,8
tick,0x1a372c99c,10192958,0,0x0,8
scavenge,begin,1,112535,1643426355676
new,MemoryChunk,0x3d8cce580000,262144
new,MemoryChunk,0x83e21480000,262144
scavenge,end,1,112834,1643426355677
tick,0x1a372c99c,10194083,0,0x0,8
tick,0x1a372c99c,10197875,0,0x0,8
tick,0x1a37298d4,10199041,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,10199208,0x10750ab00,1296,Client.parser.<computed> /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:77:48,0x324f23cb7618,*
code-source-info,0x10750ab00,332,2114,2204,C0O2114C64O2130C72O2135C156O9744I1C224O9821I1C228O9832I1C244O11100I1C272O11111I1C284O11223I1C292O11159I1C320O11223I1C384O11377I1C408O11430I1C472O11507I1C500O11580I1C504O11537I1C544O11580I1C560O11624I1C592O11628I1C596O2161C604O2166C632O886I2C636O902I2C652O909I2C668O949I2C676O1221I0C748O1250I0C800O2203C848O2114C928O1221I0,F0O2184F1O2135F2O1210I0,S0x324f23ca7468S0x1910fc7f2c30S0x324f23ca7378
tick,0x1a372c99c,10203416,0,0x0,8
tick,0x1a372c99c,10208250,0,0x0,8
tick,0x1a372c99c,10208958,0,0x0,8
tick,0x1a372c99c,10211583,0,0x0,8
tick,0x1a372c99c,10213333,0,0x0,8
tick,0x1a372c99c,10213791,0,0x0,8
tick,0x1a372c99c,10215416,0,0x0,8
tick,0x1a372c99c,10216333,0,0x0,8
tick,0x1a3733940,10217541,0,0x0,0,0x0,0x10752a18c,0x311ed22675a3,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10223166,0,0x0,8
tick,0x1a372c99c,10226875,0,0x0,8
tick,0x1a372c99c,10227500,0,0x0,8
tick,0x1a372c99c,10231083,0,0x0,8
tick,0x1a372c99c,10231250,0,0x0,8
tick,0x1a372c99c,10233000,0,0x0,8
tick,0x1a3726538,10233666,0,0x0,8
tick,0x1a372c99c,10236291,0,0x0,8
tick,0x1a372c99c,10237208,0,0x0,8
tick,0x1a372c99c,10238291,0,0x0,8
tick,0x1a372c99c,10241541,0,0x0,8
tick,0x1a372c99c,10241666,0,0x0,8
tick,0x1a372c99c,10247125,0,0x0,8
tick,0x1a372c99c,10251916,0,0x0,8
tick,0x1a372c99c,10252166,0,0x0,8
tick,0x1a372c99c,10255250,0,0x0,8
tick,0x1a372c99c,10256916,0,0x0,8
tick,0x1a372c99c,10257166,0,0x0,8
tick,0x1a372c99c,10259083,0,0x0,8
tick,0x101093e54,10259666,0,0x0,0,0x0,0x1074df558,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10260791,0,0x0,8
tick,0x1a372c99c,10266958,0,0x0,8
tick,0x1a372c99c,10267000,0,0x0,8
tick,0x1a372c99c,10269666,0,0x0,8
code-creation,LazyCompile,10,10269791,0x47055d31d1e,126,Retimer._timerWrapper /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:15:26,0x324f23cbee68,~
code-source-info,0x47055d31d1e,333,292,549,C0O306C5O315C11O328C16O343C23O361C26O366C35O382C38O382C44O394C47O399C51O392C54O379C57O359C61O417C66O422C73O432C76O437C81O422C88O472C94O488C98O503C101O512C110O524C113O529C118O512C125O548,,
code-creation,LazyCompile,10,10270000,0x47055d31f06,48,_schedule /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:44:13,0x2779b46ff8c8,~
code-source-info,0x47055d31f06,333,1013,1200,C0O1029C1O1045C5O1057C7O1073C10O1073C13O1071C17O1087C18O1105C22O1113C24O1129C28O1143C32O1173C37O1157C42O1155C47O1199,,
tick,0x1a372c99c,10270875,0,0x0,8
tick,0x1a372c99c,10274708,0,0x0,8
tick,0x1a372c99c,10276625,0,0x0,8
tick,0x1a372c99c,10277208,0,0x0,8
code-creation,LazyCompile,10,10277833,0x47055d3222e,54,runNextTicks node:internal/process/task_queues:59:22,0x1910fc7fbb28,~
code-source-info,0x47055d3222e,25,1285,1460,C0O1292C3O1297C10O1320C13O1320C18O1346C23O1346C26O1365C29O1370C36O1393C39O1393C44O1419C45O1426C46O1430C49O1430C53O1459,,
code-creation,LazyCompile,10,10277875,0x47055d3236e,19,hasTickScheduled node:internal/process/task_queues:48:26,0x1910fc7fb540,~
code-source-info,0x47055d3236e,25,1024,1074,C0O1031C7O1047C9O1046C15O1066C18O1072,,
code-creation,LazyCompile,10,10277916,0x47055d32476,19,hasRejectionToWarn node:internal/process/promises:75:28,0x1910fc7fece0,~
code-source-info,0x47055d32476,26,2090,2142,C0O2097C7O2113C9O2112C15O2134C18O2140,,
tick,0x1a372c99c,10278291,0,0x0,8
tick,0x1a372c99c,10279500,0,0x0,8
scavenge,begin,1,119670,1643426355763
scavenge,end,1,119850,1643426355763
tick,0x1a372c99c,10280708,0,0x0,8
tick,0x1a3726538,10281916,0,0x0,8
tick,0x101490c80,10283250,0,0x0,0,0x324f23cbf83e,0x47055d31f2b,0x47055d31d6f,0x37743592f8ac,0x37743592f360
tick,0x1a372c99c,10284916,0,0x0,8
code-creation,LazyCompile,10,10285000,0x47055d32ec6,34,shift node:internal/priority_queue:107:8,0x38fe55876880,~
code-source-info,0x47055d32ec6,63,2600,2750,C0O2622C2O2627C4O2626C8O2653C10O2657C14O2666C16O2697C17O2704C18O2715C26O2715C31O2733C33O2746,,
code-creation,LazyCompile,10,10285041,0x47055d3301e,132,removeAt node:internal/priority_queue:93:11,0x38fe55876818,~
code-source-info,0x47055d3301e,63,2266,2591,C0O2291C2O2296C4O2295C8O2321C10O2328C19O2333C26O2340C28O2362C31O2356C34O2350C38O2372C40O2382C45O2387C49O2405C50O2414C57O2425C62O2442C64O2450C71O2462C73O2461C79O2481C82O2485C85O2476C91O2495C95O2471C103O2502C108O2520C113O2520C120O2562C125O2562C131O2590,,
tick,0x1a372c99c,10286250,0,0x0,8
tick,0x1a372c99c,10290916,0,0x0,8
tick,0x1a372c99c,10292041,0,0x0,8
tick,0x1a372c99c,10298583,0,0x0,8
code-creation,LazyCompile,13,10298916,0x10752e240,1068,pushAsyncContext node:internal/async_hooks:529:26,0x1910fc7fa118,*
code-source-info,0x10752e240,24,17095,17640,C0O17095C56O17167C88O17219C196O17244C212O17278C244O17248C268O17399C300O17382C344O17460C352O17482C368O17465C396O17521C412O17534C424O17521C428O17534C432O17575C500O17621C568O17639C616O17297C620O17095C668O17219,,
tick,0x1a3726538,10299708,0,0x0,8
tick,0x1a372c99c,10303416,0,0x0,8
tick,0x10750ab50,10303500,0,0x0,0,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10305458,0,0x0,8
tick,0x1a372c99c,10305875,0,0x0,8
tick,0x1a372c99c,10307750,0,0x0,8
tick,0x1014962f0,10308375,0,0x0,0,0x311ed227e6c6,0x10753ab84,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10309500,0,0x0,8
tick,0x1a372c99c,10315708,0,0x0,8
tick,0x101497660,10316708,0,0x0,0,0x10753ad28,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10319416,0,0x0,8
tick,0x1a372c99c,10323750,0,0x0,8
tick,0x1a372c99c,10324208,0,0x0,8
tick,0x1a372c99c,10325625,0,0x0,8
tick,0x1a372c99c,10326500,0,0x0,8
tick,0x1a372c99c,10329000,0,0x0,8
tick,0x1a372c99c,10329916,0,0x0,8
tick,0x1a372c99c,10334166,0,0x0,8
tick,0x1a372c99c,10339791,0,0x0,8
tick,0x101496138,10339833,0,0x0,0,0xb249f5ccda6,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10344750,0,0x0,8
tick,0x1a372c99c,10344916,0,0x0,8
tick,0x1a372c99c,10347791,0,0x0,8
tick,0x1a372c99c,10349500,0,0x0,8
tick,0x1a372c99c,10349750,0,0x0,8
tick,0x1a372c99c,10351708,0,0x0,8
tick,0x100f2a5f4,10352208,0,0x0,5,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10353333,0,0x0,8
tick,0x1a372c99c,10360791,0,0x0,8
tick,0x1a372c99c,10365083,0,0x0,8
tick,0x1a372c99c,10365541,0,0x0,8
tick,0x1a372c99c,10366958,0,0x0,8
tick,0x1a372c99c,10371958,0,0x0,8
tick,0x1a372c99c,10372458,0,0x0,8
code-creation,LazyCompile,13,10372583,0x10752e700,240,isLength /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:1614:18,0xbb714f73a28,*
code-source-info,0x10752e700,361,42265,42376,C0O42265C52O42277C76O42374C124O42322C128O42265,,
tick,0x1a372c99c,10375208,0,0x0,8
tick,0x1a372953c,10376375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0xb249f5cd415,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10379208,0,0x0,8
tick,0x1a372c99c,10380125,0,0x0,8
tick,0x1a372c99c,10381416,0,0x0,8
tick,0x1a372c99c,10385083,0,0x0,8
tick,0x1011e4b6c,10385250,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10395625,0,0x0,8
tick,0x1a372c99c,10402958,0,0x0,8
tick,0x101491d70,10403541,0,0x0,0,0x311ed2267590,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10406958,0,0x0,8
tick,0x1a372c99c,10407416,0,0x0,8
tick,0x1a372c99c,10410041,0,0x0,8
tick,0x1a372c99c,10411166,0,0x0,8
tick,0x1a372c99c,10412625,0,0x0,8
tick,0x1a372c99c,10413916,0,0x0,8
tick,0x1a372c99c,10414833,0,0x0,8
tick,0x1a372c99c,10421500,0,0x0,8
tick,0x1a372c99c,10425041,0,0x0,8
tick,0x1a372c99c,10429166,0,0x0,8
tick,0x1a372c99c,10429291,0,0x0,8
tick,0x1a372c99c,10431000,0,0x0,8
tick,0x1a372c99c,10431708,0,0x0,8
tick,0x1a372c99c,10434250,0,0x0,8
tick,0x1a372c99c,10435083,0,0x0,8
tick,0x1a372c99c,10436333,0,0x0,8
tick,0x1a372c99c,10439625,0,0x0,8
tick,0x1a372c99c,10439916,0,0x0,8
tick,0x1a372c99c,10445083,0,0x0,8
tick,0x1a372c99c,10447416,0,0x0,8
tick,0x1a372c99c,10448333,0,0x0,8
tick,0x1a372c99c,10450708,0,0x0,8
tick,0x1a372c99c,10450833,0,0x0,8
tick,0x1a372c99c,10452625,0,0x0,8
tick,0x1a372c99c,10455625,0,0x0,8
tick,0x1a372c99c,10455916,0,0x0,8
tick,0x1a372c99c,10458041,0,0x0,8
tick,0x1016e626c,10458416,0,0x0,5
tick,0x1a372c99c,10459541,0,0x0,8
tick,0x1a372c99c,10465375,0,0x0,8
tick,0x1a372c99c,10468833,0,0x0,8
tick,0x1a372c99c,10469458,0,0x0,8
scavenge,begin,1,134270,1643426355952
scavenge,end,1,134534,1643426355953
tick,0x1a372c99c,10473083,0,0x0,8
tick,0x1a372c99c,10473208,0,0x0,8
tick,0x1a372c99c,10474916,0,0x0,8
tick,0x1a372c99c,10475541,0,0x0,8
code-creation,LazyCompile,13,10476708,0x10752e880,676,ListCache /Users/carloscalvo/code/Coder/backend/entregas/node_modules/lodash.clonedeep/index.js:460:19,0xbb714f72880,*
code-source-info,0x10752e880,361,13115,13307,C0O13115C52O13160C124O13198C200O13454I0C224O13468I0C260O13306C308O13178C312O13115C360O13160,F0O13198,S0xbb714f728d0
tick,0x1a37298d4,10476750,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,10478333,0,0x0,8
tick,0x1a372c99c,10479250,0,0x0,8
tick,0x1a372c99c,10483750,0,0x0,8
tick,0x1a372c99c,10484375,0,0x0,8
tick,0x1a372c99c,10489416,0,0x0,8
tick,0x1a372c99c,10491791,0,0x0,8
tick,0x1a372953c,10492750,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0xb249f5cd415,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10495208,0,0x0,8
tick,0x1a372c99c,10498208,0,0x0,8
tick,0x1a372c99c,10498625,0,0x0,8
tick,0x1a372c99c,10500125,0,0x0,8
tick,0x1a372c99c,10500708,0,0x0,8
tick,0x1a372c99c,10502625,0,0x0,8
tick,0x1a372c99c,10503083,0,0x0,8
tick,0x1a372c99c,10504166,0,0x0,8
tick,0x1a372c99c,10509666,0,0x0,8
tick,0x1a372c99c,10513166,0,0x0,8
tick,0x1a372c99c,10517291,0,0x0,8
tick,0x1a372c99c,10517666,0,0x0,8
tick,0x1a372c99c,10519166,0,0x0,8
tick,0x1a372c99c,10520208,0,0x0,8
tick,0x1a372c99c,10522375,0,0x0,8
tick,0x1a372c99c,10522500,0,0x0,8
tick,0x1a372c99c,10523583,0,0x0,8
tick,0x1a372c99c,10528000,0,0x0,8
tick,0x10153dc7c,10528541,0,0x0,4,0x0,0x3a1dfed62431,0x1075293e8
tick,0x1a372c99c,10533541,0,0x0,8
tick,0x1a37298d4,10533583,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,10533708,0x10752ebc0,360,needFinish node:internal/streams/writable:650:20,0x38fe558623e8,*
code-source-info,0x10752ebc0,55,19361,19652,C0O19361C52O19387C144O19413C148O19650C192O19361C240O19387,,
tick,0x1a372c99c,10536000,0,0x0,8
tick,0x1a372c99c,10536166,0,0x0,8
tick,0x1a372c99c,10539291,0,0x0,8
tick,0x1a372c99c,10542125,0,0x0,8
tick,0x1a372c99c,10542291,0,0x0,8
tick,0x1a372c99c,10544166,0,0x0,8
tick,0x1a372c99c,10544541,0,0x0,8
tick,0x1a372c99c,10546625,0,0x0,8
tick,0x1a3726538,10547041,0,0x0,8
tick,0x1a372c99c,10548625,0,0x0,8
tick,0x1a372c99c,10554166,0,0x0,8
tick,0x1a372c99c,10554583,0,0x0,8
tick,0x1a372c99c,10557541,0,0x0,8
tick,0x101496000,10558375,0,0x0,0,0x10753ab84,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10561833,0,0x0,8
tick,0x1a372c99c,10562208,0,0x0,8
tick,0x1a372c99c,10563666,0,0x0,8
tick,0x1a372c99c,10564583,0,0x0,8
tick,0x1a372c99c,10566833,0,0x0,8
tick,0x1a372c99c,10567208,0,0x0,8
tick,0x1a3726538,10568416,0,0x0,8
tick,0x1a372c99c,10572375,0,0x0,8
tick,0x1a372c99c,10577833,0,0x0,8
tick,0x1a372c99c,10580125,0,0x0,8
tick,0x1a372c99c,10580750,0,0x0,8
tick,0x1a372c99c,10583833,0,0x0,8
tick,0x1a372c99c,10586958,0,0x0,8
tick,0x1a372c99c,10587000,0,0x0,8
tick,0x1a372c99c,10588916,0,0x0,8
tick,0x1a372c99c,10589458,0,0x0,8
tick,0x1a372c99c,10591458,0,0x0,8
tick,0x1a372c99c,10592041,0,0x0,8
tick,0x1a372c99c,10598500,0,0x0,8
tick,0x1a372c99c,10601958,0,0x0,8
tick,0x1a372c99c,10606125,0,0x0,8
tick,0x1a37298d4,10606625,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,10606666,0x107532360,2300,terminateRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:62:20,0x324f23ca7508,*
code-source-info,0xx3a1583d05cd0S0x30d75b99f28
tick,0x1a372c99c,10607958,0,0x0,8
tick,0x1a372c99c,10608750,0,0x0,8
tick,0x1a372c99c,10611041,0,0x0,8
tick,0x1a372c99c,10611166,0,0x0,8
tick,0x1a3726538,10612458,0,0x0,8
tick,0x1a372c99c,10616458,0,0x0,8
tick,0x1a372c99c,10622041,0,0x0,8
tick,0x1a372c99c,10624500,0,0x0,8
tick,0x1a372c99c,10625000,0,0x0,8
tick,0x1a372c99c,10627833,0,0x0,8
tick,0x1a372c99c,10630708,0,0x0,8
tick,0x1a372c99c,10631083,0,0x0,8
tick,0x1a372c99c,10632708,0,0x0,8
tick,0x1a372c99c,10633541,0,0x0,8
tick,0x1a372c99c,10635208,0,0x0,8
tick,0x1a372c99c,10636083,0,0x0,8
scavenge,begin,1,147084,1643426356119
scavenge,end,1,147326,1643426356120
tick,0x1a372c99c,10642458,0,0x0,8
tick,0x1a372c99c,10645916,0,0x0,8
tick,0x1a372c99c,10649916,0,0x0,8
tick,0x1a372c99c,10651875,0,0x0,8
new,MemoryChunk,0x107540000,262144
tick,0x1a37298d4,10652125,0,0x0,4,0x0,0x107537604,0xb249f5cce42,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,13,10652541,0x107548060,3296,HTTPParser.initialize /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:14:44,0x395d7b337310,*
code-source-info,0x107548060,335,345,778,C0O345C56O387C96O418C116O12563I1C120O12627I1C124O456C256O484C296O477C468O497C536O507C660O554C680O568C784O586C912O609C1028O636C1112O660C1192O717C1280O743C1360O768C1580O777C1628O345C1704O768,F0O379F1O13279I0,S0x395d7b33b530S0x395d7b33b4e0
tick,0x10101deec,10653416,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10655083,0,0x0,8
tick,0x1a372c99c,10655750,0,0x0,8
tick,0x1a372c99c,10656833,0,0x0,8
tick,0x1a372c99c,10660583,0,0x0,8
tick,0x1a372c99c,10666083,0,0x0,8
tick,0x1013e3e38,10666208,0,0x0,0,0x107522b88,0x107533410
tick,0x1a372c99c,10668416,0,0x0,8
tick,0x1a372c99c,10668500,0,0x0,8
tick,0x1a372c99c,10671708,0,0x0,8
tick,0x1a372c99c,10674666,0,0x0,8
tick,0x1a372c99c,10676666,0,0x0,8
tick,0x1a372c99c,10677250,0,0x0,8
tick,0x1a372c99c,10679958,0,0x0,8
tick,0x1a372c99c,10680000,0,0x0,8
tick,0x1a372c99c,10681416,0,0x0,8
tick,0x1a372c99c,10688000,0,0x0,8
tick,0x1a372c99c,10689083,0,0x0,8
tick,0x1a372c99c,10692625,0,0x0,8
tick,0x1a372c99c,10698458,0,0x0,8
tick,0x1a372c99c,10698583,0,0x0,8
tick,0x1a372c99c,10700416,0,0x0,8
tick,0x1a372c99c,10701000,0,0x0,8
tick,0x1a372c99c,10702125,0,0x0,8
tick,0x1a372c99c,10703708,0,0x0,8
tick,0x1a372c99c,10704416,0,0x0,8
tick,0x1a372c99c,10705500,0,0x0,8
tick,0x1a372c99c,10709375,0,0x0,8
tick,0x1a372c99c,10714958,0,0x0,8
tick,0x1a372c99c,10717250,0,0x0,8
tick,0x1a372c99c,10717666,0,0x0,8
tick,0x1a372c99c,10720666,0,0x0,8
tick,0x1a372c99c,10722375,0,0x0,8
tick,0x1014a69b8,10722625,0,0x0,0,0x10753ab84,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10726000,0,0x0,8
tick,0x1a372c99c,10726208,0,0x0,8
tick,0x1a372c99c,10728208,0,0x0,8
tick,0x1a372c99c,10728708,0,0x0,8
tick,0x1a372c99c,10735166,0,0x0,8
tick,0x1a372c99c,10738583,0,0x0,8
tick,0x1a372c99c,10742708,0,0x0,8
tick,0x1a372c99c,10743208,0,0x0,8
tick,0x1a372c99c,10744541,0,0x0,8
tick,0x1a372c99c,10745333,0,0x0,8
tick,0x1a372c99c,10747500,0,0x0,8
tick,0x1a372c99c,10747875,0,0x0,8
tick,0x1a372c99c,10749125,0,0x0,8
tick,0x1a372c99c,10753208,0,0x0,8
tick,0x1a372c99c,10759208,0,0x0,8
tick,0x1a372c99c,10761666,0,0x0,8
tick,0x1a372c99c,10765333,0,0x0,8
tick,0x1a372c99c,10765458,0,0x0,8
tick,0x1a372c99c,10767416,0,0x0,8
tick,0x1a372c99c,10767958,0,0x0,8
tick,0x1a372c99c,10771375,0,0x0,8
tick,0x1a372c99c,10771666,0,0x0,8
tick,0x1a372c99c,10773916,0,0x0,8
tick,0x1013a2bd4,10774083,0,0x0,0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x10753a630,10775333,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10781458,0,0x0,8
tick,0x1a372c99c,10781625,0,0x0,8
tick,0x1a372c99c,10785375,0,0x0,8
tick,0x1a372c99c,10792000,0,0x0,8
tick,0x1a372c99c,10793083,0,0x0,8
tick,0x1a372c99c,10794166,0,0x0,8
tick,0x1a372c99c,10797125,0,0x0,8
tick,0x100f464e4,10797833,0,0x0,5
tick,0x1a372c99c,10799291,0,0x0,8
tick,0x1a372c99c,10800375,0,0x0,8
tick,0x1a372c99c,10801583,0,0x0,8
tick,0x1a372c99c,10807291,0,0x0,8
tick,0x1a372c99c,10807583,0,0x0,8
tick,0x1a372c99c,10808791,0,0x0,8
tick,0x1a372c99c,10809958,0,0x0,8
tick,0x1a372c99c,10810958,0,0x0,8
tick,0x1a372c99c,10820666,0,0x0,8
tick,0x1a3726538,10820750,0,0x0,8
tick,0x1a372c99c,10826291,0,0x0,8
tick,0x1a372c99c,10829166,0,0x0,8
tick,0x1a372c99c,10829833,0,0x0,8
tick,0x1a372c99c,10833000,0,0x0,8
tick,0x1a372c99c,10836250,0,0x0,8
tick,0x1a372c99c,10836416,0,0x0,8
tick,0x1a372c99c,10838958,0,0x0,8
tick,0x1a372c99c,10839083,0,0x0,8
tick,0x1a372c99c,10843291,0,0x0,8
tick,0x1a372c99c,10844083,0,0x0,8
scavenge,begin,1,159821,1643426356327
scavenge,end,1,160151,1643426356328
tick,0x1a372c99c,10853083,0,0x0,8
tick,0x1a372c99c,10853500,0,0x0,8
tick,0x1a372c99c,10856166,0,0x0,8
tick,0x1a372c99c,10863958,0,0x0,8
tick,0x1a372c99c,10864666,0,0x0,8
tick,0x1a372c99c,10866125,0,0x0,8
tick,0x1a372c99c,10867208,0,0x0,8
tick,0x1a372c99c,10869708,0,0x0,8
tick,0x10753a248,10869750,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10870916,0,0x0,8
tick,0x1a372c99c,10874500,0,0x0,8
tick,0x107520b3c,10874625,0,0x0,0,0x101461efc,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,10881708,0,0x0,8
tick,0x1a372c99c,10884083,0,0x0,8
tick,0x100d61a54,10884333,0,0x0,8
tick,0x1a372c99c,10887958,0,0x0,8
tick,0x1a372c99c,10888083,0,0x0,8
tick,0x1a372c99c,10889958,0,0x0,8
tick,0x1a372c99c,10890333,0,0x0,8
tick,0x1a372c99c,10892458,0,0x0,8
tick,0x1a372c99c,10894708,0,0x0,8
tick,0x1a372c99c,10895083,0,0x0,8
tick,0x1a372c99c,10896083,0,0x0,8
tick,0x1a372c99c,10905666,0,0x0,8
tick,0x1a372c99c,10908708,0,0x0,8
tick,0x1a372c99c,10908833,0,0x0,8
tick,0x1a372c99c,10915000,0,0x0,8
tick,0x1a372c99c,10915083,0,0x0,8
tick,0x1a372c99c,10916375,0,0x0,8
tick,0x1a372c99c,10918375,0,0x0,8
tick,0x100f0c32c,10918875,0,0x0,8
tick,0x1a372c99c,10919958,0,0x0,8
tick,0x1a372c99c,10923458,0,0x0,8
tick,0x1a3726538,10923708,0,0x0,8
tick,0x1a3726538,10924958,0,0x0,8
tick,0x1a372c99c,10929000,0,0x0,8
tick,0x1a372c99c,10929625,0,0x0,8
tick,0x1a372c99c,10935916,0,0x0,8
tick,0x1a372c99c,10938666,0,0x0,8
tick,0x1a372c99c,10939458,0,0x0,8
tick,0x1a372c99c,10944875,0,0x0,8
tick,0x1a372c99c,10946916,0,0x0,8
tick,0x1a372c99c,10947208,0,0x0,8
tick,0x1a372c99c,10949500,0,0x0,8
tick,0x1013e4040,10949541,0,0x0,0,0x1075229c4,0x107533410
tick,0x1a372c99c,10951875,0,0x0,8
tick,0x1a372c99c,10952000,0,0x0,8
tick,0x1a372c99c,10953041,0,0x0,8
tick,0x1a372c99c,10960625,0,0x0,8
tick,0x1a372c99c,10963291,0,0x0,8
tick,0x1a372c99c,10963583,0,0x0,8
tick,0x1a372c99c,10967875,0,0x0,8
tick,0x1a372c99c,10968541,0,0x0,8
tick,0x1a372c99c,10969916,0,0x0,8
tick,0x1a3726538,10971041,0,0x0,8
tick,0x1a372c99c,10973000,0,0x0,8
tick,0x1a372c99c,10973375,0,0x0,8
tick,0x1a372c99c,10974541,0,0x0,8
tick,0x1a372c99c,10978958,0,0x0,8
tick,0x1a372c99c,10979375,0,0x0,8
tick,0x1a372c99c,10985125,0,0x0,8
tick,0x1a372c99c,10987333,0,0x0,8
tick,0x1a372c99c,10987958,0,0x0,8
tick,0x1a372c99c,10990791,0,0x0,8
tick,0x1a372c99c,10994250,0,0x0,8
tick,0x1a372c99c,10997000,0,0x0,8
tick,0x1a372c99c,10999625,0,0x0,8
tick,0x1a372c99c,11000583,0,0x0,8
tick,0x1a372c99c,11007250,0,0x0,8
tick,0x1a372c99c,11010916,0,0x0,8
tick,0x101462530,11011416,0,0x0,0,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11015458,0,0x0,8
tick,0x1a372c99c,11016250,0,0x0,8
tick,0x1a372c99c,11017916,0,0x0,8
tick,0x1a372c99c,11018750,0,0x0,8
tick,0x1a372c99c,11021375,0,0x0,8
tick,0x1a372c99c,11022166,0,0x0,8
tick,0x1a372c99c,11023250,0,0x0,8
tick,0x1a372c99c,11027041,0,0x0,8
tick,0x1a372c99c,11032958,0,0x0,8
tick,0x1013b0258,11033041,0,0x0,0,0x0,0x107528f40
tick,0x1a372c99c,11035458,0,0x0,8
tick,0x1a372953c,11035541,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0xb249f5cd415,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11039208,0,0x0,8
tick,0x1a3726538,11039333,0,0x0,8
tick,0x1a372c99c,11041416,0,0x0,8
tick,0x1a372c99c,11041666,0,0x0,8
tick,0x1a372c99c,11045458,0,0x0,8
tick,0x1a372c99c,11045791,0,0x0,8
tick,0x1a372c99c,11048000,0,0x0,8
tick,0x1a372c99c,11048125,0,0x0,8
scavenge,begin,1,170928,1643426356532
scavenge,end,1,171157,1643426356532
tick,0x1a372c99c,11049333,0,0x0,8
tick,0x1a372c99c,11056625,0,0x0,8
tick,0x1a372c99c,11060916,0,0x0,8
tick,0x1a372c99c,11062291,0,0x0,8
tick,0x1a372c99c,11071041,0,0x0,8
tick,0x1a372c99c,11071291,0,0x0,8
tick,0x1a372c99c,11073000,0,0x0,8
tick,0x1a372c99c,11076125,0,0x0,8
tick,0x1a372c99c,11076291,0,0x0,8
tick,0x1a372c99c,11077583,0,0x0,8
tick,0x1a372c99c,11079958,0,0x0,8
tick,0x100d67dc4,11080041,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11081333,0,0x0,8
tick,0x1a372c99c,11084791,0,0x0,8
tick,0x1a3576530,11085083,0,0x0,5
tick,0x1a372c99c,11093333,0,0x0,8
tick,0x10111d6b8,11093416,0,0x0,0,0x107533e80,0x107522bf8,0x107533410
tick,0x1a372c99c,11096583,0,0x0,8
tick,0x1a372c99c,11097291,0,0x0,8
tick,0x1a372c99c,11101250,0,0x0,8
tick,0x1a372c99c,11104416,0,0x0,8
tick,0x1a372c99c,11109125,0,0x0,8
tick,0x1a372c99c,11109291,0,0x0,8
tick,0x1a372c99c,11111750,0,0x0,8
tick,0x1a372c99c,11112708,0,0x0,8
tick,0x1a372c99c,11122083,0,0x0,8
tick,0x1a372c99c,11122208,0,0x0,8
tick,0x1a372c99c,11125125,0,0x0,8
tick,0x1a372c99c,11131375,0,0x0,8
tick,0x100d666e8,11131416,0,0x0,8
tick,0x1a372c99c,11134208,0,0x0,8
tick,0x1a372c99c,11134916,0,0x0,8
tick,0x1a372c99c,11138000,0,0x0,8
tick,0x1a372c99c,11138583,0,0x0,8
tick,0x1a372c99c,11139666,0,0x0,8
tick,0x1a372c99c,11142875,0,0x0,8
tick,0x1a372c99c,11143250,0,0x0,8
tick,0x1a372c99c,11150958,0,0x0,8
tick,0x1a372c99c,11153875,0,0x0,8
tick,0x1a372c99c,11154208,0,0x0,8
tick,0x1a372c99c,11158416,0,0x0,8
tick,0x1a372c99c,11161500,0,0x0,8
tick,0x1a372c99c,11161833,0,0x0,8
tick,0x1a372c99c,11165291,0,0x0,8
tick,0x1010a49ec,11165583,0,0x0,5
tick,0x1a372c99c,11168583,0,0x0,8
tick,0x1a372c99c,11169291,0,0x0,8
tick,0x1a372c99c,11178333,0,0x0,8
tick,0x1a372c99c,11181208,0,0x0,8
tick,0x1a372c99c,11181333,0,0x0,8
tick,0x1a372c99c,11187375,0,0x0,8
tick,0x1a372c99c,11187500,0,0x0,8
tick,0x1a372c99c,11190083,0,0x0,8
tick,0x1a372c99c,11190958,0,0x0,8
tick,0x1a372c99c,11193416,0,0x0,8
tick,0x1a372c99c,11194375,0,0x0,8
tick,0x1a372c99c,11197791,0,0x0,8
tick,0x1a372c99c,11204500,0,0x0,8
tick,0x1a372c99c,11206708,0,0x0,8
tick,0x1a372c99c,11207666,0,0x0,8
tick,0x1a372c99c,11209958,0,0x0,8
tick,0x1a372c99c,11210083,0,0x0,8
tick,0x1a372c99c,11211708,0,0x0,8
tick,0x1075234ec,11212541,0,0x0,0,0x10753872c,0xb249f5cce12,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11215083,0,0x0,8
tick,0x1a372c99c,11217416,0,0x0,8
tick,0x1a372c99c,11218458,0,0x0,8
tick,0x1a372c99c,11224458,0,0x0,8
tick,0x1a372c99c,11225333,0,0x0,8
tick,0x1a372c99c,11226875,0,0x0,8
tick,0x1a372c99c,11227333,0,0x0,8
tick,0x1a372c99c,11231916,0,0x0,8
tick,0x1a372c99c,11232250,0,0x0,8
tick,0x1a372c99c,11233916,0,0x0,8
tick,0x1a372c99c,11234750,0,0x0,8
code-creation,LazyCompile,13,11235125,0x107548e20,268, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:174:19,0x311ed227e808,*
code-source-info,0x107548e20,335,4440,4496,C0O4440C60O4452C68O4468C100O4492C148O4440,,
tick,0x1a372c99c,11237125,0,0x0,8
tick,0x1a3726538,11237125,0,0x0,8
tick,0x1a372c99c,11238250,0,0x0,8
tick,0x1a372c99c,11241583,0,0x0,8
tick,0x1a372c99c,11241750,0,0x0,8
tick,0x1a372c99c,11248500,0,0x0,8
tick,0x1a372c99c,11250625,0,0x0,8
tick,0x1a372c99c,11251750,0,0x0,8
tick,0x1a372c99c,11254416,0,0x0,8
tick,0x1a372c99c,11256416,0,0x0,8
tick,0x1a372c99c,11256791,0,0x0,8
tick,0x1a372c99c,11258833,0,0x0,8
tick,0x1a372c99c,11262541,0,0x0,8
scavenge,begin,1,181423,1643426356746
scavenge,end,1,181587,1643426356746
tick,0x100c21a20,11263125,0,0x0,5
tick,0x1a372c99c,11264208,0,0x0,8
tick,0x1a372c99c,11273333,0,0x0,8
tick,0x1a372c99c,11273791,0,0x0,8
tick,0x1a372c99c,11275458,0,0x0,8
tick,0x1a372c99c,11276041,0,0x0,8
tick,0x1a372c99c,11282916,0,0x0,8
tick,0x10750a060,11282958,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11285166,0,0x0,8
tick,0x1a372c99c,11285916,0,0x0,8
tick,0x1a372c99c,11287291,0,0x0,8
tick,0x1a372c99c,11288500,0,0x0,8
tick,0x1a372c99c,11289625,0,0x0,8
tick,0x1a372c99c,11291791,0,0x0,8
tick,0x1a372c99c,11294625,0,0x0,8
tick,0x1a372c99c,11294958,0,0x0,8
tick,0x1a372c99c,11303875,0,0x0,8
tick,0x1a372c99c,11306333,0,0x0,8
tick,0x1a372c99c,11309541,0,0x0,8
tick,0x1a372c99c,11312000,0,0x0,8
tick,0x1a372c99c,11312625,0,0x0,8
tick,0x1a372c99c,11317500,0,0x0,8
tick,0x1a372953c,11317666,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0xb249f5cd415,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11321083,0,0x0,8
tick,0x1a372c99c,11321458,0,0x0,8
tick,0x1a372c99c,11322625,0,0x0,8
tick,0x1a372c99c,11331333,0,0x0,8
tick,0x1a372c99c,11332291,0,0x0,8
tick,0x1a372c99c,11335708,0,0x0,8
tick,0x1a372c99c,11335958,0,0x0,8
tick,0x1a372c99c,11337791,0,0x0,8
tick,0x1a372c99c,11338416,0,0x0,8
tick,0x1a372c99c,11342791,0,0x0,8
tick,0x1a372c99c,11343541,0,0x0,8
tick,0x1a372c99c,11344750,0,0x0,8
tick,0x1a372c99c,11346916,0,0x0,8
tick,0x1a372c99c,11349583,0,0x0,8
tick,0x1a372c99c,11349708,0,0x0,8
tick,0x1a372c99c,11355041,0,0x0,8
tick,0x1016510e8,11355625,0,0x0,4,0x0,0x10753ab84,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,13,11356416,0x107548fc0,416,HTTPParser.shouldKeepAlive /Users/carloscalvo/code/Coder/backend/entregas/node_modules/http-parser-js/http-parser.js:269:49,0x395d7b337f38,*
code-source-info,0x107548fc0,335,7172,7508,C0O7172C52O7188C76O7193C96O7206C108O7236C120O7338C124O7256C128O7267C164O7284C180O7313C216O7414C236O7486C244O7442C248O7172,,
tick,0x1a372c99c,11360291,0,0x0,8
tick,0x100df9b94,11360625,0,0x0,8
tick,0x1a372c99c,11362291,0,0x0,8
tick,0x1a372c99c,11363208,0,0x0,8
tick,0x1a372c99c,11364916,0,0x0,8
tick,0x1a372c99c,11367333,0,0x0,8
tick,0x1a372c99c,11367708,0,0x0,8
tick,0x1a372c99c,11368875,0,0x0,8
tick,0x1a372c99c,11371500,0,0x0,8
tick,0x1a372c99c,11378541,0,0x0,8
tick,0x1a372c99c,11378541,0,0x0,8
tick,0x1a372c99c,11383250,0,0x0,8
tick,0x1a372c99c,11383375,0,0x0,8
tick,0x1a372c99c,11385583,0,0x0,8
tick,0x1a372c99c,11385875,0,0x0,8
tick,0x1a372c99c,11387125,0,0x0,8
tick,0x1a372c99c,11388625,0,0x0,8
tick,0x1a372c99c,11389583,0,0x0,8
tick,0x1a372c99c,11394583,0,0x0,8
tick,0x1a372c99c,11397250,0,0x0,8
tick,0x1a372c99c,11402666,0,0x0,8
tick,0x1a372c99c,11403291,0,0x0,8
tick,0x1a372c99c,11406458,0,0x0,8
tick,0x1a372c99c,11408500,0,0x0,8
tick,0x1a372c99c,11409333,0,0x0,8
tick,0x1a372c99c,11412625,0,0x0,8
tick,0x1a372c99c,11414833,0,0x0,8
tick,0x1a372c99c,11415791,0,0x0,8
tick,0x1a372953c,11417000,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0xb249f5cd415,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11420916,0,0x0,8
tick,0x1a372c99c,11424708,0,0x0,8
tick,0x1a372c99c,11425416,0,0x0,8
tick,0x1a372c99c,11430416,0,0x0,8
tick,0x1a372c99c,11430916,0,0x0,8
tick,0x1a372c99c,11432708,0,0x0,8
tick,0x1a372c99c,11433250,0,0x0,8
tick,0x1a372c99c,11434541,0,0x0,8
tick,0x1a372c99c,11436166,0,0x0,8
tick,0x1a372c99c,11436791,0,0x0,8
tick,0x1a372c99c,11437791,0,0x0,8
tick,0x1a372c99c,11440833,0,0x0,8
tick,0x1a372c99c,11443416,0,0x0,8
tick,0x1a372c99c,11443875,0,0x0,8
tick,0x1a372c99c,11450291,0,0x0,8
tick,0x1a372c99c,11451041,0,0x0,8
tick,0x1a372c99c,11454208,0,0x0,8
tick,0x1a372c99c,11456291,0,0x0,8
tick,0x1a372c99c,11457125,0,0x0,8
tick,0x1a372c99c,11459125,0,0x0,8
tick,0x1a372c99c,11459333,0,0x0,8
tick,0x1a372c99c,11461375,0,0x0,8
scavenge,begin,1,194204,1643426356944
scavenge,end,1,194389,1643426356945
tick,0x1a357ce7c,11461833,0,0x0,5
tick,0x1a372c99c,11470458,0,0x0,8
tick,0x1a372c99c,11472583,0,0x0,8
tick,0x1a372c99c,11473083,0,0x0,8
tick,0x1a372c99c,11476750,0,0x0,8
tick,0x100e1f018,11476791,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11480750,0,0x0,8
tick,0x1a372c99c,11481750,0,0x0,8
tick,0x1a372c99c,11483875,0,0x0,8
tick,0x1a372c99c,11484083,0,0x0,8
tick,0x1a372c99c,11485291,0,0x0,8
tick,0x1a372c99c,11488541,0,0x0,8
tick,0x1a372c99c,11491166,0,0x0,8
tick,0x1a372c99c,11491416,0,0x0,8
tick,0x1a372c99c,11497916,0,0x0,8
tick,0x1a372c99c,11498583,0,0x0,8
tick,0x1a372c99c,11501541,0,0x0,8
tick,0x1a372c99c,11503916,0,0x0,8
code-creation,LazyCompile,13,11504625,0x107549200,1464,Writable.write node:internal/streams/writable:333:36,0x38fe55861e60,*
code-source-info,0x107549200,55,10749,10827,C0O10749C60O9438I0C116O9457I0C160O9535I0C192O9567I0C264O9605I0C272O9742I0C328O9795I0C344O9877I0C416O9895I0C436O9944I0C440O9958I0C452O9994I0C572O10075I0C632O10391I0C716O10411I0C720O10464I0C780O10487I0C784O10632I0C796O10647I0C804O10660I0C864O10825C932O10145I0C936O9827I0C940O9644I0C944O10749C1000O9567I0C1052O9877I0C1096O10075I0C1204O10391I0C1240O10464I0,F0O10782,S0x38fe55861e10
tick,0x1a375c180,11504708,0,0x0,4,0x0,0x1075334b8
tick,0x1a372c99c,11506666,0,0x0,8
tick,0x1a372c99c,11509250,0,0x0,8
tick,0x1a372c99c,11509750,0,0x0,8
tick,0x1a372c99c,11510750,0,0x0,8
tick,0x1a372c99c,11521791,0,0x0,8
tick,0x1a372c99c,11526083,0,0x0,8
tick,0x1a372c99c,11526291,0,0x0,8
tick,0x1a372c99c,11528875,0,0x0,8
tick,0x1a372953c,11529125,0,0x0,0,0x0,0x10752b64c,0x107549560,0xb249f5cce5b,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a3726538,11531208,0,0x0,8
tick,0x1a372c99c,11534291,0,0x0,8
tick,0x1a372c99c,11535208,0,0x0,8
tick,0x1a372c99c,11537041,0,0x0,8
tick,0x107538af4,11537291,0,0x0,0,0x107529434
tick,0x1a372c99c,11538708,0,0x0,8
tick,0x1a372c99c,11544083,0,0x0,8
tick,0x1a372c99c,11546750,0,0x0,8
tick,0x1a372c99c,11553541,0,0x0,8
tick,0x1a372c99c,11554166,0,0x0,8
tick,0x1a372c99c,11557208,0,0x0,8
tick,0x1a372c99c,11559625,0,0x0,8
tick,0x1a372c99c,11560333,0,0x0,8
tick,0x1a372c99c,11563250,0,0x0,8
tick,0x1a372c99c,11569708,0,0x0,8
tick,0x1a372c99c,11570375,0,0x0,8
tick,0x1a372c99c,11571625,0,0x0,8
tick,0x1a372c99c,11572875,0,0x0,8
tick,0x1a372c99c,11574000,0,0x0,8
tick,0x1a372c99c,11592250,0,0x0,8
tick,0x1013adb44,11592333,0,0x0,0,0xb249f5cce56,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11593541,0,0x0,8
tick,0x1a372c99c,11597791,0,0x0,8
tick,0x1a372c99c,11598375,0,0x0,8
tick,0x1a372c99c,11599833,0,0x0,8
tick,0x1a372c99c,11600791,0,0x0,8
tick,0x1a372c99c,11603458,0,0x0,8
tick,0x1a372c99c,11604208,0,0x0,8
tick,0x1a372c99c,11607000,0,0x0,8
tick,0x1a372c99c,11611583,0,0x0,8
tick,0x1a372c99c,11614083,0,0x0,8
tick,0x1a372c99c,11618958,0,0x0,8
tick,0x1015fa0fc,11620250,0,0x0,4,0x0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11622333,0,0x0,8
tick,0x1a372c99c,11625916,0,0x0,8
tick,0x1a37298d4,11626375,0,0x0,4,0x0,0x1075334b8
tick,0x1a37298d4,11627666,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,11628041,0x107549860,3744,Client._doRequest /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:152:40,0x2779b46fce40,*
code-source-info,0xx2779b46fd078S0x2779b46ff878S0x38fe55861e60S0x324f23ca7328S0x1910fc7f2c30S0xbb714f51830S0xbb714f517a0S0xbb714f73848
tick,0x1a372c99c,11629250,0,0x0,8
tick,0x1a372c99c,11632000,0,0x0,8
tick,0x1a372c99c,11632500,0,0x0,8
tick,0x1a372c99c,11639666,0,0x0,8
tick,0x1a372c99c,11639833,0,0x0,8
tick,0x1013a24b0,11641041,0,0x0,0,0x10753403c,0x107522bf8,0x107533410
tick,0x1a372c99c,11645750,0,0x0,8
tick,0x1a372c99c,11645916,0,0x0,8
tick,0x1a372c99c,11647916,0,0x0,8
tick,0x1a372c99c,11648291,0,0x0,8
tick,0x1a372c99c,11649333,0,0x0,8
tick,0x1a372c99c,11651500,0,0x0,8
tick,0x1a372c99c,11651625,0,0x0,8
tick,0x1a372c99c,11652666,0,0x0,8
tick,0x1a372c99c,11654791,0,0x0,8
tick,0x1a372c99c,11654875,0,0x0,8
tick,0x1a372c99c,11659500,0,0x0,8
tick,0x1a372c99c,11661791,0,0x0,8
tick,0x1013f28c0,11662166,0,0x0,0,0x107533410
tick,0x1a372c99c,11666541,0,0x0,8
tick,0x1a372c99c,11667041,0,0x0,8
tick,0x1a372c99c,11669666,0,0x0,8
tick,0x1a372c99c,11671708,0,0x0,8
tick,0x1a372c99c,11672083,0,0x0,8
tick,0x1a372c99c,11675541,0,0x0,8
tick,0x1a372c99c,11675833,0,0x0,8
scavenge,begin,1,211210,1643426357159
scavenge,end,1,211395,1643426357159
tick,0x1a372c99c,11678166,0,0x0,8
tick,0x1013e3e10,11679375,0,0x0,0,0x1074df790,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11685791,0,0x0,8
tick,0x1a372c99c,11686666,0,0x0,8
tick,0x1a372c99c,11691750,0,0x0,8
tick,0x1a372c99c,11691916,0,0x0,8
tick,0x1a372c99c,11693750,0,0x0,8
tick,0x1a372c99c,11694500,0,0x0,8
tick,0x1a372c99c,11697375,0,0x0,8
tick,0x1a372c99c,11698083,0,0x0,8
tick,0x1a372c99c,11700750,0,0x0,8
tick,0x1a372c99c,11705250,0,0x0,8
tick,0x1a372c99c,11707625,0,0x0,8
tick,0x100e7c650,11708000,0,0x0,0,0x0,0x1075243c0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11712458,0,0x0,8
tick,0x10750ab00,11713041,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11715500,0,0x0,8
tick,0x1a372c99c,11715666,0,0x0,8
tick,0x1a372c99c,11717458,0,0x0,8
tick,0x1a372c99c,11717958,0,0x0,8
tick,0x1a372c99c,11721250,0,0x0,8
tick,0x1a372c99c,11723750,0,0x0,8
tick,0x1a372c99c,11724250,0,0x0,8
tick,0x1a372c99c,11725416,0,0x0,8
tick,0x1a372c99c,11731333,0,0x0,8
tick,0x1a372c99c,11732541,0,0x0,8
tick,0x1a372c99c,11737708,0,0x0,8
tick,0x1a372c99c,11739666,0,0x0,8
tick,0x1a372c99c,11739958,0,0x0,8
tick,0x1a372c99c,11740958,0,0x0,8
tick,0x1a372c99c,11743083,0,0x0,8
tick,0x1a372c99c,11743333,0,0x0,8
tick,0x1a372c99c,11744333,0,0x0,8
tick,0x1a372c99c,11746458,0,0x0,8
tick,0x1a372c99c,11746625,0,0x0,8
tick,0x1a372c99c,11751541,0,0x0,8
tick,0x1a372c99c,11753958,0,0x0,8
tick,0x1a372c99c,11754500,0,0x0,8
tick,0x1a372c99c,11759083,0,0x0,8
tick,0x1a372c99c,11763500,0,0x0,8
tick,0x1a372c99c,11764625,0,0x0,8
tick,0x1a372c99c,11766708,0,0x0,8
tick,0x1a372c99c,11767375,0,0x0,8
tick,0x1a372c99c,11773375,0,0x0,8
tick,0x1a372c99c,11776458,0,0x0,8
tick,0x1a372953c,11776916,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11788291,0,0x0,8
tick,0x1a372c99c,11789000,0,0x0,8
tick,0x1a372c99c,11790916,0,0x0,8
tick,0x1a372c99c,11796666,0,0x0,8
tick,0x1a372c99c,11797583,0,0x0,8
tick,0x1a372c99c,11800750,0,0x0,8
tick,0x101416994,11800833,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11801750,0,0x0,8
tick,0x1a372c99c,11807458,0,0x0,8
tick,0x1a372c99c,11807791,0,0x0,8
tick,0x100eec4f4,11809333,0,0x0,5
tick,0x1a372c99c,11814875,0,0x0,8
tick,0x1a3726538,11815333,0,0x0,8
tick,0x1a372c99c,11819416,0,0x0,8
tick,0x1a372c99c,11824541,0,0x0,8
tick,0x1a372c99c,11825291,0,0x0,8
tick,0x1a372c99c,11828083,0,0x0,8
tick,0x1a372c99c,11830416,0,0x0,8
tick,0x1a372c99c,11834375,0,0x0,8
tick,0x1a372c99c,11837125,0,0x0,8
tick,0x1a372c99c,11837875,0,0x0,8
tick,0x1a372c99c,11844833,0,0x0,8
tick,0x1a372c99c,11845250,0,0x0,8
tick,0x1a372c99c,11850458,0,0x0,8
tick,0x1a372c99c,11850791,0,0x0,8
tick,0x1a372c99c,11852875,0,0x0,8
tick,0x1a372c99c,11853125,0,0x0,8
tick,0x1a372c99c,11854291,0,0x0,8
tick,0x1a372c99c,11856541,0,0x0,8
tick,0x1a372c99c,11856666,0,0x0,8
tick,0x1a372c99c,11857666,0,0x0,8
tick,0x1a372c99c,11862666,0,0x0,8
tick,0x1a372c99c,11866625,0,0x0,8
tick,0x1a372c99c,11867166,0,0x0,8
tick,0x1a372c99c,11871375,0,0x0,8
tick,0x1a372c99c,11871750,0,0x0,8
tick,0x1a372c99c,11874708,0,0x0,8
tick,0x1a372c99c,11877000,0,0x0,8
tick,0x1a372c99c,11877625,0,0x0,8
tick,0x1a372c99c,11879666,0,0x0,8
tick,0x1a372c99c,11883750,0,0x0,8
scavenge,begin,1,223582,1643426357367
scavenge,end,1,223769,1643426357367
tick,0x1a372c99c,11884875,0,0x0,8
tick,0x1a372c99c,11892000,0,0x0,8
tick,0x1a372c99c,11892041,0,0x0,8
tick,0x1a372c99c,11893208,0,0x0,8
tick,0x1a372c99c,11896625,0,0x0,8
tick,0x1a372c99c,11896916,0,0x0,8
tick,0x1a372c99c,11900416,0,0x0,8
tick,0x1a372c99c,11900791,0,0x0,8
tick,0x1a372c99c,11901916,0,0x0,8
tick,0x1a372c99c,11904000,0,0x0,8
tick,0x1a372c99c,11904291,0,0x0,8
tick,0x1a372c99c,11910083,0,0x0,8
tick,0x1a372c99c,11910416,0,0x0,8
tick,0x1a372c99c,11912791,0,0x0,8
tick,0x1a372c99c,11919125,0,0x0,8
tick,0x1014624ac,11919166,0,0x0,0,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,11920625,0,0x0,8
tick,0x1a372c99c,11922250,0,0x0,8
tick,0x1a372c99c,11924416,0,0x0,8
tick,0x1a372c99c,11927250,0,0x0,8
tick,0x1a372c99c,11929958,0,0x0,8
tick,0x1a372c99c,11930625,0,0x0,8
tick,0x1a372c99c,11939083,0,0x0,8
tick,0x1a372c99c,11939500,0,0x0,8
tick,0x1a372c99c,11943666,0,0x0,8
tick,0x107533348,11944333,0,0x0,0
tick,0x1a372c99c,11945791,0,0x0,8
tick,0x1a372c99c,11946458,0,0x0,8
tick,0x1a372c99c,11950250,0,0x0,8
tick,0x1a372c99c,11951250,0,0x0,8
tick,0x1a372c99c,11956083,0,0x0,8
tick,0x1a372c99c,11958625,0,0x0,8
tick,0x1a372c99c,11963083,0,0x0,8
tick,0x1a357b750,11963125,0,0x0,5
tick,0x1a372c99c,11964833,0,0x0,8
tick,0x1a372c99c,11968958,0,0x0,8
tick,0x1a372c99c,11970958,0,0x0,8
tick,0x1a372c99c,11971833,0,0x0,8
tick,0x1a372c99c,11973875,0,0x0,8
tick,0x1a3720f20,11974375,0,0x0,5
tick,0x1a372c99c,11976416,0,0x0,8
tick,0x1a372c99c,11976916,0,0x0,8
tick,0x1a372c99c,11986291,0,0x0,8
tick,0x1a372c99c,11986833,0,0x0,8
tick,0x1a372c99c,11991125,0,0x0,8
tick,0x1a372c99c,11991750,0,0x0,8
tick,0x1a372c99c,11993291,0,0x0,8
tick,0x1a372c99c,11994000,0,0x0,8
tick,0x1a372c99c,11995041,0,0x0,8
tick,0x1a372c99c,11996750,0,0x0,8
tick,0x1a372c99c,11997333,0,0x0,8
tick,0x1a372c99c,12003583,0,0x0,8
tick,0x1a372c99c,12006041,0,0x0,8
tick,0x1a372c99c,12010541,0,0x0,8
tick,0x1a3726538,12011666,0,0x0,8
tick,0x1a372c99c,12014541,0,0x0,8
tick,0x1a372c99c,12016666,0,0x0,8
tick,0x1010c9fdc,12016708,0,0x0,0,0x0,0x1075243c0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12019000,0,0x0,8
tick,0x1a372c99c,12019208,0,0x0,8
tick,0x1a372c99c,12021666,0,0x0,8
tick,0x1a372c99c,12021791,0,0x0,8
tick,0x101490300,12023000,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12029875,0,0x0,8
tick,0x1a372c99c,12030250,0,0x0,8
tick,0x1a372c99c,12034250,0,0x0,8
tick,0x1a372c99c,12035083,0,0x0,8
tick,0x1a372c99c,12036375,0,0x0,8
tick,0x1013b03a0,12037208,0,0x0,0
tick,0x1a372c99c,12039875,0,0x0,8
tick,0x1a372c99c,12040833,0,0x0,8
tick,0x1a372c99c,12046833,0,0x0,8
tick,0x1a372c99c,12046958,0,0x0,8
tick,0x1a372c99c,12049416,0,0x0,8
tick,0x1a372c99c,12054083,0,0x0,8
tick,0x1a372c99c,12055125,0,0x0,8
tick,0x1a372c99c,12058125,0,0x0,8
tick,0x1a372c99c,12060250,0,0x0,8
tick,0x1a372c99c,12062500,0,0x0,8
tick,0x1a372c99c,12062625,0,0x0,8
tick,0x1a372c99c,12065041,0,0x0,8
tick,0x1a372c99c,12065125,0,0x0,8
scavenge,begin,1,233255,1643426357548
scavenge,end,1,233421,1643426357548
tick,0x1a372c99c,12066375,0,0x0,8
tick,0x1a372c99c,12073208,0,0x0,8
tick,0x1a372c99c,12073708,0,0x0,8
tick,0x1a372c99c,12077625,0,0x0,8
tick,0x1a372c99c,12079875,0,0x0,8
tick,0x1a372c99c,12080041,0,0x0,8
tick,0x1a372c99c,12081125,0,0x0,8
tick,0x1a372c99c,12083333,0,0x0,8
tick,0x1a372c99c,12083458,0,0x0,8
tick,0x1a372c99c,12084541,0,0x0,8
tick,0x1a372c99c,12090166,0,0x0,8
tick,0x1a372c99c,12092625,0,0x0,8
tick,0x1a372c99c,12097166,0,0x0,8
tick,0x100e1573c,12098291,0,0x0,8
tick,0x1a372c99c,12101458,0,0x0,8
tick,0x1a372c99c,12103541,0,0x0,8
tick,0x1a372c99c,12105666,0,0x0,8
tick,0x100f29914,12105916,0,0x0,5,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12108208,0,0x0,8
tick,0x100dfa05c,12108458,0,0x0,5
tick,0x101415efc,12109750,0,0x0,0,0x10752d6ac,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,12117625,0,0x0,8
tick,0x1011e4d90,12118375,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12122583,0,0x0,8
tick,0x1a372c99c,12123500,0,0x0,8
tick,0x1a372c99c,12124958,0,0x0,8
tick,0x1a372c99c,12125791,0,0x0,8
tick,0x1a372c99c,12128416,0,0x0,8
tick,0x1a372c99c,12129333,0,0x0,8
tick,0x1a372c99c,12136125,0,0x0,8
tick,0x1a372c99c,12136583,0,0x0,8
tick,0x1a372c99c,12138750,0,0x0,8
tick,0x1a372c99c,12139041,0,0x0,8
tick,0x1a372c99c,12143458,0,0x0,8
tick,0x1a372c99c,12143916,0,0x0,8
tick,0x1a372c99c,12147500,0,0x0,8
tick,0x1a372c99c,12147666,0,0x0,8
tick,0x1a372c99c,12149708,0,0x0,8
tick,0x1a372c99c,12149958,0,0x0,8
tick,0x1a372c99c,12152041,0,0x0,8
tick,0x1a372c99c,12152291,0,0x0,8
tick,0x1a372c99c,12154583,0,0x0,8
tick,0x1a372c99c,12154708,0,0x0,8
tick,0x1a372c99c,12155791,0,0x0,8
tick,0x1a372c99c,12162958,0,0x0,8
tick,0x1a372c99c,12163208,0,0x0,8
tick,0x1a372c99c,12167333,0,0x0,8
tick,0x1a372c99c,12168166,0,0x0,8
tick,0x1a372c99c,12169541,0,0x0,8
tick,0x2f3ebe2195c0,12170375,0,0x0,0,0x107535e0c,0x10750a494,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12173041,0,0x0,8
tick,0x1a372c99c,12174041,0,0x0,8
tick,0x1a372c99c,12180250,0,0x0,8
tick,0x1a372c99c,12182875,0,0x0,8
tick,0x1a372c99c,12187458,0,0x0,8
tick,0x1a372c99c,12188583,0,0x0,8
tick,0x1a372c99c,12191500,0,0x0,8
tick,0x1a372c99c,12194416,0,0x0,8
tick,0x1a372c99c,12194916,0,0x0,8
tick,0x1a372c99c,12196000,0,0x0,8
tick,0x1a372c99c,12200250,0,0x0,8
tick,0x1a372c99c,12200750,0,0x0,8
tick,0x1a372c99c,12208000,0,0x0,8
tick,0x101093ea4,12208041,0,0x0,0,0x0,0x1074df558,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12209458,0,0x0,8
tick,0x1a372c99c,12210666,0,0x0,8
tick,0x1a372c99c,12211833,0,0x0,8
tick,0x1a372c99c,12222458,0,0x0,8
tick,0x1a372c99c,12222958,0,0x0,8
tick,0x1a372c99c,12226833,0,0x0,8
tick,0x1a372c99c,12229083,0,0x0,8
tick,0x1a372c99c,12229208,0,0x0,8
tick,0x1a372c99c,12230291,0,0x0,8
tick,0x1a372c99c,12232541,0,0x0,8
tick,0x1a372c99c,12232791,0,0x0,8
tick,0x1a372c99c,12240041,0,0x0,8
tick,0x1a372c99c,12241083,0,0x0,8
tick,0x1a372c99c,12243000,0,0x0,8
tick,0x1a372c99c,12249666,0,0x0,8
tick,0x1a372c99c,12249791,0,0x0,8
tick,0x1a372c99c,12255875,0,0x0,8
tick,0x1a372c99c,12258375,0,0x0,8
tick,0x1a372c99c,12259375,0,0x0,8
tick,0x1a372c99c,12261916,0,0x0,8
tick,0x1a372c99c,12264125,0,0x0,8
scavenge,begin,1,243066,1643426357747
tick,0x100f3eca4,12264416,0,0x0,1
scavenge,end,1,243293,1643426357747
tick,0x1a372c99c,12265666,0,0x0,8
tick,0x1a372c99c,12275666,0,0x0,8
tick,0x1a372c99c,12279875,0,0x0,8
tick,0x1a372c99c,12280208,0,0x0,8
tick,0x1a372c99c,12284375,0,0x0,8
tick,0x107532638,12285291,0,0x0,0,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12288416,0,0x0,8
tick,0x1013a2e98,12289083,0,0x0,0,0x107522bf8,0x107533410
tick,0x1a372c99c,12292250,0,0x0,8
tick,0x1a372c99c,12296416,0,0x0,8
tick,0x1a372c99c,12296625,0,0x0,8
tick,0x1a372c99c,12300041,0,0x0,8
tick,0x107528e00,12300083,0,0x0,0
tick,0x1a372c99c,12306041,0,0x0,8
tick,0x1a372c99c,12306166,0,0x0,8
tick,0x1a372c99c,12309291,0,0x0,8
tick,0x1a372c99c,12309916,0,0x0,8
tick,0x1a372c99c,12311833,0,0x0,8
tick,0x1a372c99c,12312291,0,0x0,8
tick,0x1a372c99c,12314333,0,0x0,8
tick,0x1a372c99c,12314500,0,0x0,8
tick,0x1a372c99c,12315750,0,0x0,8
tick,0x1a372c99c,12323166,0,0x0,8
tick,0x1a372c99c,12323541,0,0x0,8
tick,0x1a372c99c,12327750,0,0x0,8
tick,0x1a372c99c,12328500,0,0x0,8
tick,0x1a372c99c,12330083,0,0x0,8
tick,0x1a372c99c,12330958,0,0x0,8
tick,0x1a372c99c,12333500,0,0x0,8
tick,0x1a372c99c,12334541,0,0x0,8
tick,0x1a372c99c,12339916,0,0x0,8
tick,0x1a372c99c,12340708,0,0x0,8
tick,0x1a372c99c,12345750,0,0x0,8
tick,0x1a372c99c,12349333,0,0x0,8
tick,0x10111cf50,12349333,0,0x0,0,0x107533e80,0x107522bf8,0x107533410
tick,0x1a372c99c,12352708,0,0x0,8
tick,0x1a372c99c,12353250,0,0x0,8
tick,0x1a372c99c,12355458,0,0x0,8
tick,0x1a372c99c,12355750,0,0x0,8
tick,0x1a372c99c,12358125,0,0x0,8
tick,0x1a372c99c,12358166,0,0x0,8
tick,0x107525660,12359416,0,0x0,0,0x1075324a0,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12366500,0,0x0,8
tick,0x1011e4b8c,12367333,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12370958,0,0x0,8
tick,0x1a372c99c,12371083,0,0x0,8
tick,0x1a372c99c,12373416,0,0x0,8
tick,0x1a372c99c,12373541,0,0x0,8
tick,0x1a372c99c,12374875,0,0x0,8
tick,0x1a372c99c,12376666,0,0x0,8
tick,0x1a372c99c,12377375,0,0x0,8
tick,0x1a372c99c,12383166,0,0x0,8
tick,0x1a372c99c,12383416,0,0x0,8
tick,0x1a372c99c,12389000,0,0x0,8
tick,0x1a372c99c,12392625,0,0x0,8
tick,0x1a372c99c,12393125,0,0x0,8
tick,0x1a372c99c,12396000,0,0x0,8
tick,0x1a372c99c,12396833,0,0x0,8
tick,0x1a372c99c,12398750,0,0x0,8
tick,0x1a372c99c,12401500,0,0x0,8
tick,0x1a372c99c,12401750,0,0x0,8
tick,0x1a3726538,12402916,0,0x0,8
tick,0x1a372c99c,12409875,0,0x0,8
tick,0x100dfa058,12409916,0,0x0,5
tick,0x1a372c99c,12414291,0,0x0,8
tick,0x1a372c99c,12414750,0,0x0,8
tick,0x1a372c99c,12416791,0,0x0,8
tick,0x1a372c99c,12417166,0,0x0,8
tick,0x1a372c99c,12418500,0,0x0,8
tick,0x1a372c99c,12420125,0,0x0,8
tick,0x1a372c99c,12420916,0,0x0,8
tick,0x1a372c99c,12426541,0,0x0,8
tick,0x1a372c99c,12427250,0,0x0,8
tick,0x1a372c99c,12432541,0,0x0,8
tick,0x1a372c99c,12436250,0,0x0,8
tick,0x1a372c99c,12437375,0,0x0,8
tick,0x1a372c99c,12439708,0,0x0,8
tick,0x1a372c99c,12440208,0,0x0,8
tick,0x1a372c99c,12442333,0,0x0,8
tick,0x1a372c99c,12442708,0,0x0,8
scavenge,begin,1,252850,1643426357931
tick,0x1a372c99c,12448083,0,0x0,8
tick,0x1013a2898,12448125,0,0x0,0,0x107522bf8,0x107533410
scavenge,end,1,253033,1643426357931
tick,0x1a372c99c,12455750,0,0x0,8
tick,0x1a372c99c,12456708,0,0x0,8
tick,0x1a372c99c,12460708,0,0x0,8
tick,0x1a372c99c,12464500,0,0x0,8
tick,0x1a372c99c,12465500,0,0x0,8
tick,0x1a372c99c,12468000,0,0x0,8
tick,0x1a372953c,12468000,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12469250,0,0x0,8
tick,0x1a372c99c,12474625,0,0x0,8
tick,0x1a372c99c,12475625,0,0x0,8
tick,0x1a372c99c,12480458,0,0x0,8
tick,0x100e1f018,12480500,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12483750,0,0x0,8
tick,0x1a372c99c,12484041,0,0x0,8
tick,0x1a372c99c,12487416,0,0x0,8
tick,0x1a372c99c,12487791,0,0x0,8
tick,0x1a372c99c,12492041,0,0x0,8
tick,0x1a372c99c,12492666,0,0x0,8
tick,0x1a372c99c,12497125,0,0x0,8
tick,0x1a372c99c,12500625,0,0x0,8
tick,0x1a3726538,12501416,0,0x0,8
tick,0x1a372c99c,12505166,0,0x0,8
tick,0x1a372c99c,12507708,0,0x0,8
tick,0x1a372c99c,12508583,0,0x0,8
tick,0x1a372c99c,12511041,0,0x0,8
tick,0x1a372c99c,12511875,0,0x0,8
tick,0x1a372c99c,12517625,0,0x0,8
tick,0x1a372c99c,12518000,0,0x0,8
tick,0x1a372c99c,12523541,0,0x0,8
tick,0x1a372c99c,12527083,0,0x0,8
tick,0x1a3726538,12528041,0,0x0,8
tick,0x1a372c99c,12530458,0,0x0,8
tick,0x1a372c99c,12531625,0,0x0,8
tick,0x1a372c99c,12535541,0,0x0,8
tick,0x1a372c99c,12536666,0,0x0,8
tick,0x1a372c99c,12540833,0,0x0,8
tick,0x1a372c99c,12544166,0,0x0,8
tick,0x1a372c99c,12548833,0,0x0,8
tick,0x1a372c99c,12549208,0,0x0,8
tick,0x1a372c99c,12551458,0,0x0,8
tick,0x1a372953c,12551708,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12553000,0,0x0,8
tick,0x1a372c99c,12554833,0,0x0,8
tick,0x1a372c99c,12555500,0,0x0,8
tick,0x1a372c99c,12561333,0,0x0,8
tick,0x100e7c624,12561416,0,0x0,0,0x0,0x1075243c0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12567250,0,0x0,8
tick,0x1a372c99c,12570708,0,0x0,8
tick,0x1a372c99c,12571500,0,0x0,8
tick,0x1a372c99c,12574083,0,0x0,8
tick,0x1a372c99c,12575250,0,0x0,8
tick,0x1a372c99c,12579000,0,0x0,8
tick,0x1a372c99c,12579916,0,0x0,8
tick,0x1a372c99c,12584041,0,0x0,8
tick,0x1a372c99c,12587416,0,0x0,8
tick,0x1a372c99c,12588166,0,0x0,8
tick,0x1a372c99c,12592458,0,0x0,8
tick,0x1a372c99c,12593041,0,0x0,8
tick,0x1a372c99c,12595000,0,0x0,8
tick,0x1a372c99c,12595625,0,0x0,8
tick,0x1a372c99c,12598458,0,0x0,8
tick,0x1a372c99c,12599125,0,0x0,8
tick,0x1a372c99c,12604958,0,0x0,8
tick,0x1a372c99c,12605333,0,0x0,8
tick,0x1a372c99c,12610833,0,0x0,8
tick,0x1a372c99c,12614250,0,0x0,8
tick,0x1a372c99c,12615250,0,0x0,8
tick,0x1a372c99c,12617583,0,0x0,8
tick,0x1a372c99c,12622500,0,0x0,8
tick,0x1a372c99c,12622750,0,0x0,8
tick,0x1a372c99c,12623916,0,0x0,8
tick,0x1a372c99c,12627625,0,0x0,8
tick,0x1a372c99c,12630875,0,0x0,8
tick,0x1a372c99c,12631000,0,0x0,8
tick,0x1a372c99c,12635583,0,0x0,8
tick,0x1a372c99c,12635833,0,0x0,8
tick,0x1a372c99c,12638083,0,0x0,8
tick,0x1a372c99c,12638208,0,0x0,8
tick,0x1a372c99c,12639333,0,0x0,8
tick,0x1a372c99c,12641458,0,0x0,8
tick,0x1a372c99c,12641583,0,0x0,8
tick,0x1a372c99c,12647958,0,0x0,8
tick,0x1030d7f04,12648000,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12653875,0,0x0,8
tick,0x1a372c99c,12657291,0,0x0,8
tick,0x1a372c99c,12658000,0,0x0,8
tick,0x1a372c99c,12660791,0,0x0,8
tick,0x1a372c99c,12661791,0,0x0,8
tick,0x1a372c99c,12665583,0,0x0,8
scavenge,begin,1,264233,1643426358150
tick,0x1a372cc6c,12666708,0,0x0,1
scavenge,end,1,264410,1643426358150
tick,0x1a372c99c,12670708,0,0x0,8
tick,0x1a372c99c,12674166,0,0x0,8
tick,0x1a372953c,12674208,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12678791,0,0x0,8
tick,0x1a372c99c,12679166,0,0x0,8
tick,0x1a372c99c,12681416,0,0x0,8
tick,0x1a372c99c,12681666,0,0x0,8
tick,0x1a372c99c,12682666,0,0x0,8
tick,0x1a372c99c,12684666,0,0x0,8
tick,0x1a372c99c,12685166,0,0x0,8
tick,0x1a372c99c,12691375,0,0x0,8
tick,0x1013e2f94,12691416,0,0x0,0,0x107533b78,0x107522bf8,0x107533410
tick,0x1a372c99c,12692666,0,0x0,8
tick,0x1a372c99c,12699375,0,0x0,8
tick,0x1a372c99c,12706500,0,0x0,8
tick,0x10101df80,12707250,0,0x0,0,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,12712041,0,0x0,8
tick,0x1a372c99c,12712375,0,0x0,8
tick,0x1a372c99c,12720375,0,0x0,8
tick,0x1a372c99c,12721250,0,0x0,8
tick,0x1a372c99c,12726125,0,0x0,8
tick,0x1a372c99c,12726541,0,0x0,8
tick,0x1a372c99c,12730625,0,0x0,8
tick,0x1a372c99c,12731791,0,0x0,8
tick,0x1a372c99c,12736375,0,0x0,8
tick,0x1a372c99c,12736875,0,0x0,8
tick,0x1a372c99c,12739875,0,0x0,8
tick,0x1a372c99c,12740625,0,0x0,8
tick,0x1a372c99c,12743750,0,0x0,8
tick,0x1a372c99c,12744250,0,0x0,8
tick,0x1a372c99c,12750916,0,0x0,8
tick,0x1a372c99c,12751708,0,0x0,8
tick,0x1a372c99c,12756958,0,0x0,8
tick,0x1a372c99c,12760375,0,0x0,8
tick,0x107548fd4,12760416,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12761583,0,0x0,8
tick,0x1a372c99c,12763875,0,0x0,8
tick,0x10752d2f8,12763916,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,12765000,0,0x0,8
tick,0x1a372c99c,12768958,0,0x0,8
tick,0x1a372c99c,12769916,0,0x0,8
tick,0x1a372c99c,12774000,0,0x0,8
tick,0x1a372c99c,12778333,0,0x0,8
tick,0x1a372c99c,12778791,0,0x0,8
tick,0x1a372c99c,12783625,0,0x0,8
tick,0x1a3726538,12784625,0,0x0,8
tick,0x1a372c99c,12786458,0,0x0,8
tick,0x1a3726538,12787250,0,0x0,8
tick,0x1a372c99c,12790250,0,0x0,8
tick,0x1a372c99c,12791166,0,0x0,8
tick,0x1a372c99c,12798041,0,0x0,8
tick,0x1a372c99c,12798750,0,0x0,8
tick,0x1a372c99c,12804291,0,0x0,8
tick,0x1a372c99c,12807541,0,0x0,8
tick,0x1a372c99c,12808458,0,0x0,8
tick,0x1a372c99c,12811083,0,0x0,8
tick,0x1a372c99c,12812083,0,0x0,8
tick,0x1a372c99c,12816000,0,0x0,8
tick,0x1a372c99c,12817125,0,0x0,8
tick,0x1a372c99c,12824291,0,0x0,8
tick,0x1a372c99c,12824583,0,0x0,8
tick,0x1a372c99c,12825666,0,0x0,8
tick,0x1a372c99c,12831291,0,0x0,8
tick,0x1a372c99c,12832125,0,0x0,8
tick,0x1a372c99c,12833333,0,0x0,8
tick,0x1a372c99c,12839000,0,0x0,8
tick,0x1a372c99c,12840333,0,0x0,8
tick,0x1a372c99c,12841625,0,0x0,8
tick,0x1a372c99c,12842500,0,0x0,8
tick,0x1a372c99c,12843791,0,0x0,8
tick,0x1a372c99c,12848291,0,0x0,8
tick,0x1a372c99c,12848750,0,0x0,8
tick,0x1a372c99c,12849833,0,0x0,8
tick,0x1a372c99c,12858083,0,0x0,8
tick,0x1a372c99c,12858583,0,0x0,8
tick,0x1a372c99c,12864000,0,0x0,8
tick,0x1a372c99c,12867666,0,0x0,8
tick,0x1a372c99c,12868541,0,0x0,8
tick,0x1a372c99c,12870041,0,0x0,8
tick,0x1a372c99c,12871083,0,0x0,8
tick,0x1a372c99c,12876000,0,0x0,8
tick,0x107525660,12876083,0,0x0,0,0x1075324a0,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
scavenge,begin,1,275667,1643426358360
tick,0x100f8aae0,12877333,0,0x0,1
scavenge,end,1,275843,1643426358360
tick,0x1a372c99c,12883166,0,0x0,8
tick,0x1030d7ff4,12883416,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12884750,0,0x0,8
tick,0x1a372c99c,12889291,0,0x0,8
tick,0x1a372c99c,12889666,0,0x0,8
tick,0x1a372c99c,12891958,0,0x0,8
tick,0x1a372c99c,12892958,0,0x0,8
tick,0x1a372c99c,12895166,0,0x0,8
tick,0x1a372c99c,12895291,0,0x0,8
tick,0x1a372c99c,12900583,0,0x0,8
tick,0x1a372c99c,12901166,0,0x0,8
tick,0x1a372c99c,12909083,0,0x0,8
tick,0x1a372c99c,12910916,0,0x0,8
tick,0x1a372c99c,12911250,0,0x0,8
tick,0x1a372c99c,12913250,0,0x0,8
tick,0x1a372c99c,12913750,0,0x0,8
tick,0x1a372c99c,12919833,0,0x0,8
tick,0x1a372c99c,12919958,0,0x0,8
tick,0x100e1f018,12920916,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12928166,0,0x0,8
tick,0x1a372c99c,12928333,0,0x0,8
tick,0x1a372c99c,12929541,0,0x0,8
tick,0x1a372c99c,12933416,0,0x0,8
tick,0x1a372c99c,12937541,0,0x0,8
tick,0x100e10874,12938208,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12939458,0,0x0,8
tick,0x1a372c99c,12940916,0,0x0,8
tick,0x1a372c99c,12941875,0,0x0,8
tick,0x1a372c99c,12946583,0,0x0,8
tick,0x1a372c99c,12946958,0,0x0,8
tick,0x1a372c99c,12955291,0,0x0,8
tick,0x1a372c99c,12957250,0,0x0,8
tick,0x1a372c99c,12958333,0,0x0,8
tick,0x1a372c99c,12959625,0,0x0,8
tick,0x1a372c99c,12960625,0,0x0,8
tick,0x1a372c99c,12964625,0,0x0,8
tick,0x1a372c99c,12965458,0,0x0,8
tick,0x1a372c99c,12973333,0,0x0,8
tick,0x1a372c99c,12973833,0,0x0,8
tick,0x1a372c99c,12974833,0,0x0,8
tick,0x1a372c99c,12991416,0,0x0,8
tick,0x1a372c99c,12991416,0,0x0,8
tick,0x1a372c99c,12991416,0,0x0,8
tick,0x1a372c99c,12991416,0,0x0,8
tick,0x1013e4048,12991416,0,0x0,0,0x107535a88,0x10750a494,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,12991458,0,0x0,8
tick,0x1a372c99c,12991541,0,0x0,8
tick,0x1a372c99c,12992083,0,0x0,8
tick,0x1a372c99c,13000208,0,0x0,8
tick,0x1a372c99c,13002166,0,0x0,8
tick,0x1a372c99c,13003208,0,0x0,8
tick,0x1a372c99c,13004458,0,0x0,8
tick,0x1a372c99c,13005500,0,0x0,8
tick,0x1a372c99c,13009458,0,0x0,8
tick,0x1a372c99c,13010083,0,0x0,8
tick,0x1a372c99c,13011125,0,0x0,8
tick,0x1a372c99c,13017458,0,0x0,8
tick,0x1a3726538,13018375,0,0x0,8
tick,0x1a372c99c,13022208,0,0x0,8
tick,0x1a372c99c,13024708,0,0x0,8
tick,0x1a372c99c,13025958,0,0x0,8
tick,0x1a372c99c,13028916,0,0x0,8
tick,0x1a372c99c,13029666,0,0x0,8
tick,0x1a372c99c,13034458,0,0x0,8
tick,0x1a372c99c,13035625,0,0x0,8
tick,0x1a372c99c,13042791,0,0x0,8
tick,0x1a372c99c,13044708,0,0x0,8
tick,0x1a372c99c,13045625,0,0x0,8
tick,0x1a372c99c,13047041,0,0x0,8
tick,0x100e1c5f0,13048083,0,0x0,5
tick,0x1a372c99c,13052041,0,0x0,8
tick,0x1a372c99c,13053125,0,0x0,8
scavenge,begin,1,284585,1643426358536
scavenge,end,1,284797,1643426358536
tick,0x1a372c99c,13060500,0,0x0,8
tick,0x1a372c99c,13060708,0,0x0,8
tick,0x1a372c99c,13061916,0,0x0,8
tick,0x1a372c99c,13065208,0,0x0,8
tick,0x1a372c99c,13065583,0,0x0,8
tick,0x1a372c99c,13067875,0,0x0,8
tick,0x1a372c99c,13068000,0,0x0,8
tick,0x1a372c99c,13069083,0,0x0,8
tick,0x1a372c99c,13072083,0,0x0,8
tick,0x1a372c99c,13072666,0,0x0,8
tick,0x1a372c99c,13077708,0,0x0,8
tick,0x1a372c99c,13078875,0,0x0,8
tick,0x1a372c99c,13085958,0,0x0,8
tick,0x1a372c99c,13086083,0,0x0,8
tick,0x1a372c99c,13087958,0,0x0,8
tick,0x1a372c99c,13088416,0,0x0,8
tick,0x1a372c99c,13090291,0,0x0,8
tick,0x1a372c99c,13090750,0,0x0,8
tick,0x1a372c99c,13095666,0,0x0,8
tick,0x1a372c99c,13096083,0,0x0,8
tick,0x1a372c99c,13105041,0,0x0,8
tick,0x1a3726538,13105625,0,0x0,8
tick,0x1a372c99c,13110041,0,0x0,8
tick,0x1a372953c,13110666,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13114875,0,0x0,8
tick,0x1a372c99c,13115791,0,0x0,8
tick,0x1a372c99c,13120708,0,0x0,8
tick,0x1a372c99c,13121166,0,0x0,8
tick,0x1a372c99c,13128458,0,0x0,8
tick,0x1a372c99c,13129375,0,0x0,8
tick,0x1a372c99c,13138666,0,0x0,8
tick,0x1a372c99c,13142000,0,0x0,8
tick,0x1010a3854,13142083,0,0x0,0,0x0,0x107533230
tick,0x1a372c99c,13143208,0,0x0,8
tick,0x1a372c99c,13145208,0,0x0,8
tick,0x1a372c99c,13145666,0,0x0,8
tick,0x1a372c99c,13150875,0,0x0,8
tick,0x1a372c99c,13151708,0,0x0,8
tick,0x1a372c99c,13159250,0,0x0,8
tick,0x100e84470,13159250,0,0x0,0,0x0,0x1074df558,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13160500,0,0x0,8
tick,0x1a372c99c,13164125,0,0x0,8
tick,0x1a372c99c,13164250,0,0x0,8
tick,0x1a372c99c,13166791,0,0x0,8
tick,0x1a372c99c,13167958,0,0x0,8
tick,0x1a372c99c,13171166,0,0x0,8
tick,0x100e1f018,13171750,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13176916,0,0x0,8
tick,0x1a372c99c,13177916,0,0x0,8
tick,0x1a372c99c,13185166,0,0x0,8
tick,0x10752d280,13185208,0,0x0,0,0x107522bf8,0x107533410
tick,0x1a372c99c,13186958,0,0x0,8
tick,0x1a372c99c,13187666,0,0x0,8
tick,0x1a372c99c,13189291,0,0x0,8
tick,0x100e1c5ec,13190083,0,0x0,5
tick,0x1a372c99c,13194250,0,0x0,8
tick,0x1a372c99c,13195083,0,0x0,8
tick,0x1a372c99c,13202500,0,0x0,8
tick,0x107521350,13202541,0,0x0,0,0x101461efc,0x10752d6ac,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,13203708,0,0x0,8
tick,0x1a372c99c,13207416,0,0x0,8
tick,0x10101e018,13207416,0,0x0,0,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,13209958,0,0x0,8
tick,0x1a372c99c,13211125,0,0x0,8
tick,0x1a372c99c,13214208,0,0x0,8
tick,0x1a372c99c,13214583,0,0x0,8
tick,0x1a372c99c,13219791,0,0x0,8
tick,0x1a372c99c,13220208,0,0x0,8
tick,0x1a372c99c,13221541,0,0x0,8
tick,0x1a372c99c,13228625,0,0x0,8
tick,0x1a372c99c,13230500,0,0x0,8
tick,0x1a372c99c,13231708,0,0x0,8
tick,0x1a372c99c,13232875,0,0x0,8
tick,0x1a372c99c,13237791,0,0x0,8
tick,0x1a372953c,13237958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13239041,0,0x0,8
scavenge,begin,1,295007,1643426358722
scavenge,end,1,295185,1643426358722
tick,0x1a372c99c,13245750,0,0x0,8
tick,0x1a372c99c,13246250,0,0x0,8
tick,0x1a372c99c,13247250,0,0x0,8
tick,0x1a372c99c,13250416,0,0x0,8
tick,0x1a372c99c,13250916,0,0x0,8
tick,0x1a372c99c,13252916,0,0x0,8
tick,0x1a372c99c,13253291,0,0x0,8
tick,0x1a372c99c,13254375,0,0x0,8
tick,0x1a372c99c,13257083,0,0x0,8
tick,0x1a372c99c,13258000,0,0x0,8
tick,0x1a372c99c,13262708,0,0x0,8
tick,0x1a372c99c,13262958,0,0x0,8
tick,0x1a372c99c,13270875,0,0x0,8
tick,0x1a372c99c,13272916,0,0x0,8
tick,0x1a372c99c,13273041,0,0x0,8
tick,0x1a372c99c,13275166,0,0x0,8
tick,0x1a372c99c,13275500,0,0x0,8
tick,0x1a372c99c,13279833,0,0x0,8
tick,0x1a372c99c,13280291,0,0x0,8
tick,0x1a372c99c,13281333,0,0x0,8
tick,0x1a372c99c,13293083,0,0x0,8
tick,0x1a372c99c,13293333,0,0x0,8
tick,0x1a372c99c,13294750,0,0x0,8
tick,0x1a372c99c,13298250,0,0x0,8
tick,0x1a372c99c,13298500,0,0x0,8
tick,0x1a372c99c,13301958,0,0x0,8
tick,0x1011b56e0,13302291,0,0x0,0,0x0,0x101452acc,0x1075238ac,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13303541,0,0x0,8
tick,0x1a372c99c,13306375,0,0x0,8
tick,0x1a372c99c,13307166,0,0x0,8
tick,0x1a372c99c,13311916,0,0x0,8
tick,0x1a372c99c,13312041,0,0x0,8
tick,0x1a372c99c,13320250,0,0x0,8
tick,0x1a372c99c,13322125,0,0x0,8
tick,0x1013e3b54,13322166,0,0x0,0,0x10752765c,0x107538c4c,0x107529434
tick,0x1a372c99c,13324500,0,0x0,8
tick,0x1a372c99c,13324625,0,0x0,8
tick,0x1a372c99c,13325666,0,0x0,8
tick,0x1a372c99c,13329500,0,0x0,8
tick,0x1a372c99c,13330416,0,0x0,8
tick,0x1a372c99c,13337791,0,0x0,8
tick,0x1a372c99c,13338083,0,0x0,8
tick,0x1a372c99c,13339291,0,0x0,8
tick,0x1a372c99c,13342458,0,0x0,8
tick,0x1a372c99c,13343000,0,0x0,8
tick,0x1a372c99c,13344916,0,0x0,8
tick,0x1a372c99c,13345583,0,0x0,8
tick,0x1a372c99c,13349166,0,0x0,8
tick,0x1a372c99c,13349375,0,0x0,8
tick,0x1a3579778,13350416,0,0x0,5
tick,0x1a372c99c,13354750,0,0x0,8
tick,0x1a372c99c,13354916,0,0x0,8
tick,0x1a372c99c,13363166,0,0x0,8
tick,0x1a372c99c,13365041,0,0x0,8
tick,0x1a372c99c,13366250,0,0x0,8
tick,0x1a372c99c,13367500,0,0x0,8
tick,0x1a372c99c,13368625,0,0x0,8
tick,0x1a372c99c,13372333,0,0x0,8
tick,0x1013b0228,13372333,0,0x0,0,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13373583,0,0x0,8
tick,0x1a372c99c,13380416,0,0x0,8
tick,0x1a372c99c,13381000,0,0x0,8
tick,0x1a372c99c,13385291,0,0x0,8
tick,0x1a372c99c,13385958,0,0x0,8
tick,0x1a372c99c,13387791,0,0x0,8
tick,0x1a372c99c,13388291,0,0x0,8
tick,0x1a372c99c,13389291,0,0x0,8
tick,0x1a372c99c,13392083,0,0x0,8
tick,0x1a372c99c,13392875,0,0x0,8
tick,0x1a372c99c,13397833,0,0x0,8
tick,0x1a372c99c,13399041,0,0x0,8
tick,0x1a372c99c,13406541,0,0x0,8
tick,0x1a372c99c,13408541,0,0x0,8
tick,0x1a372c99c,13408625,0,0x0,8
tick,0x1a372c99c,13410833,0,0x0,8
tick,0x1a372c99c,13411208,0,0x0,8
tick,0x1a372c99c,13415625,0,0x0,8
tick,0x1a372c99c,13416000,0,0x0,8
tick,0x1a372c99c,13417083,0,0x0,8
scavenge,begin,1,303846,1643426358900
scavenge,end,1,304036,1643426358900
tick,0x1a372c99c,13424083,0,0x0,8
tick,0x1a372c99c,13424958,0,0x0,8
tick,0x1a372c99c,13429416,0,0x0,8
tick,0x1013a5634,13430250,0,0x0,0,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13434375,0,0x0,8
tick,0x1a372c99c,13435500,0,0x0,8
tick,0x1a372c99c,13440291,0,0x0,8
tick,0x1016e758c,13440625,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13445916,0,0x0,8
tick,0x107522ab4,13446041,0,0x0,0,0x107533410
tick,0x1a372c99c,13457541,0,0x0,8
tick,0x1a372c99c,13461375,0,0x0,8
tick,0x1a372c99c,13461833,0,0x0,8
tick,0x1a372c99c,13464208,0,0x0,8
tick,0x1a372c99c,13464250,0,0x0,8
tick,0x1a372c99c,13472125,0,0x0,8
tick,0x1a3726538,13473083,0,0x0,8
tick,0x1a372c99c,13481875,0,0x0,8
tick,0x1010c7700,13481916,0,0x0,0,0x0,0x1075243c0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13483166,0,0x0,8
tick,0x1a372c99c,13484666,0,0x0,8
tick,0x1a372c99c,13485833,0,0x0,8
tick,0x1a372c99c,13494958,0,0x0,8
tick,0x1a372c99c,13495791,0,0x0,8
tick,0x1a372c99c,13497250,0,0x0,8
tick,0x1a372c99c,13505083,0,0x0,8
tick,0x1a372c99c,13505750,0,0x0,8
tick,0x1a372c99c,13508500,0,0x0,8
tick,0x1a372c99c,13509375,0,0x0,8
tick,0x1a372c99c,13514166,0,0x0,8
tick,0x1a372c99c,13515208,0,0x0,8
tick,0x1a372c99c,13526125,0,0x0,8
tick,0x1a372c99c,13528958,0,0x0,8
tick,0x1a372c99c,13529083,0,0x0,8
tick,0x1a372c99c,13530208,0,0x0,8
tick,0x1a372c99c,13532541,0,0x0,8
tick,0x1a372c99c,13532750,0,0x0,8
tick,0x1a372c99c,13538833,0,0x0,8
tick,0x10108d1e8,13539750,0,0x0,0,0x0,0x10753a8a4,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13549250,0,0x0,8
tick,0x1a3726538,13549625,0,0x0,8
tick,0x1a372c99c,13550875,0,0x0,8
tick,0x1a372c99c,13555541,0,0x0,8
tick,0x1a372c99c,13555666,0,0x0,8
tick,0x1a372c99c,13559375,0,0x0,8
tick,0x1a372c99c,13559375,0,0x0,8
tick,0x1a372c99c,13560583,0,0x0,8
tick,0x1a372c99c,13563625,0,0x0,8
tick,0x1a372c99c,13564166,0,0x0,8
tick,0x1a372c99c,13570208,0,0x0,8
tick,0x1a372c99c,13570333,0,0x0,8
tick,0x1a372c99c,13571791,0,0x0,8
tick,0x1a372c99c,13578708,0,0x0,8
tick,0x1a372c99c,13580541,0,0x0,8
tick,0x1a372c99c,13581583,0,0x0,8
tick,0x1a372c99c,13582958,0,0x0,8
tick,0x1a372c99c,13584083,0,0x0,8
tick,0x1a372c99c,13587833,0,0x0,8
tick,0x1a372c99c,13589000,0,0x0,8
tick,0x1a372c99c,13595875,0,0x0,8
tick,0x1a372c99c,13596500,0,0x0,8
tick,0x1a372c99c,13600666,0,0x0,8
tick,0x1a372c99c,13601458,0,0x0,8
tick,0x1a372c99c,13603166,0,0x0,8
tick,0x2f3ebe220fb8,13603833,0,0x0,0,0x2f3ebe1ebf00,0x10750e078,0x107535e44,0x10750a494,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13607458,0,0x0,8
tick,0x1a372c99c,13607708,0,0x0,8
tick,0x1a372c99c,13613458,0,0x0,8
tick,0x1a372c99c,13613958,0,0x0,8
tick,0x1a372c99c,13621916,0,0x0,8
tick,0x1a372c99c,13623750,0,0x0,8
tick,0x101491140,13624000,0,0x0,0,0x1075293e8
tick,0x1a372c99c,13626041,0,0x0,8
tick,0x1a372c99c,13626416,0,0x0,8
tick,0x1a372c99c,13630750,0,0x0,8
tick,0x1a372c99c,13631375,0,0x0,8
tick,0x1a372c99c,13638958,0,0x0,8
scavenge,begin,1,314296,1643426359122
scavenge,end,1,314477,1643426359122
tick,0x1a372c99c,13639708,0,0x0,8
tick,0x1a372c99c,13643666,0,0x0,8
tick,0x1a372c99c,13646250,0,0x0,8
tick,0x1a372c99c,13647250,0,0x0,8
tick,0x1a372c99c,13650541,0,0x0,8
tick,0x1a372c99c,13650791,0,0x0,8
tick,0x1a372c99c,13656125,0,0x0,8
tick,0x1a372c99c,13657041,0,0x0,8
tick,0x1a372c99c,13664416,0,0x0,8
tick,0x1a372c99c,13665250,0,0x0,8
tick,0x1a372c99c,13666416,0,0x0,8
tick,0x1a372c99c,13667333,0,0x0,8
tick,0x1a372c99c,13668708,0,0x0,8
tick,0x1a372c99c,13669708,0,0x0,8
tick,0x1a372c99c,13673500,0,0x0,8
tick,0x1a372c99c,13674291,0,0x0,8
tick,0x1a372c99c,13681916,0,0x0,8
tick,0x1a372c99c,13682166,0,0x0,8
tick,0x1a3775d48,13683333,0,0x0,0,0x107533e80,0x107522bf8,0x107533410
tick,0x1a372c99c,13686583,0,0x0,8
tick,0x1a372c99c,13686958,0,0x0,8
tick,0x1a372c99c,13689250,0,0x0,8
tick,0x1a372c99c,13689416,0,0x0,8
tick,0x1a372c99c,13690583,0,0x0,8
tick,0x1a372c99c,13693500,0,0x0,8
tick,0x1a372c99c,13694208,0,0x0,8
tick,0x1a372c99c,13699000,0,0x0,8
tick,0x107520a70,13699041,0,0x0,0,0x101461efc,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13700416,0,0x0,8
tick,0x1a372c99c,13707291,0,0x0,8
tick,0x1a372c99c,13709291,0,0x0,8
tick,0x1a372c99c,13710208,0,0x0,8
tick,0x1a372c99c,13711791,0,0x0,8
tick,0x1a372c99c,13712666,0,0x0,8
tick,0x1a372c99c,13716916,0,0x0,8
tick,0x1a372c99c,13717708,0,0x0,8
tick,0x1a372c99c,13724958,0,0x0,8
tick,0x1a372c99c,13725333,0,0x0,8
tick,0x1a372c99c,13726458,0,0x0,8
tick,0x1a372c99c,13729625,0,0x0,8
tick,0x1a372c99c,13729958,0,0x0,8
tick,0x1a372c99c,13732125,0,0x0,8
tick,0x1a372c99c,13732250,0,0x0,8
tick,0x1a372c99c,13733291,0,0x0,8
tick,0x1a372c99c,13736625,0,0x0,8
tick,0x100df9b58,13737041,0,0x0,8
tick,0x1a372c99c,13742250,0,0x0,8
tick,0x1a372c99c,13743500,0,0x0,8
tick,0x1a372c99c,13750541,0,0x0,8
tick,0x1a372c99c,13752458,0,0x0,8
tick,0x1a372c99c,13753166,0,0x0,8
tick,0x1a372c99c,13754833,0,0x0,8
tick,0x1a372c99c,13755625,0,0x0,8
tick,0x1a372c99c,13759666,0,0x0,8
tick,0x1a372c99c,13760416,0,0x0,8
tick,0x1a372c99c,13767875,0,0x0,8
tick,0x1a37782c4,13767958,0,0x0,5,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13769166,0,0x0,8
tick,0x1a372c99c,13772541,0,0x0,8
tick,0x1a372c99c,13773000,0,0x0,8
tick,0x1a372c99c,13775125,0,0x0,8
tick,0x1a372c99c,13775500,0,0x0,8
tick,0x1a372c99c,13776583,0,0x0,8
tick,0x1a372c99c,13779375,0,0x0,8
tick,0x1a372c99c,13780166,0,0x0,8
tick,0x1a372c99c,13784958,0,0x0,8
tick,0x1a372c99c,13785000,0,0x0,8
tick,0x1a372c99c,13794458,0,0x0,8
tick,0x1a372c99c,13796166,0,0x0,8
tick,0x1a372c99c,13796916,0,0x0,8
tick,0x1a372c99c,13800416,0,0x0,8
tick,0x1a372c99c,13800875,0,0x0,8
tick,0x1a372c99c,13802333,0,0x0,8
tick,0x1a372c99c,13806791,0,0x0,8
tick,0x1a372c99c,13807208,0,0x0,8
tick,0x100cada38,13808416,0,0x0,0,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,13816541,0,0x0,8
scavenge,begin,1,323200,1643426359300
tick,0x1a37290c0,13817041,0,0x0,1
scavenge,end,1,323411,1643426359300
tick,0x1a372c99c,13821333,0,0x0,8
tick,0x1a372c99c,13822041,0,0x0,8
tick,0x1a372c99c,13823833,0,0x0,8
tick,0x1a3726538,13824541,0,0x0,8
tick,0x1a372c99c,13828416,0,0x0,8
tick,0x100d61ac0,13828541,0,0x0,8
tick,0x1a372c99c,13834208,0,0x0,8
tick,0x1a372c99c,13834791,0,0x0,8
tick,0x1a372c99c,13842416,0,0x0,8
tick,0x1a372c99c,13844291,0,0x0,8
tick,0x1a372c99c,13844666,0,0x0,8
tick,0x1a372c99c,13846583,0,0x0,8
tick,0x1a372c99c,13847166,0,0x0,8
tick,0x1a372c99c,13851416,0,0x0,8
tick,0x1a372c99c,13852000,0,0x0,8
tick,0x1a372c99c,13859500,0,0x0,8
tick,0x100d5f890,13859916,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13861083,0,0x0,8
tick,0x1a372c99c,13864250,0,0x0,8
tick,0x1a372c99c,13864625,0,0x0,8
tick,0x1a372c99c,13866791,0,0x0,8
tick,0x1a372c99c,13866958,0,0x0,8
tick,0x1a372c99c,13868125,0,0x0,8
tick,0x1a372c99c,13871208,0,0x0,8
tick,0x1a3726538,13871916,0,0x0,8
tick,0x1a372c99c,13876916,0,0x0,8
tick,0x1a372c99c,13877208,0,0x0,8
tick,0x1a372c99c,13878625,0,0x0,8
tick,0x1a372c99c,13886750,0,0x0,8
tick,0x100eece24,13887000,0,0x0,0
tick,0x1a372c99c,13888875,0,0x0,8
tick,0x1a372c99c,13889666,0,0x0,8
tick,0x1a372c99c,13891625,0,0x0,8
tick,0x1a372c99c,13892416,0,0x0,8
tick,0x1a372c99c,13902625,0,0x0,8
tick,0x1a372c99c,13903916,0,0x0,8
tick,0x1a372c99c,13911875,0,0x0,8
tick,0x1a37781c4,13912000,0,0x0,5
tick,0x1a372c99c,13913333,0,0x0,8
tick,0x1a372c99c,13918833,0,0x0,8
tick,0x1a372c99c,13919791,0,0x0,8
tick,0x1a372c99c,13922250,0,0x0,8
tick,0x1a372c99c,13923375,0,0x0,8
tick,0x1a372c99c,13928291,0,0x0,8
tick,0x101416a30,13928375,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13929625,0,0x0,8
tick,0x1a372c99c,13935625,0,0x0,8
tick,0x1a372953c,13935875,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13937333,0,0x0,8
tick,0x1a372c99c,13944208,0,0x0,8
tick,0x1a372c99c,13946166,0,0x0,8
tick,0x1a372c99c,13946833,0,0x0,8
tick,0x1a372c99c,13948458,0,0x0,8
tick,0x1a372953c,13949291,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13953291,0,0x0,8
tick,0x1a372c99c,13954250,0,0x0,8
tick,0x1a372c99c,13961375,0,0x0,8
tick,0x1a372953c,13961750,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13962875,0,0x0,8
tick,0x1a372c99c,13966166,0,0x0,8
tick,0x1a372c99c,13966458,0,0x0,8
tick,0x1a372c99c,13968625,0,0x0,8
tick,0x1a372c99c,13969000,0,0x0,8
tick,0x1a372c99c,13970208,0,0x0,8
tick,0x1a372c99c,13973000,0,0x0,8
tick,0x1a372c99c,13973791,0,0x0,8
tick,0x1a372c99c,13978583,0,0x0,8
tick,0x1010c81e0,13978625,0,0x0,0,0x0,0x1075243c0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,13980291,0,0x0,8
tick,0x1a372c99c,13987208,0,0x0,8
tick,0x100ce89e0,13987250,0,0x0,8
tick,0x1a372c99c,13989041,0,0x0,8
tick,0x1a372c99c,13989541,0,0x0,8
tick,0x1a372c99c,13991291,0,0x0,8
tick,0x1a372c99c,13991875,0,0x0,8
tick,0x1a372c99c,13996000,0,0x0,8
tick,0x1a372c99c,13996583,0,0x0,8
tick,0x1a372c99c,14004125,0,0x0,8
scavenge,begin,1,333148,1643426359487
scavenge,end,1,333313,1643426359487
tick,0x1a372c99c,14004791,0,0x0,8
tick,0x1a372c99c,14006291,0,0x0,8
tick,0x1a372c99c,14009041,0,0x0,8
tick,0x1a372c99c,14009750,0,0x0,8
tick,0x1a372c99c,14011458,0,0x0,8
tick,0x100cf85b0,14012125,0,0x0,8
tick,0x1a372c99c,14013250,0,0x0,8
tick,0x1a372c99c,14015666,0,0x0,8
tick,0x1a372c99c,14015916,0,0x0,8
tick,0x1a372953c,14016916,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14021291,0,0x0,8
tick,0x1a372c99c,14021541,0,0x0,8
tick,0x1a372c99c,14029625,0,0x0,8
tick,0x1a372c99c,14031541,0,0x0,8
tick,0x1a372c99c,14033958,0,0x0,8
tick,0x1a372c99c,14034041,0,0x0,8
tick,0x1a372c99c,14039125,0,0x0,8
tick,0x1a372c99c,14040291,0,0x0,8
tick,0x1a372c99c,14047750,0,0x0,8
tick,0x1a372c99c,14047833,0,0x0,8
tick,0x1a375badc,14049125,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14053458,0,0x0,8
tick,0x101093888,14054125,0,0x0,5
tick,0x1a372c99c,14056083,0,0x0,8
tick,0x1014169a0,14056666,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14057958,0,0x0,8
tick,0x1a372c99c,14060916,0,0x0,8
tick,0x1a372c99c,14061583,0,0x0,8
tick,0x1a372c99c,14066833,0,0x0,8
tick,0x1a372c99c,14067666,0,0x0,8
tick,0x1a372c99c,14076000,0,0x0,8
tick,0x1a372c99c,14077875,0,0x0,8
tick,0x1a372c99c,14078916,0,0x0,8
tick,0x1a372c99c,14080125,0,0x0,8
tick,0x1a372c99c,14081208,0,0x0,8
tick,0x1a372c99c,14085458,0,0x0,8
tick,0x1a372c99c,14086166,0,0x0,8
tick,0x1a372c99c,14093833,0,0x0,8
tick,0x1a372c99c,14095208,0,0x0,8
tick,0x1a372c99c,14099541,0,0x0,8
tick,0x1a372c99c,14099750,0,0x0,8
tick,0x1a372c99c,14102875,0,0x0,8
tick,0x1a372c99c,14104125,0,0x0,8
tick,0x1a372c99c,14108333,0,0x0,8
tick,0x1a372c99c,14109166,0,0x0,8
tick,0x1a372c99c,14115125,0,0x0,8
tick,0x1a372c99c,14115583,0,0x0,8
tick,0x1a372c99c,14124250,0,0x0,8
tick,0x1a372c99c,14126041,0,0x0,8
tick,0x107523764,14126750,0,0x0,0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14128416,0,0x0,8
tick,0x1a372c99c,14129333,0,0x0,8
tick,0x1a372c99c,14133541,0,0x0,8
tick,0x1a3726538,14134041,0,0x0,8
tick,0x1a372c99c,14142375,0,0x0,8
tick,0x1a372c99c,14142750,0,0x0,8
tick,0x1a372c99c,14147125,0,0x0,8
tick,0x1a372c99c,14147708,0,0x0,8
tick,0x1a372c99c,14149666,0,0x0,8
tick,0x1a372c99c,14150333,0,0x0,8
tick,0x1a372c99c,14151583,0,0x0,8
tick,0x1a372c99c,14154500,0,0x0,8
tick,0x1a372c99c,14155250,0,0x0,8
tick,0x1a372c99c,14160083,0,0x0,8
tick,0x1a372c99c,14160333,0,0x0,8
tick,0x1a372c99c,14169208,0,0x0,8
tick,0x1a372c99c,14171416,0,0x0,8
tick,0x1a372c99c,14171625,0,0x0,8
tick,0x1a372c99c,14172958,0,0x0,8
tick,0x1a372c99c,14173833,0,0x0,8
tick,0x1a372c99c,14177375,0,0x0,8
tick,0x1a372c99c,14177375,0,0x0,8
tick,0x1a372c99c,14178708,0,0x0,8
tick,0x1a372c99c,14179833,0,0x0,8
tick,0x1a372c99c,14190958,0,0x0,8
tick,0x1a372c99c,14192125,0,0x0,8
tick,0x1a372c99c,14193166,0,0x0,8
tick,0x1a372c99c,14203625,0,0x0,8
scavenge,begin,1,342937,1643426359687
scavenge,end,1,343108,1643426359687
tick,0x100f38844,14204416,0,0x0,1
tick,0x1a372c99c,14208375,0,0x0,8
tick,0x1a372c99c,14211333,0,0x0,8
tick,0x1a372c99c,14211791,0,0x0,8
tick,0x1a372c99c,14212958,0,0x0,8
tick,0x1a372c99c,14215041,0,0x0,8
tick,0x1a3726538,14215416,0,0x0,8
tick,0x1a372c99c,14222250,0,0x0,8
tick,0x1a372c99c,14222750,0,0x0,8
tick,0x1a372c99c,14230458,0,0x0,8
tick,0x1a372c99c,14234000,0,0x0,8
tick,0x1a372c99c,14234750,0,0x0,8
tick,0x1a372c99c,14236583,0,0x0,8
tick,0x1a372c99c,14237166,0,0x0,8
tick,0x1a372c99c,14241583,0,0x0,8
tick,0x1a372c99c,14242000,0,0x0,8
tick,0x1a372c99c,14243125,0,0x0,8
tick,0x1a372c99c,14249875,0,0x0,8
tick,0x1a372c99c,14250416,0,0x0,8
tick,0x1a372c99c,14254625,0,0x0,8
tick,0x1a372c99c,14255500,0,0x0,8
tick,0x1a372c99c,14257250,0,0x0,8
tick,0x1a372c99c,14257750,0,0x0,8
tick,0x1a372c99c,14258750,0,0x0,8
tick,0x1a372c99c,14260625,0,0x0,8
tick,0x1a372c99c,14261125,0,0x0,8
tick,0x1a372c99c,14267583,0,0x0,8
tick,0x1a372c99c,14268875,0,0x0,8
tick,0x1a372c99c,14275500,0,0x0,8
tick,0x1a372c99c,14277500,0,0x0,8
tick,0x1a372c99c,14278458,0,0x0,8
tick,0x1a372c99c,14280875,0,0x0,8
tick,0x107524c0c,14280875,0,0x0,0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14282125,0,0x0,8
tick,0x1a372c99c,14286166,0,0x0,8
tick,0x1a372c99c,14287208,0,0x0,8
tick,0x1a372c99c,14293166,0,0x0,8
tick,0x1a372c99c,14293500,0,0x0,8
tick,0x1a372c99c,14299125,0,0x0,8
tick,0x1a372c99c,14299750,0,0x0,8
tick,0x1a372c99c,14301750,0,0x0,8
tick,0x1a372c99c,14302208,0,0x0,8
tick,0x1a372c99c,14303250,0,0x0,8
tick,0x1a372c99c,14304916,0,0x0,8
tick,0x1a372c99c,14305541,0,0x0,8
tick,0x1a372c99c,14310333,0,0x0,8
tick,0x1a372c99c,14310541,0,0x0,8
tick,0x1a372c99c,14320625,0,0x0,8
tick,0x101093d94,14320875,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14322750,0,0x0,8
tick,0x1a372c99c,14325041,0,0x0,8
tick,0x1a372953c,14325083,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14333500,0,0x0,8
tick,0x1a372c99c,14334125,0,0x0,8
tick,0x1a372c99c,14335250,0,0x0,8
tick,0x1a372c99c,14341875,0,0x0,8
tick,0x1a372c99c,14342250,0,0x0,8
tick,0x1a372c99c,14343500,0,0x0,8
tick,0x1a372c99c,14348791,0,0x0,8
tick,0x1a372c99c,14348833,0,0x0,8
tick,0x1a372c99c,14355625,0,0x0,8
tick,0x1a372c99c,14356791,0,0x0,8
tick,0x1a372c99c,14359250,0,0x0,8
tick,0x10144ec20,14360416,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14367791,0,0x0,8
tick,0x1a372c99c,14368166,0,0x0,8
tick,0x1a372c99c,14379000,0,0x0,8
tick,0x1a372c99c,14379500,0,0x0,8
tick,0x1a372c99c,14381666,0,0x0,8
tick,0x1a372c99c,14381916,0,0x0,8
tick,0x1a372c99c,14387041,0,0x0,8
tick,0x1a372c99c,14388125,0,0x0,8
tick,0x1a372c99c,14395500,0,0x0,8
tick,0x1a372c99c,14395625,0,0x0,8
scavenge,begin,1,353672,1643426359879
scavenge,end,1,353857,1643426359879
tick,0x1a372c99c,14396875,0,0x0,8
tick,0x1a372c99c,14400333,0,0x0,8
tick,0x1a372c99c,14400416,0,0x0,8
tick,0x1a372c99c,14404541,0,0x0,8
tick,0x1a372c99c,14405041,0,0x0,8
tick,0x1a372c99c,14406125,0,0x0,8
tick,0x1a372c99c,14407875,0,0x0,8
tick,0x1a372c99c,14408458,0,0x0,8
tick,0x1a372c99c,14413333,0,0x0,8
tick,0x1a372c99c,14414416,0,0x0,8
tick,0x1a372c99c,14424833,0,0x0,8
tick,0x1a372c99c,14425666,0,0x0,8
tick,0x1a372c99c,14427541,0,0x0,8
tick,0x1a372c99c,14428083,0,0x0,8
tick,0x1a372c99c,14432458,0,0x0,8
tick,0x100c37874,14432833,0,0x0,8
tick,0x1a372c99c,14434125,0,0x0,8
tick,0x1a372c99c,14440958,0,0x0,8
tick,0x1a372c99c,14441333,0,0x0,8
tick,0x1a372c99c,14442500,0,0x0,8
tick,0x1a372c99c,14445750,0,0x0,8
tick,0x1a372c99c,14446125,0,0x0,8
tick,0x1a372c99c,14449500,0,0x0,8
tick,0x100c1edfc,14449875,0,0x0,6
tick,0x1a372c99c,14451041,0,0x0,8
tick,0x1a372c99c,14453041,0,0x0,8
tick,0x1a372953c,14453375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14458541,0,0x0,8
tick,0x1a372c99c,14459416,0,0x0,8
tick,0x1a372c99c,14462916,0,0x0,8
tick,0x1a372c99c,14471458,0,0x0,8
tick,0x1a372c99c,14471833,0,0x0,8
tick,0x1a372c99c,14474250,0,0x0,8
tick,0x1a372c99c,14475583,0,0x0,8
tick,0x1a372c99c,14480375,0,0x0,8
tick,0x1a372c99c,14480500,0,0x0,8
tick,0x1a372c99c,14481625,0,0x0,8
tick,0x1a372c99c,14489041,0,0x0,8
tick,0x1a372c99c,14489166,0,0x0,8
tick,0x1a372c99c,14490250,0,0x0,8
tick,0x1a372c99c,14494166,0,0x0,8
tick,0x1a372c99c,14497791,0,0x0,8
tick,0x1a372953c,14498958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14501416,0,0x0,8
tick,0x1a372c99c,14501500,0,0x0,8
tick,0x1a372c99c,14504458,0,0x0,8
tick,0x1a372c99c,14506583,0,0x0,8
tick,0x1a372c99c,14509750,0,0x0,8
tick,0x1a372c99c,14513375,0,0x0,8
tick,0x1a372c99c,14517000,0,0x0,8
tick,0x1a3726538,14517750,0,0x0,8
tick,0x1a372c99c,14519666,0,0x0,8
tick,0x1030d36d8,14520291,0,0x0,8
tick,0x1a372c99c,14524958,0,0x0,8
tick,0x107529200,14525125,0,0x0,0
tick,0x1a372c99c,14526458,0,0x0,8
tick,0x1a372c99c,14533375,0,0x0,8
tick,0x1a372c99c,14533791,0,0x0,8
tick,0x1a372c99c,14534875,0,0x0,8
tick,0x1a372c99c,14538083,0,0x0,8
tick,0x1a372c99c,14538500,0,0x0,8
tick,0x1a372c99c,14541916,0,0x0,8
tick,0x1a372c99c,14542375,0,0x0,8
tick,0x1a372c99c,14543583,0,0x0,8
tick,0x1a372c99c,14545500,0,0x0,8
tick,0x1a372c99c,14545875,0,0x0,8
tick,0x1a372c99c,14548708,0,0x0,8
tick,0x1a372c99c,14550791,0,0x0,8
tick,0x1a372c99c,14550916,0,0x0,8
tick,0x1a372c99c,14554125,0,0x0,8
tick,0x1a372c99c,14559416,0,0x0,8
tick,0x1a372c99c,14561375,0,0x0,8
tick,0x1a372c99c,14562083,0,0x0,8
tick,0x1a372c99c,14563833,0,0x0,8
tick,0x1a372c99c,14564541,0,0x0,8
tick,0x1a372c99c,14569250,0,0x0,8
tick,0x1a372c99c,14569500,0,0x0,8
tick,0x1a372c99c,14570583,0,0x0,8
tick,0x1a372c99c,14577250,0,0x0,8
tick,0x1a372c99c,14578250,0,0x0,8
scavenge,begin,1,363302,1643426360061
scavenge,end,1,363497,1643426360061
tick,0x1a372c99c,14582541,0,0x0,8
tick,0x1a372c99c,14583041,0,0x0,8
tick,0x1a372c99c,14585791,0,0x0,8
tick,0x1a372c99c,14586375,0,0x0,8
tick,0x1a372c99c,14587541,0,0x0,8
tick,0x1a372c99c,14589125,0,0x0,8
tick,0x10752909c,14590000,0,0x0,0
tick,0x1a372c99c,14592166,0,0x0,8
tick,0x1a372c99c,14595041,0,0x0,8
tick,0x1a372c99c,14601250,0,0x0,8
tick,0x1a372c99c,14604750,0,0x0,8
tick,0x1a372c99c,14604875,0,0x0,8
tick,0x1a372c99c,14605875,0,0x0,8
tick,0x1a372c99c,14607166,0,0x0,8
tick,0x1a372c99c,14608166,0,0x0,8
tick,0x1a372c99c,14612208,0,0x0,8
tick,0x1a372c99c,14613000,0,0x0,8
tick,0x1a372c99c,14622166,0,0x0,8
tick,0x1a37782bc,14622791,0,0x0,5,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14624041,0,0x0,8
tick,0x1a372c99c,14628958,0,0x0,8
tick,0x1a372c99c,14632541,0,0x0,8
tick,0x1a372c99c,14632666,0,0x0,8
tick,0x1a372c99c,14633833,0,0x0,8
tick,0x1a372c99c,14636000,0,0x0,8
tick,0x1a372c99c,14636291,0,0x0,8
tick,0x1a372c99c,14639250,0,0x0,8
tick,0x1a372c99c,14641541,0,0x0,8
tick,0x1a372c99c,14642208,0,0x0,8
tick,0x1a372c99c,14649625,0,0x0,8
tick,0x1a372c99c,14651500,0,0x0,8
tick,0x1a372c99c,14651750,0,0x0,8
tick,0x1a372c99c,14652791,0,0x0,8
tick,0x1a372c99c,14654125,0,0x0,8
tick,0x1a372c99c,14655125,0,0x0,8
tick,0x1a372c99c,14659208,0,0x0,8
tick,0x1a372c99c,14660083,0,0x0,8
tick,0x1a372c99c,14667791,0,0x0,8
tick,0x1a372c99c,14668708,0,0x0,8
tick,0x1a372c99c,14672541,0,0x0,8
tick,0x1a372c99c,14676208,0,0x0,8
tick,0x1a372c99c,14677208,0,0x0,8
tick,0x1a372c99c,14679458,0,0x0,8
tick,0x1a372c99c,14679583,0,0x0,8
tick,0x1a372c99c,14682458,0,0x0,8
tick,0x1a372c99c,14684708,0,0x0,8
tick,0x1a372c99c,14692666,0,0x0,8
tick,0x1a372c99c,14694458,0,0x0,8
tick,0x1a372c99c,14695541,0,0x0,8
tick,0x1a372c99c,14697000,0,0x0,8
tick,0x1a372c99c,14697791,0,0x0,8
tick,0x1a372c99c,14702041,0,0x0,8
tick,0x1a372c99c,14702500,0,0x0,8
tick,0x1a372c99c,14703625,0,0x0,8
tick,0x1a372c99c,14711541,0,0x0,8
tick,0x1013e3b84,14711750,0,0x0,0,0x10752b29c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14713250,0,0x0,8
tick,0x1a372c99c,14717791,0,0x0,8
tick,0x1a372c99c,14718416,0,0x0,8
tick,0x1a372c99c,14723041,0,0x0,8
tick,0x1a372c99c,14723375,0,0x0,8
tick,0x1a372c99c,14724666,0,0x0,8
tick,0x1a372c99c,14727541,0,0x0,8
tick,0x1a372c99c,14728541,0,0x0,8
tick,0x1a372c99c,14731041,0,0x0,8
tick,0x1a372c99c,14731125,0,0x0,8
tick,0x1a372c99c,14736291,0,0x0,8
tick,0x100e1c630,14736708,0,0x0,5
tick,0x1a372c99c,14746083,0,0x0,8
tick,0x1a372c99c,14746250,0,0x0,8
tick,0x1a372c99c,14748708,0,0x0,8
tick,0x1011e4ce4,14748833,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14750083,0,0x0,8
tick,0x1a372c99c,14752333,0,0x0,8
tick,0x1a372c99c,14752666,0,0x0,8
tick,0x1a372c99c,14758625,0,0x0,8
tick,0x1a372c99c,14759000,0,0x0,8
tick,0x1a372c99c,14762625,0,0x0,8
tick,0x1a372c99c,14767375,0,0x0,8
tick,0x1a372c99c,14767916,0,0x0,8
scavenge,begin,1,373446,1643426360252
scavenge,end,1,373651,1643426360252
tick,0x1a372c99c,14770083,0,0x0,8
tick,0x1a372c99c,14770166,0,0x0,8
tick,0x1a372c99c,14774708,0,0x0,8
tick,0x1a372c99c,14775208,0,0x0,8
tick,0x1a372c99c,14778000,0,0x0,8
tick,0x1030d6680,14779000,0,0x0,8
tick,0x1a372c99c,14781291,0,0x0,8
tick,0x1a372c99c,14781541,0,0x0,8
tick,0x1a372c99c,14784583,0,0x0,8
tick,0x1a372c99c,14785166,0,0x0,8
tick,0x1a372c99c,14793708,0,0x0,8
tick,0x1a372c99c,14795916,0,0x0,8
tick,0x1a372c99c,14796750,0,0x0,8
tick,0x1a372c99c,14798666,0,0x0,8
tick,0x1a372953c,14799291,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14804375,0,0x0,8
tick,0x1a372c99c,14805500,0,0x0,8
tick,0x1a372c99c,14812583,0,0x0,8
tick,0x1a372c99c,14814791,0,0x0,8
tick,0x1a372c99c,14815375,0,0x0,8
tick,0x1a372c99c,14818000,0,0x0,8
tick,0x1a372c99c,14823166,0,0x0,8
tick,0x1a3726538,14823541,0,0x0,8
tick,0x1a372c99c,14826958,0,0x0,8
tick,0x100df9b58,14827333,0,0x0,8
tick,0x1a372c99c,14828583,0,0x0,8
tick,0x1a372c99c,14830166,0,0x0,8
tick,0x1a372c99c,14830958,0,0x0,8
tick,0x1a372c99c,14833541,0,0x0,8
tick,0x1a372c99c,14834916,0,0x0,8
tick,0x1a372c99c,14843000,0,0x0,8
tick,0x1a3726538,14843250,0,0x0,8
tick,0x1a372c99c,14845166,0,0x0,8
tick,0x1a372c99c,14845750,0,0x0,8
tick,0x1a372c99c,14847833,0,0x0,8
tick,0x1a372c99c,14848166,0,0x0,8
tick,0x1a372c99c,14853208,0,0x0,8
tick,0x1a372c99c,14854250,0,0x0,8
tick,0x1a372c99c,14859791,0,0x0,8
tick,0x1a372c99c,14861500,0,0x0,8
tick,0x1a372c99c,14861666,0,0x0,8
tick,0x1a372c99c,14862750,0,0x0,8
tick,0x1a372c99c,14864583,0,0x0,8
tick,0x1a372c99c,14869041,0,0x0,8
tick,0x1a372c99c,14870333,0,0x0,8
tick,0x1a372c99c,14872208,0,0x0,8
tick,0x1a372c99c,14872583,0,0x0,8
tick,0x1a372c99c,14873750,0,0x0,8
tick,0x1a372c99c,14876208,0,0x0,8
tick,0x1a372953c,14876250,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14877666,0,0x0,8
tick,0x1a372c99c,14878916,0,0x0,8
tick,0x1a372c99c,14884583,0,0x0,8
tick,0x1a372c99c,14885000,0,0x0,8
tick,0x1a372c99c,14886208,0,0x0,8
tick,0x1a372c99c,14887416,0,0x0,8
tick,0x1a372c99c,14905125,0,0x0,8
tick,0x1a372c99c,14907375,0,0x0,8
tick,0x1a372c99c,14908541,0,0x0,8
tick,0x1a372c99c,14910166,0,0x0,8
tick,0x1a372c99c,14910875,0,0x0,8
tick,0x1a372c99c,14915500,0,0x0,8
tick,0x1011e4d98,14915708,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14916875,0,0x0,8
tick,0x1a372c99c,14923458,0,0x0,8
tick,0x1013e2f8c,14924125,0,0x0,0,0x107533b78,0x107522bf8,0x107533410
tick,0x1a372c99c,14926458,0,0x0,8
tick,0x1a372c99c,14926583,0,0x0,8
tick,0x1a372c99c,14930625,0,0x0,8
tick,0x1a372c99c,14931333,0,0x0,8
tick,0x1a372c99c,14933958,0,0x0,8
tick,0x1a372c99c,14935208,0,0x0,8
tick,0x1a372c99c,14937125,0,0x0,8
tick,0x1a372c99c,14937625,0,0x0,8
tick,0x1a372c99c,14940166,0,0x0,8
tick,0x10752d2e8,14940166,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,14941333,0,0x0,8
tick,0x1a372c99c,14949041,0,0x0,8
tick,0x1a372c99c,14951416,0,0x0,8
tick,0x1a372c99c,14952250,0,0x0,8
tick,0x1a372c99c,14954041,0,0x0,8
tick,0x1013e4048,14954791,0,0x0,0,0x10750ac10,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,14959208,0,0x0,8
tick,0x1a372c99c,14959833,0,0x0,8
tick,0x1a372c99c,14967291,0,0x0,8
tick,0x1a372c99c,14968250,0,0x0,8
scavenge,begin,1,383112,1643426360451
scavenge,end,1,383284,1643426360452
tick,0x1a372c99c,14970541,0,0x0,8
tick,0x1a372c99c,14970791,0,0x0,8
tick,0x1a372c99c,14974625,0,0x0,8
tick,0x1a372c99c,14975125,0,0x0,8
tick,0x1a372c99c,14977750,0,0x0,8
tick,0x1a372c99c,14978625,0,0x0,8
tick,0x1a372c99c,14980916,0,0x0,8
tick,0x1a372c99c,14982125,0,0x0,8
tick,0x1a372c99c,14984125,0,0x0,8
tick,0x1a372c99c,14984375,0,0x0,8
tick,0x1a372c99c,14985791,0,0x0,8
tick,0x1a372c99c,14993208,0,0x0,8
tick,0x1a372c99c,14995791,0,0x0,8
tick,0x1a372c99c,14996333,0,0x0,8
tick,0x1a372c99c,14997416,0,0x0,8
tick,0x1a372c99c,14998750,0,0x0,8
tick,0x1a372c99c,14999916,0,0x0,8
tick,0x1a372c99c,15004041,0,0x0,8
tick,0x100e4cbf8,15004875,0,0x0,0,0x0,0x10752b410,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15011833,0,0x0,8
tick,0x1a372c99c,15012708,0,0x0,8
tick,0x1a372c99c,15014916,0,0x0,8
tick,0x1a372c99c,15018958,0,0x0,8
tick,0x1a372c99c,15022000,0,0x0,8
tick,0x1a372c99c,15022500,0,0x0,8
tick,0x1a372c99c,15023583,0,0x0,8
tick,0x1a372c99c,15025083,0,0x0,8
tick,0x1a372c99c,15025958,0,0x0,8
tick,0x1a372c99c,15028875,0,0x0,8
tick,0x1a372c99c,15029375,0,0x0,8
tick,0x1a372c99c,15038041,0,0x0,8
tick,0x1a372c99c,15040166,0,0x0,8
tick,0x100d66288,15040291,0,0x0,8
tick,0x1a372c99c,15041458,0,0x0,8
tick,0x1a372c99c,15042916,0,0x0,8
tick,0x1a372c99c,15043875,0,0x0,8
tick,0x1a372c99c,15048208,0,0x0,8
tick,0x1a372c99c,15048583,0,0x0,8
tick,0x1a372c99c,15055833,0,0x0,8
tick,0x1a372c99c,15056208,0,0x0,8
tick,0x1a372c99c,15058791,0,0x0,8
tick,0x1a372c99c,15062750,0,0x0,8
tick,0x1a372c99c,15065833,0,0x0,8
tick,0x1a372c99c,15066291,0,0x0,8
tick,0x1a372c99c,15067500,0,0x0,8
tick,0x1a372c99c,15069041,0,0x0,8
tick,0x1a372c99c,15069750,0,0x0,8
tick,0x1a372c99c,15072125,0,0x0,8
tick,0x1a372c99c,15073291,0,0x0,8
tick,0x1a372c99c,15081125,0,0x0,8
tick,0x1a372c99c,15083250,0,0x0,8
tick,0x1a372c99c,15084208,0,0x0,8
tick,0x1a372c99c,15085791,0,0x0,8
tick,0x1a372c99c,15086750,0,0x0,8
tick,0x1a372c99c,15091625,0,0x0,8
tick,0x10752d368,15092000,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,15100750,0,0x0,8
tick,0x1a3726538,15101416,0,0x0,8
tick,0x1a372c99c,15105583,0,0x0,8
tick,0x1a372c99c,15110083,0,0x0,8
tick,0x1a372c99c,15110708,0,0x0,8
tick,0x1a372c99c,15114833,0,0x0,8
tick,0x1a372c99c,15117083,0,0x0,8
tick,0x1a372c99c,15119083,0,0x0,8
tick,0x1a372c99c,15120041,0,0x0,8
tick,0x1a372c99c,15122833,0,0x0,8
tick,0x100d5fbc0,15122875,0,0x0,8
tick,0x1a372c99c,15124875,0,0x0,8
tick,0x1a372c99c,15133250,0,0x0,8
tick,0x1a372c99c,15136833,0,0x0,8
tick,0x1a372c99c,15137375,0,0x0,8
tick,0x1030d800c,15138708,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15140416,0,0x0,8
tick,0x1a372c99c,15141708,0,0x0,8
tick,0x1a372c99c,15147000,0,0x0,8
tick,0x1a372c99c,15147958,0,0x0,8
tick,0x1a372c99c,15155291,0,0x0,8
tick,0x1a372c99c,15156625,0,0x0,8
tick,0x1a372c99c,15158625,0,0x0,8
scavenge,begin,1,393728,1643426360642
scavenge,end,1,393890,1643426360642
tick,0x1a37298d4,15159000,0,0x0,1
tick,0x1a372c99c,15162708,0,0x0,8
tick,0x1a372c99c,15162833,0,0x0,8
tick,0x1a372c99c,15166000,0,0x0,8
tick,0x1a372953c,15166333,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15167625,0,0x0,8
tick,0x1a372c99c,15169166,0,0x0,8
tick,0x1a372c99c,15170041,0,0x0,8
tick,0x1a372c99c,15172958,0,0x0,8
tick,0x1a372c99c,15174958,0,0x0,8
tick,0x1a372c99c,15183333,0,0x0,8
tick,0x1a372c99c,15184208,0,0x0,8
tick,0x1a372c99c,15186708,0,0x0,8
tick,0x1a372c99c,15186750,0,0x0,8
tick,0x1a3726538,15188000,0,0x0,8
tick,0x1a372c99c,15192750,0,0x0,8
tick,0x1013b0a80,15192750,0,0x0,0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15194041,0,0x0,8
tick,0x1a372c99c,15202041,0,0x0,8
tick,0x1a372c99c,15202833,0,0x0,8
tick,0x1a372c99c,15205958,0,0x0,8
tick,0x1a372c99c,15209750,0,0x0,8
tick,0x10753a22c,15210333,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15213291,0,0x0,8
tick,0x1a372c99c,15214125,0,0x0,8
tick,0x1a372c99c,15216500,0,0x0,8
tick,0x1a372c99c,15216625,0,0x0,8
tick,0x1a372c99c,15220333,0,0x0,8
tick,0x1a372c99c,15220375,0,0x0,8
tick,0x1a372c99c,15222500,0,0x0,8
tick,0x1a372c99c,15222958,0,0x0,8
tick,0x1a372c99c,15230583,0,0x0,8
tick,0x1a372c99c,15231416,0,0x0,8
tick,0x1a372c99c,15233416,0,0x0,8
tick,0x1a372c99c,15233875,0,0x0,8
tick,0x1a372c99c,15239500,0,0x0,8
tick,0x1a372c99c,15240125,0,0x0,8
tick,0x1a372c99c,15247708,0,0x0,8
tick,0x1a372c99c,15248750,0,0x0,8
tick,0x1a372c99c,15251041,0,0x0,8
tick,0x1a372953c,15251250,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15255291,0,0x0,8
tick,0x1a372c99c,15258875,0,0x0,8
tick,0x101461c2c,15259916,0,0x0,0,0x10752d6ac,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,15262083,0,0x0,8
tick,0x1013e2f84,15262333,0,0x0,0,0x10750a424,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15265000,0,0x0,8
tick,0x1a372c99c,15268083,0,0x0,8
tick,0x1a372c99c,15268500,0,0x0,8
tick,0x1a372c99c,15276500,0,0x0,8
tick,0x100df994c,15277250,0,0x0,6
tick,0x1a372c99c,15279291,0,0x0,8
tick,0x1a372c99c,15279666,0,0x0,8
tick,0x1a372c99c,15285291,0,0x0,8
tick,0x1a372c99c,15285791,0,0x0,8
tick,0x1a3726538,15286791,0,0x0,8
tick,0x1a372c99c,15293166,0,0x0,8
tick,0x1a372c99c,15294500,0,0x0,8
tick,0x1a372c99c,15297041,0,0x0,8
tick,0x1a372c99c,15297166,0,0x0,8
tick,0x1a372c99c,15302500,0,0x0,8
tick,0x1a372c99c,15302958,0,0x0,8
tick,0x1a372c99c,15304458,0,0x0,8
tick,0x1a372c99c,15308708,0,0x0,8
tick,0x1a372c99c,15309750,0,0x0,8
tick,0x1a372c99c,15312916,0,0x0,8
tick,0x107524170,15313416,0,0x0,0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15316500,0,0x0,8
tick,0x1a372c99c,15319750,0,0x0,8
tick,0x1a372c99c,15319791,0,0x0,8
tick,0x1a372c99c,15328291,0,0x0,8
tick,0x1a372c99c,15329333,0,0x0,8
tick,0x1a372c99c,15331000,0,0x0,8
tick,0x1a372c99c,15331875,0,0x0,8
tick,0x1a372c99c,15336833,0,0x0,8
tick,0x100c26638,15336875,0,0x0,8
tick,0x1a372c99c,15338083,0,0x0,8
tick,0x1a372c99c,15345125,0,0x0,8
tick,0x1a372c99c,15345583,0,0x0,8
tick,0x1a372c99c,15350291,0,0x0,8
tick,0x1a372c99c,15350458,0,0x0,8
scavenge,begin,1,404368,1643426360833
scavenge,end,1,404620,1643426360834
tick,0x1a372c99c,15352333,0,0x0,8
tick,0x1a372c99c,15352916,0,0x0,8
tick,0x1a372c99c,15355833,0,0x0,8
tick,0x1a372c99c,15356750,0,0x0,8
tick,0x1a372c99c,15359083,0,0x0,8
tick,0x1a372c99c,15359208,0,0x0,8
tick,0x1a372c99c,15362083,0,0x0,8
tick,0x1a372c99c,15365208,0,0x0,8
tick,0x1a372c99c,15366458,0,0x0,8
tick,0x1a372c99c,15373833,0,0x0,8
tick,0x107520b3c,15374375,0,0x0,0,0x101461efc,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15375500,0,0x0,8
tick,0x1a372c99c,15376875,0,0x0,8
tick,0x1a372c99c,15377791,0,0x0,8
tick,0x1a372c99c,15382291,0,0x0,8
tick,0x1a372c99c,15382458,0,0x0,8
tick,0x1a372c99c,15383750,0,0x0,8
tick,0x1a372c99c,15390750,0,0x0,8
tick,0x1a372c99c,15391208,0,0x0,8
tick,0x1a372c99c,15395666,0,0x0,8
tick,0x1a372c99c,15397416,0,0x0,8
tick,0x1a372c99c,15401250,0,0x0,8
tick,0x1a372c99c,15402250,0,0x0,8
tick,0x1a372c99c,15404875,0,0x0,8
tick,0x1a372c99c,15405666,0,0x0,8
tick,0x1a372c99c,15407958,0,0x0,8
tick,0x1a372c99c,15410958,0,0x0,8
tick,0x1a372c99c,15411875,0,0x0,8
tick,0x1a372c99c,15419375,0,0x0,8
tick,0x1a372c99c,15420083,0,0x0,8
tick,0x1a372c99c,15422208,0,0x0,8
tick,0x1a372c99c,15422583,0,0x0,8
tick,0x1a372c99c,15427583,0,0x0,8
tick,0x101452cc0,15427583,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x107520b3c,15428875,0,0x0,0,0x101461efc,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15435916,0,0x0,8
tick,0x1a372c99c,15436458,0,0x0,8
tick,0x1a372c99c,15441166,0,0x0,8
tick,0x1a372c99c,15441416,0,0x0,8
tick,0x1a372c99c,15442750,0,0x0,8
tick,0x1a372c99c,15446416,0,0x0,8
tick,0x1a372953c,15446458,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15447750,0,0x0,8
tick,0x1a372c99c,15449625,0,0x0,8
tick,0x1a372c99c,15450125,0,0x0,8
tick,0x1a372c99c,15453666,0,0x0,8
tick,0x1a372c99c,15456833,0,0x0,8
tick,0x1a372c99c,15457000,0,0x0,8
tick,0x1a372c99c,15467916,0,0x0,8
tick,0x100c1f00c,15469208,0,0x0,6
tick,0x1a372c99c,15471625,0,0x0,8
tick,0x1a372c99c,15472000,0,0x0,8
tick,0x1a372c99c,15477875,0,0x0,8
tick,0x100f01990,15478416,0,0x0,0
tick,0x1a372c99c,15488166,0,0x0,8
tick,0x1a372c99c,15489125,0,0x0,8
tick,0x1a372c99c,15493500,0,0x0,8
tick,0x1a372c99c,15496375,0,0x0,8
tick,0x1a372c99c,15496791,0,0x0,8
tick,0x1a372c99c,15502166,0,0x0,8
tick,0x10752b768,15503291,0,0x0,0,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15507583,0,0x0,8
tick,0x1a372c99c,15508166,0,0x0,8
tick,0x1a372c99c,15511208,0,0x0,8
tick,0x1a3726538,15511916,0,0x0,8
tick,0x1a372c99c,15519916,0,0x0,8
tick,0x1a372c99c,15520541,0,0x0,8
tick,0x1a372c99c,15521541,0,0x0,8
tick,0x1a372c99c,15523083,0,0x0,8
tick,0x1a372c99c,15523791,0,0x0,8
tick,0x1a372c99c,15528833,0,0x0,8
tick,0x1a372c99c,15530041,0,0x0,8
tick,0x1a372c99c,15537250,0,0x0,8
tick,0x1a372c99c,15537625,0,0x0,8
tick,0x1a372c99c,15542000,0,0x0,8
tick,0x1a372c99c,15543958,0,0x0,8
scavenge,begin,1,415346,1643426361027
scavenge,end,1,415536,1643426361027
tick,0x1013a1ffc,15544833,0,0x0,0,0x10753403c,0x107522bf8,0x107533410
tick,0x1a372c99c,15547750,0,0x0,8
tick,0x1a372c99c,15548666,0,0x0,8
tick,0x1a372c99c,15552916,0,0x0,8
tick,0x1a372c99c,15553750,0,0x0,8
tick,0x1a372c99c,15556583,0,0x0,8
tick,0x1a372c99c,15557416,0,0x0,8
tick,0x1a372c99c,15565041,0,0x0,8
tick,0x1a372c99c,15565833,0,0x0,8
tick,0x1a372c99c,15568125,0,0x0,8
tick,0x1a372c99c,15568333,0,0x0,8
tick,0x1a372c99c,15573583,0,0x0,8
tick,0x1a372c99c,15574750,0,0x0,8
tick,0x1a372c99c,15586291,0,0x0,8
tick,0x1a372c99c,15587291,0,0x0,8
tick,0x1a372953c,15588375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15600166,0,0x0,8
tick,0x1a372c99c,15606291,0,0x0,8
tick,0x1a372c99c,15607291,0,0x0,8
tick,0x1a372c99c,15609333,0,0x0,8
tick,0x1a372c99c,15609750,0,0x0,8
tick,0x1a372c99c,15610833,0,0x0,8
tick,0x1a372c99c,15614625,0,0x0,8
tick,0x100d65edc,15615583,0,0x0,8
tick,0x1a372c99c,15618250,0,0x0,8
tick,0x1a372c99c,15626750,0,0x0,8
tick,0x1a372c99c,15627791,0,0x0,8
tick,0x1a372c99c,15629833,0,0x0,8
tick,0x1a372c99c,15630125,0,0x0,8
tick,0x1a372c99c,15635291,0,0x0,8
tick,0x1a372c99c,15636125,0,0x0,8
tick,0x1a372c99c,15643791,0,0x0,8
tick,0x1a372c99c,15644208,0,0x0,8
tick,0x1a372c99c,15648625,0,0x0,8
tick,0x1a372c99c,15650958,0,0x0,8
tick,0x1a372c99c,15651375,0,0x0,8
tick,0x1a372c99c,15654750,0,0x0,8
tick,0x1a372c99c,15655083,0,0x0,8
tick,0x1a372c99c,15656291,0,0x0,8
tick,0x1a372c99c,15659708,0,0x0,8
tick,0x1011e4da4,15660083,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15663125,0,0x0,8
tick,0x1a372c99c,15663916,0,0x0,8
tick,0x1a372c99c,15674166,0,0x0,8
tick,0x1a372c99c,15675416,0,0x0,8
tick,0x1a372c99c,15677833,0,0x0,8
tick,0x10753a22c,15678208,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15684416,0,0x0,8
tick,0x101093e54,15684875,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15692750,0,0x0,8
tick,0x1a372c99c,15693583,0,0x0,8
tick,0x1a372c99c,15697541,0,0x0,8
tick,0x1a372c99c,15699708,0,0x0,8
tick,0x1a372953c,15699750,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15703583,0,0x0,8
tick,0x1a372c99c,15704666,0,0x0,8
tick,0x1a372c99c,15706708,0,0x0,8
tick,0x1a372c99c,15710833,0,0x0,8
tick,0x1a372c99c,15710958,0,0x0,8
tick,0x1a372c99c,15713833,0,0x0,8
tick,0x1a372c99c,15714583,0,0x0,8
tick,0x1a372c99c,15719916,0,0x0,8
tick,0x1a372c99c,15720791,0,0x0,8
tick,0x1a372c99c,15723000,0,0x0,8
tick,0x1a372c99c,15723291,0,0x0,8
tick,0x1a372c99c,15729000,0,0x0,8
tick,0x1a372c99c,15729458,0,0x0,8
tick,0x1a3726538,15730583,0,0x0,8
tick,0x1a372c99c,15738291,0,0x0,8
tick,0x1a372c99c,15739166,0,0x0,8
tick,0x1a372c99c,15743208,0,0x0,8
tick,0x1a372c99c,15744791,0,0x0,8
scavenge,begin,1,425569,1643426361228
scavenge,end,1,425741,1643426361228
tick,0x10101c898,15745375,0,0x0,5
tick,0x1a372c99c,15748708,0,0x0,8
tick,0x1a372c99c,15749083,0,0x0,8
tick,0x1a372c99c,15750250,0,0x0,8
tick,0x1a372c99c,15754291,0,0x0,8
tick,0x1a372c99c,15756583,0,0x0,8
tick,0x1a372c99c,15757416,0,0x0,8
tick,0x1a372c99c,15759833,0,0x0,8
tick,0x1a372c99c,15759958,0,0x0,8
tick,0x1a372c99c,15765625,0,0x0,8
tick,0x101487b80,15765875,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15767166,0,0x0,8
tick,0x1a372c99c,15768958,0,0x0,8
tick,0x1a372c99c,15769583,0,0x0,8
tick,0x1a372c99c,15775291,0,0x0,8
tick,0x1a372c99c,15775458,0,0x0,8
tick,0x1a372c99c,15776458,0,0x0,8
tick,0x1a372c99c,15783416,0,0x0,8
tick,0x1a372c99c,15783708,0,0x0,8
tick,0x1a372c99c,15785541,0,0x0,8
tick,0x1a372c99c,15788250,0,0x0,8
tick,0x1a372c99c,15790541,0,0x0,8
tick,0x1a372c99c,15791125,0,0x0,8
tick,0x1a372c99c,15793583,0,0x0,8
tick,0x1a372c99c,15794041,0,0x0,8
tick,0x1a372c99c,15795333,0,0x0,8
tick,0x1a372c99c,15801041,0,0x0,8
tick,0x1a372c99c,15801458,0,0x0,8
tick,0x1a372c99c,15802500,0,0x0,8
tick,0x1a372c99c,15804250,0,0x0,8
tick,0x1a372c99c,15805041,0,0x0,8
tick,0x1a372c99c,15809958,0,0x0,8
tick,0x1a372c99c,15810333,0,0x0,8
tick,0x1a372c99c,15811583,0,0x0,8
tick,0x1a372c99c,15813375,0,0x0,8
tick,0x1a372c99c,15813958,0,0x0,8
tick,0x1a372c99c,15819666,0,0x0,8
tick,0x1a372c99c,15819833,0,0x0,8
tick,0x1a372c99c,15820958,0,0x0,8
tick,0x1a372c99c,15828000,0,0x0,8
tick,0x1a372c99c,15828500,0,0x0,8
tick,0x1a372c99c,15832708,0,0x0,8
tick,0x1a372c99c,15834333,0,0x0,8
tick,0x1a3726538,15834750,0,0x0,8
tick,0x1a372c99c,15838250,0,0x0,8
tick,0x1a372c99c,15838750,0,0x0,8
tick,0x1a372c99c,15839916,0,0x0,8
tick,0x1a372c99c,15845625,0,0x0,8
tick,0x1a372c99c,15845875,0,0x0,8
tick,0x1a372c99c,15846916,0,0x0,8
tick,0x1a372c99c,15848791,0,0x0,8
tick,0x1a372c99c,15849250,0,0x0,8
tick,0x1a372c99c,15854958,0,0x0,8
tick,0x1a372c99c,15855208,0,0x0,8
tick,0x1a372c99c,15856250,0,0x0,8
tick,0x1a372c99c,15858208,0,0x0,8
tick,0x1a372c99c,15858708,0,0x0,8
tick,0x1a372c99c,15864000,0,0x0,8
tick,0x1a372c99c,15864875,0,0x0,8
tick,0x1a372c99c,15872541,0,0x0,8
tick,0x1a372c99c,15873333,0,0x0,8
tick,0x1a372c99c,15877250,0,0x0,8
tick,0x1a372c99c,15878666,0,0x0,8
tick,0x1a372c99c,15879291,0,0x0,8
tick,0x1a372c99c,15882291,0,0x0,8
tick,0x10752ae60,15883083,0,0x0,0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15889625,0,0x0,8
tick,0x1a372c99c,15890333,0,0x0,8
tick,0x1a372c99c,15892875,0,0x0,8
tick,0x1a372c99c,15898458,0,0x0,8
tick,0x1a372c99c,15898958,0,0x0,8
tick,0x1a372c99c,15900166,0,0x0,8
tick,0x1a372c99c,15901750,0,0x0,8
tick,0x1a372c99c,15902458,0,0x0,8
tick,0x1a372c99c,15907583,0,0x0,8
tick,0x1a372c99c,15908708,0,0x0,8
tick,0x1a372c99c,15915750,0,0x0,8
tick,0x1a372c99c,15916333,0,0x0,8
tick,0x1a372c99c,15920750,0,0x0,8
tick,0x1a372c99c,15922208,0,0x0,8
tick,0x1a372c99c,15922458,0,0x0,8
scavenge,begin,1,434579,1643426361405
scavenge,end,1,434749,1643426361405
tick,0x1a372c99c,15925958,0,0x0,8
tick,0x1013e3c64,15926333,0,0x0,0,0x107533b78,0x107522bf8,0x107533410
tick,0x1a372c99c,15928000,0,0x0,8
tick,0x1a372c99c,15933541,0,0x0,8
tick,0x1a372c99c,15933916,0,0x0,8
tick,0x1a372c99c,15936708,0,0x0,8
tick,0x1a372c99c,15937500,0,0x0,8
tick,0x1a372c99c,15942166,0,0x0,8
tick,0x1a372c99c,15942708,0,0x0,8
tick,0x1a372c99c,15943916,0,0x0,8
tick,0x1a372c99c,15945250,0,0x0,8
tick,0x1a372c99c,15946291,0,0x0,8
tick,0x1a372c99c,15951750,0,0x0,8
tick,0x100d67e08,15952541,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,15964458,0,0x0,8
tick,0x1a372c99c,15965250,0,0x0,8
tick,0x1a372c99c,15971250,0,0x0,8
tick,0x1a372c99c,15971583,0,0x0,8
tick,0x1a372c99c,15973000,0,0x0,8
tick,0x1a372c99c,15973750,0,0x0,8
tick,0x1a372c99c,15978666,0,0x0,8
tick,0x1a372c99c,15979875,0,0x0,8
tick,0x1a372c99c,15982125,0,0x0,8
tick,0x1a372c99c,15988625,0,0x0,8
tick,0x1a372c99c,15989500,0,0x0,8
tick,0x1a372c99c,15991208,0,0x0,8
tick,0x1a372c99c,15994041,0,0x0,8
tick,0x1a372c99c,15994625,0,0x0,8
tick,0x1a372c99c,16000708,0,0x0,8
tick,0x1a372c99c,16001916,0,0x0,8
tick,0x1a372c99c,16005875,0,0x0,8
tick,0x1a3729534,16005916,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16015208,0,0x0,8
tick,0x1a372c99c,16016166,0,0x0,8
tick,0x1a372c99c,16028791,0,0x0,8
tick,0x1074df2d4,16028875,0,0x0,0,0x107522bf8,0x107533410
tick,0x1a372c99c,16030166,0,0x0,8
tick,0x1a372c99c,16032291,0,0x0,8
tick,0x1a372c99c,16032583,0,0x0,8
tick,0x1a372c99c,16034750,0,0x0,8
tick,0x1a372c99c,16034958,0,0x0,8
tick,0x1a372c99c,16038083,0,0x0,8
tick,0x1a372c99c,16038750,0,0x0,8
tick,0x1a372c99c,16045166,0,0x0,8
tick,0x1a372c99c,16046875,0,0x0,8
tick,0x100f245fc,16047458,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16049750,0,0x0,8
tick,0x100e1f018,16049916,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16054583,0,0x0,8
tick,0x1a372c99c,16054833,0,0x0,8
tick,0x1a372c99c,16058458,0,0x0,8
tick,0x1a372c99c,16058625,0,0x0,8
tick,0x1a372c99c,16059666,0,0x0,8
tick,0x1a372c99c,16061708,0,0x0,8
tick,0x1a372c99c,16061958,0,0x0,8
tick,0x1a372c99c,16067250,0,0x0,8
tick,0x1a372c99c,16067958,0,0x0,8
tick,0x1a372c99c,16076833,0,0x0,8
tick,0x1a372c99c,16078041,0,0x0,8
tick,0x1a37781c4,16079333,0,0x0,5
tick,0x1a372c99c,16081833,0,0x0,8
tick,0x1a372c99c,16084541,0,0x0,8
tick,0x1a372c99c,16085500,0,0x0,8
tick,0x1a372c99c,16093166,0,0x0,8
tick,0x1a372c99c,16096000,0,0x0,8
tick,0x1a372c99c,16099666,0,0x0,8
tick,0x1a372c99c,16100291,0,0x0,8
tick,0x1a372c99c,16104625,0,0x0,8
tick,0x1a372c99c,16105083,0,0x0,8
tick,0x1a372c99c,16106416,0,0x0,8
tick,0x1a372c99c,16108375,0,0x0,8
tick,0x1a372c99c,16108875,0,0x0,8
tick,0x1a372c99c,16114708,0,0x0,8
tick,0x1a372c99c,16115250,0,0x0,8
tick,0x1a372c99c,16125083,0,0x0,8
tick,0x10750abfc,16125166,0,0x0,0,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x100f0c32c,16126416,0,0x0,8
tick,0x1a372c99c,16127750,0,0x0,8
tick,0x1a372c99c,16129750,0,0x0,8
tick,0x10752d2f8,16130083,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
scavenge,begin,1,445991,1643426361613
scavenge,end,1,446172,1643426361613
tick,0x1a372c99c,16132541,0,0x0,8
tick,0x1a372c99c,16132666,0,0x0,8
tick,0x1a372c99c,16133875,0,0x0,8
tick,0x1a372c99c,16141833,0,0x0,8
tick,0x1a372c99c,16142708,0,0x0,8
tick,0x1a372c99c,16144791,0,0x0,8
tick,0x10753a2c0,16145041,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16148500,0,0x0,8
tick,0x1a372c99c,16148833,0,0x0,8
tick,0x1a372c99c,16152958,0,0x0,8
tick,0x1a372c99c,16153666,0,0x0,8
tick,0x1a372c99c,16156416,0,0x0,8
tick,0x1a372c99c,16157500,0,0x0,8
tick,0x1a372c99c,16162541,0,0x0,8
tick,0x1a3726538,16163416,0,0x0,8
tick,0x1a372c99c,16172708,0,0x0,8
tick,0x10754a038,16173500,0,0x0,0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16175125,0,0x0,8
tick,0x1a372c99c,16177333,0,0x0,8
tick,0x1a372c99c,16180125,0,0x0,8
tick,0x1a372c99c,16181125,0,0x0,8
tick,0x1a372c99c,16190625,0,0x0,8
tick,0x1013a29f8,16191125,0,0x0,0,0x107522bf8,0x107533410
tick,0x1a372c99c,16193583,0,0x0,8
tick,0x1a372c99c,16193708,0,0x0,8
tick,0x1a372c99c,16197541,0,0x0,8
tick,0x1a372c99c,16198666,0,0x0,8
tick,0x1a372c99c,16203125,0,0x0,8
tick,0x1a372c99c,16203500,0,0x0,8
tick,0x1013b033c,16204791,0,0x0,0,0x10754a04c,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16207000,0,0x0,8
tick,0x1a372c99c,16207375,0,0x0,8
tick,0x1a372c99c,16212791,0,0x0,8
tick,0x1a372c99c,16213583,0,0x0,8
tick,0x1a372c99c,16214750,0,0x0,8
tick,0x1a372c99c,16223250,0,0x0,8
tick,0x1a372c99c,16223416,0,0x0,8
tick,0x1a372c99c,16224625,0,0x0,8
tick,0x1a372c99c,16225750,0,0x0,8
tick,0x1a372c99c,16227750,0,0x0,8
tick,0x1a372c99c,16228083,0,0x0,8
tick,0x1a372c99c,16230541,0,0x0,8
tick,0x1a372c99c,16231791,0,0x0,8
tick,0x1a372c99c,16240291,0,0x0,8
tick,0x1a372c99c,16240708,0,0x0,8
tick,0x1a372c99c,16243333,0,0x0,8
tick,0x1a372c99c,16247166,0,0x0,8
tick,0x1a372c99c,16252000,0,0x0,8
tick,0x1a372c99c,16252083,0,0x0,8
tick,0x1a3726538,16253416,0,0x0,8
tick,0x1a372c99c,16255458,0,0x0,8
tick,0x1a372c99c,16255833,0,0x0,8
tick,0x1a372c99c,16261291,0,0x0,8
tick,0x1011e4c10,16262125,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16271208,0,0x0,8
tick,0x1a3578a1c,16272000,0,0x0,5
tick,0x1a372c99c,16273791,0,0x0,8
tick,0x1a372c99c,16276041,0,0x0,8
tick,0x1a372c99c,16278750,0,0x0,8
tick,0x1a372c99c,16279208,0,0x0,8
tick,0x1a372c99c,16280458,0,0x0,8
tick,0x1a372c99c,16292208,0,0x0,8
tick,0x1a3575280,16292916,0,0x0,5
tick,0x1a372c99c,16294333,0,0x0,8
tick,0x1a372c99c,16302208,0,0x0,8
tick,0x1a372c99c,16303291,0,0x0,8
tick,0x1a372c99c,16304125,0,0x0,8
tick,0x1a372c99c,16312333,0,0x0,8
tick,0x1a372c99c,16312625,0,0x0,8
tick,0x1a372c99c,16315166,0,0x0,8
tick,0x1a372c99c,16316333,0,0x0,8
tick,0x1a372c99c,16318833,0,0x0,8
tick,0x1a372c99c,16319875,0,0x0,8
tick,0x1a372c99c,16324666,0,0x0,8
tick,0x1a372c99c,16325583,0,0x0,8
tick,0x1a372c99c,16334166,0,0x0,8
tick,0x1a372c99c,16335416,0,0x0,8
tick,0x1a372c99c,16336791,0,0x0,8
tick,0x1a372c99c,16338833,0,0x0,8
tick,0x1a372c99c,16339083,0,0x0,8
scavenge,begin,1,455707,1643426361822
scavenge,end,1,455873,1643426361822
tick,0x1a372c99c,16342833,0,0x0,8
tick,0x1075324bc,16343083,0,0x0,0,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16350041,0,0x0,8
tick,0x1a372c99c,16350583,0,0x0,8
tick,0x1a372c99c,16353541,0,0x0,8
tick,0x1a372c99c,16358500,0,0x0,8
tick,0x1a372c99c,16359166,0,0x0,8
tick,0x1a372c99c,16361333,0,0x0,8
tick,0x1a372c99c,16361583,0,0x0,8
tick,0x1a372c99c,16362625,0,0x0,8
tick,0x1a372c99c,16364583,0,0x0,8
tick,0x107549b94,16365041,0,0x0,0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16370833,0,0x0,8
tick,0x1a372c99c,16371333,0,0x0,8
tick,0x1a372c99c,16372375,0,0x0,8
tick,0x1a372c99c,16380208,0,0x0,8
tick,0x1a372c99c,16381000,0,0x0,8
tick,0x1a372c99c,16382500,0,0x0,8
tick,0x1a372c99c,16384833,0,0x0,8
tick,0x1a372c99c,16388000,0,0x0,8
tick,0x1a372c99c,16388583,0,0x0,8
tick,0x1a372c99c,16397041,0,0x0,8
tick,0x1a372c99c,16397875,0,0x0,8
tick,0x1a372c99c,16402375,0,0x0,8
tick,0x1a372c99c,16406958,0,0x0,8
tick,0x1a372c99c,16407208,0,0x0,8
tick,0x1a372c99c,16412875,0,0x0,8
tick,0x1a372c99c,16413708,0,0x0,8
tick,0x1a372c99c,16415208,0,0x0,8
tick,0x1a372c99c,16418541,0,0x0,8
tick,0x1a372c99c,16424083,0,0x0,8
tick,0x1a372c99c,16424250,0,0x0,8
tick,0x1a372c99c,16425458,0,0x0,8
tick,0x1a372c99c,16435125,0,0x0,8
tick,0x1a372c99c,16435708,0,0x0,8
tick,0x1a372c99c,16438250,0,0x0,8
tick,0x1a372c99c,16441208,0,0x0,8
tick,0x1a372c99c,16442083,0,0x0,8
tick,0x1a372c99c,16445250,0,0x0,8
tick,0x1a372c99c,16445958,0,0x0,8
tick,0x1a372c99c,16455875,0,0x0,8
tick,0x1a372c99c,16455958,0,0x0,8
tick,0x1a372c99c,16457208,0,0x0,8
tick,0x1a372c99c,16458875,0,0x0,8
tick,0x1a372c99c,16459416,0,0x0,8
tick,0x1a372c99c,16462833,0,0x0,8
tick,0x1a372c99c,16463125,0,0x0,8
tick,0x1a372c99c,16466791,0,0x0,8
tick,0x1a372c99c,16467958,0,0x0,8
tick,0x1a372c99c,16470500,0,0x0,8
tick,0x1a372c99c,16471750,0,0x0,8
tick,0x1a372c99c,16477125,0,0x0,8
tick,0x1a372c99c,16478708,0,0x0,8
tick,0x1a372c99c,16491666,0,0x0,8
tick,0x107533194,16492125,0,0x0,0
tick,0x1a372c99c,16494750,0,0x0,8
tick,0x1a372c99c,16497125,0,0x0,8
tick,0x1a372c99c,16497250,0,0x0,8
tick,0x1a372c99c,16500000,0,0x0,8
tick,0x1a372c99c,16500958,0,0x0,8
tick,0x1a372c99c,16509125,0,0x0,8
tick,0x1a372c99c,16509500,0,0x0,8
tick,0x1a372c99c,16512166,0,0x0,8
tick,0x1a372c99c,16515916,0,0x0,8
tick,0x1a372c99c,16516791,0,0x0,8
tick,0x1a372c99c,16520458,0,0x0,8
tick,0x1a372c99c,16520708,0,0x0,8
tick,0x1a372c99c,16521875,0,0x0,8
tick,0x1a372c99c,16523833,0,0x0,8
tick,0x1a372c99c,16524166,0,0x0,8
tick,0x1a372c99c,16529416,0,0x0,8
tick,0x1a372c99c,16530250,0,0x0,8
tick,0x1a372c99c,16539125,0,0x0,8
tick,0x1a372c99c,16540083,0,0x0,8
tick,0x1a372c99c,16541916,0,0x0,8
tick,0x1a372c99c,16544083,0,0x0,8
tick,0x1a372c99c,16544791,0,0x0,8
scavenge,begin,1,467644,1643426362028
scavenge,end,1,467841,1643426362028
tick,0x1a372c99c,16546875,0,0x0,8
tick,0x1a372c99c,16547083,0,0x0,8
tick,0x1a372c99c,16548208,0,0x0,8
tick,0x1a372c99c,16556166,0,0x0,8
tick,0x1a372c99c,16556833,0,0x0,8
tick,0x1a372c99c,16559208,0,0x0,8
tick,0x1a372c99c,16559375,0,0x0,8
tick,0x1a372c99c,16562916,0,0x0,8
tick,0x10752b610,16563916,0,0x0,0,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16567375,0,0x0,8
tick,0x1a372c99c,16567791,0,0x0,8
tick,0x1a372c99c,16568875,0,0x0,8
tick,0x1a372c99c,16571125,0,0x0,8
tick,0x1a372c99c,16571416,0,0x0,8
tick,0x1a372c99c,16577333,0,0x0,8
tick,0x1a372c99c,16578333,0,0x0,8
tick,0x1a372c99c,16588041,0,0x0,8
tick,0x1a372c99c,16588291,0,0x0,8
tick,0x1a372c99c,16589541,0,0x0,8
tick,0x1a372c99c,16591083,0,0x0,8
tick,0x1a372c99c,16593166,0,0x0,8
tick,0x1a372c99c,16595958,0,0x0,8
tick,0x1a372c99c,16596958,0,0x0,8
tick,0x1a372c99c,16605291,0,0x0,8
tick,0x1a372c99c,16605916,0,0x0,8
tick,0x1a372c99c,16608291,0,0x0,8
tick,0x1a372c99c,16608416,0,0x0,8
tick,0x1a372c99c,16612166,0,0x0,8
tick,0x1a3733940,16612166,0,0x0,0,0x0,0x10753251c,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16615958,0,0x0,8
tick,0x1a372953c,16617041,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16619666,0,0x0,8
tick,0x1a372c99c,16620750,0,0x0,8
tick,0x1a372c99c,16625583,0,0x0,8
tick,0x1a372c99c,16626750,0,0x0,8
tick,0x1a372c99c,16634708,0,0x0,8
tick,0x1a372c99c,16635583,0,0x0,8
tick,0x1a372c99c,16637458,0,0x0,8
tick,0x1a372c99c,16639500,0,0x0,8
tick,0x1a372c99c,16642208,0,0x0,8
tick,0x1a372c99c,16642916,0,0x0,8
tick,0x1a372c99c,16651125,0,0x0,8
tick,0x1a372c99c,16651583,0,0x0,8
tick,0x1a372c99c,16654416,0,0x0,8
tick,0x1a372c99c,16658125,0,0x0,8
tick,0x1a372c99c,16658791,0,0x0,8
tick,0x1a372c99c,16662000,0,0x0,8
tick,0x1a372c99c,16662625,0,0x0,8
tick,0x1a372c99c,16665250,0,0x0,8
tick,0x1a372c99c,16666375,0,0x0,8
tick,0x1a372c99c,16671250,0,0x0,8
tick,0x1a372c99c,16671333,0,0x0,8
tick,0x1a372c99c,16672500,0,0x0,8
tick,0x1a372c99c,16680250,0,0x0,8
tick,0x1a372c99c,16681041,0,0x0,8
tick,0x1a372c99c,16682708,0,0x0,8
tick,0x1a372c99c,16685083,0,0x0,8
tick,0x1a372c99c,16685833,0,0x0,8
tick,0x1a372c99c,16688208,0,0x0,8
tick,0x1a3575240,16689375,0,0x0,5
tick,0x1a372c99c,16696500,0,0x0,8
tick,0x1a372c99c,16696875,0,0x0,8
tick,0x1a372c99c,16699333,0,0x0,8
tick,0x10753a7e8,16699333,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16703625,0,0x0,8
tick,0x1a372c99c,16704208,0,0x0,8
tick,0x1a372c99c,16706541,0,0x0,8
tick,0x1a372c99c,16706791,0,0x0,8
tick,0x1a372c99c,16707916,0,0x0,8
tick,0x1a372c99c,16710916,0,0x0,8
tick,0x1a372c99c,16711500,0,0x0,8
tick,0x1a372c99c,16716750,0,0x0,8
tick,0x1a372c99c,16717791,0,0x0,8
tick,0x1a372c99c,16726208,0,0x0,8
tick,0x1a372c99c,16726625,0,0x0,8
tick,0x1a372c99c,16728708,0,0x0,8
tick,0x1a372c99c,16730833,0,0x0,8
tick,0x1a3726538,16731500,0,0x0,8
scavenge,begin,1,477271,1643426362214
scavenge,end,1,477435,1643426362215
tick,0x1a372c99c,16733541,0,0x0,8
tick,0x1a372c99c,16734041,0,0x0,8
tick,0x1a372c99c,16742333,0,0x0,8
tick,0x1a372c99c,16742833,0,0x0,8
tick,0x1a372c99c,16745250,0,0x0,8
tick,0x1013b0228,16745291,0,0x0,0,0x10754a04c,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16749166,0,0x0,8
tick,0x1a372c99c,16752250,0,0x0,8
tick,0x1a372c99c,16752916,0,0x0,8
tick,0x1a372c99c,16754041,0,0x0,8
tick,0x1a372c99c,16755583,0,0x0,8
tick,0x1a372c99c,16756375,0,0x0,8
tick,0x1a372c99c,16762375,0,0x0,8
tick,0x1a372c99c,16763458,0,0x0,8
tick,0x1a372c99c,16770750,0,0x0,8
tick,0x1a372c99c,16771958,0,0x0,8
tick,0x1a372c99c,16774208,0,0x0,8
tick,0x1a372c99c,16774541,0,0x0,8
tick,0x1a372c99c,16776333,0,0x0,8
tick,0x1a372c99c,16777000,0,0x0,8
tick,0x1a372c99c,16778958,0,0x0,8
tick,0x1a372c99c,16779458,0,0x0,8
tick,0x1a372c99c,16787083,0,0x0,8
tick,0x1a372c99c,16787791,0,0x0,8
tick,0x1a372c99c,16791125,0,0x0,8
tick,0x1a372c99c,16795000,0,0x0,8
tick,0x1a372c99c,16795375,0,0x0,8
tick,0x1a372c99c,16797625,0,0x0,8
tick,0x1a372c99c,16798000,0,0x0,8
tick,0x1a372c99c,16799208,0,0x0,8
tick,0x1a372c99c,16800833,0,0x0,8
tick,0x1a372c99c,16801708,0,0x0,8
tick,0x1a372c99c,16808125,0,0x0,8
tick,0x1a372c99c,16809041,0,0x0,8
tick,0x1a372c99c,16815958,0,0x0,8
tick,0x1a372c99c,16816541,0,0x0,8
tick,0x1a372c99c,16818708,0,0x0,8
tick,0x1a372c99c,16819000,0,0x0,8
tick,0x1a372c99c,16822125,0,0x0,8
tick,0x1a372c99c,16822666,0,0x0,8
tick,0x1a372c99c,16824791,0,0x0,8
tick,0x1a372c99c,16825083,0,0x0,8
tick,0x1a372c99c,16826083,0,0x0,8
tick,0x1a372c99c,16831958,0,0x0,8
tick,0x1a372c99c,16832916,0,0x0,8
tick,0x1a372c99c,16836458,0,0x0,8
tick,0x1a3733940,16836791,0,0x0,0,0x0,0x10753251c,0x10750a15c,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16840416,0,0x0,8
tick,0x1a372953c,16840583,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16843166,0,0x0,8
tick,0x1a372c99c,16844041,0,0x0,8
tick,0x1a372c99c,16846458,0,0x0,8
tick,0x1a372c99c,16847416,0,0x0,8
tick,0x1a372c99c,16853666,0,0x0,8
tick,0x1a37781c4,16854708,0,0x0,5
tick,0x1a372c99c,16861791,0,0x0,8
tick,0x1a372c99c,16862291,0,0x0,8
tick,0x1a372c99c,16864208,0,0x0,8
tick,0x1a372c99c,16867458,0,0x0,8
tick,0x100e1efd0,16868666,0,0x0,5,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,16870625,0,0x0,8
tick,0x1a372c99c,16871208,0,0x0,8
tick,0x1a372c99c,16878083,0,0x0,8
tick,0x1a372c99c,16878541,0,0x0,8
tick,0x1a372c99c,16882083,0,0x0,8
tick,0x1a35754ec,16882416,0,0x0,0,0x107533e80,0x107522bf8,0x107533410
tick,0x1a372c99c,16886541,0,0x0,8
tick,0x1a372c99c,16887291,0,0x0,8
tick,0x1a372c99c,16889416,0,0x0,8
tick,0x1a372c99c,16889666,0,0x0,8
tick,0x1a372c99c,16890666,0,0x0,8
tick,0x1a372c99c,16892750,0,0x0,8
tick,0x1a372c99c,16893000,0,0x0,8
tick,0x1a372c99c,16894000,0,0x0,8
tick,0x1a372c99c,16899708,0,0x0,8
tick,0x1a372953c,16900458,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16908041,0,0x0,8
tick,0x1a372c99c,16909666,0,0x0,8
tick,0x1a372c99c,16912000,0,0x0,8
tick,0x1a3726538,16912041,0,0x0,8
tick,0x1a372c99c,16915791,0,0x0,8
tick,0x1a372953c,16916666,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
scavenge,begin,1,487058,1643426362402
tick,0x1a372c99c,16919833,0,0x0,8
scavenge,end,1,487235,1643426362403
tick,0x101416b2c,16920458,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16930208,0,0x0,8
tick,0x1a372c99c,16931291,0,0x0,8
tick,0x1a372c99c,16933708,0,0x0,8
tick,0x1a372c99c,16934958,0,0x0,8
tick,0x1a372c99c,16938875,0,0x0,8
tick,0x1a372c99c,16938958,0,0x0,8
tick,0x1a372c99c,16945916,0,0x0,8
tick,0x1a372c99c,16946916,0,0x0,8
tick,0x1a372c99c,16948625,0,0x0,8
tick,0x100e1573c,16948750,0,0x0,8
tick,0x1a372953c,16950125,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16953083,0,0x0,8
tick,0x1a372c99c,16956416,0,0x0,8
tick,0x1a372c99c,16962375,0,0x0,8
tick,0x1a372c99c,16962833,0,0x0,8
tick,0x1a372c99c,16964000,0,0x0,8
tick,0x1a372c99c,16975125,0,0x0,8
tick,0x1a372c99c,16975625,0,0x0,8
tick,0x1a372c99c,16977916,0,0x0,8
tick,0x1a372c99c,16979875,0,0x0,8
tick,0x1a372953c,16980666,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,16985166,0,0x0,8
tick,0x1a372c99c,16987041,0,0x0,8
tick,0x1a372c99c,16988375,0,0x0,8
tick,0x1a372c99c,16993916,0,0x0,8
tick,0x1a372c99c,16994583,0,0x0,8
tick,0x1a372c99c,16997041,0,0x0,8
tick,0x1a372c99c,16998250,0,0x0,8
tick,0x1a372c99c,17004833,0,0x0,8
tick,0x100e156f0,17005583,0,0x0,8
tick,0x1a372c99c,17006875,0,0x0,8
tick,0x1a372c99c,17012750,0,0x0,8
tick,0x1a372953c,17012958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17019666,0,0x0,8
tick,0x1a372c99c,17020416,0,0x0,8
tick,0x1a372c99c,17037500,0,0x0,8
tick,0x1a372c99c,17037750,0,0x0,8
tick,0x1a372c99c,17038916,0,0x0,8
tick,0x1a372c99c,17039875,0,0x0,8
tick,0x1a372c99c,17041333,0,0x0,8
tick,0x1a372c99c,17052666,0,0x0,8
tick,0x1a372c99c,17053666,0,0x0,8
tick,0x1a372c99c,17055916,0,0x0,8
tick,0x1a372c99c,17058583,0,0x0,8
tick,0x1a372c99c,17059625,0,0x0,8
tick,0x1a372c99c,17065958,0,0x0,8
tick,0x1a372c99c,17067000,0,0x0,8
tick,0x1a372c99c,17069833,0,0x0,8
tick,0x1a372c99c,17070500,0,0x0,8
tick,0x1a372c99c,17075291,0,0x0,8
tick,0x1a372c99c,17075541,0,0x0,8
tick,0x1a372c99c,17076791,0,0x0,8
tick,0x1a3726538,17078000,0,0x0,8
tick,0x1a372c99c,17082083,0,0x0,8
tick,0x1a372c99c,17083041,0,0x0,8
tick,0x1a372c99c,17087833,0,0x0,8
tick,0x100d68e0c,17087833,0,0x0,0,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a3726538,17089083,0,0x0,8
tick,0x1a372c99c,17096583,0,0x0,8
tick,0x1a372c99c,17096875,0,0x0,8
tick,0x1a372c99c,17097958,0,0x0,8
tick,0x1a372c99c,17100958,0,0x0,8
tick,0x1a372c99c,17101625,0,0x0,8
tick,0x1a372c99c,17106833,0,0x0,8
tick,0x1a372c99c,17107875,0,0x0,8
tick,0x1a372c99c,17112416,0,0x0,8
tick,0x1a372c99c,17112916,0,0x0,8
tick,0x1a372c99c,17114583,0,0x0,8
tick,0x1a372c99c,17119458,0,0x0,8
tick,0x1a372953c,17120375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17121500,0,0x0,8
tick,0x1a372c99c,17127875,0,0x0,8
tick,0x1a372c99c,17128791,0,0x0,8
tick,0x1a372c99c,17133250,0,0x0,8
tick,0x1a372c99c,17133833,0,0x0,8
tick,0x100e1f010,17135125,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17141958,0,0x0,8
tick,0x1a372c99c,17142708,0,0x0,8
tick,0x1a372c99c,17146750,0,0x0,8
tick,0x1a372c99c,17147666,0,0x0,8
tick,0x1a372c99c,17151583,0,0x0,8
scavenge,begin,1,498177,1643426362635
scavenge,end,1,498369,1643426362635
tick,0x1a372c99c,17152666,0,0x0,8
tick,0x1a372c99c,17158708,0,0x0,8
tick,0x1a372c99c,17158958,0,0x0,8
tick,0x1a372c99c,17160958,0,0x0,8
tick,0x1a372c99c,17161458,0,0x0,8
tick,0x1a372c99c,17165458,0,0x0,8
tick,0x1a372c99c,17166500,0,0x0,8
tick,0x1a372c99c,17167750,0,0x0,8
tick,0x1a372c99c,17173625,0,0x0,8
tick,0x1a372c99c,17173875,0,0x0,8
tick,0x1a372c99c,17174875,0,0x0,8
tick,0x1a372c99c,17178916,0,0x0,8
tick,0x1a372c99c,17179750,0,0x0,8
tick,0x1a372c99c,17187625,0,0x0,8
tick,0x1a372c99c,17188500,0,0x0,8
tick,0x1a372c99c,17192833,0,0x0,8
tick,0x1a372c99c,17193333,0,0x0,8
tick,0x1a372c99c,17197458,0,0x0,8
tick,0x1a372c99c,17198250,0,0x0,8
tick,0x1a372c99c,17204416,0,0x0,8
tick,0x1a372c99c,17204541,0,0x0,8
tick,0x1a372c99c,17206666,0,0x0,8
tick,0x1a372c99c,17207041,0,0x0,8
tick,0x1a372c99c,17210875,0,0x0,8
tick,0x1a372c99c,17211833,0,0x0,8
tick,0x10753a204,17213041,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17217916,0,0x0,8
tick,0x1a372c99c,17218166,0,0x0,8
tick,0x1a372c99c,17219250,0,0x0,8
tick,0x1a372c99c,17224791,0,0x0,8
tick,0x1a372c99c,17225166,0,0x0,8
tick,0x1a372c99c,17226250,0,0x0,8
tick,0x1a372c99c,17231583,0,0x0,8
tick,0x1a372c99c,17232291,0,0x0,8
tick,0x1a372c99c,17237916,0,0x0,8
tick,0x1a372c99c,17238375,0,0x0,8
tick,0x1a372c99c,17242250,0,0x0,8
tick,0x1a372c99c,17243208,0,0x0,8
tick,0x1a372c99c,17247708,0,0x0,8
tick,0x1a372c99c,17248083,0,0x0,8
tick,0x1a372c99c,17251500,0,0x0,8
tick,0x1a372c99c,17251625,0,0x0,8
tick,0x1a372c99c,17256166,0,0x0,8
tick,0x107539960,17256625,0,0x0,0,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17257750,0,0x0,8
tick,0x1a372c99c,17262958,0,0x0,8
tick,0x1a372c99c,17263750,0,0x0,8
tick,0x1a372c99c,17270083,0,0x0,8
tick,0x1a3726538,17271250,0,0x0,8
tick,0x1a372c99c,17277000,0,0x0,8
tick,0x1a372c99c,17277416,0,0x0,8
tick,0x1a372c99c,17282833,0,0x0,8
tick,0x1a372c99c,17283250,0,0x0,8
tick,0x1a372c99c,17287833,0,0x0,8
tick,0x1a372c99c,17288083,0,0x0,8
tick,0x1a372c99c,17289083,0,0x0,8
tick,0x1a372c99c,17293458,0,0x0,8
tick,0x1a372c99c,17294083,0,0x0,8
tick,0x1a372c99c,17296916,0,0x0,8
tick,0x1a372c99c,17297416,0,0x0,8
tick,0x1a372c99c,17301541,0,0x0,8
tick,0x1a372c99c,17302291,0,0x0,8
tick,0x1a372c99c,17303375,0,0x0,8
tick,0x1a372c99c,17308500,0,0x0,8
tick,0x1a3726538,17309625,0,0x0,8
tick,0x1a372c99c,17315041,0,0x0,8
tick,0x1a372c99c,17315958,0,0x0,8
tick,0x1a372c99c,17322416,0,0x0,8
tick,0x1a372c99c,17323125,0,0x0,8
tick,0x1a372c99c,17328250,0,0x0,8
tick,0x100f31c7c,17328291,0,0x0,5
tick,0x1a372c99c,17333375,0,0x0,8
scavenge,begin,1,507368,1643426362816
scavenge,end,1,507725,1643426362817
tick,0x1a3576148,17334666,0,0x0,1
tick,0x1a372c99c,17341250,0,0x0,8
tick,0x1a372c99c,17341541,0,0x0,8
tick,0x1a372c99c,17345125,0,0x0,8
tick,0x100df9b58,17345166,0,0x0,8
tick,0x1a372c99c,17351291,0,0x0,8
tick,0x1a372c99c,17352625,0,0x0,8
tick,0x1a372c99c,17353250,0,0x0,8
tick,0x1a372c99c,17354500,0,0x0,8
tick,0x1a372c99c,17359291,0,0x0,8
tick,0x1a372c99c,17359583,0,0x0,8
tick,0x1a372c99c,17365791,0,0x0,8
tick,0x1a372c99c,17366708,0,0x0,8
tick,0x1a372c99c,17373708,0,0x0,8
tick,0x1a372c99c,17374083,0,0x0,8
tick,0x1a372c99c,17375041,0,0x0,8
tick,0x1a372c99c,17379125,0,0x0,8
tick,0x1a3726538,17379166,0,0x0,8
tick,0x107548fd4,17380208,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17381708,0,0x0,8
tick,0x1a372c99c,17382541,0,0x0,8
tick,0x1a372c99c,17389291,0,0x0,8
tick,0x100d67ddc,17389875,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17391291,0,0x0,8
tick,0x1a372c99c,17397791,0,0x0,8
tick,0x1a372c99c,17402416,0,0x0,8
tick,0x1a372c99c,17402791,0,0x0,8
tick,0x1a372c99c,17405333,0,0x0,8
tick,0x1a372c99c,17406291,0,0x0,8
tick,0x1a372c99c,17407833,0,0x0,8
tick,0x1a372c99c,17414041,0,0x0,8
tick,0x1a372c99c,17415125,0,0x0,8
tick,0x1a372c99c,17420625,0,0x0,8
tick,0x1a372c99c,17420666,0,0x0,8
tick,0x1a372c99c,17421791,0,0x0,8
tick,0x1a372c99c,17431625,0,0x0,8
tick,0x100eec4f4,17432000,0,0x0,5
tick,0x1a372c99c,17439041,0,0x0,8
tick,0x1a372c99c,17439166,0,0x0,8
tick,0x1a372c99c,17441333,0,0x0,8
tick,0x1a372953c,17441708,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17448250,0,0x0,8
tick,0x1a372c99c,17449958,0,0x0,8
tick,0x1a372c99c,17453916,0,0x0,8
tick,0x1a3778110,17454416,0,0x0,5,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17456375,0,0x0,8
tick,0x1a372c99c,17458125,0,0x0,8
tick,0x1a372c99c,17458250,0,0x0,8
tick,0x1a372c99c,17459416,0,0x0,8
tick,0x1a372c99c,17465625,0,0x0,8
tick,0x1013e3e10,17466625,0,0x0,0,0x10750ac10,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17471416,0,0x0,8
tick,0x1a372c99c,17471500,0,0x0,8
tick,0x1a372c99c,17472625,0,0x0,8
tick,0x1a372c99c,17479875,0,0x0,8
tick,0x1a372c99c,17480125,0,0x0,8
tick,0x1a372c99c,17481125,0,0x0,8
tick,0x1a372c99c,17484625,0,0x0,8
tick,0x1a372c99c,17484791,0,0x0,8
tick,0x1a372c99c,17487000,0,0x0,8
tick,0x1a372c99c,17487250,0,0x0,8
tick,0x1a372c99c,17488333,0,0x0,8
tick,0x1a372c99c,17492666,0,0x0,8
tick,0x1a372c99c,17493166,0,0x0,8
tick,0x1a372c99c,17498958,0,0x0,8
tick,0x1a372c99c,17499083,0,0x0,8
tick,0x1a372c99c,17501708,0,0x0,8
tick,0x1a372c99c,17504041,0,0x0,8
tick,0x1a372c99c,17504041,0,0x0,8
tick,0x1a372c99c,17505250,0,0x0,8
tick,0x1a372c99c,17510291,0,0x0,8
tick,0x1a372c99c,17511333,0,0x0,8
tick,0x1a372c99c,17516625,0,0x0,8
tick,0x1a372c99c,17517375,0,0x0,8
tick,0x1a372c99c,17524666,0,0x0,8
tick,0x1a372c99c,17524791,0,0x0,8
tick,0x1a372c99c,17525916,0,0x0,8
tick,0x1a372c99c,17530000,0,0x0,8
tick,0x1a372c99c,17530833,0,0x0,8
tick,0x1a372c99c,17532333,0,0x0,8
scavenge,begin,1,518224,1643426363016
tick,0x1011d7414,17533041,0,0x0,1
scavenge,end,1,518416,1643426363016
tick,0x1a372c99c,17538208,0,0x0,8
tick,0x1a372c99c,17539750,0,0x0,8
tick,0x1a372c99c,17543208,0,0x0,8
tick,0x1a372c99c,17546791,0,0x0,8
tick,0x1a372c99c,17546916,0,0x0,8
tick,0x1a372c99c,17548500,0,0x0,8
tick,0x1013a2c30,17549375,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17550833,0,0x0,8
tick,0x1a372c99c,17555541,0,0x0,8
tick,0x1a372c99c,17555708,0,0x0,8
tick,0x1a372c99c,17556791,0,0x0,8
tick,0x1a372c99c,17561958,0,0x0,8
tick,0x1a372c99c,17562875,0,0x0,8
tick,0x1a372c99c,17570000,0,0x0,8
tick,0x1a372c99c,17570500,0,0x0,8
tick,0x1a372c99c,17574750,0,0x0,8
tick,0x1a372c99c,17575291,0,0x0,8
tick,0x1a372c99c,17578000,0,0x0,8
tick,0x1a372c99c,17578875,0,0x0,8
tick,0x1a372c99c,17583541,0,0x0,8
tick,0x1a372953c,17583625,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17588916,0,0x0,8
tick,0x1a372c99c,17592708,0,0x0,8
tick,0x1a372c99c,17594583,0,0x0,8
tick,0x1a372c99c,17594833,0,0x0,8
tick,0x1a372c99c,17596041,0,0x0,8
tick,0x1a372c99c,17600708,0,0x0,8
tick,0x1a372c99c,17601041,0,0x0,8
tick,0x1a372c99c,17606500,0,0x0,8
tick,0x1a372c99c,17607083,0,0x0,8
tick,0x1a372c99c,17615166,0,0x0,8
tick,0x100eec528,17615791,0,0x0,5
tick,0x1a372c99c,17620250,0,0x0,8
tick,0x1a372c99c,17620708,0,0x0,8
tick,0x1a372c99c,17622250,0,0x0,8
tick,0x1a372c99c,17623041,0,0x0,8
tick,0x1a372c99c,17628916,0,0x0,8
tick,0x1a372c99c,17629416,0,0x0,8
tick,0x1a372c99c,17633875,0,0x0,8
tick,0x1a3726538,17634041,0,0x0,8
tick,0x1a372c99c,17636666,0,0x0,8
tick,0x1a372c99c,17638666,0,0x0,8
tick,0x1a372c99c,17638916,0,0x0,8
tick,0x1a372c99c,17640000,0,0x0,8
tick,0x1a372c99c,17646333,0,0x0,8
tick,0x1a372c99c,17647375,0,0x0,8
tick,0x1a372c99c,17651750,0,0x0,8
tick,0x1a372953c,17652291,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17653375,0,0x0,8
tick,0x1a372c99c,17660666,0,0x0,8
tick,0x1a372c99c,17660958,0,0x0,8
tick,0x1a372c99c,17665208,0,0x0,8
tick,0x1a357d530,17665458,0,0x0,5
tick,0x1a372c99c,17667541,0,0x0,8
tick,0x1a35789ac,17668041,0,0x0,5
tick,0x1a372c99c,17673333,0,0x0,8
tick,0x1a372c99c,17673958,0,0x0,8
tick,0x1a372c99c,17682041,0,0x0,8
tick,0x1a372c99c,17682833,0,0x0,8
tick,0x1a372c99c,17684583,0,0x0,8
tick,0x1a372c99c,17690625,0,0x0,8
tick,0x1a372c99c,17691333,0,0x0,8
tick,0x1a372c99c,17694791,0,0x0,8
tick,0x1a372c99c,17695125,0,0x0,8
tick,0x1a372c99c,17696583,0,0x0,8
tick,0x1a372c99c,17697916,0,0x0,8
tick,0x1a372c99c,17699000,0,0x0,8
tick,0x100c1f158,17700041,0,0x0,6
tick,0x1a372c99c,17709208,0,0x0,8
tick,0x1014169a0,17709250,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17715458,0,0x0,8
tick,0x1a372c99c,17716416,0,0x0,8
tick,0x1a372c99c,17725583,0,0x0,8
tick,0x1a372c99c,17726583,0,0x0,8
tick,0x1a372c99c,17732625,0,0x0,8
tick,0x1a372c99c,17734083,0,0x0,8
tick,0x1a372c99c,17735583,0,0x0,8
tick,0x1a3726538,17736375,0,0x0,8
scavenge,begin,1,528436,1643426363219
scavenge,end,1,528732,1643426363219
tick,0x1a372c99c,17741583,0,0x0,8
tick,0x1a372c99c,17742708,0,0x0,8
tick,0x1a372c99c,17748125,0,0x0,8
tick,0x1a372c99c,17750708,0,0x0,8
tick,0x1a372c99c,17752916,0,0x0,8
tick,0x1a372c99c,17753083,0,0x0,8
tick,0x1a372c99c,17754333,0,0x0,8
tick,0x1a372c99c,17759166,0,0x0,8
tick,0x1a372c99c,17759333,0,0x0,8
tick,0x1a372c99c,17765625,0,0x0,8
tick,0x1a372953c,17765666,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17766875,0,0x0,8
tick,0x1a372c99c,17773750,0,0x0,8
tick,0x1a372c99c,17774375,0,0x0,8
tick,0x1a372c99c,17779250,0,0x0,8
tick,0x1a372c99c,17780333,0,0x0,8
tick,0x101461e6c,17781416,0,0x0,0,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17782708,0,0x0,8
tick,0x1a372c99c,17787583,0,0x0,8
tick,0x1a372c99c,17792583,0,0x0,8
tick,0x1a372c99c,17796375,0,0x0,8
tick,0x1a372c99c,17798375,0,0x0,8
tick,0x1a372c99c,17798500,0,0x0,8
tick,0x1a372c99c,17799541,0,0x0,8
tick,0x1a372c99c,17800583,0,0x0,8
tick,0x1a372c99c,17805041,0,0x0,8
tick,0x1a372c99c,17805541,0,0x0,8
tick,0x1a372c99c,17811333,0,0x0,8
tick,0x1a372c99c,17811375,0,0x0,8
tick,0x1a372c99c,17812541,0,0x0,8
tick,0x1a372c99c,17819291,0,0x0,8
tick,0x1a372c99c,17819833,0,0x0,8
tick,0x1a372c99c,17823958,0,0x0,8
tick,0x1a372c99c,17824875,0,0x0,8
tick,0x1a372c99c,17827125,0,0x0,8
tick,0x1075224c0,17827166,0,0x0,0
tick,0x1a372c99c,17828333,0,0x0,8
tick,0x1a372c99c,17832583,0,0x0,8
tick,0x1a372c99c,17833125,0,0x0,8
tick,0x1a372c99c,17838166,0,0x0,8
tick,0x1a372c99c,17841833,0,0x0,8
tick,0x107533410,17841916,0,0x0,0
tick,0x1a372c99c,17843791,0,0x0,8
tick,0x1a372c99c,17844416,0,0x0,8
tick,0x1a372c99c,17845666,0,0x0,8
tick,0x1a372c99c,17850000,0,0x0,8
tick,0x1a372c99c,17850750,0,0x0,8
tick,0x1a372c99c,17855916,0,0x0,8
tick,0x1a372c99c,17856916,0,0x0,8
tick,0x1a372c99c,17864583,0,0x0,8
tick,0x1a372c99c,17865541,0,0x0,8
tick,0x1a372c99c,17869625,0,0x0,8
tick,0x1a372c99c,17870458,0,0x0,8
tick,0x1a372c99c,17871875,0,0x0,8
tick,0x1a372c99c,17872791,0,0x0,8
tick,0x1a372c99c,17878541,0,0x0,8
tick,0x1a372c99c,17878833,0,0x0,8
tick,0x1a372c99c,17883833,0,0x0,8
tick,0x1a372c99c,17886791,0,0x0,8
tick,0x1a372c99c,17888666,0,0x0,8
tick,0x1a372c99c,17888791,0,0x0,8
tick,0x1a372c99c,17889916,0,0x0,8
tick,0x1a372c99c,17896708,0,0x0,8
tick,0x1a372c99c,17897166,0,0x0,8
tick,0x1a372c99c,17902791,0,0x0,8
tick,0x1075306f8,17902833,0,0x0,0,0x10752b788,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17904250,0,0x0,8
tick,0x1a372c99c,17915833,0,0x0,8
tick,0x1a372c99c,17916666,0,0x0,8
tick,0x1a372c99c,17921250,0,0x0,8
tick,0x1a372c99c,17921666,0,0x0,8
tick,0x1a372c99c,17925083,0,0x0,8
tick,0x1a372c99c,17925250,0,0x0,8
scavenge,begin,1,538286,1643426363409
scavenge,end,1,538457,1643426363409
tick,0x1a37290c0,17926708,0,0x0,1
tick,0x1a372c99c,17933041,0,0x0,8
tick,0x1013ac904,17933458,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17940166,0,0x0,8
tick,0x1a372c99c,17943833,0,0x0,8
tick,0x1a372c99c,17946541,0,0x0,8
tick,0x1a372c99c,17946916,0,0x0,8
tick,0x1a372c99c,17948041,0,0x0,8
tick,0x1a372c99c,17954291,0,0x0,8
tick,0x1a372c99c,17954375,0,0x0,8
tick,0x1a372c99c,17955458,0,0x0,8
tick,0x1a372c99c,17960833,0,0x0,8
tick,0x1a372c99c,17961416,0,0x0,8
tick,0x1a372c99c,17968375,0,0x0,8
tick,0x101416060,17968666,0,0x0,0,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17969875,0,0x0,8
tick,0x1a372c99c,17974250,0,0x0,8
tick,0x1a372c99c,17974750,0,0x0,8
tick,0x1a372c99c,17976375,0,0x0,8
tick,0x100e1c5ec,17977208,0,0x0,5
tick,0x1a372c99c,17981875,0,0x0,8
tick,0x1a372c99c,17981916,0,0x0,8
tick,0x1a372c99c,17987416,0,0x0,8
tick,0x1a372c99c,17988041,0,0x0,8
tick,0x1a372c99c,17991166,0,0x0,8
tick,0x1a372c99c,17993000,0,0x0,8
tick,0x1a372953c,17993041,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,17994250,0,0x0,8
tick,0x1a372c99c,17999166,0,0x0,8
tick,0x1013e2fa0,18000250,0,0x0,0,0x107533abc,0x107522bf8,0x107533410
tick,0x1a372c99c,18006125,0,0x0,8
tick,0x1a372c99c,18006375,0,0x0,8
tick,0x100e0bd90,18007625,0,0x0,6
tick,0x1a372c99c,18013375,0,0x0,8
tick,0x1a372c99c,18013666,0,0x0,8
tick,0x1a372c99c,18018083,0,0x0,8
tick,0x1a372c99c,18018583,0,0x0,8
tick,0x1a372c99c,18021708,0,0x0,8
tick,0x1a372c99c,18022291,0,0x0,8
tick,0x1030db910,18023583,0,0x0,0,0x0,0x10752a18c,0x107549ed4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18027375,0,0x0,8
tick,0x1a372c99c,18032583,0,0x0,8
tick,0x1a372c99c,18033208,0,0x0,8
tick,0x1a372c99c,18036833,0,0x0,8
tick,0x107533858,18036875,0,0x0,0,0x107522bf8,0x107533410
tick,0x1a372c99c,18038750,0,0x0,8
tick,0x1a372c99c,18039375,0,0x0,8
tick,0x1a372c99c,18040625,0,0x0,8
tick,0x1a372c99c,18045083,0,0x0,8
tick,0x1a3726538,18045666,0,0x0,8
tick,0x1a372c99c,18050500,0,0x0,8
tick,0x1a372c99c,18050666,0,0x0,8
tick,0x101462f40,18051958,0,0x0,0,0x10753a5e0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18059416,0,0x0,8
tick,0x1a372c99c,18059541,0,0x0,8
tick,0x1a372c99c,18060708,0,0x0,8
tick,0x1a372c99c,18063875,0,0x0,8
tick,0x1a372c99c,18064541,0,0x0,8
tick,0x1a372c99c,18065958,0,0x0,8
tick,0x1a372c99c,18066916,0,0x0,8
tick,0x1a372c99c,18073125,0,0x0,8
tick,0x1a372c99c,18073250,0,0x0,8
tick,0x1a372c99c,18078250,0,0x0,8
tick,0x1013ac770,18078291,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18080708,0,0x0,8
tick,0x1a372c99c,18082375,0,0x0,8
tick,0x1a372953c,18083166,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18084458,0,0x0,8
tick,0x1a372c99c,18090958,0,0x0,8
tick,0x1a372c99c,18091583,0,0x0,8
tick,0x1a372c99c,18096458,0,0x0,8
tick,0x1a372c99c,18096583,0,0x0,8
tick,0x1a372c99c,18097791,0,0x0,8
tick,0x1a372c99c,18106416,0,0x0,8
tick,0x1030ce680,18106833,0,0x0,8
tick,0x1a372c99c,18111041,0,0x0,8
tick,0x1a372c99c,18111750,0,0x0,8
tick,0x1a372c99c,18113000,0,0x0,8
tick,0x1a372c99c,18114000,0,0x0,8
scavenge,begin,1,548359,1643426363597
scavenge,end,1,548534,1643426363597
tick,0x1a372c99c,18119041,0,0x0,8
tick,0x1a372c99c,18125375,0,0x0,8
tick,0x1a3726538,18125416,0,0x0,8
tick,0x1a372c99c,18127875,0,0x0,8
tick,0x1a372c99c,18127916,0,0x0,8
tick,0x1a372c99c,18129625,0,0x0,8
tick,0x1a372c99c,18130291,0,0x0,8
tick,0x1a372c99c,18131333,0,0x0,8
tick,0x1a372c99c,18136166,0,0x0,8
tick,0x1a372c99c,18136375,0,0x0,8
tick,0x1a372c99c,18142708,0,0x0,8
tick,0x1a372c99c,18143666,0,0x0,8
tick,0x1a372c99c,18150000,0,0x0,8
tick,0x1a372c99c,18151208,0,0x0,8
tick,0x1a372c99c,18156083,0,0x0,8
tick,0x1a372c99c,18157125,0,0x0,8
tick,0x1013e3e10,18158333,0,0x0,0,0x10750ac10,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18159583,0,0x0,8
tick,0x1a372c99c,18163666,0,0x0,8
tick,0x1a372c99c,18172750,0,0x0,8
tick,0x1a372c99c,18173625,0,0x0,8
tick,0x1a372c99c,18176375,0,0x0,8
tick,0x1a372c99c,18176875,0,0x0,8
tick,0x1a372c99c,18178166,0,0x0,8
tick,0x1a372c99c,18179125,0,0x0,8
tick,0x1a372c99c,18180541,0,0x0,8
tick,0x1a372c99c,18186333,0,0x0,8
tick,0x1a372c99c,18186708,0,0x0,8
tick,0x1a372c99c,18193458,0,0x0,8
tick,0x1a372c99c,18194125,0,0x0,8
tick,0x1a372c99c,18201375,0,0x0,8
tick,0x1a372c99c,18201666,0,0x0,8
tick,0x1a372c99c,18203125,0,0x0,8
tick,0x1a372c99c,18208333,0,0x0,8
tick,0x1a372c99c,18208916,0,0x0,8
tick,0x1a372c99c,18210375,0,0x0,8
tick,0x1030d6744,18211208,0,0x0,8
tick,0x1a372c99c,18215958,0,0x0,8
tick,0x1a372c99c,18216250,0,0x0,8
tick,0x1a372c99c,18222833,0,0x0,8
tick,0x1a372c99c,18225333,0,0x0,8
tick,0x1a372c99c,18227125,0,0x0,8
tick,0x1a372c99c,18227375,0,0x0,8
tick,0x1a372c99c,18228375,0,0x0,8
tick,0x1a372c99c,18233375,0,0x0,8
tick,0x1a372c99c,18234291,0,0x0,8
tick,0x1a372c99c,18240250,0,0x0,8
tick,0x100df5d68,18240291,0,0x0,0,0x0,0x10752b410,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18241541,0,0x0,8
tick,0x1a372c99c,18247708,0,0x0,8
tick,0x1a372c99c,18247916,0,0x0,8
tick,0x1a372c99c,18254000,0,0x0,8
tick,0x1a372c99c,18254291,0,0x0,8
tick,0x1a372c99c,18256291,0,0x0,8
tick,0x1a372c99c,18256750,0,0x0,8
tick,0x1a372c99c,18257708,0,0x0,8
tick,0x1a372c99c,18262208,0,0x0,8
tick,0x1a372c99c,18262583,0,0x0,8
tick,0x1a372c99c,18267625,0,0x0,8
tick,0x1a372c99c,18271708,0,0x0,8
tick,0x1a372c99c,18273541,0,0x0,8
tick,0x1a372c99c,18273750,0,0x0,8
tick,0x1a372c99c,18274875,0,0x0,8
tick,0x1a372c99c,18279708,0,0x0,8
tick,0x1a372c99c,18280875,0,0x0,8
tick,0x1a372c99c,18286458,0,0x0,8
tick,0x1a372c99c,18286958,0,0x0,8
tick,0x1a372c99c,18288083,0,0x0,8
tick,0x1a372c99c,18293166,0,0x0,8
tick,0x1a372c99c,18294416,0,0x0,8
tick,0x1a372c99c,18298333,0,0x0,8
tick,0x1a372c99c,18299458,0,0x0,8
tick,0x1a372c99c,18302250,0,0x0,8
tick,0x1a372c99c,18303208,0,0x0,8
scavenge,begin,1,558917,1643426363786
scavenge,end,1,559084,1643426363786
tick,0x1a372c99c,18307958,0,0x0,8
tick,0x1a372c99c,18308250,0,0x0,8
tick,0x1a372c99c,18313125,0,0x0,8
tick,0x1a372c99c,18313250,0,0x0,8
tick,0x1a372c99c,18317083,0,0x0,8
tick,0x1a372c99c,18319916,0,0x0,8
tick,0x1a372c99c,18320750,0,0x0,8
tick,0x1a372c99c,18322166,0,0x0,8
tick,0x1a372c99c,18323291,0,0x0,8
tick,0x1a372c99c,18324375,0,0x0,8
tick,0x1a372c99c,18325375,0,0x0,8
tick,0x1a372c99c,18337708,0,0x0,8
tick,0x1a372c99c,18338000,0,0x0,8
tick,0x1a372c99c,18339291,0,0x0,8
tick,0x1a372c99c,18340333,0,0x0,8
tick,0x1a372c99c,18349291,0,0x0,8
tick,0x1a372c99c,18350041,0,0x0,8
tick,0x1a372c99c,18357708,0,0x0,8
tick,0x1a372c99c,18358541,0,0x0,8
tick,0x1a372c99c,18362291,0,0x0,8
tick,0x1a372c99c,18365541,0,0x0,8
tick,0x1a372c99c,18366125,0,0x0,8
tick,0x1a372c99c,18371666,0,0x0,8
tick,0x1a372c99c,18373083,0,0x0,8
tick,0x1a372c99c,18379041,0,0x0,8
tick,0x1a372c99c,18380041,0,0x0,8
tick,0x1a372c99c,18384833,0,0x0,8
tick,0x1a372c99c,18386583,0,0x0,8
tick,0x1a372c99c,18388125,0,0x0,8
tick,0x1a372c99c,18394208,0,0x0,8
tick,0x1a372c99c,18394250,0,0x0,8
tick,0x1a372c99c,18402041,0,0x0,8
tick,0x1a372c99c,18402500,0,0x0,8
tick,0x1a3726538,18404125,0,0x0,8
tick,0x1a372c99c,18412458,0,0x0,8
tick,0x1a372c99c,18412833,0,0x0,8
tick,0x1a372c99c,18418333,0,0x0,8
tick,0x1030ce5b4,18418458,0,0x0,8
tick,0x1a372c99c,18422666,0,0x0,8
tick,0x1a372c99c,18422833,0,0x0,8
tick,0x1a372c99c,18430000,0,0x0,8
tick,0x1a372c99c,18430416,0,0x0,8
tick,0x1a372c99c,18435500,0,0x0,8
tick,0x1a372c99c,18438291,0,0x0,8
tick,0x1a372c99c,18440208,0,0x0,8
tick,0x1a372c99c,18441250,0,0x0,8
tick,0x1a372c99c,18442333,0,0x0,8
tick,0x1a372c99c,18447708,0,0x0,8
tick,0x1a372c99c,18448625,0,0x0,8
tick,0x1a372c99c,18453333,0,0x0,8
tick,0x1a3726538,18453708,0,0x0,8
tick,0x1a372c99c,18454875,0,0x0,8
tick,0x1a372c99c,18462041,0,0x0,8
tick,0x1a372c99c,18462333,0,0x0,8
tick,0x1a372c99c,18466500,0,0x0,8
tick,0x10101de6c,18467375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18469166,0,0x0,8
tick,0x100c219d0,18469916,0,0x0,5
tick,0x1a372c99c,18475958,0,0x0,8
tick,0x1a372c99c,18476000,0,0x0,8
tick,0x1a372c99c,18481000,0,0x0,8
tick,0x1a372c99c,18483458,0,0x0,8
tick,0x1a372c99c,18485583,0,0x0,8
tick,0x1013dced4,18485666,0,0x0,0,0x107522cf8,0x107533410
tick,0x1a372c99c,18486916,0,0x0,8
tick,0x1a372c99c,18493250,0,0x0,8
tick,0x1a372c99c,18494083,0,0x0,8
tick,0x1a372c99c,18498458,0,0x0,8
tick,0x1a372c99c,18498708,0,0x0,8
tick,0x1a372c99c,18499875,0,0x0,8
tick,0x1a372c99c,18507166,0,0x0,8
tick,0x1a372c99c,18507666,0,0x0,8
tick,0x1a372c99c,18511750,0,0x0,8
tick,0x1a372c99c,18512541,0,0x0,8
tick,0x1a372c99c,18513875,0,0x0,8
tick,0x1a372953c,18514791,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
scavenge,begin,1,570418,1643426363998
scavenge,end,1,570613,1643426363998
tick,0x1a372c99c,18520125,0,0x0,8
tick,0x1a372c99c,18526333,0,0x0,8
tick,0x1a372c99c,18528791,0,0x0,8
tick,0x1a372c99c,18530625,0,0x0,8
tick,0x1a372c99c,18530875,0,0x0,8
tick,0x1a372c99c,18532083,0,0x0,8
tick,0x1a372c99c,18533291,0,0x0,8
tick,0x1a372c99c,18537500,0,0x0,8
tick,0x1a372c99c,18538375,0,0x0,8
tick,0x1a372c99c,18544250,0,0x0,8
tick,0x1a372c99c,18544375,0,0x0,8
tick,0x1a372c99c,18545500,0,0x0,8
tick,0x1a372c99c,18551958,0,0x0,8
tick,0x1a372c99c,18553125,0,0x0,8
tick,0x1a372c99c,18557791,0,0x0,8
tick,0x1a372c99c,18558041,0,0x0,8
tick,0x1a372c99c,18559916,0,0x0,8
tick,0x1a372c99c,18560375,0,0x0,8
tick,0x1a372c99c,18565708,0,0x0,8
tick,0x1a372c99c,18566583,0,0x0,8
tick,0x1a372c99c,18572583,0,0x0,8
tick,0x10752e714,18572708,0,0x0,0,0x107549be4,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18575000,0,0x0,8
tick,0x100c1f534,18575250,0,0x0,6
tick,0x1a372c99c,18576666,0,0x0,8
tick,0x1a372c99c,18577625,0,0x0,8
tick,0x1a372c99c,18579000,0,0x0,8
tick,0x1a372c99c,18582875,0,0x0,8
tick,0x1a372c99c,18583958,0,0x0,8
tick,0x1a372c99c,18589708,0,0x0,8
tick,0x1a372c99c,18590125,0,0x0,8
tick,0x1a372c99c,18591166,0,0x0,8
tick,0x1a372c99c,18597041,0,0x0,8
tick,0x1a372c99c,18597416,0,0x0,8
tick,0x1a372c99c,18603125,0,0x0,8
tick,0x1a372c99c,18603583,0,0x0,8
tick,0x1a372c99c,18605375,0,0x0,8
tick,0x1a372c99c,18606000,0,0x0,8
tick,0x1a372c99c,18611083,0,0x0,8
tick,0x1a372c99c,18617291,0,0x0,8
tick,0x1a372c99c,18620333,0,0x0,8
tick,0x1a372c99c,18620750,0,0x0,8
tick,0x1a372c99c,18622291,0,0x0,8
tick,0x1a372c99c,18623083,0,0x0,8
tick,0x1a372c99c,18624166,0,0x0,8
tick,0x1a372c99c,18628416,0,0x0,8
tick,0x1a3733940,18629125,0,0x0,8
tick,0x1a372c99c,18635000,0,0x0,8
tick,0x1a372c99c,18635541,0,0x0,8
tick,0x1a372c99c,18642458,0,0x0,8
tick,0x1a372c99c,18642708,0,0x0,8
tick,0x1a372c99c,18647875,0,0x0,8
tick,0x1a3726538,18648916,0,0x0,8
tick,0x1a372c99c,18650250,0,0x0,8
tick,0x1a372c99c,18651416,0,0x0,8
tick,0x1a372c99c,18656083,0,0x0,8
tick,0x1a372c99c,18656541,0,0x0,8
tick,0x1a372c99c,18662166,0,0x0,8
tick,0x1a372c99c,18662666,0,0x0,8
tick,0x1a372c99c,18664583,0,0x0,8
tick,0x1a372c99c,18666333,0,0x0,8
tick,0x1a3576548,18666458,0,0x0,5
tick,0x1a372c99c,18667916,0,0x0,8
tick,0x1a372c99c,18673333,0,0x0,8
tick,0x1a372c99c,18674041,0,0x0,8
tick,0x1a372c99c,18679708,0,0x0,8
tick,0x1a372c99c,18680291,0,0x0,8
tick,0x1a372c99c,18687500,0,0x0,8
tick,0x1a372c99c,18688416,0,0x0,8
tick,0x1a372c99c,18693000,0,0x0,8
tick,0x1a372c99c,18693416,0,0x0,8
tick,0x1a372c99c,18695250,0,0x0,8
tick,0x1a372c99c,18695750,0,0x0,8
scavenge,begin,1,579606,1643426364179
scavenge,end,1,579772,1643426364180
tick,0x1a372c99c,18700916,0,0x0,8
tick,0x1a372c99c,18708708,0,0x0,8
tick,0x1a372c99c,18713916,0,0x0,8
tick,0x10750abfc,18713958,0,0x0,0,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18716208,0,0x0,8
tick,0x1a372c99c,18716500,0,0x0,8
tick,0x1a372c99c,18718041,0,0x0,8
tick,0x1a372c99c,18724375,0,0x0,8
tick,0x1a372c99c,18725583,0,0x0,8
tick,0x1a372c99c,18730916,0,0x0,8
tick,0x1a372c99c,18731750,0,0x0,8
tick,0x1a372c99c,18739000,0,0x0,8
tick,0x1a3777de0,18739000,0,0x0,6
tick,0x1a372953c,18740250,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18744583,0,0x0,8
tick,0x1a372c99c,18745500,0,0x0,8
tick,0x1030dd990,18746625,0,0x0,8
tick,0x1a372c99c,18747708,0,0x0,8
tick,0x1a372c99c,18752583,0,0x0,8
tick,0x1a372c99c,18752833,0,0x0,8
tick,0x1a372c99c,18758916,0,0x0,8
tick,0x1a372c99c,18759208,0,0x0,8
tick,0x1a372c99c,18761375,0,0x0,8
tick,0x1a372c99c,18761625,0,0x0,8
tick,0x1a372c99c,18763083,0,0x0,8
tick,0x1a372c99c,18764041,0,0x0,8
tick,0x1a372c99c,18769416,0,0x0,8
tick,0x1a372c99c,18770250,0,0x0,8
tick,0x1a372c99c,18776125,0,0x0,8
tick,0x1a372c99c,18776583,0,0x0,8
tick,0x1a372c99c,18783458,0,0x0,8
tick,0x1a372c99c,18783833,0,0x0,8
tick,0x1a372c99c,18789333,0,0x0,8
tick,0x1a372c99c,18790416,0,0x0,8
tick,0x1a372c99c,18791791,0,0x0,8
tick,0x1a372c99c,18793375,0,0x0,8
tick,0x1a372c99c,18797083,0,0x0,8
tick,0x1a372c99c,18797833,0,0x0,8
tick,0x1a372c99c,18804041,0,0x0,8
tick,0x1a372c99c,18806416,0,0x0,8
tick,0x1a372c99c,18808208,0,0x0,8
tick,0x1a372c99c,18808583,0,0x0,8
tick,0x1a372c99c,18809791,0,0x0,8
tick,0x1a372c99c,18814375,0,0x0,8
tick,0x1a372c99c,18814625,0,0x0,8
tick,0x1a372c99c,18821291,0,0x0,8
tick,0x1a3726538,18821875,0,0x0,8
tick,0x1a372c99c,18828541,0,0x0,8
tick,0x1a372c99c,18829375,0,0x0,8
tick,0x1a372c99c,18834291,0,0x0,8
tick,0x1a372c99c,18835375,0,0x0,8
tick,0x1a372c99c,18836625,0,0x0,8
tick,0x1a372c99c,18837833,0,0x0,8
tick,0x1a372c99c,18842250,0,0x0,8
tick,0x1a372c99c,18842916,0,0x0,8
tick,0x1a372c99c,18848458,0,0x0,8
tick,0x1a372c99c,18850916,0,0x0,8
tick,0x1a372c99c,18853333,0,0x0,8
tick,0x1a372c99c,18854208,0,0x0,8
tick,0x1a372c99c,18855208,0,0x0,8
tick,0x1a372c99c,18860250,0,0x0,8
tick,0x1a372c99c,18860291,0,0x0,8
tick,0x1a372c99c,18867666,0,0x0,8
tick,0x1a372c99c,18869791,0,0x0,8
tick,0x1a372c99c,18877083,0,0x0,8
tick,0x1a372c99c,18877958,0,0x0,8
tick,0x1a372c99c,18884000,0,0x0,8
tick,0x1a372c99c,18884625,0,0x0,8
tick,0x1a372c99c,18886791,0,0x0,8
tick,0x1a3726538,18887333,0,0x0,8
scavenge,begin,1,590999,1643426364377
tick,0x1a372c99c,18894208,0,0x0,8
tick,0x1011d7400,18894250,0,0x0,1
scavenge,end,1,591287,1643426364377
tick,0x1a372c99c,18900791,0,0x0,8
tick,0x1a372c99c,18902916,0,0x0,8
tick,0x1a372c99c,18905875,0,0x0,8
tick,0x10752b768,18906000,0,0x0,0,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18907375,0,0x0,8
tick,0x1a372c99c,18909291,0,0x0,8
tick,0x1a3726538,18909791,0,0x0,8
tick,0x1a372c99c,18911083,0,0x0,8
tick,0x1a372c99c,18916750,0,0x0,8
tick,0x1a372c99c,18917291,0,0x0,8
tick,0x1a372c99c,18924166,0,0x0,8
tick,0x1a372c99c,18924666,0,0x0,8
tick,0x1a372c99c,18925833,0,0x0,8
tick,0x1a372c99c,18929750,0,0x0,8
tick,0x1a372c99c,18930500,0,0x0,8
tick,0x1a372c99c,18934750,0,0x0,8
tick,0x1a372c99c,18935291,0,0x0,8
tick,0x1a372c99c,18939125,0,0x0,8
tick,0x1a372c99c,18939708,0,0x0,8
tick,0x1a372c99c,18944666,0,0x0,8
tick,0x1a372c99c,18950083,0,0x0,8
tick,0x1a372c99c,18952208,0,0x0,8
tick,0x1a372c99c,18952291,0,0x0,8
tick,0x1a372c99c,18955583,0,0x0,8
tick,0x1a372c99c,18955958,0,0x0,8
tick,0x1a372c99c,18957375,0,0x0,8
tick,0x1a372c99c,18958416,0,0x0,8
tick,0x1a372c99c,18959833,0,0x0,8
tick,0x1a372c99c,18963500,0,0x0,8
tick,0x1a372c99c,18964625,0,0x0,8
tick,0x1a372c99c,18968833,0,0x0,8
tick,0x1a372c99c,18969500,0,0x0,8
tick,0x1a372c99c,18976291,0,0x0,8
tick,0x1a372c99c,18977083,0,0x0,8
tick,0x1a372c99c,18981000,0,0x0,8
tick,0x1a372c99c,18982041,0,0x0,8
tick,0x1a372c99c,18983958,0,0x0,8
tick,0x1011e4ce4,18984375,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,18985666,0,0x0,8
tick,0x1a372c99c,18990958,0,0x0,8
tick,0x1a372c99c,19005333,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x100e1f018,19005375,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19005375,0,0x0,8
tick,0x1a372c99c,19006000,0,0x0,8
tick,0x1a372c99c,19009583,0,0x0,8
tick,0x1a372c99c,19010416,0,0x0,8
tick,0x1a372c99c,19014458,0,0x0,8
tick,0x1a372c99c,19015250,0,0x0,8
tick,0x1a372c99c,19016500,0,0x0,8
tick,0x1a372c99c,19021875,0,0x0,8
tick,0x1a372c99c,19022708,0,0x0,8
tick,0x1a372c99c,19026791,0,0x0,8
tick,0x1a372c99c,19027250,0,0x0,8
tick,0x1a372c99c,19029708,0,0x0,8
tick,0x1a372c99c,19029708,0,0x0,8
tick,0x1a372c99c,19030916,0,0x0,8
tick,0x1a372c99c,19036958,0,0x0,8
tick,0x1a372c99c,19037250,0,0x0,8
tick,0x1a372c99c,19047708,0,0x0,8
tick,0x1a372c99c,19048250,0,0x0,8
tick,0x1a372c99c,19053833,0,0x0,8
tick,0x1a372c99c,19059333,0,0x0,8
tick,0x1a372c99c,19059625,0,0x0,8
tick,0x1a372c99c,19065416,0,0x0,8
tick,0x1030ddbc8,19066708,0,0x0,8
tick,0x1a372c99c,19071875,0,0x0,8
tick,0x1a372c99c,19072750,0,0x0,8
tick,0x1a372c99c,19076708,0,0x0,8
tick,0x1a372c99c,19077875,0,0x0,8
tick,0x1a372c99c,19083958,0,0x0,8
tick,0x1a37298d4,19084125,0,0x0,4,0x0,0x1075334b8
code-creation,LazyCompile,13,19084291,0x10754a880,368,finishMaybe node:internal/streams/writable:727:21,0x38fe558624d8,*
code-source-info,0x10754a880,55,21275,21567,C0O21275C52O19387I0C84O21305C144O19413I0C148O21566C196O21275C244O21305C248O19387I0C260O21305C268O19387I0,F0O21305,S0x38fe558623e8
tick,0x1a372c99c,19089166,0,0x0,8
tick,0x1a372c99c,19089208,0,0x0,8
tick,0x1a372c99c,19090375,0,0x0,8
tick,0x1a372c99c,19092041,0,0x0,8
tick,0x1a372c99c,19092833,0,0x0,8
tick,0x1a372c99c,19099083,0,0x0,8
scavenge,begin,1,602337,1643426364582
scavenge,end,1,602519,1643426364582
tick,0x1a372c99c,19104833,0,0x0,8
tick,0x1a372c99c,19105000,0,0x0,8
tick,0x1a372c99c,19108333,0,0x0,8
tick,0x1a357c9c8,19108708,0,0x0,5
tick,0x1a372c99c,19109875,0,0x0,8
tick,0x101415d20,19110916,0,0x0,0,0x10752d6ac,0x107533ae4,0x107522bf8,0x107533410
tick,0x1011e4af4,19112166,0,0x0,5,0x0,0x107539ee4,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19117041,0,0x0,8
tick,0x1a372c99c,19118000,0,0x0,8
tick,0x1a372c99c,19122375,0,0x0,8
tick,0x1a372c99c,19122625,0,0x0,8
tick,0x1a372c99c,19123875,0,0x0,8
tick,0x1a372c99c,19129250,0,0x0,8
tick,0x1013aad7c,19130333,0,0x0,0,0x10752b410,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19134208,0,0x0,8
tick,0x1a372c99c,19135083,0,0x0,8
tick,0x1a372c99c,19137458,0,0x0,8
tick,0x1a372c99c,19138458,0,0x0,8
tick,0x1a372c99c,19144208,0,0x0,8
tick,0x1a372c99c,19144375,0,0x0,8
tick,0x1a372c99c,19149791,0,0x0,8
tick,0x1a372c99c,19153833,0,0x0,8
tick,0x1013a5630,19154291,0,0x0,0,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19155708,0,0x0,8
tick,0x1a372c99c,19156958,0,0x0,8
tick,0x1a372c99c,19163291,0,0x0,8
tick,0x1a372c99c,19164583,0,0x0,8
tick,0x1a372c99c,19169166,0,0x0,8
tick,0x10149046c,19169750,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19175875,0,0x0,8
tick,0x100df9c08,19176125,0,0x0,8
tick,0x1a372c99c,19184083,0,0x0,8
tick,0x1a372c99c,19184750,0,0x0,8
tick,0x1a372c99c,19187541,0,0x0,8
tick,0x1a372c99c,19188541,0,0x0,8
tick,0x1a372c99c,19193083,0,0x0,8
tick,0x1a372c99c,19193458,0,0x0,8
tick,0x1a372c99c,19199916,0,0x0,8
tick,0x1a372c99c,19203791,0,0x0,8
tick,0x1a372c99c,19207250,0,0x0,8
tick,0x1a372c99c,19207250,0,0x0,8
tick,0x1a372c99c,19208500,0,0x0,8
tick,0x1a372c99c,19214000,0,0x0,8
tick,0x1a372c99c,19214750,0,0x0,8
tick,0x1a372c99c,19217083,0,0x0,8
tick,0x10101dfd0,19217375,0,0x0,0,0x0,0x10752f1cc,0x10752d478,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,19218666,0,0x0,8
tick,0x1a372c99c,19224291,0,0x0,8
tick,0x1a372c99c,19225291,0,0x0,8
tick,0x1a372c99c,19231125,0,0x0,8
tick,0x1a372c99c,19231583,0,0x0,8
tick,0x1a372c99c,19234083,0,0x0,8
tick,0x1a372c99c,19234250,0,0x0,8
tick,0x1a372c99c,19235541,0,0x0,8
tick,0x1a372c99c,19240416,0,0x0,8
tick,0x1a372c99c,19241666,0,0x0,8
tick,0x1a372c99c,19246500,0,0x0,8
tick,0x1a372c99c,19246666,0,0x0,8
tick,0x1a372c99c,19250375,0,0x0,8
tick,0x1a372c99c,19254916,0,0x0,8
tick,0x1a3726538,19255000,0,0x0,8
tick,0x1a372c99c,19256166,0,0x0,8
tick,0x1a372c99c,19261375,0,0x0,8
tick,0x1a372c99c,19262291,0,0x0,8
tick,0x1a372c99c,19264083,0,0x0,8
tick,0x1a372c99c,19264416,0,0x0,8
tick,0x1a372c99c,19265583,0,0x0,8
tick,0x1a372c99c,19271375,0,0x0,8
tick,0x1a372c99c,19271625,0,0x0,8
tick,0x1a372c99c,19278250,0,0x0,8
tick,0x1a372c99c,19279041,0,0x0,8
tick,0x1a372c99c,19281083,0,0x0,8
tick,0x1a372c99c,19281583,0,0x0,8
tick,0x1a372c99c,19282916,0,0x0,8
tick,0x1a372c99c,19287375,0,0x0,8
scavenge,begin,1,612777,1643426364770
scavenge,end,1,612945,1643426364771
tick,0x1a37298d4,19287875,0,0x0,1
tick,0x1a372c99c,19293375,0,0x0,8
tick,0x1a372c99c,19294833,0,0x0,8
tick,0x1a372c99c,19297166,0,0x0,8
tick,0x1a372c99c,19301333,0,0x0,8
tick,0x1a372c99c,19301666,0,0x0,8
tick,0x101490d84,19302916,0,0x0,0,0x10750a678,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19308125,0,0x0,8
tick,0x1a372c99c,19308916,0,0x0,8
tick,0x1a372c99c,19310625,0,0x0,8
tick,0x1a372c99c,19311250,0,0x0,8
tick,0x1a372c99c,19317291,0,0x0,8
tick,0x1014169a0,19317541,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19324000,0,0x0,8
tick,0x1a372c99c,19325041,0,0x0,8
tick,0x1a372c99c,19326666,0,0x0,8
tick,0x1a372c99c,19327291,0,0x0,8
tick,0x1a372c99c,19332333,0,0x0,8
tick,0x1a372c99c,19340875,0,0x0,8
tick,0x1a372953c,19340958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19345916,0,0x0,8
tick,0x1a372c99c,19346708,0,0x0,8
tick,0x1a372c99c,19351208,0,0x0,8
tick,0x1a372c99c,19352375,0,0x0,8
tick,0x1a372c99c,19353875,0,0x0,8
tick,0x1a372c99c,19359250,0,0x0,8
tick,0x1a3575bac,19359291,0,0x0,8
tick,0x1a372c99c,19362333,0,0x0,8
tick,0x1a372c99c,19363208,0,0x0,8
tick,0x1a372c99c,19369583,0,0x0,8
tick,0x1a3726538,19369750,0,0x0,8
tick,0x1a372c99c,19377375,0,0x0,8
tick,0x1a372c99c,19378250,0,0x0,8
tick,0x1a372c99c,19380833,0,0x0,8
tick,0x1014169a0,19381166,0,0x0,0,0x1074df694,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19382125,0,0x0,8
tick,0x1a372c99c,19389041,0,0x0,8
tick,0x1a372c99c,19389791,0,0x0,8
tick,0x1a372c99c,19397625,0,0x0,8
tick,0x1a372c99c,19399208,0,0x0,8
tick,0x100c28a30,19399625,0,0x0,8
tick,0x1a372c99c,19403916,0,0x0,8
tick,0x1a372c99c,19404500,0,0x0,8
tick,0x1a372c99c,19405583,0,0x0,8
tick,0x1a372c99c,19410583,0,0x0,8
tick,0x1a372c99c,19411541,0,0x0,8
tick,0x1a372c99c,19413083,0,0x0,8
tick,0x1a372c99c,19414083,0,0x0,8
tick,0x1a372c99c,19420041,0,0x0,8
tick,0x1a372c99c,19420208,0,0x0,8
tick,0x1a372c99c,19421250,0,0x0,8
tick,0x1a372c99c,19426541,0,0x0,8
tick,0x1a372c99c,19427458,0,0x0,8
tick,0x1a372c99c,19429291,0,0x0,8
tick,0x1a372c99c,19430000,0,0x0,8
tick,0x1a372c99c,19435208,0,0x0,8
tick,0x1a372c99c,19443500,0,0x0,8
tick,0x1a372c99c,19443916,0,0x0,8
tick,0x10752b36c,19445083,0,0x0,0,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19449000,0,0x0,8
tick,0x10753a234,19449791,0,0x0,0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19450916,0,0x0,8
tick,0x1a372c99c,19456375,0,0x0,8
tick,0x1a372c99c,19457041,0,0x0,8
tick,0x1a372c99c,19458875,0,0x0,8
tick,0x1a372953c,19459416,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19465458,0,0x0,8
tick,0x1a372c99c,19465583,0,0x0,8
tick,0x1a372c99c,19472416,0,0x0,8
tick,0x1a372c99c,19472916,0,0x0,8
tick,0x1a372c99c,19475250,0,0x0,8
tick,0x10147e39c,19475375,0,0x0,0,0x1074df5d0,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19476708,0,0x0,8
tick,0x1a372c99c,19480791,0,0x0,8
scavenge,begin,1,624199,1643426364964
scavenge,end,1,624368,1643426364964
tick,0x1013a2068,19481541,0,0x0,0,0x10753403c,0x107522bf8,0x107533410
tick,0x1a372c99c,19489041,0,0x0,8
tick,0x1a372c99c,19490541,0,0x0,8
tick,0x1a372c99c,19494375,0,0x0,8
tick,0x1a372c99c,19495000,0,0x0,8
tick,0x1a372c99c,19496083,0,0x0,8
tick,0x1a372c99c,19501166,0,0x0,8
tick,0x1a372c99c,19502375,0,0x0,8
tick,0x1a372c99c,19504041,0,0x0,8
tick,0x1a372c99c,19504666,0,0x0,8
tick,0x1a3726538,19505875,0,0x0,8
tick,0x1a372c99c,19510541,0,0x0,8
tick,0x10752d34c,19510791,0,0x0,0,0x107533ae4,0x107522bf8,0x107533410
tick,0x1a372c99c,19516916,0,0x0,8
tick,0x1a372953c,19517208,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19520041,0,0x0,8
tick,0x1a372c99c,19520916,0,0x0,8
tick,0x1a372c99c,19526875,0,0x0,8
tick,0x1a372c99c,19527625,0,0x0,8
tick,0x1a372c99c,19537666,0,0x0,8
tick,0x107529378,19537708,0,0x0,0
tick,0x1a372c99c,19539958,0,0x0,8
tick,0x1a3726538,19540291,0,0x0,8
tick,0x1a372c99c,19545041,0,0x0,8
tick,0x1a3726538,19545416,0,0x0,8
tick,0x1013e4048,19546666,0,0x0,0,0x10750ac10,0x10753acdc,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19552541,0,0x0,8
tick,0x1a372c99c,19552666,0,0x0,8
tick,0x1a372c99c,19553708,0,0x0,8
tick,0x1a372c99c,19555250,0,0x0,8
tick,0x1a372c99c,19556125,0,0x0,8
tick,0x1a372c99c,19561958,0,0x0,8
tick,0x1a372c99c,19562333,0,0x0,8
tick,0x1a372c99c,19568583,0,0x0,8
tick,0x1013e3ce4,19568625,0,0x0,0,0x107533abc,0x107522bf8,0x107533410
tick,0x1a372c99c,19569958,0,0x0,8
tick,0x1a372c99c,19571458,0,0x0,8
tick,0x1a372c99c,19572458,0,0x0,8
tick,0x1a372c99c,19577041,0,0x0,8
tick,0x1a372c99c,19577166,0,0x0,8
tick,0x1a372c99c,19585416,0,0x0,8
tick,0x1a3733940,19585708,0,0x0,8
tick,0x1a372c99c,19586958,0,0x0,8
tick,0x1a372c99c,19590916,0,0x0,8
tick,0x1a372c99c,19592083,0,0x0,8
tick,0x1a372c99c,19597541,0,0x0,8
tick,0x1a372c99c,19598541,0,0x0,8
tick,0x1a372c99c,19600166,0,0x0,8
tick,0x1a372c99c,19601000,0,0x0,8
tick,0x1a372c99c,19606958,0,0x0,8
tick,0x1a372c99c,19607083,0,0x0,8
tick,0x1a372c99c,19613333,0,0x0,8
tick,0x1a372c99c,19614375,0,0x0,8
tick,0x1a372c99c,19615833,0,0x0,8
tick,0x1a372c99c,19616541,0,0x0,8
tick,0x1a372c99c,19621958,0,0x0,8
tick,0x1a372c99c,19622791,0,0x0,8
tick,0x1a372c99c,19630000,0,0x0,8
tick,0x1a372953c,19630375,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19631625,0,0x0,8
tick,0x1a372c99c,19636125,0,0x0,8
tick,0x1a372c99c,19636708,0,0x0,8
tick,0x1a372c99c,19637958,0,0x0,8
tick,0x1a372c99c,19643083,0,0x0,8
tick,0x1a372c99c,19644166,0,0x0,8
tick,0x1a372c99c,19645583,0,0x0,8
tick,0x1a372c99c,19646375,0,0x0,8
tick,0x1a372c99c,19652291,0,0x0,8
tick,0x1a372c99c,19652583,0,0x0,8
tick,0x1a372c99c,19658791,0,0x0,8
tick,0x1a372c99c,19659958,0,0x0,8
tick,0x1a372c99c,19661583,0,0x0,8
tick,0x100c2388c,19662583,0,0x0,8
tick,0x1a372c99c,19667583,0,0x0,8
tick,0x100c26638,19667666,0,0x0,8
scavenge,begin,1,634166,1643426365151
scavenge,end,1,634382,1643426365151
tick,0x1a372c99c,19676250,0,0x0,8
tick,0x1a372c99c,19676375,0,0x0,8
tick,0x1a372c99c,19677666,0,0x0,8
tick,0x1a372c99c,19681750,0,0x0,8
tick,0x1a372c99c,19682416,0,0x0,8
tick,0x1a372c99c,19683500,0,0x0,8
tick,0x1a372c99c,19689041,0,0x0,8
tick,0x1a372c99c,19689750,0,0x0,8
tick,0x1a372c99c,19691500,0,0x0,8
tick,0x1a372c99c,19691958,0,0x0,8
tick,0x1a372c99c,19698083,0,0x0,8
tick,0x1a372c99c,19699000,0,0x0,8
tick,0x1a372c99c,19705000,0,0x0,8
tick,0x1a372c99c,19705375,0,0x0,8
tick,0x1a372c99c,19707625,0,0x0,8
tick,0x100c26638,19707625,0,0x0,8
tick,0x1a372c99c,19708916,0,0x0,8
tick,0x1a372c99c,19713333,0,0x0,8
tick,0x1a372c99c,19713750,0,0x0,8
tick,0x1a372c99c,19727166,0,0x0,8
tick,0x1a372c99c,19728125,0,0x0,8
tick,0x1a372c99c,19732458,0,0x0,8
tick,0x1a372c99c,19733250,0,0x0,8
tick,0x1a372c99c,19734500,0,0x0,8
tick,0x1a372c99c,19745833,0,0x0,8
tick,0x1a372953c,19745958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19747208,0,0x0,8
tick,0x1a372c99c,19751916,0,0x0,8
tick,0x1a372c99c,19752208,0,0x0,8
tick,0x1a372c99c,19754541,0,0x0,8
tick,0x1a372c99c,19755458,0,0x0,8
tick,0x1a372c99c,19761333,0,0x0,8
tick,0x1a372c99c,19761458,0,0x0,8
tick,0x1a372c99c,19762666,0,0x0,8
tick,0x1a372c99c,19768083,0,0x0,8
tick,0x1a372c99c,19769083,0,0x0,8
tick,0x1a372c99c,19771208,0,0x0,8
tick,0x1a372c99c,19771500,0,0x0,8
tick,0x1a372c99c,19772541,0,0x0,8
tick,0x1a372c99c,19777000,0,0x0,8
tick,0x1a372c99c,19777333,0,0x0,8
tick,0x1a372c99c,19785291,0,0x0,8
tick,0x1a372c99c,19787083,0,0x0,8
tick,0x1a372c99c,19791208,0,0x0,8
tick,0x1a372c99c,19791916,0,0x0,8
tick,0x1a372c99c,19793041,0,0x0,8
tick,0x1a372c99c,19797833,0,0x0,8
tick,0x1a372c99c,19798083,0,0x0,8
tick,0x1a372c99c,19800416,0,0x0,8
tick,0x1a372c99c,19802916,0,0x0,8
tick,0x1a372c99c,19810333,0,0x0,8
tick,0x1013e3b60,19810500,0,0x0,0,0x1075274b4,0x107538c4c,0x107529434
tick,0x1a372c99c,19819625,0,0x0,8
tick,0x107533210,19820291,0,0x0,0
tick,0x1a372c99c,19823166,0,0x0,8
tick,0x1a372c99c,19824000,0,0x0,8
tick,0x1a372c99c,19831375,0,0x0,8
tick,0x1a372953c,19831500,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19841416,0,0x0,8
tick,0x1a372c99c,19843166,0,0x0,8
tick,0x1a372c99c,19843666,0,0x0,8
tick,0x1a372c99c,19849000,0,0x0,8
tick,0x1a372c99c,19849958,0,0x0,8
tick,0x1a372c99c,19851041,0,0x0,8
tick,0x1a372c99c,19858125,0,0x0,8
tick,0x1a372c99c,19859291,0,0x0,8
tick,0x1a372c99c,19860750,0,0x0,8
tick,0x1a372c99c,19861750,0,0x0,8
tick,0x1a372c99c,19867458,0,0x0,8
tick,0x1a372c99c,19868166,0,0x0,8
tick,0x1a372c99c,19874541,0,0x0,8
tick,0x1a372c99c,19875375,0,0x0,8
tick,0x1a372c99c,19877333,0,0x0,8
tick,0x1a372c99c,19877750,0,0x0,8
tick,0x1a372c99c,19878791,0,0x0,8
tick,0x1a372c99c,19883041,0,0x0,8
tick,0x1a372c99c,19883833,0,0x0,8
scavenge,begin,1,645470,1643426365367
scavenge,end,1,645648,1643426365367
tick,0x1a372c99c,19891791,0,0x0,8
tick,0x1a372c99c,19891916,0,0x0,8
tick,0x1a372953c,19893166,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19897208,0,0x0,8
tick,0x1a372c99c,19898083,0,0x0,8
tick,0x1a372c99c,19899125,0,0x0,8
tick,0x1a372c99c,19905333,0,0x0,8
tick,0x1a372c99c,19906333,0,0x0,8
tick,0x1a372c99c,19909291,0,0x0,8
tick,0x1a372c99c,19909875,0,0x0,8
tick,0x1a372c99c,19927791,0,0x0,8
tick,0x1a372c99c,19928000,0,0x0,8
tick,0x1013e3a64,19929125,0,0x0,0,0x107533b78,0x107522bf8,0x107533410
tick,0x1a372c99c,19938750,0,0x0,8
tick,0x1a372c99c,19939708,0,0x0,8
tick,0x1a372c99c,19941500,0,0x0,8
tick,0x100d67dfc,19942208,0,0x0,0,0x0,0x10752f1cc,0x10753a358,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19947458,0,0x0,8
tick,0x1a372c99c,19956041,0,0x0,8
tick,0x1a372c99c,19957500,0,0x0,8
tick,0x1a372c99c,19961416,0,0x0,8
tick,0x1a372c99c,19962125,0,0x0,8
tick,0x1030d7768,19963291,0,0x0,8
tick,0x1a372c99c,19968125,0,0x0,8
tick,0x1a372c99c,19968583,0,0x0,8
tick,0x1a372c99c,19969541,0,0x0,8
tick,0x1a372c99c,19971000,0,0x0,8
tick,0x1a372953c,19971958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,19977708,0,0x0,8
tick,0x1a372c99c,19978125,0,0x0,8
tick,0x1a372c99c,19983958,0,0x0,8
tick,0x1a372c99c,19984708,0,0x0,8
tick,0x1a372c99c,19985541,0,0x0,8
tick,0x1a372c99c,19987458,0,0x0,8
tick,0x1a372c99c,19988041,0,0x0,8
tick,0x1a372c99c,19993125,0,0x0,8
tick,0x1a372c99c,20001250,0,0x0,8
tick,0x1a372c99c,20001500,0,0x0,8
tick,0x1a372c99c,20002916,0,0x0,8
tick,0x1a372c99c,20004166,0,0x0,8
tick,0x1a372c99c,20006875,0,0x0,8
tick,0x1a372c99c,20007458,0,0x0,8
tick,0x1a372c99c,20008458,0,0x0,8
tick,0x1a372c99c,20013458,0,0x0,8
tick,0x1a372c99c,20015958,0,0x0,8
tick,0x1a372953c,20016000,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a357c078,20017333,0,0x0,5
tick,0x1a372c99c,20022833,0,0x0,8
tick,0x1a372c99c,20023500,0,0x0,8
tick,0x1a372c99c,20029166,0,0x0,8
tick,0x1a372c99c,20029666,0,0x0,8
tick,0x1a372c99c,20031916,0,0x0,8
tick,0x1a372c99c,20032083,0,0x0,8
tick,0x1a372c99c,20033166,0,0x0,8
tick,0x1a372c99c,20038166,0,0x0,8
tick,0x1a372c99c,20046250,0,0x0,8
tick,0x1a372c99c,20046708,0,0x0,8
tick,0x10752b310,20047875,0,0x0,0,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,20051666,0,0x0,8
tick,0x1a372c99c,20052500,0,0x0,8
tick,0x1a372c99c,20053791,0,0x0,8
tick,0x1a372c99c,20058375,0,0x0,8
tick,0x1a372c99c,20058750,0,0x0,8
tick,0x1a372c99c,20061000,0,0x0,8
tick,0x1a372c99c,20061250,0,0x0,8
tick,0x1a372c99c,20062500,0,0x0,8
tick,0x1a372c99c,20067500,0,0x0,8
tick,0x1a372c99c,20068541,0,0x0,8
tick,0x1a372c99c,20074500,0,0x0,8
tick,0x1a372c99c,20074875,0,0x0,8
tick,0x1a372c99c,20077208,0,0x0,8
tick,0x1a372c99c,20078041,0,0x0,8
tick,0x1a372c99c,20082791,0,0x0,8
tick,0x1a372c99c,20082916,0,0x0,8
tick,0x1a372c99c,20091166,0,0x0,8
scavenge,begin,1,655016,1643426365574
scavenge,end,1,655192,1643426365574
tick,0x1a372c99c,20091541,0,0x0,8
tick,0x107535980,20092625,0,0x0,0,0x10750a494,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
tick,0x1a372c99c,20096833,0,0x0,8
tick,0x1a372c99c,20097333,0,0x0,8
tick,0x1a372c99c,20098416,0,0x0,8
tick,0x1a372c99c,20104000,0,0x0,8
tick,0x1a372c99c,20104375,0,0x0,8
tick,0x1a372c99c,20106625,0,0x0,8
tick,0x1a3726538,20106916,0,0x0,8
tick,0x1a372c99c,20108041,0,0x0,8
tick,0x1a372c99c,20113166,0,0x0,8
tick,0x1a372c99c,20114041,0,0x0,8
tick,0x1a372c99c,20120166,0,0x0,8
tick,0x1a372c99c,20120416,0,0x0,8
tick,0x1a372c99c,20123000,0,0x0,8
tick,0x1a372c99c,20124041,0,0x0,8
tick,0x1a372c99c,20128583,0,0x0,8
tick,0x1a372c99c,20128833,0,0x0,8
tick,0x1a372c99c,20137625,0,0x0,8
tick,0x1a372c99c,20139166,0,0x0,8
tick,0x1a372c99c,20143083,0,0x0,8
tick,0x1a372c99c,20143708,0,0x0,8
tick,0x1a372c99c,20144791,0,0x0,8
tick,0x1a372c99c,20149875,0,0x0,8
tick,0x1a372c99c,20151041,0,0x0,8
tick,0x1a372c99c,20152958,0,0x0,8
tick,0x1a372c99c,20153458,0,0x0,8
tick,0x1a372c99c,20159500,0,0x0,8
tick,0x1a372c99c,20160708,0,0x0,8
tick,0x1a372c99c,20165708,0,0x0,8
tick,0x1a372c99c,20166708,0,0x0,8
tick,0x1a372c99c,20168416,0,0x0,8
tick,0x1a372c99c,20169166,0,0x0,8
tick,0x1a372c99c,20174375,0,0x0,8
tick,0x1a372c99c,20175500,0,0x0,8
tick,0x1a372c99c,20182291,0,0x0,8
tick,0x1a372c99c,20182625,0,0x0,8
tick,0x1a372c99c,20184041,0,0x0,8
tick,0x1a372c99c,20188458,0,0x0,8
tick,0x1a372c99c,20188833,0,0x0,8
tick,0x1a372c99c,20189875,0,0x0,8
tick,0x1a372c99c,20195125,0,0x0,8
tick,0x1a372c99c,20196041,0,0x0,8
tick,0x1a372c99c,20197541,0,0x0,8
tick,0x1a372c99c,20198333,0,0x0,8
tick,0x1a372c99c,20204625,0,0x0,8
tick,0x1a372c99c,20205750,0,0x0,8
tick,0x1a372c99c,20210875,0,0x0,8
tick,0x1a372c99c,20212000,0,0x0,8
tick,0x1a372c99c,20213541,0,0x0,8
tick,0x1013e3e1c,20214250,0,0x0,0,0x1075229c4,0x107533410
tick,0x1a372c99c,20219583,0,0x0,8
tick,0x1a372c99c,20227541,0,0x0,8
tick,0x1a372c99c,20228916,0,0x0,8
tick,0x1a372c99c,20229416,0,0x0,8
tick,0x1a372c99c,20232958,0,0x0,8
tick,0x1a372c99c,20233208,0,0x0,8
tick,0x1a372c99c,20234458,0,0x0,8
tick,0x1a372c99c,20237708,0,0x0,8
tick,0x1a372c99c,20238916,0,0x0,8
tick,0x1a372c99c,20240000,0,0x0,8
tick,0x1a372c99c,20240833,0,0x0,8
tick,0x1a372c99c,20242375,0,0x0,8
tick,0x1a372c99c,20243250,0,0x0,8
tick,0x1a372c99c,20247333,0,0x0,8
tick,0x1a372c99c,20249083,0,0x0,8
tick,0x1a372c99c,20249208,0,0x0,8
tick,0x1a372c99c,20252625,0,0x0,8
tick,0x1a372c99c,20253833,0,0x0,8
tick,0x1a372c99c,20255041,0,0x0,8
tick,0x1a372c99c,20256333,0,0x0,8
tick,0x1a372c99c,20258833,0,0x0,8
tick,0x101497660,20260208,0,0x0,0,0x47055d31d6f,0x37743592f8ac,0x37743592f360
tick,0x1a372c99c,20261166,0,0x0,8
tick,0x1a372c99c,20267083,0,0x0,8
scavenge,begin,1,664704,1643426365750
scavenge,end,1,664893,1643426365750
tick,0x1a372c99c,20268375,0,0x0,8
tick,0x1a372c99c,20272583,0,0x0,8
tick,0x1a372c99c,20274500,0,0x0,8
tick,0x1a372c99c,20275541,0,0x0,8
tick,0x1a372c99c,20277625,0,0x0,8
tick,0x1a372c99c,20277916,0,0x0,8
tick,0x1a372c99c,20279333,0,0x0,8
tick,0x1a372c99c,20282916,0,0x0,8
tick,0x1a372c99c,20285291,0,0x0,8
code-creation,LazyCompile,10,20285791,0x47055d3a80e,12, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:87:28,0x324f23cafe48,~
code-source-info,0x47055d3a80e,330,2584,2615,C0O2598C4O2603C11O2614,,
tick,0x1a372c99c,20285916,0,0x0,8
tick,0x1a372c99c,20286583,0,0x0,8
tick,0x1a372c99c,20288750,0,0x0,8
tick,0x1a372c99c,20289000,0,0x0,8
tick,0x1a372c99c,20291083,0,0x0,8
tick,0x1a372953c,20291958,0,0x0,0,0x0,0x10752b64c,0x107536fd0,0x107549fd8,0x10750a5ac,0x1074df960,0x107533b9c,0x107522bf8,0x107533410
code-creation,LazyCompile,10,20292958,0x47055d3a916,63,clearTimeout node:timers:184:22,0x38fe5586a600,~
code-source-info,0x47055d3a916,60,5184,5529,C0O5196C4O5215C10O5233C11O5250C15O5262C18O5262C22O5283C23O5290C24O5297C36O5385C43O5400C47O5413C49O5454C50O5479C54O5493C57O5493C62O5528,,
code-creation,LazyCompile,10,20293166,0x47055d3ab36,200,unenroll node:timers:78:18,0x38fe5586a488,~
code-source-info,0x47055d3ab36,60,2349,3516,C0O2369C6O2385C7O2392C8O2396C9O2412C13O2423C15O2432C17O2431C22O2452C29O2480C31O2479C36O2565C41O2569C48O2597C50O2596C55O2633C62O2650C64O2649C68O2633C72O2672C77O2674C82O2674C87O3044C89O3053C91O3052C96O3128C101O3143C106O3128C111O3175C118O3187C122O3200C126O3226C129O3228C134O3228C141O3251C149O3251C153O3288C158O3303C163O3317C168O3303C173O3347C178O3372C184O3391C189O3391C192O3491C194O3509C199O3515,,
code-creation,LazyCompile,10,20293208,0x47055d3ad66,35,ReInterval.clear /Users/carloscalvo/code/Coder/backend/entregas/node_modules/reinterval/index.js:21:25,0x4324a97cc78,~
code-source-info,0x47055d3ad66,331,527,638,C0O536C3O545C9O564C16O583C21O564C25O601C29O616C34O637,,
code-creation,LazyCompile,10,20293208,0x47055d3ae66,9,clearInterval node:timers:244:23,0x38fe5586a6c0,~
code-source-info,0x47055d3ae66,60,6532,6808,C0O6786C3O6786C8O6807,,
code-creation,LazyCompile,10,20293250,0x47055d3af56,11,isEmpty node:internal/linkedlist:44:17,0x38fe5586b160,~
code-source-info,0x47055d3af56,61,998,1042,C0O1021C7O1031C10O1040,,
code-creation,LazyCompile,10,20293250,0x47055d3b04e,10, node:timers:59:65,0x38fe5586a018,~
code-source-info,0x47055d3b04e,60,1810,1835,C0O1822C2O1828C9O1834,,
code-creation,LazyCompile,10,20293291,0x47055d3b12e,34,decRefCount node:internal/timers:304:21,0x38fe55875068,~
code-source-info,0x47055d3b12e,62,9229,9286,C0O9236C9O9242C16O9251C21O9262C28O9262C33O9285,,
code-creation,LazyCompile,10,20293333,0x47055d3b24e,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:109:23,0x37743592fd28,~
code-source-info,0x47055d3b24e,330,3158,3186,C0O3177C5O3177C9O3186,,
tick,0x100ff1548,20293333,0,0x0,3,0x0,0x47055d3a928,0x377435930235,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20293458,0x47055d3b386,68,Client.destroy /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:186:37,0x2779b46fcff0,~
code-source-info,0x47055d3b386,332,5159,5355,C0O5176C6O5193C7O5208C11O5224C16O5238C21O5238C25O5259C31O5265C35O5284C40O5265C44O5307C52O5307C57O5329C62O5329C67O5354,,
code-creation,LazyCompile,10,20293541,0x47055d3b4ee,15,clear /Users/carloscalvo/code/Coder/backend/entregas/node_modules/retimer/retimer.js:52:9,0x2779b46ff918,~
code-source-info,0x47055d3b4ee,333,1210,1248,C0O1219C4O1237C9O1219C14O1247,,
code-creation,LazyCompile,10,20293541,0x47055d3b5ee,29,onDone /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:266:21,0x324f23cb6cc8,~
code-source-info,0x47055d3b5ee,330,8203,8250,C0O8214C9O8221C17O8233C21O8238C28O8249,,
code-creation,LazyCompile,10,20293583,0x47055d3b78e,90,Client._destroyConnection /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/httpClient.js:178:48,0x2779b46fcf60,~
code-source-info,0x47055d3b78e,332,4948,5121,C0O4960C5O4965C13O4965C18O5000C23O5005C31O5005C36O5038C41O5043C54O5043C60O5072C65O5077C70O5077C74O5094C79O5112C84O5112C89O5120,,
code-creation,LazyCompile,10,20293625,0x47055d3b96e,60,Readable.removeAllListeners node:internal/streams/readable:923:49,0x38fe55854480,~
code-source-info,0x47055d3b96e,48,29443,30029,C0O29443C2O29464C7O29471C12O29481C17O29500C22O29500C29O29583C31O29590C40O29960C43O29968C51O29968C57O30016C59O30027,,
code-creation,LazyCompile,10,20293666,0x47055d3bb2e,363,removeAllListeners node:events:621:32,0x1910fc7f30a0,~
code-source-info,0x47055d3bb2e
code-creation,LazyCompile,10,20293750,0x47055d3bef6,153,destroy node:internal/streams/destroy:32:17,0x38fe55847728,~
code-source-info,0x47055d3bef6,46,672,1455,C0O672C13O701C18O734C23O823C28O834C32O846C40O861C42O868C48O886C54O924C57O924C60O941C62O953C63O1109C77O1109C82O1135C86O1148C87O1160C91O1174C95O1187C96O1199C100O1277C106O1301C115O1306C123O1301C131O1409C145O1409C150O1441C152O1453,,
code-creation,LazyCompile,10,20293791,0x47055d3c0ee,42,checkError node:internal/streams/destroy:16:20,0x38fe55847470,~
code-source-info,0x47055d3c0ee,46,254,546,C0O270C4O376C8O433C12O445C18O462C20O472C24O489C28O501C34O518C36O528C41O545,,
code-creation,LazyCompile,10,20293875,0x47055d3c3de,119,_destroy node:internal/streams/destroy:70:18,0x38fe55847790,~
code-source-info,0x47055d3c3de,46,1474,2404,C0O1474C22O1507C23O1507C28O2004C31O2009C38O2018C45O2009C52O2047C55O2095C60O2107C64O2154C69O2170C85O2154C103O2383C111O2383C118O2403,,
code-creation,LazyCompile,10,20293916,0x47055d3c7ce,375,Socket._destroy node:net:652:37,0x172aed079538,~
code-source-info,0x47055d3c7ce
code-creation,LazyCompile,10,20294000,0x47055d3cb2e,142,onDestroy node:internal/streams/destroy:73:21,0x47055d3c248,~
code-source-info,0x47055d3cb2e,46,1535,1976,C0O1547C6O1567C7O1574C8O1585C12O1592C18O1615C21O1620C26O1650C29O1655C34O1676C48O1676C53O1704C57O1719C58O1728C62O1746C66O1761C67O1770C71O1789C77O1827C80O1827C84O1847C88O1864C93O1872C109O1872C116O1930C121O1938C134O1938C141O1975,,
code-creation,LazyCompile,10,20294041,0x47055d3ccde,8,clear /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/pipelinedRequestsQueue.js:71:9,0x324f23ca7558,~
code-source-info,0x47055d3ccde,364,1736,1774,C0O1745C2O1766C7O1773,,
tick,0x1014a68c8,20294916,0,0x0,0,0x47055d3b984,0x47055d3b79b,0x47055d3b3c4,0x47055d3b253,0x101426248,0x37743593025a,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20294958,0x47055d3e0f6,24,encodeHist /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js:37:21,0x36998916a428,~
code-source-info,0x47055d3e0f6,167,853,934,C0O867C6O877C7O888C8O892C13O903C18O903C23O932,,
code-creation,LazyCompile,10,20295000,0x47055d3e206,10,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:15:96,0x36998916bde8,~
code-source-info,0x47055d3e206,168,1169,1221,C0O1174C5O1192C9O1219,,
code-creation,LazyCompile,10,20295041,0x47055d3e39e,65,exports.encodeIntoCompressedBase64 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:53:38,0x36998916e578,~
code-source-info,0x47055d3e39e,170,2678,3040,C0O2717C2O2742C5O2749C9O2731C14O2791C19O2791C24O2836C25O2847C27O2872C30O2886C34O2861C39O2926C44O2926C49O2971C50O2982C59O2988C64O2982,,
code-creation,LazyCompile,10,20295083,0x47055d3e616,132,encodeWasmIntoCompressedBase64 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:39:40,0x36998916e498,~
code-source-info,0x47055d3e616,170,2002,2548,C0O2054C11O2090C21O2140C24O2171C29O2184C34O2192C39O2192C44O2221C51O2230C54O2221C59O2291C64O2291C69O2328C74O2351C79O2351C86O2415C91O2439C96O2415C101O2469C106O2469C111O2499C116O2513C121O2540C126O2513C131O2546,,
code-creation,LazyCompile,10,20295125,0x47055d3e7ce,36,allocate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:15:20,0x36998916d208,~
code-source-info,0x47055d3e7ce,169,457,529,C11O479C16O505C22O501C30O486C35O523,,
code-creation,LazyCompile,10,20295125,0x47055d3e966,56,ByteBuffer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:9:16,0x36998916d1b8,~
code-source-info,0x47055d3e966,169,229,437,C0O246C1O260C5O273C7O283C11O331C20O327C25O325C29O386C33O402C38O423C45O382C50O380C55O436,,
code-creation,LazyCompile,10,20295166,0x47055d3eb46,138,putInt32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:27:13,0x36998916d2a8,~
code-source-info,0x47055d3eb46,169,831,1199,C0O858C5O863C10O877C14O870C20O886C25O927C30O961C34O977C39O982C43O989C46O993C52O957C57O955C61O1016C66O1021C71O1021C76O1059C85O1083C89O1105C94O1110C99O1119C104O1139C109O1139C114O1155C119O1110C125O1174C132O1188C137O1198,,
code-creation,LazyCompile,10,20295208,0x47055d3ed56,71,encode /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:201:11,0x36998917c468,~
code-source-info,0x47055d3ed56,179,8229,8414,C0O8259C7O8264C12O8275C17O8290C22O8290C27O8264C33O8323C40O8328C45O8328C51O8363C58O8368C63O8368C68O8395C70O8408,,
code-creation,LazyCompile,10,20295291,0x47055d3eede,26,getTypedArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:342:27,0xe7577479088,~
code-source-info,0x47055d3eede,198,11111,11205,C0O11142C12O11158C20O11149C25O11199,,
code-creation,LazyCompile,10,20295291,0x47055d3f016,71,getTypedArrayView /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:348:31,0xe75774790d8,~
code-source-info,0x47055d3f016,198,11320,11577,C0O11366C5O11373C10O11399C16O11399C22O11430C26O11464C28O11462C31O11497C34O11457C42O11515C44O11513C47O11549C50O11508C56O11556C65O11437C70O11571,,
code-creation,LazyCompile,10,20295333,0x47055d3f156,22,syncBufferWrapper node:zlib:790:38,0x93fa32759c8,~
code-source-info,0x47055d3f156,211,24075,24150,C0O24098C10O24120C16O24105C21O24144,,
code-creation,LazyCompile,10,20295375,0x47055d3f2a6,63,Deflate node:zlib:731:17,0x93fa326c7c0,~
code-source-info,0x47055d3f2a6,211,22318,22437,C0O22329C2O22340C7O22365C12O22372C17O22390C18O22393C26O22406C35O22419C44O22425C56O22393C62O22436,,
code-creation,LazyCompile,10,20295458,0x47055d3f6fe,451,Zlib node:zlib:631:14,0x93fa326c720,~
code-source-info,0x47055d3f6fe
code-creation,LazyCompile,10,20295541,0x83e21487fbe,515,ZlibBase node:zlib:246:18,0x93fa326c510,~
code-source-info,0x83e21487fbe
code-creation,LazyCompile,10,20295625,0x83e21488406,74, node:zlib:226:3,0x93fa326cc28,~
code-source-info,0x83e21488406,211,6644,6935,C0O6687C5O6692C12O6733C14O6744C15O6755C17O6766C24O6784C29O6801C39O6873C52O6889C65O6807C70O6801C71O6917C73O6931,,
code-creation,LazyCompile,10,20295625,0x83e2148858e,64, node:zlib:201:43,0x93fa326cbd8,~
code-source-info,0x83e2148858e,211,6004,6340,C0O6043C4O6075C5O6088C6O6096C11O6100C17O6130C18O6142C19O6171C24O6175C30O6202C31O6215C32O6223C37O6223C42O6278C58O6284C63O6278,,
code-creation,LazyCompile,10,20295750,0x83e21488c1e,140,zlibBufferSync node:zlib:164:24,0x93fa326c470,~
code-source-info,0x83e21488c1e,211,4919,5436,C0O4940C6O4978C11O4994C16O4994C25O5017C30O5022C36O5055C41O5059C47O5093C52O5109C57O5109C66O5142C84O5148C89O5142C90O5299C93O5348C104O5308C111O5380C117O5391C124O5400C130O5408C136O5417C137O5420C139O5434,,
code-creation,LazyCompile,10,20295833,0x83e21489066,488,processChunkSync node:zlib:434:26,0x93fa326c5b0,~
code-source-info,0x83e
code-creation,LazyCompile,10,20295958,0x83e2148946e,29,_close node:zlib:615:16,0x93fa326c6d0,~
code-source-info,0x83e2148946e,211,18461,18636,C0O18562C6O18575C7O18582C8O18593C13O18601C18O18601C22O18612C23O18627C28O18635,,
code-creation,LazyCompile,10,20296000,0x83e214895ae,114,putArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:41:13,0x36998916d348,~
code-source-info,0x83e214895ae,169,1320,1651,C0O1347C5O1352C10O1366C14O1359C18O1383C22O1375C27O1431C32O1465C36O1481C41O1498C45O1490C51O1461C56O1459C60O1528C65O1533C70O1533C75O1571C80O1576C85O1592C90O1576C96O1611C101O1634C108O1625C113O1650,,
code-creation,LazyCompile,10,20296041,0x83e21489826,268,fromByteArray /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:119:24,0x3a1dfed70e18,~
code-source-info,0x83e21489826,181,3034,3931,C0O3072C5O3102C9O3159C12O3185C17O3314C19O3324C21O3328C25O3344C27O3344C32O3385C42O3415C48O3433C68O3452C72O3390C78O3385C83O3354C85O3357C92O3301C95O3552C97O3567C102O3580C104O3596C107O3591C111O3611C121O3634C124O3629C133O3660C136O3666C139O3654C142O3640C148O3674C152O3611C159O3702C161O3717C166O3730C168O3747C171O3742C174O3752C180O3770C183O3765C186O3758C190O3785C200O3808C203O3803C212O3835C215O3841C218O3829C221O3815C230O3869C233O3875C236O3863C239O3849C245O3883C249O3785C254O3921C262O3921C267O3929,,
code-creation,LazyCompile,10,20296083,0x83e21489ac6,118,encodeChunk /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:106:22,0x3a1dfed70dc8,~
code-source-info,0x83e21489ac6,181,2735,3009,C0O2782C3O2800C8O2809C10O2809C15O2830C17O2849C20O2853C23O2860C36O2890C39O2887C42O2895C45O2901C55O2872C61O2928C64O2925C67O2933C73O2911C77O2952C85O2957C90O2952C95O2818C101O2787C104O2999C112O2999C117O3007,,
code-creation,LazyCompile,10,20296125,0x83e21489c66,66,tripletToBase64 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/base64-js/index.js:99:26,0x3a1dfed70d78,~
code-source-info,0x83e21489c66,181,2583,2712,C0O2593C5O2611C8O2617C11O2606C20O2642C23O2648C26O2637C29O2625C38O2673C41O2678C44O2668C47O2656C56O2703C59O2698C62O2686C65O2710,,
tick,0x1010d4098,20296333,0,0x0,0,0x0,0x47055d3eb9b,0x47055d3e64c,0x47055d3e3b1,0x47055d3e108,0x37743593029e,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20296375,0x83e2148a08e,25, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:128:27,0x37743592fd78,~
code-source-info,0x83e2148a08e,330,3793,3847,C0O3812C7O3826C13O3831C19O3839C24O3846,,
code-creation,LazyCompile,10,20296625,0x83e2148a5f6,484,aggregateResult /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/aggregateResult.js:5:26,0x17d30551a270,~
code-source-info,0x83e2148a5f
code-creation,LazyCompile,10,20296708,0x83e2148aa46,62, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/aggregateResult.js:8:34,0x83e2148a1f8,~
code-source-info,0x83e2148aa46,223,233,374,C0O239C7O266C10O279C15O266C25O305C28O318C33O305C43O345C46O358C51O345C61O374,,
code-creation,LazyCompile,10,20296750,0x83e2148affe,22,decodeHist /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/histUtil.js:43:21,0x36998916a478,~
code-source-info,0x83e2148affe,167,956,1035,C0O966C4O976C5O987C6O991C11O1002C16O1002C21O1033,,
code-creation,LazyCompile,10,20296750,0x83e2148b10e,10,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/index.js:14:96,0x36998916bd20,~
code-source-info,0x83e2148b10e,168,1017,1069,C0O1022C5O1040C9O1067,,
code-creation,LazyCompile,10,20296791,0x83e2148b286,132,exports.decodeFromCompressedBase64 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:31:38,0x36998916e4e8,~
code-source-info,0x83e2148b286,170,1504,1961,C34O1621C39O1628C44O1653C49O1653C54O1628C60O1691C63O1691C68O1713C72O1743C77O1757C82O1771C96O1771C101O1843C102O1854C107O1875C112O1887C126O1887C131O1959,,
code-creation,LazyCompile,10,20296875,0x83e2148b56e,126,decompress /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/encoding.js:19:20,0x36998916e448,~
code-source-info,0x83e2148b56e,170,887,1433,C0O915C5O932C12O915C18O988C23O1024C28O1024C33O1052C42O1065C44O1061C49O1107C58O1113C63O1107C64O1224C69O1224C74O1267C79O1290C84O1305C89O1310C96O1338C102O1365C108O1369C112O1310C119O1290C125O1431,,
code-creation,LazyCompile,10,20296916,0x83e2148b74e,79,getInt32 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:55:13,0x36998916d3e8,~
code-source-info,0x83e2148b74e,169,1777,1988,C0O1795C5O1815C10O1824C15O1829C20O1840C25O1855C29O1864C33O1829C40O1868C45O1869C50O1815C55O1908C61O1928C65O1941C72O1955C76O1969C78O1982,,
code-creation,LazyCompile,10,20296958,0x83e2148b906,63,Inflate node:zlib:739:17,0x93fa326c810,~
code-source-info,0x83e2148b906,211,22549,22668,C0O22560C2O22571C7O22596C12O22603C17O22621C18O22624C26O22637C35O22650C44O22656C56O22624C62O22667,,
code-creation,LazyCompile,10,20297083,0x83e2148bcc6,265,doDecode /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:148:18,0x93fa325e508,~
code-source-info,0x83e2148bcc6,199,5917,7432,C24O6001C29O6018C36O6001C42O6059C47O6059C52O6079C54O6109C56O6149C58O6183C60O6210C63O6214C70O6240C72O6236C77O6272C80O6276C87O6316C89O6313C94O6352C103O6358C108O6352C109O6484C114O6484C119O6511C124O6511C128O6606C133O6606C138O6660C143O6660C148O6711C153O6711C158O6738C163O6738C169O6823C178O6829C183O6823C184O6929C189O6953C195O7041C200O7062C205O7062C211O7126C222O7126C228O7253C233O7326C246O7253C252O7363C257O7363C262O7413C264O7430,,
code-creation,LazyCompile,10,20297125,0x83e2148bf26,9,getCookieBase /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:107:23,0x93fa325e378,~
code-source-info,0x83e2148bf26,199,4371,4410,C0O4386C2O4400C8O4408,,
code-creation,LazyCompile,10,20297166,0x83e2148c03e,55,getWordSizeInBytesFromCookie /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:110:38,0x93fa325e3c8,~
code-source-info,0x83e2148c03e,199,4448,4697,C0O4463C3O4467C10O4492C12O4489C20O4524C27O4549C29O4546C34O4591C38O4619C39O4647C41O4655C47O4663C51O4689C54O4695,,
code-creation,LazyCompile,10,20297166,0x83e2148c1b6,36,getInt64 /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:61:13,0x36998916d438,~
code-source-info,0x83e2148c1b6,169,2001,2126,C0O2032C5O2032C10O2069C15O2069C20O2089C24O2103C26O2101C32O2114C35O2120,,
code-creation,LazyCompile,10,20297208,0x83e2148c4d6,105,constructorFromBucketSize /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramFactory.js:9:35,0x93fa325f8e0,~
code-source-info,0x83e2148c4d6,200,429,883,C0O451C40O511C45O536C49O544C50O573C55O596C59O604C60O634C65O658C69O666C70O696C75O720C79O728C80O758C85O784C89O792C90O822C99O828C104O822,,
code-creation,LazyCompile,10,20297250,0x83e2148c64e,40,Int32Histogram /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/Int32Histogram.js:12:16,0x93fa3268dc8,~
code-source-info,0x83e2148c64e,207,487,681,C3O577C7O583C11O643C24O577C39O680,,
code-creation,LazyCompile,10,20297291,0x83e2148c7fe,75,TypedArrayHistogram /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:12:16,0x93fa3267788,~
code-source-info,0x83e2148c7fe,205,468,784,C3O568C7O621C20O568C32O662C37O676C41O696C45O713C49O726C54O745C55O759C62O741C67O739C74O783,,
code-creation,LazyCompile,10,20297333,0x83e2148cb8e,231,JsHistogram /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:18:16,0x3699891700d8,~
code-source-info,0x83e2148cb8e,171,735,2069,C0O825C1O841C5O884C9O891C13O882C17O917C18O939C22O952C26O963C29O975C33O961C37O991C38O1005C42O1041C46O1048C50O1039C54O1074C55O1088C59O1101C60O1128C64O1141C65O1169C69O1182C70O1218C74O1231C75O1248C79O1261C80O1281C84O1294C85O1317C89O1330C90O1351C94O1400C96O1427C101O1446C110O1452C115O1446C116O1520C118O1550C121O1546C126O1590C135O1675C148O1596C153O1590C154O1722C155O1757C162O1807C167O1826C176O1832C181O1826C182O1919C184O1935C197O1962C203O1933C207O1979C224O1979C230O2068,,
code-creation,LazyCompile,10,20297416,0x83e2148d11e,332,init /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:75:9,0x369989170328,~
code-source-info,0x83e2148d11e,171,2923,4980,C0O3013C2O3041C6O3075C8O3102C12O3135C14O3171C18O3631C29O3641C35O3641C41O3635C45O3633C49O3691C53O3712C60O3718C63O3718C68O3712C72O3710C76O3757C80O3794C86O3806C91O3794C96O3792C100O3860C104O3890C107O3853C111O4244C122O4249C125O4249C130O4244C135O4302C137O4374C151O4409C154O4335C158O4422C162O4444C168O4456C172O4484C176O4444C181O4442C185O4529C189O4544C192O4522C196O4557C200O4591C203O4602C208O4591C212O4618C220O4625C226O4637C231O4625C236O4623C239O4576C243O4666C248O4666C253O4712C256O4762C260O4755C264O4783C268O4776C271O4811C274O4738C278O4824C282O4854C285O4875C298O4850C303O4848C307O4901C311O4935C314O4960C321O4931C326O4929C331O4979,,
code-creation,LazyCompile,10,20297500,0x83e2148d486,36,establishSize /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:120:18,0x369989170378,~
code-source-info,0x83e2148d486,171,5989,6454,C0O6098C5O6098C10O6091C14O6276C19O6276C24O6269C28O6394C30O6421C35O6453,,
code-creation,LazyCompile,10,20297500,0x83e2148d646,62,determineArrayLengthNeeded /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:128:31,0x3699891703c8,~
code-source-info,0x83e2148d646,171,6485,6964,C0O6556C4O6549C7O6545C12O6594C21O6636C27O6676C33O6600C38O6594C39O6838C44O6871C49O6871C55O6838C61O6958,,
code-creation,LazyCompile,10,20297541,0x83e2148d7fe,78,getBucketsNeededToCoverValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:148:33,0x369989170468,~
code-source-info,0x83e2148d7fe,171,7589,8416,C0O7735C9O7752C15O7764C20O7752C25O7750C29O7849C32O7892C34O7892C39O7947C43O7954C47O7971C50O7945C55O8233C57O8254C60O8258C61O8285C63O8337C67O8354C72O7860C75O8389C77O8410,,
code-creation,LazyCompile,10,20297583,0x83e2148d9ae,18,getLengthForNumberOfBuckets /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:144:32,0x369989170418,~
code-source-info,0x83e2148d9ae,171,7422,7556,C0O7471C2O7488C6O7501C10O7516C13O7493C17O7550,,
code-creation,LazyCompile,10,20297625,0x83e2148db8e,73,PercentileIterator /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PercentileIterator.js:16:16,0x369989176fd0,~
code-source-info,0x83e2148db8e,175,778,1099,C3O832C11O832C23O849C27O885C31O898C35O930C39O943C43O977C47O990C51O1020C55O1037C58O1042C63O1042C72O1098,,
code-creation,LazyCompile,10,20297625,0x83e2148dd1e,21,JsHistogramIterator /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:8:16,0x369989175620,~
code-source-info,0x83e2148dd1e,173,299,387,C0O312C2O345C5O371C10O341C15O339C20O386,,
code-creation,LazyCompile,10,20297666,0x83e2148de26,11,HistogramIterationValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramIterationValue.js:36:16,0x369989176548,~
code-source-info,0x83e2148de26,174,2431,2463,C0O2449C5O2449C10O2462,,
code-creation,LazyCompile,10,20297708,0x83e2148e076,42,reset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/HistogramIterationValue.js:39:10,0x369989176598,~
code-source-info,0x83e2148e076,174,2473,2799,C0O2486C1O2507C5O2520C6O2543C10O2556C11O2584C15O2597C16O2632C20O2645C21O2672C25O2685C26O2712C30O2725C31O2741C35O2756C36O2787C41O2798,,
tick,0x1a36493f4,20297750,0,0x0,3,0x0,0x83e2148d248,0x83e2148cc6e,0x83e2148c812,0x83e2148c666,0x83e2148bda4,0x83e2148b304,0x83e2148b00e,0x83e2148aa55,0x10142f7e8,0x83e2148a625,0x3774359303c0,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20297791,0x83e2148e296,41,doReset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/PercentileIterator.js:32:12,0x369989177070,~
code-source-info,0x83e2148e296,175,1444,1752,C0O1498C2O1504C13O1504C18O1538C20O1574C24O1616C25O1648C29O1661C30O1695C34O1708C35O1738C40O1751,,
code-creation,LazyCompile,10,20297833,0x83e2148e5e6,105,resetIterator /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:11:18,0x369989175670,~
code-source-info,0x83e2148e5e6,173,405,996,C0O427C2O442C6O508C10O496C14O561C18O549C22O581C23O599C27O612C28O637C32O674C36O679C44O696C49O679C55O672C59O720C60O745C64O758C65O785C69O798C70O828C74O841C75O871C79O884C80O906C84O919C85O939C89O960C94O982C99O982C104O995,,
code-creation,LazyCompile,10,20297875,0x83e2148e7ae,5,get totalCount /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:60:19,0x369989170238,~
code-source-info,0x83e2148e7ae,171,2441,2484,C0O2466C4O2478,,
code-creation,LazyCompile,10,20297916,0x83e2148e89e,40,RecordedValuesIterator /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:20:16,0x369989174948,~
code-source-info,0x83e2148e89e,172,861,930,C3O883C11O883C23O900C26O905C31O905C39O929,,
code-creation,LazyCompile,10,20297916,0x83e2148ea26,26,doReset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:30:12,0x3699891749e8,~
code-source-info,0x83e2148ea26,172,1104,1195,C0O1126C2O1132C13O1132C18O1166C20O1184C25O1194,,
code-creation,LazyCompile,10,20298083,0x83e2148ec5e,154,fillCountsArrayFromSourceBuffer /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.encoding.js:83:41,0x93fa325e328,~
code-source-info,0x83e2148ec5e,199,3476,4348,C0O3535C2O3555C9O3587C16O3619C23O3654C25O3651C30O3686C39O3771C41O3757C47O3792C53O3692C58O3686C59O3843C61O3883C68O3892C72O3933C79O3942C84O3984C86O4007C91O4024C96O4032C101O4032C107O4062C108O4072C113O4091C115O4104C118O4124C120O4136C129O4240C142O4240C148O3913C151O4296C153O4312,,
code-creation,LazyCompile,10,20298125,0x83e2148ee8e,408,decode /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ZigZagEncoding.js:99:18,0x93fa3269f58,~
code-source-info,0x83e2148ee8e
code-creation,LazyCompile,10,20298208,0x83e2148f1fe,26,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ByteBuffer.js:50:8,0x36998916d398,~
code-source-info,0x83e2148f1fe,169,1659,1764,C0O1691C5O1701C9O1695C13O1720C19O1733C23O1745C25O1758,,
code-creation,LazyCompile,10,20298208,0x83e2148f35e,45,setCountAtIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:38:20,0x93fa32678c8,~
code-source-info,0x83e2148f35e,205,1493,1703,C0O1530C4O1537C8O1528C13O1565C17O1572C21O1563C26O1604C28O1616C31O1604C32O1674C39O1689C44O1702,,
code-creation,LazyCompile,10,20298291,0x83e2148fa76,179,establishInternalTackingValues /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:760:35,0x369989170fe0,~
code-source-info,0x83e2148fa76,171,39200,40118,C4O39222C13O39251C14O39265C18O39301C22O39308C26O39299C30O39342C33O39376C36O39413C38O39441C40O39450C42O39450C47O39516C52O39516C58O39552C59O39569C64O39592C66O39614C73O39644C76O39678C78O39698C84O39713C89O39741C94O39472C99O39424C102O39816C103O39829C108O39854C113O39875C118O39903C123O39903C129O39875C135O39854C140O39949C141O39969C146O39994C151O40021C156O40021C162O39994C167O40078C172O40078C178O40117,,
code-creation,LazyCompile,10,20298333,0x83e2148fc8e,11,getCountAtIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:50:20,0x93fa3267968,~
code-source-info,0x83e2148fc8e,205,1962,2013,C0O1992C7O1999C10O2007,,
code-creation,LazyCompile,10,20298375,0x83e2149004e,70,valueFromIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:288:19,0x3699891707d8,~
code-source-info,0x83e2149004e,171,15064,15431,C0O15100C7O15119C11O15112C15O15100C19O15139C23O15187C27O15180C31O15214C35O15207C39O15242C40O15258C45O15300C56O15332C58O15379C63O15379C69O15425,,
code-creation,LazyCompile,10,20298416,0x83e214901b6,27,valueFromIndexes /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:285:21,0x369989170788,~
code-source-info,0x83e214901b6,171,14934,15045,C0O14974C4O14998C10O15024C14O15017C18O14998C23O14996C26O15039,,
code-creation,LazyCompile,10,20298416,0x83e214902ce,14,highestEquivalentValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:319:27,0x369989170878,~
code-source-info,0x83e214902ce,171,16552,16622,C0O16582C5O16582C10O16612C13O16616,,
code-creation,LazyCompile,10,20298458,0x83e214903d6,25,nextNonEquivalentValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:330:27,0x3699891708c8,~
code-source-info,0x83e214903d6,171,17052,17160,C0O17083C5O17083C11O17119C16O17119C21O17112C24O17154,,
code-creation,LazyCompile,10,20298458,0x83e2149051e,36,lowestEquivalentValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:305:26,0x369989170828,~
code-source-info,0x83e2149051e,171,15856,16124,C0O15899C5O15899C11O15958C16O15958C23O16037C28O16037C35O16118,,
code-creation,LazyCompile,10,20298500,0x83e2149065e,55,getBucketIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:219:19,0x369989170648,~
code-source-info,0x83e2149065e,171,11028,11533,C0O11413C11O11424C18O11430C21O11430C26O11424C31O11462C35O11443C39O11509C43O11490C49O11420C54O11527,,
code-creation,LazyCompile,10,20298500,0x83e214907a6,39,getSubBucketIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:228:22,0x369989170698,~
code-source-info,0x83e214907a6,171,11555,12279,C0O12210C11O12231C17O12257C21O12250C25O12231C30O12229C34O12217C38O12273,,
code-creation,LazyCompile,10,20298541,0x83e2149090e,67,sizeOfEquivalentValueRange /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:341:31,0x369989170918,~
code-source-info,0x83e2149090e,171,17596,17928,C0O17639C5O17639C11O17698C16O17698C23O17773C33O17785C38O17837C42O17829C49O17866C56O17799C60O17773C66O17922,,
code-creation,LazyCompile,10,20298583,0x83e21490a8e,16,updatedMaxValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:63:20,0x369989170288,~
code-source-info,0x83e21490a8e,171,2504,2620,C0O2557C4O2550C8O2584C10O2598C15O2619,,
code-creation,LazyCompile,10,20298583,0x83e21490be6,47,updateMinNonZeroValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:67:26,0x3699891702d8,~
code-source-info,0x83e21490be6,171,2646,2914,C0O2682C4O2674C9O2715C10O2722C11O2763C18O2782C22O2775C26O2763C31O2832C35O2813C39O2871C41O2892C46O2913,,
code-creation,LazyCompile,10,20298625,0x83e21490d46,8,setTotalCount /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:53:18,0x3699891701c8,~
code-source-info,0x83e21490d46,171,2219,2268,C0O2237C2O2254C7O2267,,
tick,0x101496030,20299541,0,0x0,0,0x83e2148fc8e,0x83e2148faaa,0x83e2148bdc7,0x83e2148b304,0x83e2148b00e,0x83e2148aa79,0x10142f7e8,0x83e2148a625,0x3774359303c0,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20299708,0x83e21491476,118,module.exports.histAsObj /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:21:37,0x93fa327b980,~
code-source-info,0x83e21491476,217,210,560,C0O241C4O246C12O251C16O265C20O246C25O272C29O295C36O310C42O364C46O382C50O387C58O392C62O414C66O387C71O421C81O437C92O460C103O480C109O517C111O530C115O545C117O558,,
code-creation,LazyCompile,10,20299750,0x83e21491616,41,getMean /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:51:18,0x93fa327b840,~
code-source-info,0x83e21491616,217,964,1135,C0O991C8O1030C13O1030C17O1036C18O1059C26O1101C31O1101C35O1110C36O1129C40O1133,,
code-creation,LazyCompile,10,20299791,0x83e214917ce,101,get mean /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:365:13,0x3699891709d0,~
code-source-info,0x83e214917ce,171,18673,19169,C0O18695C6O18706C11O18727C12O18736C13O18760C18O18783C23O18783C27O18817C29O18840C34O18863C39O18863C45O18916C50O18939C55O18939C60O18994C65O19031C70O18994C76O19085C80O19048C90O18828C93O19152C97O19145C100O19163,,
code-creation,LazyCompile,10,20299833,0x83e2149196e,17,reset /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:27:10,0x369989174998,~
code-source-info,0x83e2149196e,172,1044,1092,C0O1062C5O1075C10O1062C16O1091,,
code-creation,LazyCompile,10,20299833,0x83e21491ace,35,hasNext /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:32:12,0x3699891756c0,~
code-source-info,0x83e21491ace,173,1247,1469,C0O1269C5O1279C10O1299C14O1290C19O1342C21O1342C22O1415C27O1447C31O1440C34O1463,,
code-creation,LazyCompile,10,20299916,0x83e21491dd6,326,next /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:43:9,0x369989175710,~
code-source-info,0x83e21491dd
code-creation,LazyCompile,10,20299958,0x83e21492106,18,exhaustedSubBuckets /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:88:24,0x369989175850,~
code-source-info,0x83e21492106,173,4010,4090,C0O4035C5O4056C10O4066C14O4048C17O4084,,
code-creation,LazyCompile,10,20299958,0x83e2149223e,42,reachedIterationLevel /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:37:26,0x369989174a88,~
code-source-info,0x83e2149223e,172,1306,1473,C0O1345C5O1355C10O1376C15O1355C21O1399C22O1419C28O1432C33O1454C37O1445C41O1467,,
code-creation,LazyCompile,10,20300000,0x83e21492396,68,incrementSubBucket /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:91:23,0x3699891758a0,~
code-source-info,0x83e21492396,173,4113,4359,C0O4126C1O4146C5O4162C11O4179C15O4223C20O4233C25O4253C30O4233C35O4216C39O4305C44O4315C49O4335C53O4348C57O4315C62O4298C67O4358,,
code-creation,LazyCompile,10,20300083,0x83e21493166,21,getValueIteratedTo /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:85:23,0x369989175800,~
code-source-info,0x83e21493166,173,3896,3986,C0O3921C5O3931C10O3959C15O3931C20O3980,,
code-creation,LazyCompile,10,20300125,0x83e21493346,16,getPercentileIteratedTo /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogramIterator.js:79:28,0x369989175760,~
code-source-info,0x83e21493346,173,3672,3759,C0O3704C4O3697C8O3737C12O3730C15O3753,,
code-creation,LazyCompile,13,20300208,0x10754aa80,500,getCountAtIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/TypedArrayHistogram.js:50:20,0x93fa3267968,*
code-source-info,0x10754aa80,205,1962,2013,C0O1962C52O1992C84O1999C140O2007C200O1962C248O1999C372O2007,,
code-creation,LazyCompile,10,20300250,0x83e214937c6,10,incrementIterationLevel /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/RecordedValuesIterator.js:34:28,0x369989174a38,~
code-source-info,0x83e214937c6,172,1223,1280,C0O1261C4O1254C9O1279,,
code-creation,LazyCompile,10,20300250,0x83e214938ee,40,medianEquivalentValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:356:26,0x369989170968,~
code-source-info,0x83e214938ee,171,18362,18493,C0O18393C5O18393C15O18436C18O18447C23O18447C28O18481C32O18436C36O18422C39O18487,,
code-creation,LazyCompile,10,20300916,0x83e214940d6,41,getStdDeviation /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:75:26,0x93fa327b930,~
code-source-info,0x83e214940d6,217,1403,1602,C0O1430C8O1471C13O1471C17O1479C18O1502C26O1552C31O1552C35O1569C36O1588C40O1600,,
code-creation,LazyCompile,10,20300958,0x83e214942be,142,getStdDeviation /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:379:20,0x369989170a20,~
code-source-info,0x83e214942be,171,19189,19851,C4O19202C13O19227C19O19238C24O19259C25O19268C26O19319C28O19337C33O19360C38O19360C42O19389C47O19412C52O19412C58O19465C63O19488C68O19488C73O19531C78O19568C83O19531C91O19585C95O19605C97O19660C101O19689C105O19672C115O19377C118O19760C122O19765C127O19803C131O19796C135O19765C141O19845,,
tick,0x1013a2f20,20301000,0,0x0,0,0x83e214903db,0x83e214902d3,0x83e21491e28,0x83e21491805,0x83e2149163a,0x83e21491482,0x83e2148a6f4,0x3774359303c0,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20301708,0x83e21494856,23,getMin /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:61:17,0x93fa327b890,~
code-source-info,0x83e21494856,217,1153,1259,C0O1180C8O1218C13O1218C17O1223C18O1242C22O1257,,
code-creation,LazyCompile,10,20301750,0x83e2149495e,23,getMax /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:68:17,0x93fa327b8e0,~
code-source-info,0x83e2149495e,217,1277,1376,C0O1304C8O1342C13O1342C17O1347C18O1366C22O1374,,
code-creation,LazyCompile,10,20301791,0x83e21494ae6,38,module.exports.addPercentiles /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:38:42,0x93fa327ba50,~
code-source-info,0x83e21494ae6,217,603,945,C0O603C13O622C20O634C30O634C35O930C37O943,,
code-creation,LazyCompile,10,20301791,0x83e21494c66,93, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-percentiles-obj/index.js:39:32,0x83e21494a20,~
code-source-info,0x83e21494c66,217,651,925,C0O676C5O681C9O689C20O689C27O711C30O727C38O762C44O781C49O781C54O774C60O809C63O825C71O870C77O889C82O889C87O882C92O924,,
code-creation,LazyCompile,10,20301875,0x83e21494f06,164,getValueAtPercentile /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:260:25,0x369989170738,~
code-source-info,0x83e21494f06,171,13510,14913,C0O13561C10O13561C16O14066C20O14082C24O14075C28O14264C39O14268C46O14295C49O14301C54O14308C59O14293C63O14268C71O14264C77O14455C79O14479C81O14491C85O14484C90O14557C95O14557C107O14589C109O14613C114O14677C119O14677C125O14712C126O14730C131O14765C136O14765C143O14828C148O14828C153O14865C154O14511C159O14466C162O14898C163O14907,,
code-creation,LazyCompile,10,20301875,0x83e21495106,52,ulp /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/ulp.js:10:13,0x369989178bc0,~
code-source-info,0x83e21495106,177,359,408,C0O371C4O371C12O378C16O383C21O389C25O394C30O394C36O383C41O403C45O371C51O408,,
code-creation,LazyCompile,10,20302000,0x83e214957ee,10,get mean /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:127:13,0x36998917bde0,~
code-source-info,0x83e214957ee,179,5096,5147,C0O5121C5O5136C9O5141,,
code-creation,LazyCompile,10,20302041,0x83e214958ee,20,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/@assemblyscript/loader/umd/index.js:507:18,0xe757747a888,~
code-source-info,0x83e214958ee,198,16963,17026,C0O16984C9O17003C11O17002C15O16991C19O17010,,
code-creation,LazyCompile,10,20302125,0x83e21495a1e,10,get stdDeviation /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:124:21,0x36998917bd78,~
code-source-info,0x83e21495a1e,179,5024,5083,C0O5049C5O5064C9O5077,,
code-creation,LazyCompile,10,20302250,0x83e21495b46,10,get minNonZeroValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:133:24,0x36998917bed8,~
code-source-info,0x83e21495b46,179,5283,5345,C0O5308C5O5323C9O5339,,
code-creation,LazyCompile,10,20302250,0x83e21495c66,10,get maxValue /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:136:17,0x36998917bf48,~
code-source-info,0x83e21495c66,179,5362,5417,C0O5387C5O5402C9O5411,,
code-creation,LazyCompile,10,20302291,0x83e21495de6,16,getValueAtPercentile /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:148:25,0x36998917c088,~
code-source-info,0x83e21495de6,179,5825,5914,C0O5860C5O5875C10O5875C15O5908,,
tick,0x2f3ebe1dd1a4,20302875,0,0x0,0,0x2f3ebe1db9bc,0x2f3ebe1ecb40,0x10750ddf8,0x83e214958fd,0x83e214957f3,0x83e2149163a,0x83e21491482,0x83e2148a743,0x3774359303c0,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,13,20303250,0x10754ad00,648,getBucketIndex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/JsHistogram.js:219:19,0x369989170648,*
code-source-info,0x10754ad00,171,11028,11533,C0O11028C56O11430C108O11462C136O11443C140O11490C144O11430C196O11443C204O11424C208O11490C216O11443C220O11490C224O11420C232O11527C376O11028C424O11462C516O11527,,
code-creation,LazyCompile,10,20303750,0x83e214963a6,34,destroy /Users/carloscalvo/code/Coder/backend/entregas/node_modules/hdr-histogram-js/dist/wasm/index.js:211:12,0x36998917c508,~
code-source-info,0x83e214963a6,179,8522,8629,C0O8535C7O8540C12O8553C17O8540C22O8578C26O8600C28O8598C33O8628,,
code-creation,LazyCompile,10,20303833,0x83e21496566,126,_cb /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:71:16,0x324f23cadf78,~
code-source-info,0x83e21496566,220,1749,2005,C0O1749C9O1769C13O1786C29O1806C44O1816C48O1862C49O1874C54O1882C62O1882C68O1907C75O1907C80O1929C89O1946C95O1960C99O1968C104O1972C108O1977C113O1977C119O1968C125O2004,,
code-creation,LazyCompile,10,20303875,0x83e21496786,52, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/progressTracker.js:74:23,0x4324a97e158,~
code-source-info,0x83e21496786,365,2297,2606,C0O2459C3O2468C9O2487C14O2498C15O2504C16O2533C26O2533C32O2563C35O2568C40O2581C45O2581C51O2605,,
code-creation,LazyCompile,10,20304000,0x83e21497296,969,printResult /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:17:21,0x369989148bc0,~
code-source-info,0x83e
code-creation,LazyCompile,10,20304125,0x83e21497da6,25,asColor /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:118:18,0x369989148a80,~
code-source-info,0x83e21497da6,147,3449,3513,C0O3449C9O3480C19O3480C24O3511,,
code-creation,LazyCompile,10,20304166,0x83e21497ebe,8, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:119:18,0x83e21497ce8,~
code-source-info,0x83e21497ebe,147,3484,3510,C0O3495C3O3495C7O3510,,
code-creation,LazyCompile,10,20304166,0x83e21498016,51,Table /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:5:14,0x36998914af78,~
code-source-info,0x83e21498016,149,125,202,C3O141C11O141C23O155C30O170C33O176C38O176C43O168C50O201,,
code-creation,LazyCompile,10,20304208,0x83e21498186,105,mergeOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:234:22,0x36998914c570,~
code-source-info,0x83e21498186,150,5525,5810,C0O5549C7O5576C14O5599C19O5629C23O5636C36O5636C42O5681C46O5688C53O5708C58O5723C63O5688C68O5679C72O5745C76O5752C83O5772C88O5787C93O5752C98O5743C102O5797C104O5808,,
code-creation,LazyCompile,10,20304250,0x83e214987de,5,defaultOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:199:24,0x36998914c520,~
code-source-info,0x83e214987de,150,4891,5502,C0O4898C4O5500,,
code-creation,LazyCompile,10,20304333,0x83e214989be,225,asMs /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:122:15,0x369989148ad0,~
code-source-info,0x83e214989be,147,3529,3766,C0O3555C4O3562C11O3562C17O3600C21O3600C26O3600C56O3588C84O3588C87O3618C89O3637C99O3628C106O3577C169O3677C180O3701C186O3710C190O3715C195O3726C199O3730C203O3715C208O3737C218O3663C222O3751C224O3764,,
tick,0x101126a2c,20304375,0,0x0,0,0x0,0x83e214972dd,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20304375,0x83e21498cbe,128,asLowRow /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:91:19,0x3699891489e0,~
code-source-info,0x83e21498cbe,147,2922,3136,C0O2939C9O2952C16O2967C27O2982C38O2996C49O3012C60O3026C71O3044C82O3068C90O3092C96O3098C100O3103C105O3114C109O3118C113O3103C118O3125C127O3134,,
code-creation,LazyCompile,10,20304458,0x83e21499146,410,toString /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:11:11,0x36998914afc8,~
code-source-info,0x83e21499146,149,214,1534,C0O214C8O235C11O271C16O279C22O292C27O300C32O305C37O317C39O345C46O359C51O367C62O389C68O413C73O418C78O418C86O470C91O478C98O489C102O518C109O530C114O530C119O518C121O559C124O565C134O565C140O714C147O726C152O745C157O753C165O726C171O776C178O788C183O808C188O816C196O788C202O841C205O847C215O847C221O989C224O1018C226O1030C229O1038C233O1030C238O1076C243O1081C247O1122C252O1130C259O1140C263O1159C264O1172C269O1187C274O1195C279O1201C287O1222C294O1230C296O1257C310O1257C315O1319C317O1330C319O1330C324O1366C338O1366C343O1352C348O1300C351O1411C353O1424C360O1437C364O1428C369O1455C383O1455C388O1054C393O998C396O1519C404O1519C409O1530,,
code-creation,LazyCompile,10,20304500,0x83e214994ee,39,makeTableLayout /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:161:27,0x369989152b40,~
code-source-info,0x83e214994ee,156,4300,4489,C0O4328C3O4328C8O4353C11O4353C15O4380C18O4380C22O4407C25O4407C29O4438C32O4438C36O4469C38O4485,,
code-creation,LazyCompile,10,20304541,0x83e2149966e,16,generateCells /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:143:25,0x369989152aa0,~
code-source-info,0x83e2149966e,156,3885,4272,C0O3910C10O3910C15O4268,,
code-creation,LazyCompile,10,20304541,0x83e2149985e,125, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:144:30,0x83e214995b0,~
code-source-info,0x83e2149985e,156,3923,4266,C0O3937C4O3948C9O3948C16O3982C20O3989C25O3989C32O3998C36O4011C38O4020C43O4035C47O4045C52O4045C59O4081C64O4081C70O4104C75O4104C82O4145C91O4152C100O4157C109O4198C119O4198C124O4260,,
code-creation,LazyCompile,10,20304583,0x83e21499a46,15, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:155:31,0x83e21499738,~
code-source-info,0x83e21499a46,156,4211,4258,C0O4228C9O4235C14O4250,,
code-creation,LazyCompile,10,20304583,0x83e21499b56,22,Cell /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:11:14,0x3699891542c0,~
code-source-info,0x83e21499b56,157,304,542,C0O325C5O325C10O505C11O512C15O524C16O531C21O541,,
code-creation,LazyCompile,10,20304625,0x83e21499db6,174,setOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:23:13,0x369989154310,~
code-source-info,0x83e21499db6,157,556,1133,C0O572C5O608C14O608C22O632C27O648C37O672C49O695C56O724C58O737C62O774C67O787C72O823C81O823C89O847C94O863C98O878C102O876C108O906C112O928C114O941C120O966C130O1023C136O972C141O966C142O1075C153O1065C157O1116C168O1106C173O1132,,
code-creation,LazyCompile,10,20304708,0x83e2149a416,29,layoutTable /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:5:23,0x369989152690,~
code-source-info,0x83e2149a416,156,113,704,C0O113C9O127C12O133C22O133C28O703,,
code-creation,LazyCompile,10,20304708,0x83e2149a5e6,32, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:6:28,0x83e2149a350,~
code-source-info,0x83e2149a5e6,156,150,698,C0O150C12O189C13O189C15O205C25O205C31O697,,
code-creation,LazyCompile,10,20304750,0x83e2149a7a6,137, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:8:28,0x83e2149a528,~
code-source-info,0x83e2149a7a6,156,222,690,C0O252C2O259C6O279C8O288C17O299C20O308C24O310C31O286C35O350C38O362C39O362C44O396C51O401C55O427C57O429C66O463C71O494C73O499C75O499C80O538C82O542C86O566C91O566C98O610C104O616C108O559C111O508C116O481C119O656C121O665C127O369C132O337C136O689,,
code-creation,LazyCompile,10,20304791,0x83e2149aa8e,135,cellsConflict /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:40:25,0x369989152820,~
code-source-info,0x83e2149aa8e,156,1001,1476,C0O1040C5O1065C9O1067C13O1080C21O1071C25O1117C30O1142C34O1144C38O1157C46O1148C50O1192C52O1200C59O1217C64O1250C69O1275C73O1277C77O1290C85O1281C89O1327C94O1352C98O1354C102O1367C110O1358C114O1402C116O1410C123O1427C128O1442C134O1472,,
code-creation,LazyCompile,10,20304875,0x83e2149af06,250,fillInTable /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:116:23,0x369989152a50,~
code-source-info,0x83e2149af06,156,3139,3859,C0O3165C3O3165C8O3199C11O3199C16O3233C18O3238C20O3238C25O3273C27O3278C29O3278C34O3302C46O3307C53O3359C60O3364C66O3370C73O3409C78O3441C80O3433C97O3445C104O3488C110O3500C114O3516C119O3424C122O3552C124O3554C128O3587C130O3579C138O3615C143O3623C148O3632C152O3625C162O3590C169O3656C175O3668C179O3684C184O3569C187O3724C196O3724C202O3764C206O3757C210O3791C214O3784C218O3804C223O3826C227O3804C232O3288C237O3260C240O3248C245O3220C249O3858,,
code-creation,LazyCompile,10,20304916,0x83e2149b176,5,maxHeight /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:36:21,0x3699891527d0,~
code-source-info,0x83e2149b176,156,937,975,C0O964C4O971,,
code-creation,LazyCompile,10,20304916,0x83e2149b2ee,29,maxWidth /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:26:20,0x369989152730,~
code-source-info,0x83e2149b2ee,156,725,915,C0O725C8O748C9O748C11O761C21O761C26O901C28O911,,
code-creation,LazyCompile,10,20304958,0x83e2149b486,17, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:28:28,0x83e2149b228,~
code-source-info,0x83e2149b486,156,778,894,C0O796C10O796C16O893,,
code-creation,LazyCompile,10,20304958,0x83e2149b5ce,48, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:29:28,0x83e2149b3d0,~
code-source-info,0x83e2149b5ce,156,813,886,C0O830C4O840C11O844C14O853C19O863C27O855C31O840C40O833C47O885,,
code-creation,LazyCompile,10,20305000,0x83e2149b7ee,106,conflictExists /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:56:26,0x369989152870,~
code-source-info,0x83e2149b7ee,156,1503,1815,C0O1534C4O1539C9O1548C13O1555C17O1539C24O1579C31O1584C37O1590C44O1612C46O1617C48O1617C53O1650C55O1654C59O1678C61O1689C65O1683C70O1712C75O1739C79O1716C86O1757C87O1769C88O1698C93O1665C96O1628C101O1599C104O1798C105O1811,,
code-creation,LazyCompile,10,20305083,0x83e2149bb8e,29,addRowSpanCells /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:79:27,0x369989152910,~
code-source-info,0x83e2149bb8e,156,2024,2420,C0O2024C9O2038C12O2044C22O2044C28O2419,,
code-creation,LazyCompile,10,20305083,0x83e2149bd36,26, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:80:28,0x83e2149bac8,~
code-source-info,0x83e2149bd36,156,2061,2414,C0O2061C9O2089C19O2089C25O2413,,
code-creation,LazyCompile,10,20305125,0x83e2149bea6,94, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:81:28,0x83e2149bc78,~
code-source-info,0x83e2149bea6,156,2106,2406,C0O2136C3O2148C7O2141C12O2192C21O2192C27O2246C31O2239C35O2280C42O2282C45O2273C49O2324C53O2317C57O2343C72O2382C75O2372C79O2343C84O2158C89O2123C93O2405,,
code-creation,LazyCompile,10,20305166,0x83e2149c086,134,addColSpanCells /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:93:27,0x3699891529b0,~
code-source-info,0x83e2149c086,156,2448,2965,C0O2494C4O2501C8O2515C9O2515C14O2559C16O2567C20O2608C22O2637C26O2623C31O2681C33O2692C37O2728C40O2740C44O2733C49O2784C56O2784C62O2834C69O2836C72O2827C76O2872C80O2865C84O2897C91O2916C103O2897C108O2750C113O2715C116O2656C121O2585C124O2529C129O2465C133O2964,,
code-creation,LazyCompile,10,20305208,0x83e2149c2ae,18, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:25:28,0x83e21498f60,~
code-source-info,0x83e2149c2ae,149,582,700,C0O600C10O600C17O699,,
code-creation,LazyCompile,10,20305208,0x83e2149c3ee,23, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:26:28,0x83e2149c1f8,~
code-source-info,0x83e2149c3ee,149,617,686,C0O639C5O662C12O671C15O639C22O685,,
code-creation,LazyCompile,10,20305291,0x83e2149c74e,439,mergeTableOptions /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:41:20,0x369989154360,~
code-source-info,0x83e2149c74e
code-creation,LazyCompile,10,20305333,0x83e2149cb26,30, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:47:33,0x83e2149c5c0,~
code-source-info,0x83e2149cb26,157,1360,1430,C0O1375C7O1385C12O1399C17O1417C23O1375C29O1429,,
code-creation,LazyCompile,10,20305333,0x83e2149ccee,160,setOption /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:329:19,0x3699891541d0,~
code-source-info,0x83e2149ccee,157,11316,11653,C0O11369C8O11369C14O11393C21O11400C26O11411C31O11427C35O11431C42O11431C48O11440C53O11441C60O11462C64O11466C72O11466C77O11455C80O11420C84O11495C92O11495C98O11509C100O11532C113O11547C120O11562C127O11577C130O11526C136O11601C138O11624C151O11639C154O11618C159O11652,,
code-creation,LazyCompile,10,20305458,0x83e2149d41e,87,colorizeLines /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:282:23,0x36998914c660,~
code-source-info,0x83e2149d41e,150,6769,7038,C0O6793C2O6812C5O6831C7O6844C11O6836C16O6874C21O6898C25O6874C31O6908C34O6916C39O6948C43O6955C50O6955C57O6985C65O6990C71O6985C76O6853C81O6818C84O7022C86O7036,,
code-creation,LazyCompile,10,20305500,0x83e2149d68e,115,rewindState /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:120:21,0x36998914c3b8,~
code-source-info,0x83e2149d68e,150,3039,3590,C0O3039C13O3082C16O3088C21O3137C24O3143C29O3167C36O3203C43O3240C47O3247C55O3247C61O3258C71O3259C76O3358C82O3405C87O3428C89O3454C92O3432C94O3467C100O3514C105O3537C107O3563C110O3541C112O3577C114O3588,,
code-creation,LazyCompile,10,20305541,0x83e2149d876,52,readState /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:86:19,0x36998914c2f0,~
code-source-info,0x83e2149d876,150,2248,2472,C0O2270C5O2270C10O2313C15O2313C21O2339C23O2365C27O2381C30O2381C35O2439C40O2439C46O2345C49O2457C51O2470,,
code-creation,LazyCompile,10,20305541,0x83e2149da2e,15,codeRegex /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:3:19,0x36998914c0e8,~
code-source-info,0x83e2149da2e,150,64,159,C0O78C14O157,,
tick,0x1010f8694,20305583,0,0x0,0,0x0,0x83e2149cd70,0x83e2149cb3d,0x101426248,0x83e2149c791,0x83e2149c3fd,0x101426248,0x83e2149c2b8,0x101426248,0x83e214991cc,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20305750,0x83e2149dc5e,121,unwindState /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:97:21,0x36998914c340,~
code-source-info,0x83e2149dc5e,150,2494,3017,C0O2494C13O2537C16O2543C21O2592C24O2598C29O2622C36O2658C43O2695C47O2702C55O2702C61O2713C71O2714C76O2809C82O2856C87O2879C95O2883C97O2906C103O2953C108O2976C116O2980C118O3004C120O3015,,
code-creation,LazyCompile,10,20305833,0x83e2149deae,64,strlen /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:7:16,0x36998914c138,~
code-source-info,0x83e2149deae,150,176,404,C0O197C3O197C7O227C12O231C16O238C24O238C31O280C39O280C45O308C57O308C63O402,,
code-creation,LazyCompile,10,20305875,0x83e2149e0c6,31, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:11:32,0x83e2149ddd8,~
code-source-info,0x83e2149e0c6,150,324,397,C0O340C5O347C12O362C19O371C22O371C30O393,,
code-creation,LazyCompile,10,20305916,0x83e2149e216,188,stringWidth /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/string-width/index.js:6:21,0x36998914df90,~
code-source-info,0x83e2149e216,151,184,805,C0O197C6O238C12O245C17O256C18O265C19O271C24O280C30O312C36O319C41O330C42O339C43O361C50O369C53O369C60O361C68O404C70O422C72O436C76O427C81O473C86O473C92O523C94O532C101O549C110O565C115O580C117O630C121O639C130O656C135O671C137O704C143O713C148O728C153O740C155O749C158O749C177O445C182O409C185O790C187O803,,
code-creation,LazyCompile,10,20305958,0x83e2149e42e,34,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/strip-ansi/index.js:4:18,0x36998914ea58,~
code-source-info,0x83e2149e42e,152,73,152,C0O83C6O119C13O127C16O127C23O119C33O152,,
code-creation,LazyCompile,10,20306000,0x83e2149e69e,62,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/ansi-regex/index.js:3:18,0x36998914f498,~
code-source-info,0x83e2149e69e,153,32,348,C4O32C10O34C18O81C23O277C31O277C37O290C46O317C56O297C61O346,,
code-creation,LazyCompile,10,20306125,0x83e214a130e,5,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/emoji-regex/index.js:3:27,0x369989150fa8,~
code-source-info,0x83e214a130e,155,41,10284,C0O75C4O10282,,
code-creation,LazyCompile,10,20306375,0x83e214a144e,382,isFullwidthCodePoint /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/node_modules/is-fullwidth-code-point/index.js:4:30,0x369989150018,~
code-source-info,0x83e214a144e,154,70,1667,C0O86C4O97C9O97C16O119C17O132C18O230C22O247C31O275C40O316C49O374C61O496C70O522C79O545C91O647C100O673C112O742C123O768C137O822C148O848C162O896C173O922C187O982C198O1008C212O1054C223O1080C237O1158C248O1184C262O1245C273O1271C287O1296C298O1322C312O1370C323O1396C337O1461C348O1487C362O1585C373O1611C378O1634C379O1646C380O1652C381O1665,,
code-creation,RegExp,3,20306458,0x10754b020,3400,[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1\x2C4}(?:;\\d{0\x2C4})*)?[\\dA-PR-TZcf-ntqry=><~]))
code-creation,RegExp,3,20306583,0x10754bde0,720,\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])
code-creation,RegExp,3,20307125,0x10754c120,1464,\\u001b\\[((?:\\d*;){0\x2C5}\\d*)m
code-creation,RegExp,3,20307166,0x10754c740,1424,\\u001b\\[(?:\\d*;){0\x2C5}\\d*m
tick,0x1a37782dc,20307250,0,0x0,0,0x0,0x101409050,0x83e2149e252,0x83e2149e0dc,0x101432f98,0x83e2149dee7,0x83e2149c8dd,0x83e2149c3fd,0x101426248,0x83e2149c2b8,0x101426248,0x83e214991cc,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20307541,0x83e214a3276,390, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:182:19,0x369989156310,~
code-source-info,0x83e214a
code-creation,LazyCompile,10,20307583,0x83e214a366e,17, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:185:28,0x83e214a3128,~
code-source-info,0x83e214a366e,156,5003,5256,C0O5021C10O5021C16O5255,,
code-creation,LazyCompile,10,20307625,0x83e214a37b6,104, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/layout-manager.js:186:28,0x83e214a35b8,~
code-source-info,0x83e214a37b6,156,5038,5248,C0O5055C4O5064C14O5080C19O5097C24O5106C29O5106C36O5145C45O5156C49O5163C53O5168C60O5172C67O5183C70O5178C81O5198C93O5168C98O5161C103O5247,,
code-creation,LazyCompile,10,20307666,0x83e214a3a9e,18, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:34:28,0x83e21498fb8,~
code-source-info,0x83e214a3a9e,149,864,962,C0O882C10O882C17O961,,
code-creation,LazyCompile,10,20307666,0x83e214a3bd6,17, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:35:28,0x83e214a39e8,~
code-source-info,0x83e214a3bd6,149,899,948,C0O921C5O931C10O921C16O947,,
code-creation,LazyCompile,10,20307708,0x83e214a3dfe,204,init /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:88:7,0x3699891543d8,~
code-source-info,0x83e214a3dfe,157,2875,3393,C0O2909C5O2929C10O2963C15O2973C20O2991C24O2984C28O2973C34O2948C38O3033C43O3044C48O3062C52O3055C56O3044C62O3018C66O3094C71O3101C84O3101C90O3087C94O3148C99O3156C112O3156C118O3141C122O3204C127O3212C136O3235C143O3244C146O3197C150O3272C155O3280C164O3303C171O3312C174O3265C178O3348C182O3341C186O3372C191O3382C195O3356C198O3337C203O3392,,
code-creation,LazyCompile,10,20307750,0x83e214a4016,9,sumPlusOne /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:348:20,0x369989154270,~
code-source-info,0x83e214a4016,157,11885,11915,C0O11896C2O11905C5O11909C8O11913,,
code-creation,LazyCompile,10,20307791,0x83e214a4586,66,doDraw /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:68:16,0x36998914af00,~
code-source-info,0x83e214a4586,149,1643,1822,C0O1643C12O1681C14O1681C16O1691C26O1691C31O1770C34O1775C42O1775C48O1795C54O1810C59O1810C65O1821,,
code-creation,LazyCompile,10,20307833,0x83e214a4706,31, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/table.js:70:24,0x83e214a44a8,~
code-source-info,0x83e214a4706,149,1708,1755,C0O1721C5O1726C10O1736C18O1736C24O1726C30O1754,,
code-creation,LazyCompile,10,20307875,0x83e214a490e,242,draw /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:110:7,0x369989154428,~
code-source-info,0x83e214a490e,157,3859,4618,C0O3889C2O3901C7O3923C12O3936C17O3923C22O3947C23O3952C25O3964C30O3989C35O4005C40O3989C45O4016C46O4034C50O4039C55O4048C60O4062C65O4068C69O4055C75O4039C82O4088C84O4113C105O4152C109O4166C116O4178C120O4166C126O4192C128O4228C133O4253C135O4283C137O4305C139O4317C144O4354C149O4360C153O4347C156O4337C161O4388C166O4403C171O4388C177O4428C178O4466C183O4472C188O4486C192O4479C199O4504C203O4516C207O4508C211O4540C218O4557C222O4572C236O4540C241O4614,,
code-creation,LazyCompile,10,20307916,0x83e214a4c76,205,drawTop /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:137:10,0x369989154478,~
code-source-info,0x83e214a4c76,157,4789,5438,C0O4789C8O4821C10O4821C12O4838C18O4935C23O4942C33O4942C41O5143C44O5151C49O5161C56O5161C62O5151C67O5185C70O5193C79O5198C82O5204C87O5216C92O5227C98O5229C109O5221C113O5257C118O5204C125O5193C130O5276C134O5299C137O5307C142O5317C147O5328C153O5330C164O5322C168O5307C173O5386C184O5424C192O5424C198O5386C204O5434,,
code-creation,LazyCompile,10,20307958,0x83e214a4f0e,88, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:141:36,0x83e214a4b30,~
code-source-info,0x83e214a4f0e,157,4959,5115,C0O4984C5O4992C10O5002C15O5002C21O4992C26O5032C31O5040C40O5045C43O5051C48O5063C53O5074C59O5076C70O5068C74O5051C81O5040C87O5114,,
code-creation,LazyCompile,10,20308000,0x83e214a5116,232,_topLeftChar /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:155:15,0x3699891544f0,~
code-source-info,0x83e214a5116,157,5454,6378,C0O5482C7O5484C11O5502C13O5525C19O5527C24O5541C25O5554C35O5580C49O5624C50O5630C55O5646C60O5691C61O5709C73O5757C79O5878C84O5889C88O5891C91O5883C97O5895C103O5910C106O5915C110O5899C114O5938C116O5967C117O5985C129O6032C130O6043C135O6071C138O6098C143O6109C147O6103C153O6114C156O6111C162O6130C165O6135C169O6119C174O6164C179O6086C182O6204C187O6215C191O6209C197O6220C200O6217C206O6236C209O6241C213O6225C218O6270C221O6358C228O6363C231O6374,,
code-creation,LazyCompile,10,20308041,0x83e214a5376,26,repeat /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:16:16,0x36998914c1b0,~
code-source-info,0x83e214a5376,150,421,474,C0O438C6O457C10O445C15O461C20O462C25O472,,
code-creation,LazyCompile,10,20308083,0x83e214a5516,100,wrapWithStyleColors /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:186:22,0x369989154540,~
code-source-info,0x83e214a5516,157,6401,6803,C0O6432C2O6440C9O6463C13O6479C22O6522C30O6522C35O6567C37O6571C41O6587C45O6594C49O6601C50O6601C55O6624C57O6644C63O6659C66O6639C70O6608C75O6554C78O6690C82O6706C94O6735C96O6750C97O6778C99O6793,,
tick,0x1a3726358,20308125,0,0x0,3,0x0,0x83e214a4f58,0x101426248,0x83e214a4c97,0x83e214a491f,0x83e214a4718,0x101426248,0x83e214a45a0,0x83e2149927c,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,Eval,10,20308458,0x83e214a628e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/safe.js:1:1,0x83e214a6138,~
script-source,372,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/safe.js,//\n// Remark: Requiring this file will use the "safe" colors API\x2C\n// which will not touch String.prototype.\n//\n//   var colors = require('colors/safe');\n//   colors.red("foo")\n//\n//\nvar colors = require('./lib/colors');\nmodule['exports'] = colors;\n
code-source-info,0x83e214a628e,372,0,248,C0O0C4O248,,
code-creation,Function,10,20308458,0x83e214a6326,16, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/safe.js:1:1,0x83e214a61f8,~
code-source-info,0x83e214a6326,372,0,248,C0O195C3O195C8O220C10O238C15O247,,
code-creation,Eval,10,20308750,0x83e214a6d5e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:1:1,0x83e214a6a98,~
script-source,373,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js,/*\n\nThe MIT License (MIT)\n\nOriginal Library\n  - Copyright (c) Marak Squires\n\nAdditional functionality\n - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\nof this software and associated documentation files (the "Software")\x2C to deal\nin the Software without restriction\x2C including without limitation the rights\nto use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\ncopies of the Software\x2C and to permit persons to whom the Software is\nfurnished to do so\x2C subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\nIMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\nLIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar colors = {};\nmodule['exports'] = colors;\n\ncolors.themes = {};\n\nvar util = require('util');\nvar ansiStyles = colors.styles = require('./styles');\nvar defineProps = Object.defineProperties;\nvar newLineRegex = new RegExp(/[\\r\\n]+/g);\n\ncolors.supportsColor = require('./system/supports-colors').supportsColor;\n\nif (typeof colors.enabled === 'undefined') {\n  colors.enabled = colors.supportsColor() !== false;\n}\n\ncolors.enable = function() {\n  colors.enabled = true;\n};\n\ncolors.disable = function() {\n  colors.enabled = false;\n};\n\ncolors.stripColors = colors.strip = function(str) {\n  return ('' + str).replace(/\\x1B\\[\\d+m/g\x2C '');\n};\n\n// eslint-disable-next-line no-unused-vars\nvar stylize = colors.stylize = function stylize(str\x2C style) {\n  if (!colors.enabled) {\n    return str+'';\n  }\n\n  var styleMap = ansiStyles[style];\n\n  // Stylize should work for non-ANSI styles\x2C too\n  if(!styleMap && style in colors){\n    // Style maps like trap operate as functions on strings;\n    // they don't have properties like open or close.\n    return colors[style](str);\n  }\n\n  return styleMap.open + str + styleMap.close;\n};\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nvar escapeStringRegexp = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return str.replace(matchOperatorsRe\x2C '\\\\$&');\n};\n\nfunction build(_styles) {\n  var builder = function builder() {\n    return applyStyle.apply(builder\x2C arguments);\n  };\n  builder._styles = _styles;\n  // __proto__ is used because we must return a function\x2C but there is\n  // no way to create a function with a different prototype.\n  builder.__proto__ = proto;\n  return builder;\n}\n\nvar styles = (function() {\n  var ret = {};\n  ansiStyles.grey = ansiStyles.gray;\n  Object.keys(ansiStyles).forEach(function(key) {\n    ansiStyles[key].closeRe =\n      new RegExp(escapeStringRegexp(ansiStyles[key].close)\x2C 'g');\n    ret[key] = {\n      get: function() {\n        return build(this._styles.concat(key));\n      }\x2C\n    };\n  });\n  return ret;\n})();\n\nvar proto = defineProps(function colors() {}\x2C styles);\n\nfunction applyStyle() {\n  var args = Array.prototype.slice.call(arguments);\n\n  var str = args.map(function(arg) {\n    // Use weak equality check so we can colorize null/undefined in safe mode\n    if (arg != null && arg.constructor === String) {\n      return arg;\n    } else {\n      return util.inspect(arg);\n    }\n  }).join(' ');\n\n  if (!colors.enabled || !str) {\n    return str;\n  }\n\n  var newLinesPresent = str.indexOf('\\n') != -1;\n\n  var nestedStyles = this._styles;\n\n  var i = nestedStyles.length;\n  while (i--) {\n    var code = ansiStyles[nestedStyles[i]];\n    str = code.open + str.replace(code.closeRe\x2C code.open) + code.close;\n    if (newLinesPresent) {\n      str = str.replace(newLineRegex\x2C function(match) {\n        return code.close + match + code.open;\n      });\n    }\n  }\n\n  return str;\n}\n\ncolors.setTheme = function(theme) {\n  if (typeof theme === 'string') {\n    console.log('colors.setTheme now only accepts an object\x2C not a string.  ' +\n      'If you are trying to set a theme from a file\x2C it is now your (the ' +\n      'caller\\'s) responsibility to require the file.  The old syntax ' +\n      'looked like colors.setTheme(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n      'colors.setTheme(require(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'));');\n    return;\n  }\n  for (var style in theme) {\n    (function(style) {\n      colors[style] = function(str) {\n        if (typeof theme[style] === 'object') {\n          var out = str;\n          for (var i in theme[style]) {\n            out = colors[theme[style][i]](out);\n          }\n          return out;\n        }\n        return colors[theme[style]](str);\n      };\n    })(style);\n  }\n};\n\nfunction init() {\n  var ret = {};\n  Object.keys(styles).forEach(function(name) {\n    ret[name] = {\n      get: function() {\n        return build([name]);\n      }\x2C\n    };\n  });\n  return ret;\n}\n\nvar sequencer = function sequencer(map\x2C str) {\n  var exploded = str.split('');\n  exploded = exploded.map(map);\n  return exploded.join('');\n};\n\n// custom formatter methods\ncolors.trap = require('./custom/trap');\ncolors.zalgo = require('./custom/zalgo');\n\n// maps\ncolors.maps = {};\ncolors.maps.america = require('./maps/america')(colors);\ncolors.maps.zebra = require('./maps/zebra')(colors);\ncolors.maps.rainbow = require('./maps/rainbow')(colors);\ncolors.maps.random = require('./maps/random')(colors);\n\nfor (var map in colors.maps) {\n  (function(map) {\n    colors[map] = function(str) {\n      return sequencer(colors.maps[map]\x2C str);\n    };\n  })(map);\n}\n\ndefineProps(colors\x2C init());\n
code-source-info,0x83e214a6d5e,373,0,5866,C0O0C4O5866,,
code-creation,Function,10,20309000,0x83e214a756e,466, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:1:1,0x83e214a6cc8,~
code-source-info,0x83e214a756e
code-creation,Function,10,20309000,0x83e214a796e,27, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:204:12,0x83e214a7370,~
code-source-info,0x83e214a796e,373,5727,5826,C0O5727C9O5739C17O5746C21O5751C26O5825,,
code-creation,Function,10,20309041,0x83e214a7ace,64, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:96:23,0x83e214a71e0,~
code-source-info,0x83e214a7ace,373,2891,3221,C0O2891C5O2908C6O2908C8O2914C18O2943C22O2930C26O2951C30O2958C40O2958C46O2974C56O2975C61O3208C63O3219,,
code-creation,Eval,10,20309208,0x83e214a8a1e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/styles.js:1:1,0x83e214a88a8,~
script-source,374,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/styles.js,/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\nof this software and associated documentation files (the "Software")\x2C to deal\nin the Software without restriction\x2C including without limitation the rights\nto use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\ncopies of the Software\x2C and to permit persons to whom the Software is\nfurnished to do so\x2C subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\nIMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\nLIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar styles = {};\nmodule['exports'] = styles;\n\nvar codes = {\n  reset: [0\x2C 0]\x2C\n\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  inverse: [7\x2C 27]\x2C\n  hidden: [8\x2C 28]\x2C\n  strikethrough: [9\x2C 29]\x2C\n\n  black: [30\x2C 39]\x2C\n  red: [31\x2C 39]\x2C\n  green: [32\x2C 39]\x2C\n  yellow: [33\x2C 39]\x2C\n  blue: [34\x2C 39]\x2C\n  magenta: [35\x2C 39]\x2C\n  cyan: [36\x2C 39]\x2C\n  white: [37\x2C 39]\x2C\n  gray: [90\x2C 39]\x2C\n  grey: [90\x2C 39]\x2C\n\n  brightRed: [91\x2C 39]\x2C\n  brightGreen: [92\x2C 39]\x2C\n  brightYellow: [93\x2C 39]\x2C\n  brightBlue: [94\x2C 39]\x2C\n  brightMagenta: [95\x2C 39]\x2C\n  brightCyan: [96\x2C 39]\x2C\n  brightWhite: [97\x2C 39]\x2C\n\n  bgBlack: [40\x2C 49]\x2C\n  bgRed: [41\x2C 49]\x2C\n  bgGreen: [42\x2C 49]\x2C\n  bgYellow: [43\x2C 49]\x2C\n  bgBlue: [44\x2C 49]\x2C\n  bgMagenta: [45\x2C 49]\x2C\n  bgCyan: [46\x2C 49]\x2C\n  bgWhite: [47\x2C 49]\x2C\n  bgGray: [100\x2C 49]\x2C\n  bgGrey: [100\x2C 49]\x2C\n\n  bgBrightRed: [101\x2C 49]\x2C\n  bgBrightGreen: [102\x2C 49]\x2C\n  bgBrightYellow: [103\x2C 49]\x2C\n  bgBrightBlue: [104\x2C 49]\x2C\n  bgBrightMagenta: [105\x2C 49]\x2C\n  bgBrightCyan: [106\x2C 49]\x2C\n  bgBrightWhite: [107\x2C 49]\x2C\n\n  // legacy styles for colors pre v1.0.0\n  blackBG: [40\x2C 49]\x2C\n  redBG: [41\x2C 49]\x2C\n  greenBG: [42\x2C 49]\x2C\n  yellowBG: [43\x2C 49]\x2C\n  blueBG: [44\x2C 49]\x2C\n  magentaBG: [45\x2C 49]\x2C\n  cyanBG: [46\x2C 49]\x2C\n  whiteBG: [47\x2C 49]\x2C\n\n};\n\nObject.keys(codes).forEach(function(key) {\n  var val = codes[key];\n  var style = styles[key] = [];\n  style.open = '\\u001b[' + val[0] + 'm';\n  style.close = '\\u001b[' + val[1] + 'm';\n});\n
code-source-info,0x83e214a8a1e,374,0,2513,C0O0C4O2513,,
code-creation,Function,10,20309375,0x83e214a9956,55, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/styles.js:1:1,0x83e214a8988,~
code-source-info,0x83e214a9956,374,0,2513,C0O0C5O1140C6O1140C8O1144C10O1162C14O1185C18O1185C20O2327C24O2334C32O2334C38O2345C48O2346C54O2512,,
tick,0x100e1c82c,20309375,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a75a4,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a6329,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a5534,0x83e214a4d3c,0x83e214a491f,0x83e214a4718,0x101426248,0x83e214a45a0,0x83e2149927c,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20309500,0x83e214a9e16,65, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/styles.js:90:36,0x83e214a8a50,~
code-source-info,0x83e214a9e16,374,2362,2510,C0O2382C5O2387C9O2408C12O2415C15O2420C22O2428C26O2456C29O2451C35O2460C38O2439C42O2469C47O2498C50O2493C56O2502C59O2481C64O2509,,
code-creation,Eval,10,20309916,0x83e214aa48e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js:1:1,0x83e214aa2d8,~
script-source,375,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js,/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\nof this software and associated documentation files (the "Software")\x2C to deal\nin the Software without restriction\x2C including without limitation the rights\nto use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\ncopies of the Software\x2C and to permit persons to whom the Software is\nfurnished to do so\x2C subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\nIMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\nLIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n'use strict';\n\nvar os = require('os');\nvar hasFlag = require('./has-flag.js');\n\nvar env = process.env;\n\nvar forceColor = void 0;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')\n           || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0\n    || parseInt(env.FORCE_COLOR\x2C 10) !== 0;\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level: level\x2C\n    hasBasic: true\x2C\n    has256: level >= 2\x2C\n    has16m: level >= 3\x2C\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full')\n      || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n\n  var min = forceColor ? 1 : 0;\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However\x2C here we target Node.js 8 at minimum as it is an LTS\n    // release\x2C and Node.js 7 is not. Windows 10 build 10586 is the first\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\n    // first release that supports 16m/TrueColor.\n    var osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8\n        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS'\x2C 'CIRCLECI'\x2C 'APPVEYOR'\x2C 'GITLAB_CI'].some(function(sign) {\n      return sign in env;\n    }) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return (/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0\n    );\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0]\x2C 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Hyper':\n        return 3;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  var level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel\x2C\n  stdout: getSupportLevel(process.stdout)\x2C\n  stderr: getSupportLevel(process.stderr)\x2C\n};\n
code-source-info,0x83e214aa48e,375,0,4049,C0O0C4O4049,,
code-creation,Function,10,20310083,0x83e214aa72e,255, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js:1:1,0x83e214aa3f8,~
code-source-info,0x83e214aa72e,375,0,4049,C0O0C22O1151C25O1151C29O1151C31O1180C34O1180C38O1180C40O1217C44O1225C48O1217C50O1248C51O1248C53O1256C59O1260C71O1283C83O1307C89O1335C90O1346C94O1362C100O1366C112O1386C124O1407C136O1443C142O1472C143O1483C145O1493C150O1511C155O1523C158O1540C163O1552C169O1559C181O1585C189O1572C196O1602C200O1534C202O3907C209O3943C213O3986C217O3994C222O3970C230O4029C234O4037C239O4013C249O3922C254O4048,,
code-creation,Eval,10,20310250,0x83e214ab23e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/has-flag.js:1:1,0x83e214ab0e8,~
script-source,376,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/has-flag.js,/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted\x2C free of charge\x2C to any person obtaining a copy of\nthis software and associated documentation files (the "Software")\x2C to deal in\nthe Software without restriction\x2C including without limitation the rights to\nuse\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell copies\nof the Software\x2C and to permit persons to whom the Software is furnished to do\nso\x2C subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\nIMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\nLIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n'use strict';\n\nmodule.exports = function(flag\x2C argv) {\n  argv = argv || process.argv;\n\n  var terminatorPos = argv.indexOf('--');\n  var prefix = /^-{1\x2C2}/.test(flag) ? '' : '--';\n  var pos = argv.indexOf(prefix + flag);\n\n  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n
code-source-info,0x83e214ab23e,376,0,1415,C0O0C4O1415,,
code-creation,Function,10,20310333,0x83e214ab35e,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/has-flag.js:1:1,0x83e214ab1a8,~
code-source-info,0x83e214ab35e,376,0,1415,C0O1131C4O1146C9O1414,,
code-creation,LazyCompile,10,20310375,0x83e214ab646,93,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/has-flag.js:27:26,0x83e214ab270,~
code-source-info,0x83e214ab646,376,1156,1413,C0O1173C4O1188C8O1196C14O1230C22O1230C28O1260C33O1270C38O1270C52O1311C59O1326C63O1311C69O1338C71O1349C79O1374C89O1394C92O1411,,
code-creation,RegExp,3,20310458,0x10754cd40,1000,^-{1\x2C2}
code-creation,LazyCompile,10,20310500,0x83e214ab7ce,16,getSupportLevel /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js:142:25,0x83e214aa588,~
code-source-info,0x83e214ab7ce,375,3824,3905,C0O3849C3O3849C8O3874C11O3881C15O3903,,
code-creation,LazyCompile,10,20310541,0x83e214abab6,556,supportsColor /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js:58:23,0x83e214aa510,~
code-source-info,0x83e214abab
code-creation,LazyCompile,10,20310625,0x83e214ac056,40,translateLevel /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/system/supports-colors.js:45:24,0x83e214aa4c0,~
code-source-info,0x83e214ac056,375,1635,1792,C0O1647C1O1657C6O1670C7O1683C8O1691C15O1711C21O1756C30O1780C39O1790,,
code-creation,RegExp,3,20310750,0x10754d1a0,1376,-256(color)?$
tick,0x100e897f4,20310750,0,0x0,0,0x0,0x10146d58c,0x83e214abc9a,0x83e214ab7d1,0x83e214a75f5,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a6329,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a5534,0x83e214a4d3c,0x83e214a491f,0x83e214a4718,0x101426248,0x83e214a45a0,0x83e2149927c,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20310875,0x83e214ac5de,93, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:99:43,0x83e214a79c8,~
code-source-info,0x83e214ac5de,373,2991,3203,C0O2991C9O3003C16O3013C20O3039C36O3075C40O3081C45O3046C55O3035C60O3027C64O3099C72O3103C77O3123C87O3108C92O3202,,
code-creation,LazyCompile,10,20311000,0x83e214ac7b6,39,escapeStringRegexp /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:78:34,0x83e214a7190,~
code-source-info,0x83e214ac7b6,373,2398,2538,C0O2408C6O2443C15O2449C20O2443C21O2502C32O2502C38O2536,,
code-creation,RegExp,3,20311041,0x10754d760,984,[|\\\\{}()[\\]^$+*?.]
code-creation,Eval,10,20311333,0x83e214ad416,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/trap.js:1:1,0x83e214ad2c0,~
script-source,377,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/trap.js,module['exports'] = function runTheTrap(text\x2C options) {\n  var result = '';\n  text = text || 'Run the trap\x2C drop the bass';\n  text = text.split('');\n  var trap = {\n    a: ['\\u0040'\x2C '\\u0104'\x2C '\\u023a'\x2C '\\u0245'\x2C '\\u0394'\x2C '\\u039b'\x2C '\\u0414']\x2C\n    b: ['\\u00df'\x2C '\\u0181'\x2C '\\u0243'\x2C '\\u026e'\x2C '\\u03b2'\x2C '\\u0e3f']\x2C\n    c: ['\\u00a9'\x2C '\\u023b'\x2C '\\u03fe']\x2C\n    d: ['\\u00d0'\x2C '\\u018a'\x2C '\\u0500'\x2C '\\u0501'\x2C '\\u0502'\x2C '\\u0503']\x2C\n    e: ['\\u00cb'\x2C '\\u0115'\x2C '\\u018e'\x2C '\\u0258'\x2C '\\u03a3'\x2C '\\u03be'\x2C '\\u04bc'\x2C\n      '\\u0a6c']\x2C\n    f: ['\\u04fa']\x2C\n    g: ['\\u0262']\x2C\n    h: ['\\u0126'\x2C '\\u0195'\x2C '\\u04a2'\x2C '\\u04ba'\x2C '\\u04c7'\x2C '\\u050a']\x2C\n    i: ['\\u0f0f']\x2C\n    j: ['\\u0134']\x2C\n    k: ['\\u0138'\x2C '\\u04a0'\x2C '\\u04c3'\x2C '\\u051e']\x2C\n    l: ['\\u0139']\x2C\n    m: ['\\u028d'\x2C '\\u04cd'\x2C '\\u04ce'\x2C '\\u0520'\x2C '\\u0521'\x2C '\\u0d69']\x2C\n    n: ['\\u00d1'\x2C '\\u014b'\x2C '\\u019d'\x2C '\\u0376'\x2C '\\u03a0'\x2C '\\u048a']\x2C\n    o: ['\\u00d8'\x2C '\\u00f5'\x2C '\\u00f8'\x2C '\\u01fe'\x2C '\\u0298'\x2C '\\u047a'\x2C '\\u05dd'\x2C\n      '\\u06dd'\x2C '\\u0e4f']\x2C\n    p: ['\\u01f7'\x2C '\\u048e']\x2C\n    q: ['\\u09cd']\x2C\n    r: ['\\u00ae'\x2C '\\u01a6'\x2C '\\u0210'\x2C '\\u024c'\x2C '\\u0280'\x2C '\\u042f']\x2C\n    s: ['\\u00a7'\x2C '\\u03de'\x2C '\\u03df'\x2C '\\u03e8']\x2C\n    t: ['\\u0141'\x2C '\\u0166'\x2C '\\u0373']\x2C\n    u: ['\\u01b1'\x2C '\\u054d']\x2C\n    v: ['\\u05d8']\x2C\n    w: ['\\u0428'\x2C '\\u0460'\x2C '\\u047c'\x2C '\\u0d70']\x2C\n    x: ['\\u04b2'\x2C '\\u04fe'\x2C '\\u04fc'\x2C '\\u04fd']\x2C\n    y: ['\\u00a5'\x2C '\\u04b0'\x2C '\\u04cb']\x2C\n    z: ['\\u01b5'\x2C '\\u0240']\x2C\n  };\n  text.forEach(function(c) {\n    c = c.toLowerCase();\n    var chars = trap[c] || [' '];\n    var rand = Math.floor(Math.random() * chars.length);\n    if (typeof trap[c] !== 'undefined') {\n      result += trap[c][rand];\n    } else {\n      result += c;\n    }\n  });\n  return result;\n};\n
code-source-info,0x83e214ad416,377,0,1677,C0O0C4O1677,,
code-creation,Function,10,20311458,0x83e214ad526,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/trap.js:1:1,0x83e214ad380,~
code-source-info,0x83e214ad526,377,0,1677,C0O0C4O18C9O1676,,
code-creation,Eval,10,20311625,0x83e214adb9e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/zalgo.js:1:1,0x83e214ada48,~
script-source,378,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/zalgo.js,// please no\nmodule['exports'] = function zalgo(text\x2C options) {\n  text = text || '   he is here   ';\n  var soul = {\n    'up': [\n      '\u030d'\x2C '\u030e'\x2C '\u0304'\x2C '\u0305'\x2C\n      '\u033f'\x2C '\u0311'\x2C '\u0306'\x2C '\u0310'\x2C\n      '\u0352'\x2C '\u0357'\x2C '\u0351'\x2C '\u0307'\x2C\n      '\u0308'\x2C '\u030a'\x2C '\u0342'\x2C '\u0313'\x2C\n      '\u0308'\x2C '\u034a'\x2C '\u034b'\x2C '\u034c'\x2C\n      '\u0303'\x2C '\u0302'\x2C '\u030c'\x2C '\u0350'\x2C\n      '\u0300'\x2C '\u0301'\x2C '\u030b'\x2C '\u030f'\x2C\n      '\u0312'\x2C '\u0313'\x2C '\u0314'\x2C '\u033d'\x2C\n      '\u0309'\x2C '\u0363'\x2C '\u0364'\x2C '\u0365'\x2C\n      '\u0366'\x2C '\u0367'\x2C '\u0368'\x2C '\u0369'\x2C\n      '\u036a'\x2C '\u036b'\x2C '\u036c'\x2C '\u036d'\x2C\n      '\u036e'\x2C '\u036f'\x2C '\u033e'\x2C '\u035b'\x2C\n      '\u0346'\x2C '\u031a'\x2C\n    ]\x2C\n    'down': [\n      '\u0316'\x2C '\u0317'\x2C '\u0318'\x2C '\u0319'\x2C\n      '\u031c'\x2C '\u031d'\x2C '\u031e'\x2C '\u031f'\x2C\n      '\u0320'\x2C '\u0324'\x2C '\u0325'\x2C '\u0326'\x2C\n      '\u0329'\x2C '\u032a'\x2C '\u032b'\x2C '\u032c'\x2C\n      '\u032d'\x2C '\u032e'\x2C '\u032f'\x2C '\u0330'\x2C\n      '\u0331'\x2C '\u0332'\x2C '\u0333'\x2C '\u0339'\x2C\n      '\u033a'\x2C '\u033b'\x2C '\u033c'\x2C '\u0345'\x2C\n      '\u0347'\x2C '\u0348'\x2C '\u0349'\x2C '\u034d'\x2C\n      '\u034e'\x2C '\u0353'\x2C '\u0354'\x2C '\u0355'\x2C\n      '\u0356'\x2C '\u0359'\x2C '\u035a'\x2C '\u0323'\x2C\n    ]\x2C\n    'mid': [\n      '\u0315'\x2C '\u031b'\x2C '\u0300'\x2C '\u0301'\x2C\n      '\u0358'\x2C '\u0321'\x2C '\u0322'\x2C '\u0327'\x2C\n      '\u0328'\x2C '\u0334'\x2C '\u0335'\x2C '\u0336'\x2C\n      '\u035c'\x2C '\u035d'\x2C '\u035e'\x2C\n      '\u035f'\x2C '\u0360'\x2C '\u0362'\x2C '\u0338'\x2C\n      '\u0337'\x2C '\u0361'\x2C ' \u0489'\x2C\n    ]\x2C\n  };\n  var all = [].concat(soul.up\x2C soul.down\x2C soul.mid);\n\n  function randomNumber(range) {\n    var r = Math.floor(Math.random() * range);\n    return r;\n  }\n\n  function isChar(character) {\n    var bool = false;\n    all.filter(function(i) {\n      bool = (i === character);\n    });\n    return bool;\n  }\n\n\n  function heComes(text\x2C options) {\n    var result = '';\n    var counts;\n    var l;\n    options = options || {};\n    options['up'] =\n      typeof options['up'] !== 'undefined' ? options['up'] : true;\n    options['mid'] =\n      typeof options['mid'] !== 'undefined' ? options['mid'] : true;\n    options['down'] =\n      typeof options['down'] !== 'undefined' ? options['down'] : true;\n    options['size'] =\n      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';\n    text = text.split('');\n    for (l in text) {\n      if (isChar(l)) {\n        continue;\n      }\n      result = result + text[l];\n      counts = {'up': 0\x2C 'down': 0\x2C 'mid': 0};\n      switch (options.size) {\n        case 'mini':\n          counts.up = randomNumber(8);\n          counts.mid = randomNumber(2);\n          counts.down = randomNumber(8);\n          break;\n        case 'maxi':\n          counts.up = randomNumber(16) + 3;\n          counts.mid = randomNumber(4) + 1;\n          counts.down = randomNumber(64) + 3;\n          break;\n        default:\n          counts.up = randomNumber(8) + 1;\n          counts.mid = randomNumber(6) / 2;\n          counts.down = randomNumber(8) + 1;\n          break;\n      }\n\n      var arr = ['up'\x2C 'mid'\x2C 'down'];\n      for (var d in arr) {\n        var index = arr[d];\n        for (var i = 0; i <= counts[index]; i++) {\n          if (options[index]) {\n            result = result + soul[index][randomNumber(soul[index].length)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  // don't summon him\n  return heComes(text\x2C options);\n};\n\n
code-source-info,0x83e214adb9e,378,0,2778,C0O0C4O2778,,
code-creation,Function,10,20311791,0x83e214adce6,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/custom/zalgo.js:1:1,0x83e214adb08,~
code-source-info,0x83e214adce6,378,0,2778,C0O13C4O31C9O2777,,
code-creation,Eval,10,20312416,0x83e214ae4f6,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/america.js:1:1,0x83e214ae3a0,~
script-source,379,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/america.js,module['exports'] = function(colors) {\n  return function(letter\x2C i\x2C exploded) {\n    if (letter === ' ') return letter;\n    switch (i%3) {\n      case 0: return colors.red(letter);\n      case 1: return colors.white(letter);\n      case 2: return colors.blue(letter);\n    }\n  };\n};\n
code-source-info,0x83e214ae4f6,379,0,278,C0O0C4O278,,
code-creation,Function,10,20312458,0x83e214ae636,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/america.js:1:1,0x83e214ae460,~
code-source-info,0x83e214ae636,379,0,278,C0O0C4O18C9O277,,
code-creation,LazyCompile,10,20312500,0x83e214ae876,14,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/america.js:1:29,0x83e214ae528,~
code-source-info,0x83e214ae876,379,28,276,C0O28C9O41C13O274,,
code-creation,Eval,10,20312625,0x83e214aec46,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/zebra.js:1:1,0x83e214aeaf0,~
script-source,380,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/zebra.js,module['exports'] = function(colors) {\n  return function(letter\x2C i\x2C exploded) {\n    return i % 2 === 0 ? letter : colors.inverse(letter);\n  };\n};\n
code-source-info,0x83e214aec46,380,0,146,C0O0C4O146,,
code-creation,Function,10,20312625,0x83e214aed86,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/zebra.js:1:1,0x83e214aebb0,~
code-source-info,0x83e214aed86,380,0,146,C0O0C4O18C9O145,,
code-creation,LazyCompile,10,20312666,0x83e214aef9e,14,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/zebra.js:1:29,0x83e214aec78,~
code-source-info,0x83e214aef9e,380,28,144,C0O28C9O41C13O142,,
code-creation,Eval,10,20312791,0x83e214af38e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/rainbow.js:1:1,0x83e214af238,~
script-source,381,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/rainbow.js,module['exports'] = function(colors) {\n  // RoY G BiV\n  var rainbowColors = ['red'\x2C 'yellow'\x2C 'green'\x2C 'blue'\x2C 'magenta'];\n  return function(letter\x2C i\x2C exploded) {\n    if (letter === ' ') {\n      return letter;\n    } else {\n      return colors[rainbowColors[i++ % rainbowColors.length]](letter);\n    }\n  };\n};\n\n
code-source-info,0x83e214af38e,381,0,311,C0O0C4O311,,
code-creation,Function,10,20312833,0x83e214af4d6,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/rainbow.js:1:1,0x83e214af2f8,~
code-source-info,0x83e214af4d6,381,0,311,C0O0C4O18C9O310,,
code-creation,LazyCompile,10,20312875,0x83e214af78e,20,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/rainbow.js:1:29,0x83e214af3c0,~
code-source-info,0x83e214af78e,381,28,308,C0O28C9O76C13O76C15O125C19O306,,
code-creation,Eval,10,20312958,0x83e214afb8e,5, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/random.js:1:1,0x83e214afa38,~
script-source,382,/Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/random.js,module['exports'] = function(colors) {\n  var available = ['underline'\x2C 'inverse'\x2C 'grey'\x2C 'yellow'\x2C 'red'\x2C 'green'\x2C\n    'blue'\x2C 'white'\x2C 'cyan'\x2C 'magenta'\x2C 'brightYellow'\x2C 'brightRed'\x2C\n    'brightGreen'\x2C 'brightBlue'\x2C 'brightWhite'\x2C 'brightCyan'\x2C 'brightMagenta'];\n  return function(letter\x2C i\x2C exploded) {\n    return letter === ' ' ? letter :\n      colors[\n          available[Math.round(Math.random() * (available.length - 2))]\n      ](letter);\n  };\n};\n
code-source-info,0x83e214afb8e,382,0,454,C0O0C4O454,,
code-creation,Function,10,20313000,0x83e214afcd6,10, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/random.js:1:1,0x83e214afaf8,~
code-source-info,0x83e214afcd6,382,0,454,C0O0C4O18C9O453,,
code-creation,LazyCompile,10,20313041,0x83e214affe6,20,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/maps/random.js:1:29,0x83e214afbc0,~
code-source-info,0x83e214affe6,382,28,452,C0O28C9O57C13O57C15O267C19O450,,
code-creation,LazyCompile,10,20313083,0x83e214b02e6,46,init /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:174:14,0x83e214a6e88,~
code-source-info,0x83e214b02e6,373,5003,5180,C0O5003C5O5020C6O5020C8O5026C12O5033C22O5033C28O5045C38O5046C43O5167C45O5178,,
code-creation,LazyCompile,10,20313125,0x83e214b0556,38, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:176:39,0x83e214b0210,~
code-source-info,0x83e214b0556,373,5062,5162,C0O5062C9O5075C17O5079C22O5100C32O5085C37O5161,,
code-creation,LazyCompile,10,20313166,0x83e214b0c26,23,get /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:178:20,0x83e214b03f0,~
code-source-info,0x83e214b0c26,373,5108,5150,C0O5121C14O5135C18O5128C22O5142,,
code-creation,LazyCompile,10,20313208,0x83e214b0d86,20,build /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:85:15,0x83e214a6d90,~
code-source-info,0x83e214b0d86,373,2555,2867,C0O2583C5O2660C7O2676C11O2821C13O2839C17O2850C19O2865,,
code-creation,LazyCompile,10,20313250,0x83e214b0fd6,20,builder /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:86:33,0x83e214b0cc8,~
code-source-info,0x83e214b0fd6,373,2599,2656,C0O2599C5O2608C8O2626C13O2626C19O2652,,
code-creation,LazyCompile,10,20313291,0x83e214b121e,220,applyStyle /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:113:20,0x83e214a6e08,~
code-source-info,0x83e214b121e,373,3302,4084,C0O3302C7O3320C11O3326C16O3336C21O3342C26O3342C32O3377C42O3377C48O3601C56O3602C62O3616C67O3628C75O3640C77O3651C79O3662C80O3696C88O3696C96O3710C101O3744C106O3777C111O3795C121O3795C123O3816C130O3839C133O3826C136O3816C138O3849C141O3860C146O3871C154O3884C162O3898C167O3871C173O3865C180O3911C184O3904C188O3922C192O3961C202O3969C207O3961C214O3787C217O4071C219O4082,,
code-creation,LazyCompile,10,20313333,0x83e214b14b6,37, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/colors/lib/colors.js:116:30,0x83e214b1090,~
code-source-info,0x83e214b14b6,373,3389,3600,C0O3479C5O3502C10O3518C13O3514C18O3534C20O3545C21O3565C26O3577C31O3577C36O3590,,
tick,0x1a37298d4,20313416,1,0x100cbd818,3,0x0,0x172aed065aee,0x172aed06520f,0x172aed063b1d,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a76bd,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a6329,0x172aed063c81,0x172aed05f883,0x172aed05ed06,0x172aed04d747,0x172aed04d2fa,0x172aed068c06,0x83e214a5534,0x83e214a4d3c,0x83e214a491f,0x83e214a4718,0x101426248,0x83e214a45a0,0x83e2149927c,0x83e21497364,0x83e214967a0,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,10,20313666,0x83e214b16e6,350,drawLine /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:213:11,0x369989154590,~
code-source-info,0x83e214b16e6,157,7556,8569,C0O7636C5O7647C11O7649C22O7641C26O7689C34O7694C36O7715C42O7750C47O7761C54O7763C57O7755C61O7784C65O7786C68O7778C72O7814C76O7825C78O7814C83O7864C88O7879C92O7869C96O7891C100O7893C103O7881C107O7798C110O7913C114O7939C116O7928C121O7975C126O7980C131O8030C138O8036C146O8053C151O8036C158O8083C162O8100C167O8105C176O8144C183O8150C191O8167C196O8150C203O8202C210O8207C214O8237C219O8251C224O8270C228O8263C231O8243C235O8289C239O8329C254O8364C261O8370C266O8395C277O8370C283O8410C290O8426C298O8454C309O8426C315O8467C317O8489C323O8499C327O8531C344O8531C349O8565,,
code-creation,LazyCompile,10,20313791,0x83e214b1ae6,56,truncate /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:186:18,0x36998914c4d0,~
code-source-info,0x83e214b1ae6,150,4572,4866,C0O4611C8O4667C11O4667C16O4682C18O4698C23O4722C25O4733C26O4740C29O4757C41O4792C44O4792C50O4838C52O4849C55O4864,,
code-creation,LazyCompile,10,20313833,0x83e214b1cbe,139,pad /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/utils.js:20:13,0x36998914c200,~
code-source-info,0x83e214b1cbe,150,488,992,C0O526C3O526C8O541C10O549C16O553C21O583C23O587C27O601C46O646C49O652C57O672C62O687C64O745C68O750C75O762C79O750C85O787C87O794C91O811C94O817C102O835C109O843C114O841C119O871C121O911C124O923C129O921C134O952C136O979C138O990,,
code-creation,LazyCompile,10,20313916,0x83e214b1e9e,71,stylizeLine /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:236:14,0x3699891545e0,~
code-source-info,0x83e214b1e9e,157,8584,8844,C0O8625C8O8625C16O8679C24O8679C32O8730C38O8732C43O8762C51O8762C59O8810C61O8822C67O8832C70O8840,,
code-creation,LazyCompile,10,20314208,0x83e214b2fce,105,drawBottom /Users/carloscalvo/code/Coder/backend/entregas/node_modules/cli-table3/src/cell.js:250:13,0x369989154630,~
code-source-info,0x83e214b2fce,157,9021,9301,C0O9055C5O9066C11O9068C22O9060C26O9122C33O9128C38O9140C43O9146C48O9159C53O9128C60O9183C64O9200C69O9205C78O9243C88O9278C94O9288C98O9243C104O9297,,
code-creation,LazyCompile,10,20314250,0x83e214b3156,24,logToLocalStr /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:83:26,0x83e21496cc8,~
code-source-info,0x83e214b3156,147,2782,2821,C0O2794C7O2811C16O2804C23O2820,,
code-creation,LazyCompile,10,20314291,0x83e214b3446,128,asHighRow /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:105:20,0x369989148a30,~
code-source-info,0x83e214b3446,147,3217,3430,C0O3234C9O3247C16O3262C27O3275C38O3290C49O3304C60O3320C71O3338C82O3362C90O3386C96O3392C100O3397C105O3408C109O3412C113O3397C118O3419C127O3428,,
code-creation,LazyCompile,10,20314333,0x83e214b366e,263,asBytes /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/printResult.js:132:18,0x369989148b20,~
code-source-info,0x83e214b366e,147,3785,4132,C0O3811C4O3818C9O3818C15O3850C44O3845C72O3845C75O3881C80O3885C85O3889C96O3889C103O3911C105O3925C110O3941C114O3925C118O3923C125O3834C188O3955C190O3972C193O3989C198O3972C202O3970C206O4000C208O4016C211O4033C216O4016C220O4014C224O4043C226O4056C229O4073C234O4056C238O4054C242O4080C244O4093C247O4110C252O4093C256O4091C260O4117C262O4130,,
code-creation,LazyCompile,10,20314416,0x83e214b3b66,496,module.exports /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pretty-bytes/index.js:68:18,0x3699891696d0,~
code-source-info,0x83e214b3b
code-creation,LazyCompile,10,20314500,0x83e214b3f3e,66,toLocaleString /Users/carloscalvo/code/Coder/backend/entregas/node_modules/pretty-bytes/index.js:57:24,0x369989169680,~
code-source-info,0x83e214b3f3e,166,727,1022,C0O772C3O781C9O815C13O821C18O821C25O858C30O858C39O899C40O910C49O965C56O965C63O1006C65O1020,,
code-creation,LazyCompile,10,20315333,0x83e214b50f6,54,format /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/format.js:3:17,0x17d305516608,~
code-source-info,0x83e214b50f6,219,30,139,C0O40C4O48C9O62C14O72C17O77C18O93C21O105C25O110C32O120C39O110C44O103C50O128C53O133,,
code-creation,LazyCompile,10,20315500,0x83e214b52de,40, /Users/carloscalvo/code/Coder/backend/entregas/benchmark.js:18:22,0x324f23cac9a8,~
code-source-info,0x83e214b52de,136,382,431,C0O403C4O396C9O403C14O409C18O416C25O423C28O416C34O403C39O431,,
code-creation,LazyCompile,10,20315541,0x83e214b54a6,257,concat node:buffer:535:32,0x30d75ba4fd8,~
code-source-info,0x83e214b54a6,18,14987,16119,C0O15006C8O15006C13O15047C19O15054C24O15065C29O15072C34O15089C35O15093C39O15125C42O15154C44O15166C48O15159C53O15187C55O15195C59O15199C65O15217C67O15231C71O15235C83O15175C88O15141C93O15272C101O15272C106O15328C109O15335C114O15335C120O15368C122O15386C124O15398C128O15391C133O15429C135O15433C139O15442C144O15447C150O15603C160O15651C178O15687C184O15609C189O15603C190O15703C195O15747C209O15710C218O15407C223O15373C226O15832C228O15840C233O16047C249O16047C254O16103C256O16117,,
tick,0x1a37298d4,20316750,0,0x0,4,0x0,0x83e214b54a5,0x83e214b52fa,0x3a1583d10dcb,0x83e214965a4,0x377435930421,0x37743592f8c4,0x37743592f360
code-creation,LazyCompile,13,20316958,0x10754dba0,2324,resolve node:path:1091:10,0xe898a5e8648,*
code-source-info,0x10754dbax30d75b99d28S0xe898a5e8160S0xe898a5e80c0
code-creation,LazyCompile,10,20317083,0x83e214b62e6,135,_copyActual node:buffer:242:21,0x30d75ba4848,~
code-source-info,0x83e214b62e6,18,6595,7106,C0O6653C2O6667C6O6690C13O6697C16O6681C21O6749C25O6740C31O6756C36O6783C38O6793C42O6835C49O6842C53O6859C55O6866C60O6883C65O6902C66O6918C71O6946C75O6937C80O6958C85O6989C90O7004C97O7015C106O6967C113O7038C127O7038C132O7094C134O7104,,
code-creation,LazyCompile,10,20317125,0x83e214b64ae,21, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/init.js:28:26,0x324f23cadd98,~
code-source-info,0x83e214b64ae,220,701,783,C0O727C4O736C7O743C11O754C12O761C15O761C20O782,,
code-creation,LazyCompile,10,20317208,0x83e214b65de,61,emitCloseNT node:internal/streams/destroy:126:21,0x38fe55847830,~
code-source-info,0x83e214b65de,46,2515,2755,C0O2541C5O2574C10O2593C12O2606C13O2621C17O2635C21O2648C22O2663C26O2678C30O2690C38O2705C40O2712C46O2735C54O2735C60O2754,,
tick,0x10103b17c,20317625,0,0x0,0,0x0,0x17d3055291fc,0xb249f5d23b8,0x4324a97f700
code-creation,LazyCompile,10,20317750,0x83e214b682e,37, /Users/carloscalvo/code/Coder/backend/entregas/node_modules/autocannon/lib/run.js:171:20,0x37743592fe18,~
code-source-info,0x83e214b682e,330,5051,5131,C0O5067C5O5076C15O5087C23O5098C27O5112C32O5112C36O5130,,
code-creation,LazyCompile,10,20317916,0x83e214b6966,40, node:net:670:24,0x47055d3c660,~
code-source-info,0x83e214b6966,119,17368,17447,C0O17382C10O17382C14O17409C19O17414C29O17428C32O17414C39O17446,,
tick,0x1a372c99c,20319375,0,0x0,8
profiler,end
delete,MemoryChunk,0x30d75b80000
delete,MemoryChunk,0xe898a5c0000
delete,MemoryChunk,0x38fe55840000
delete,MemoryChunk,0x6a337a00000
delete,MemoryChunk,0x23e292d00000
delete,MemoryChunk,0x2500b47c0000
delete,MemoryChunk,0x2d4de6000000
delete,MemoryChunk,0xe7577440000
delete,MemoryChunk,0x324f23c80000
delete,MemoryChunk,0x1910fc7c0000
delete,MemoryChunk,0x36631f5c0000
delete,MemoryChunk,0x311ed2240000
delete,MemoryChunk,0x17d2b0580000
delete,MemoryChunk,0x93fa3240000
delete,MemoryChunk,0x12ae91280000
delete,MemoryChunk,0x342331e40000
delete,MemoryChunk,0x47055d00000
delete,MemoryChunk,0x395d7b300000
delete,MemoryChunk,0x10d76ec00000
delete,MemoryChunk,0xbb714f40000
delete,MemoryChunk,0x17d305500000
delete,MemoryChunk,0x172aed040000
delete,MemoryChunk,0x3d8cce580000
delete,MemoryChunk,0x77407240000
delete,MemoryChunk,0x464c3180000
delete,MemoryChunk,0x83e21480000
delete,MemoryChunk,0x377435900000
delete,MemoryChunk,0x2779b46c0000
delete,MemoryChunk,0x308a7e7c0000
delete,MemoryChunk,0x3a1dfed40000
delete,MemoryChunk,0x4324a940000
delete,MemoryChunk,0x1a43afb80000
delete,MemoryChunk,0xe049e300000
delete,MemoryChunk,0xb249f5c0000
delete,MemoryChunk,0x1b9b88140000
delete,MemoryChunk,0xfcf81400000
delete,MemoryChunk,0x369989140000
delete,MemoryChunk,0x2f0e4e600000
delete,MemoryChunk,0x3a1583d00000
delete,MemoryChunk,0x1074c0000
delete,MemoryChunk,0x107500000
delete,MemoryChunk,0x107540000
delete,MemoryChunk,0x2c34cec40000
delete,MemoryChunk,0x3ad5a9100000
delete,MemoryChunk,0x2f7333e00000
delete,LargeObjectChunk,0x3f19539c0000
delete,MemoryChunk,0x3f19539c0000
delete,MemoryChunk,0x1cf7ce100000
delete,MemoryChunk,0x23f7f4780000
delete,MemoryChunk,0x1bd34ce40000
delete,MemoryChunk,0x1f5f73840000
delete,MemoryChunk,0x37590e7c0000
delete,MemoryChunk,0x1ce0a9080000
delete,MemoryChunk,0x36b6c2d40000
delete,MemoryChunk,0x39b827f00000
delete,MemoryChunk,0x109d80c80000
delete,MemoryChunk,0xfbaf1200000
delete,MemoryChunk,0x31d7fbe00000
delete,MemoryChunk,0x31cd511c0000
delete,MemoryChunk,0x281746a40000
delete,MemoryChunk,0x259a80ec0000
delete,MemoryChunk,0x2653cca80000
delete,MemoryChunk,0x1e01b9440000
delete,MemoryChunk,0x12ce33940000
delete,MemoryChunk,0x2faa3ca40000
delete,MemoryChunk,0x37aa9f640000
delete,MemoryChunk,0x1c1ae27c0000
delete,MemoryChunk,0x1312fd9c0000
delete,MemoryChunk,0xecd9dc00000
delete,MemoryChunk,0x25ab40e80000
delete,MemoryChunk,0x3b3988300000
delete,MemoryChunk,0x2a6306bc0000
delete,MemoryChunk,0x251b9e440000
delete,MemoryChunk,0x127994280000
delete,MemoryChunk,0x2db2ae680000
delete,MemoryChunk,0x3f5e6ed40000
delete,MemoryChunk,0x290ea76c0000
delete,MemoryChunk,0x24ef69680000
delete,MemoryChunk,0x3115f5c00000
delete,MemoryChunk,0x109ef900000
